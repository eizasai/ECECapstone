
Capstone.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005540  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000d0  080056e0  080056e0  000066e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080057b0  080057b0  00007060  2**0
                  CONTENTS
  4 .ARM          00000008  080057b0  080057b0  000067b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080057b8  080057b8  00007060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080057b8  080057b8  000067b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080057bc  080057bc  000067bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000060  20000000  080057c0  00007000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000350  20000060  08005820  00007060  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200003b0  08005820  000073b0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00007060  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000d97b  00000000  00000000  00007090  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002447  00000000  00000000  00014a0b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000b70  00000000  00000000  00016e58  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000008d9  00000000  00000000  000179c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00017834  00000000  00000000  000182a1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000111cf  00000000  00000000  0002fad5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00088ee9  00000000  00000000  00040ca4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000c9b8d  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003324  00000000  00000000  000c9bd0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000064  00000000  00000000  000ccef4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000060 	.word	0x20000060
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080056c8 	.word	0x080056c8

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000064 	.word	0x20000064
 80001dc:	080056c8 	.word	0x080056c8

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_uldivmod>:
 8000280:	b953      	cbnz	r3, 8000298 <__aeabi_uldivmod+0x18>
 8000282:	b94a      	cbnz	r2, 8000298 <__aeabi_uldivmod+0x18>
 8000284:	2900      	cmp	r1, #0
 8000286:	bf08      	it	eq
 8000288:	2800      	cmpeq	r0, #0
 800028a:	bf1c      	itt	ne
 800028c:	f04f 31ff 	movne.w	r1, #4294967295
 8000290:	f04f 30ff 	movne.w	r0, #4294967295
 8000294:	f000 b96a 	b.w	800056c <__aeabi_idiv0>
 8000298:	f1ad 0c08 	sub.w	ip, sp, #8
 800029c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002a0:	f000 f806 	bl	80002b0 <__udivmoddi4>
 80002a4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002a8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ac:	b004      	add	sp, #16
 80002ae:	4770      	bx	lr

080002b0 <__udivmoddi4>:
 80002b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002b4:	9d08      	ldr	r5, [sp, #32]
 80002b6:	460c      	mov	r4, r1
 80002b8:	2b00      	cmp	r3, #0
 80002ba:	d14e      	bne.n	800035a <__udivmoddi4+0xaa>
 80002bc:	4694      	mov	ip, r2
 80002be:	458c      	cmp	ip, r1
 80002c0:	4686      	mov	lr, r0
 80002c2:	fab2 f282 	clz	r2, r2
 80002c6:	d962      	bls.n	800038e <__udivmoddi4+0xde>
 80002c8:	b14a      	cbz	r2, 80002de <__udivmoddi4+0x2e>
 80002ca:	f1c2 0320 	rsb	r3, r2, #32
 80002ce:	4091      	lsls	r1, r2
 80002d0:	fa20 f303 	lsr.w	r3, r0, r3
 80002d4:	fa0c fc02 	lsl.w	ip, ip, r2
 80002d8:	4319      	orrs	r1, r3
 80002da:	fa00 fe02 	lsl.w	lr, r0, r2
 80002de:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80002e2:	fa1f f68c 	uxth.w	r6, ip
 80002e6:	fbb1 f4f7 	udiv	r4, r1, r7
 80002ea:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80002ee:	fb07 1114 	mls	r1, r7, r4, r1
 80002f2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80002f6:	fb04 f106 	mul.w	r1, r4, r6
 80002fa:	4299      	cmp	r1, r3
 80002fc:	d90a      	bls.n	8000314 <__udivmoddi4+0x64>
 80002fe:	eb1c 0303 	adds.w	r3, ip, r3
 8000302:	f104 30ff 	add.w	r0, r4, #4294967295
 8000306:	f080 8112 	bcs.w	800052e <__udivmoddi4+0x27e>
 800030a:	4299      	cmp	r1, r3
 800030c:	f240 810f 	bls.w	800052e <__udivmoddi4+0x27e>
 8000310:	3c02      	subs	r4, #2
 8000312:	4463      	add	r3, ip
 8000314:	1a59      	subs	r1, r3, r1
 8000316:	fa1f f38e 	uxth.w	r3, lr
 800031a:	fbb1 f0f7 	udiv	r0, r1, r7
 800031e:	fb07 1110 	mls	r1, r7, r0, r1
 8000322:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000326:	fb00 f606 	mul.w	r6, r0, r6
 800032a:	429e      	cmp	r6, r3
 800032c:	d90a      	bls.n	8000344 <__udivmoddi4+0x94>
 800032e:	eb1c 0303 	adds.w	r3, ip, r3
 8000332:	f100 31ff 	add.w	r1, r0, #4294967295
 8000336:	f080 80fc 	bcs.w	8000532 <__udivmoddi4+0x282>
 800033a:	429e      	cmp	r6, r3
 800033c:	f240 80f9 	bls.w	8000532 <__udivmoddi4+0x282>
 8000340:	4463      	add	r3, ip
 8000342:	3802      	subs	r0, #2
 8000344:	1b9b      	subs	r3, r3, r6
 8000346:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800034a:	2100      	movs	r1, #0
 800034c:	b11d      	cbz	r5, 8000356 <__udivmoddi4+0xa6>
 800034e:	40d3      	lsrs	r3, r2
 8000350:	2200      	movs	r2, #0
 8000352:	e9c5 3200 	strd	r3, r2, [r5]
 8000356:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800035a:	428b      	cmp	r3, r1
 800035c:	d905      	bls.n	800036a <__udivmoddi4+0xba>
 800035e:	b10d      	cbz	r5, 8000364 <__udivmoddi4+0xb4>
 8000360:	e9c5 0100 	strd	r0, r1, [r5]
 8000364:	2100      	movs	r1, #0
 8000366:	4608      	mov	r0, r1
 8000368:	e7f5      	b.n	8000356 <__udivmoddi4+0xa6>
 800036a:	fab3 f183 	clz	r1, r3
 800036e:	2900      	cmp	r1, #0
 8000370:	d146      	bne.n	8000400 <__udivmoddi4+0x150>
 8000372:	42a3      	cmp	r3, r4
 8000374:	d302      	bcc.n	800037c <__udivmoddi4+0xcc>
 8000376:	4290      	cmp	r0, r2
 8000378:	f0c0 80f0 	bcc.w	800055c <__udivmoddi4+0x2ac>
 800037c:	1a86      	subs	r6, r0, r2
 800037e:	eb64 0303 	sbc.w	r3, r4, r3
 8000382:	2001      	movs	r0, #1
 8000384:	2d00      	cmp	r5, #0
 8000386:	d0e6      	beq.n	8000356 <__udivmoddi4+0xa6>
 8000388:	e9c5 6300 	strd	r6, r3, [r5]
 800038c:	e7e3      	b.n	8000356 <__udivmoddi4+0xa6>
 800038e:	2a00      	cmp	r2, #0
 8000390:	f040 8090 	bne.w	80004b4 <__udivmoddi4+0x204>
 8000394:	eba1 040c 	sub.w	r4, r1, ip
 8000398:	ea4f 481c 	mov.w	r8, ip, lsr #16
 800039c:	fa1f f78c 	uxth.w	r7, ip
 80003a0:	2101      	movs	r1, #1
 80003a2:	fbb4 f6f8 	udiv	r6, r4, r8
 80003a6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003aa:	fb08 4416 	mls	r4, r8, r6, r4
 80003ae:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003b2:	fb07 f006 	mul.w	r0, r7, r6
 80003b6:	4298      	cmp	r0, r3
 80003b8:	d908      	bls.n	80003cc <__udivmoddi4+0x11c>
 80003ba:	eb1c 0303 	adds.w	r3, ip, r3
 80003be:	f106 34ff 	add.w	r4, r6, #4294967295
 80003c2:	d202      	bcs.n	80003ca <__udivmoddi4+0x11a>
 80003c4:	4298      	cmp	r0, r3
 80003c6:	f200 80cd 	bhi.w	8000564 <__udivmoddi4+0x2b4>
 80003ca:	4626      	mov	r6, r4
 80003cc:	1a1c      	subs	r4, r3, r0
 80003ce:	fa1f f38e 	uxth.w	r3, lr
 80003d2:	fbb4 f0f8 	udiv	r0, r4, r8
 80003d6:	fb08 4410 	mls	r4, r8, r0, r4
 80003da:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003de:	fb00 f707 	mul.w	r7, r0, r7
 80003e2:	429f      	cmp	r7, r3
 80003e4:	d908      	bls.n	80003f8 <__udivmoddi4+0x148>
 80003e6:	eb1c 0303 	adds.w	r3, ip, r3
 80003ea:	f100 34ff 	add.w	r4, r0, #4294967295
 80003ee:	d202      	bcs.n	80003f6 <__udivmoddi4+0x146>
 80003f0:	429f      	cmp	r7, r3
 80003f2:	f200 80b0 	bhi.w	8000556 <__udivmoddi4+0x2a6>
 80003f6:	4620      	mov	r0, r4
 80003f8:	1bdb      	subs	r3, r3, r7
 80003fa:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 80003fe:	e7a5      	b.n	800034c <__udivmoddi4+0x9c>
 8000400:	f1c1 0620 	rsb	r6, r1, #32
 8000404:	408b      	lsls	r3, r1
 8000406:	fa22 f706 	lsr.w	r7, r2, r6
 800040a:	431f      	orrs	r7, r3
 800040c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000410:	fa04 f301 	lsl.w	r3, r4, r1
 8000414:	ea43 030c 	orr.w	r3, r3, ip
 8000418:	40f4      	lsrs	r4, r6
 800041a:	fa00 f801 	lsl.w	r8, r0, r1
 800041e:	0c38      	lsrs	r0, r7, #16
 8000420:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000424:	fbb4 fef0 	udiv	lr, r4, r0
 8000428:	fa1f fc87 	uxth.w	ip, r7
 800042c:	fb00 441e 	mls	r4, r0, lr, r4
 8000430:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000434:	fb0e f90c 	mul.w	r9, lr, ip
 8000438:	45a1      	cmp	r9, r4
 800043a:	fa02 f201 	lsl.w	r2, r2, r1
 800043e:	d90a      	bls.n	8000456 <__udivmoddi4+0x1a6>
 8000440:	193c      	adds	r4, r7, r4
 8000442:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000446:	f080 8084 	bcs.w	8000552 <__udivmoddi4+0x2a2>
 800044a:	45a1      	cmp	r9, r4
 800044c:	f240 8081 	bls.w	8000552 <__udivmoddi4+0x2a2>
 8000450:	f1ae 0e02 	sub.w	lr, lr, #2
 8000454:	443c      	add	r4, r7
 8000456:	eba4 0409 	sub.w	r4, r4, r9
 800045a:	fa1f f983 	uxth.w	r9, r3
 800045e:	fbb4 f3f0 	udiv	r3, r4, r0
 8000462:	fb00 4413 	mls	r4, r0, r3, r4
 8000466:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800046a:	fb03 fc0c 	mul.w	ip, r3, ip
 800046e:	45a4      	cmp	ip, r4
 8000470:	d907      	bls.n	8000482 <__udivmoddi4+0x1d2>
 8000472:	193c      	adds	r4, r7, r4
 8000474:	f103 30ff 	add.w	r0, r3, #4294967295
 8000478:	d267      	bcs.n	800054a <__udivmoddi4+0x29a>
 800047a:	45a4      	cmp	ip, r4
 800047c:	d965      	bls.n	800054a <__udivmoddi4+0x29a>
 800047e:	3b02      	subs	r3, #2
 8000480:	443c      	add	r4, r7
 8000482:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000486:	fba0 9302 	umull	r9, r3, r0, r2
 800048a:	eba4 040c 	sub.w	r4, r4, ip
 800048e:	429c      	cmp	r4, r3
 8000490:	46ce      	mov	lr, r9
 8000492:	469c      	mov	ip, r3
 8000494:	d351      	bcc.n	800053a <__udivmoddi4+0x28a>
 8000496:	d04e      	beq.n	8000536 <__udivmoddi4+0x286>
 8000498:	b155      	cbz	r5, 80004b0 <__udivmoddi4+0x200>
 800049a:	ebb8 030e 	subs.w	r3, r8, lr
 800049e:	eb64 040c 	sbc.w	r4, r4, ip
 80004a2:	fa04 f606 	lsl.w	r6, r4, r6
 80004a6:	40cb      	lsrs	r3, r1
 80004a8:	431e      	orrs	r6, r3
 80004aa:	40cc      	lsrs	r4, r1
 80004ac:	e9c5 6400 	strd	r6, r4, [r5]
 80004b0:	2100      	movs	r1, #0
 80004b2:	e750      	b.n	8000356 <__udivmoddi4+0xa6>
 80004b4:	f1c2 0320 	rsb	r3, r2, #32
 80004b8:	fa20 f103 	lsr.w	r1, r0, r3
 80004bc:	fa0c fc02 	lsl.w	ip, ip, r2
 80004c0:	fa24 f303 	lsr.w	r3, r4, r3
 80004c4:	4094      	lsls	r4, r2
 80004c6:	430c      	orrs	r4, r1
 80004c8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80004cc:	fa00 fe02 	lsl.w	lr, r0, r2
 80004d0:	fa1f f78c 	uxth.w	r7, ip
 80004d4:	fbb3 f0f8 	udiv	r0, r3, r8
 80004d8:	fb08 3110 	mls	r1, r8, r0, r3
 80004dc:	0c23      	lsrs	r3, r4, #16
 80004de:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80004e2:	fb00 f107 	mul.w	r1, r0, r7
 80004e6:	4299      	cmp	r1, r3
 80004e8:	d908      	bls.n	80004fc <__udivmoddi4+0x24c>
 80004ea:	eb1c 0303 	adds.w	r3, ip, r3
 80004ee:	f100 36ff 	add.w	r6, r0, #4294967295
 80004f2:	d22c      	bcs.n	800054e <__udivmoddi4+0x29e>
 80004f4:	4299      	cmp	r1, r3
 80004f6:	d92a      	bls.n	800054e <__udivmoddi4+0x29e>
 80004f8:	3802      	subs	r0, #2
 80004fa:	4463      	add	r3, ip
 80004fc:	1a5b      	subs	r3, r3, r1
 80004fe:	b2a4      	uxth	r4, r4
 8000500:	fbb3 f1f8 	udiv	r1, r3, r8
 8000504:	fb08 3311 	mls	r3, r8, r1, r3
 8000508:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800050c:	fb01 f307 	mul.w	r3, r1, r7
 8000510:	42a3      	cmp	r3, r4
 8000512:	d908      	bls.n	8000526 <__udivmoddi4+0x276>
 8000514:	eb1c 0404 	adds.w	r4, ip, r4
 8000518:	f101 36ff 	add.w	r6, r1, #4294967295
 800051c:	d213      	bcs.n	8000546 <__udivmoddi4+0x296>
 800051e:	42a3      	cmp	r3, r4
 8000520:	d911      	bls.n	8000546 <__udivmoddi4+0x296>
 8000522:	3902      	subs	r1, #2
 8000524:	4464      	add	r4, ip
 8000526:	1ae4      	subs	r4, r4, r3
 8000528:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800052c:	e739      	b.n	80003a2 <__udivmoddi4+0xf2>
 800052e:	4604      	mov	r4, r0
 8000530:	e6f0      	b.n	8000314 <__udivmoddi4+0x64>
 8000532:	4608      	mov	r0, r1
 8000534:	e706      	b.n	8000344 <__udivmoddi4+0x94>
 8000536:	45c8      	cmp	r8, r9
 8000538:	d2ae      	bcs.n	8000498 <__udivmoddi4+0x1e8>
 800053a:	ebb9 0e02 	subs.w	lr, r9, r2
 800053e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000542:	3801      	subs	r0, #1
 8000544:	e7a8      	b.n	8000498 <__udivmoddi4+0x1e8>
 8000546:	4631      	mov	r1, r6
 8000548:	e7ed      	b.n	8000526 <__udivmoddi4+0x276>
 800054a:	4603      	mov	r3, r0
 800054c:	e799      	b.n	8000482 <__udivmoddi4+0x1d2>
 800054e:	4630      	mov	r0, r6
 8000550:	e7d4      	b.n	80004fc <__udivmoddi4+0x24c>
 8000552:	46d6      	mov	lr, sl
 8000554:	e77f      	b.n	8000456 <__udivmoddi4+0x1a6>
 8000556:	4463      	add	r3, ip
 8000558:	3802      	subs	r0, #2
 800055a:	e74d      	b.n	80003f8 <__udivmoddi4+0x148>
 800055c:	4606      	mov	r6, r0
 800055e:	4623      	mov	r3, r4
 8000560:	4608      	mov	r0, r1
 8000562:	e70f      	b.n	8000384 <__udivmoddi4+0xd4>
 8000564:	3e02      	subs	r6, #2
 8000566:	4463      	add	r3, ip
 8000568:	e730      	b.n	80003cc <__udivmoddi4+0x11c>
 800056a:	bf00      	nop

0800056c <__aeabi_idiv0>:
 800056c:	4770      	bx	lr
 800056e:	bf00      	nop

08000570 <Determine_I2C_Bus_TPS55288>:
extern I2C_HandleTypeDef hi2c3;

const uint8_t AddressesTPS55288[2] = {0x74, 0x75};

I2C_HandleTypeDef *Determine_I2C_Bus_TPS55288(uint8_t Converter_Index)
{
 8000570:	b480      	push	{r7}
 8000572:	b085      	sub	sp, #20
 8000574:	af00      	add	r7, sp, #0
 8000576:	4603      	mov	r3, r0
 8000578:	71fb      	strb	r3, [r7, #7]
	uint8_t converter_set = Converter_Index / 2;
 800057a:	79fb      	ldrb	r3, [r7, #7]
 800057c:	085b      	lsrs	r3, r3, #1
 800057e:	72fb      	strb	r3, [r7, #11]
	I2C_HandleTypeDef *I2C_Line_Address;
	switch (converter_set) {
 8000580:	7afb      	ldrb	r3, [r7, #11]
 8000582:	2b02      	cmp	r3, #2
 8000584:	d00c      	beq.n	80005a0 <Determine_I2C_Bus_TPS55288+0x30>
 8000586:	2b02      	cmp	r3, #2
 8000588:	dc0d      	bgt.n	80005a6 <Determine_I2C_Bus_TPS55288+0x36>
 800058a:	2b00      	cmp	r3, #0
 800058c:	d002      	beq.n	8000594 <Determine_I2C_Bus_TPS55288+0x24>
 800058e:	2b01      	cmp	r3, #1
 8000590:	d003      	beq.n	800059a <Determine_I2C_Bus_TPS55288+0x2a>
 8000592:	e008      	b.n	80005a6 <Determine_I2C_Bus_TPS55288+0x36>
	case 0:
		I2C_Line_Address = &hi2c1;
 8000594:	4b07      	ldr	r3, [pc, #28]	@ (80005b4 <Determine_I2C_Bus_TPS55288+0x44>)
 8000596:	60fb      	str	r3, [r7, #12]
		break;
 8000598:	e005      	b.n	80005a6 <Determine_I2C_Bus_TPS55288+0x36>
	case 1:
		I2C_Line_Address = &hi2c2;
 800059a:	4b07      	ldr	r3, [pc, #28]	@ (80005b8 <Determine_I2C_Bus_TPS55288+0x48>)
 800059c:	60fb      	str	r3, [r7, #12]
		break;
 800059e:	e002      	b.n	80005a6 <Determine_I2C_Bus_TPS55288+0x36>
	case 2:
		I2C_Line_Address = &hi2c3;
 80005a0:	4b06      	ldr	r3, [pc, #24]	@ (80005bc <Determine_I2C_Bus_TPS55288+0x4c>)
 80005a2:	60fb      	str	r3, [r7, #12]
		break;
 80005a4:	bf00      	nop
	}
	return I2C_Line_Address;
 80005a6:	68fb      	ldr	r3, [r7, #12]
}
 80005a8:	4618      	mov	r0, r3
 80005aa:	3714      	adds	r7, #20
 80005ac:	46bd      	mov	sp, r7
 80005ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005b2:	4770      	bx	lr
 80005b4:	20000080 	.word	0x20000080
 80005b8:	200000d4 	.word	0x200000d4
 80005bc:	20000128 	.word	0x20000128

080005c0 <Configure_Slave_AddressTPS55288>:

void Configure_Slave_AddressTPS55288(uint8_t Converter_Index)
{
 80005c0:	b580      	push	{r7, lr}
 80005c2:	b084      	sub	sp, #16
 80005c4:	af00      	add	r7, sp, #0
 80005c6:	4603      	mov	r3, r0
 80005c8:	71fb      	strb	r3, [r7, #7]
	uint8_t address_type = AddressesTPS55288[Converter_Index % 2]; // 0 sets device address to 0x74, 1 to 0x75
 80005ca:	79fb      	ldrb	r3, [r7, #7]
 80005cc:	f003 0301 	and.w	r3, r3, #1
 80005d0:	4a2b      	ldr	r2, [pc, #172]	@ (8000680 <Configure_Slave_AddressTPS55288+0xc0>)
 80005d2:	5cd3      	ldrb	r3, [r2, r3]
 80005d4:	73fb      	strb	r3, [r7, #15]
	HAL_StatusTypeDef HAL_Status = HAL_ERROR;
 80005d6:	2301      	movs	r3, #1
 80005d8:	72fb      	strb	r3, [r7, #11]
	uint8_t ReadValue = 0;
 80005da:	2300      	movs	r3, #0
 80005dc:	73bb      	strb	r3, [r7, #14]
	uint8_t WriteValue = 0;
 80005de:	2300      	movs	r3, #0
 80005e0:	737b      	strb	r3, [r7, #13]
	uint8_t mask = MASKSTART ^ (1 << MODE_I2CADD);
 80005e2:	23fb      	movs	r3, #251	@ 0xfb
 80005e4:	733b      	strb	r3, [r7, #12]
	ReadValue = ReadByteTPS55288(Converter_Index, MODE, &HAL_Status);
 80005e6:	f107 020b 	add.w	r2, r7, #11
 80005ea:	79fb      	ldrb	r3, [r7, #7]
 80005ec:	2106      	movs	r1, #6
 80005ee:	4618      	mov	r0, r3
 80005f0:	f000 f8b6 	bl	8000760 <ReadByteTPS55288>
 80005f4:	4603      	mov	r3, r0
 80005f6:	73bb      	strb	r3, [r7, #14]
	WriteValue = (ReadValue & mask) + (address_type << MODE_I2CADD);
 80005f8:	7bba      	ldrb	r2, [r7, #14]
 80005fa:	7b3b      	ldrb	r3, [r7, #12]
 80005fc:	4013      	ands	r3, r2
 80005fe:	b2da      	uxtb	r2, r3
 8000600:	7bfb      	ldrb	r3, [r7, #15]
 8000602:	009b      	lsls	r3, r3, #2
 8000604:	b2db      	uxtb	r3, r3
 8000606:	4413      	add	r3, r2
 8000608:	737b      	strb	r3, [r7, #13]
	if (HAL_Status == HAL_OK) {
 800060a:	7afb      	ldrb	r3, [r7, #11]
 800060c:	2b00      	cmp	r3, #0
 800060e:	d108      	bne.n	8000622 <Configure_Slave_AddressTPS55288+0x62>
		HAL_Status = WriteByteTPS55288(Converter_Index, MODE, WriteValue);
 8000610:	7b7a      	ldrb	r2, [r7, #13]
 8000612:	79fb      	ldrb	r3, [r7, #7]
 8000614:	2106      	movs	r1, #6
 8000616:	4618      	mov	r0, r3
 8000618:	f000 f860 	bl	80006dc <WriteByteTPS55288>
 800061c:	4603      	mov	r3, r0
 800061e:	72fb      	strb	r3, [r7, #11]
 8000620:	e026      	b.n	8000670 <Configure_Slave_AddressTPS55288+0xb0>
	}
	else {
		Converter_Index = Converter_Index + (Converter_Index % 2 ? -1 : 1);
 8000622:	79fb      	ldrb	r3, [r7, #7]
 8000624:	f003 0301 	and.w	r3, r3, #1
 8000628:	b2db      	uxtb	r3, r3
 800062a:	2b00      	cmp	r3, #0
 800062c:	d001      	beq.n	8000632 <Configure_Slave_AddressTPS55288+0x72>
 800062e:	22ff      	movs	r2, #255	@ 0xff
 8000630:	e000      	b.n	8000634 <Configure_Slave_AddressTPS55288+0x74>
 8000632:	2201      	movs	r2, #1
 8000634:	79fb      	ldrb	r3, [r7, #7]
 8000636:	4413      	add	r3, r2
 8000638:	71fb      	strb	r3, [r7, #7]
		ReadValue = ReadByteTPS55288(Converter_Index, MODE, &HAL_Status);
 800063a:	f107 020b 	add.w	r2, r7, #11
 800063e:	79fb      	ldrb	r3, [r7, #7]
 8000640:	2106      	movs	r1, #6
 8000642:	4618      	mov	r0, r3
 8000644:	f000 f88c 	bl	8000760 <ReadByteTPS55288>
 8000648:	4603      	mov	r3, r0
 800064a:	73bb      	strb	r3, [r7, #14]
		if (HAL_Status != HAL_OK) {
 800064c:	7afb      	ldrb	r3, [r7, #11]
 800064e:	2b00      	cmp	r3, #0
 8000650:	d001      	beq.n	8000656 <Configure_Slave_AddressTPS55288+0x96>
			Error_Handler();
 8000652:	f000 fd11 	bl	8001078 <Error_Handler>
		}
		HAL_Status = WriteByteTPS55288(Converter_Index, MODE, WriteValue);
 8000656:	7b7a      	ldrb	r2, [r7, #13]
 8000658:	79fb      	ldrb	r3, [r7, #7]
 800065a:	2106      	movs	r1, #6
 800065c:	4618      	mov	r0, r3
 800065e:	f000 f83d 	bl	80006dc <WriteByteTPS55288>
 8000662:	4603      	mov	r3, r0
 8000664:	72fb      	strb	r3, [r7, #11]
		if (HAL_Status != HAL_OK) {
 8000666:	7afb      	ldrb	r3, [r7, #11]
 8000668:	2b00      	cmp	r3, #0
 800066a:	d001      	beq.n	8000670 <Configure_Slave_AddressTPS55288+0xb0>
			Error_Handler();
 800066c:	f000 fd04 	bl	8001078 <Error_Handler>
		}
	}
	Enable_Output_TPS55288(Converter_Index);
 8000670:	79fb      	ldrb	r3, [r7, #7]
 8000672:	4618      	mov	r0, r3
 8000674:	f000 f806 	bl	8000684 <Enable_Output_TPS55288>
}
 8000678:	bf00      	nop
 800067a:	3710      	adds	r7, #16
 800067c:	46bd      	mov	sp, r7
 800067e:	bd80      	pop	{r7, pc}
 8000680:	0800575c 	.word	0x0800575c

08000684 <Enable_Output_TPS55288>:

void Enable_Output_TPS55288(uint8_t Converter_Index)
{
 8000684:	b580      	push	{r7, lr}
 8000686:	b084      	sub	sp, #16
 8000688:	af00      	add	r7, sp, #0
 800068a:	4603      	mov	r3, r0
 800068c:	71fb      	strb	r3, [r7, #7]
	uint8_t ReadValue = 0;
 800068e:	2300      	movs	r3, #0
 8000690:	73fb      	strb	r3, [r7, #15]
	uint8_t WriteValue = 0;
 8000692:	2300      	movs	r3, #0
 8000694:	73bb      	strb	r3, [r7, #14]
	HAL_StatusTypeDef HAL_Status;
	ReadValue = ReadByteTPS55288(Converter_Index, MODE, &HAL_Status);
 8000696:	f107 020d 	add.w	r2, r7, #13
 800069a:	79fb      	ldrb	r3, [r7, #7]
 800069c:	2106      	movs	r1, #6
 800069e:	4618      	mov	r0, r3
 80006a0:	f000 f85e 	bl	8000760 <ReadByteTPS55288>
 80006a4:	4603      	mov	r3, r0
 80006a6:	73fb      	strb	r3, [r7, #15]
	if (HAL_Status != HAL_OK) {
 80006a8:	7b7b      	ldrb	r3, [r7, #13]
 80006aa:	2b00      	cmp	r3, #0
 80006ac:	d001      	beq.n	80006b2 <Enable_Output_TPS55288+0x2e>
		Error_Handler();
 80006ae:	f000 fce3 	bl	8001078 <Error_Handler>
	}
	WriteValue = (ReadValue | (1 << MODE_OE));
 80006b2:	7bfb      	ldrb	r3, [r7, #15]
 80006b4:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 80006b8:	73bb      	strb	r3, [r7, #14]
	HAL_Status = WriteByteTPS55288(Converter_Index, MODE, WriteValue);
 80006ba:	7bba      	ldrb	r2, [r7, #14]
 80006bc:	79fb      	ldrb	r3, [r7, #7]
 80006be:	2106      	movs	r1, #6
 80006c0:	4618      	mov	r0, r3
 80006c2:	f000 f80b 	bl	80006dc <WriteByteTPS55288>
 80006c6:	4603      	mov	r3, r0
 80006c8:	737b      	strb	r3, [r7, #13]
	if (HAL_Status != HAL_OK) {
 80006ca:	7b7b      	ldrb	r3, [r7, #13]
 80006cc:	2b00      	cmp	r3, #0
 80006ce:	d001      	beq.n	80006d4 <Enable_Output_TPS55288+0x50>
		Error_Handler();
 80006d0:	f000 fcd2 	bl	8001078 <Error_Handler>
	}
}
 80006d4:	bf00      	nop
 80006d6:	3710      	adds	r7, #16
 80006d8:	46bd      	mov	sp, r7
 80006da:	bd80      	pop	{r7, pc}

080006dc <WriteByteTPS55288>:
	BytesToSend[2] = Ref1_Write;
	HAL_I2C_Master_Transmit(I2C_Line_Address, Device_Address, BytesToSend, 3, HAL_MAX_DELAY);
}

HAL_StatusTypeDef WriteByteTPS55288(uint8_t Converter_Index, uint8_t Register_Address, uint8_t WriteData)
{
 80006dc:	b580      	push	{r7, lr}
 80006de:	b088      	sub	sp, #32
 80006e0:	af02      	add	r7, sp, #8
 80006e2:	4603      	mov	r3, r0
 80006e4:	71fb      	strb	r3, [r7, #7]
 80006e6:	460b      	mov	r3, r1
 80006e8:	71bb      	strb	r3, [r7, #6]
 80006ea:	4613      	mov	r3, r2
 80006ec:	717b      	strb	r3, [r7, #5]
	uint8_t address_type = Converter_Index % 2;
 80006ee:	79fb      	ldrb	r3, [r7, #7]
 80006f0:	f003 0301 	and.w	r3, r3, #1
 80006f4:	75fb      	strb	r3, [r7, #23]
	I2C_HandleTypeDef *I2C_Line_Address = Determine_I2C_Bus_TPS55288(Converter_Index);
 80006f6:	79fb      	ldrb	r3, [r7, #7]
 80006f8:	4618      	mov	r0, r3
 80006fa:	f7ff ff39 	bl	8000570 <Determine_I2C_Bus_TPS55288>
 80006fe:	6138      	str	r0, [r7, #16]
	uint8_t Device_Address = AddressesTPS55288[address_type] << 1;
 8000700:	7dfb      	ldrb	r3, [r7, #23]
 8000702:	4a16      	ldr	r2, [pc, #88]	@ (800075c <WriteByteTPS55288+0x80>)
 8000704:	5cd3      	ldrb	r3, [r2, r3]
 8000706:	005b      	lsls	r3, r3, #1
 8000708:	73fb      	strb	r3, [r7, #15]
	uint8_t BytesToSend[2];
	BytesToSend[0] = Register_Address;
 800070a:	79bb      	ldrb	r3, [r7, #6]
 800070c:	733b      	strb	r3, [r7, #12]
	BytesToSend[1] = WriteData;
 800070e:	797b      	ldrb	r3, [r7, #5]
 8000710:	737b      	strb	r3, [r7, #13]
	HAL_StatusTypeDef HAL_Status = HAL_ERROR;
 8000712:	2301      	movs	r3, #1
 8000714:	73bb      	strb	r3, [r7, #14]
	HAL_Status = HAL_I2C_Master_Transmit(I2C_Line_Address, Device_Address, BytesToSend, 2, HAL_MAX_DELAY);
 8000716:	7bfb      	ldrb	r3, [r7, #15]
 8000718:	b299      	uxth	r1, r3
 800071a:	f107 020c 	add.w	r2, r7, #12
 800071e:	f04f 33ff 	mov.w	r3, #4294967295
 8000722:	9300      	str	r3, [sp, #0]
 8000724:	2302      	movs	r3, #2
 8000726:	6938      	ldr	r0, [r7, #16]
 8000728:	f001 fe9c 	bl	8002464 <HAL_I2C_Master_Transmit>
 800072c:	4603      	mov	r3, r0
 800072e:	73bb      	strb	r3, [r7, #14]
	if (HAL_Status != HAL_OK) {
 8000730:	7bbb      	ldrb	r3, [r7, #14]
 8000732:	2b00      	cmp	r3, #0
 8000734:	d001      	beq.n	800073a <WriteByteTPS55288+0x5e>
		return HAL_Status;
 8000736:	7bbb      	ldrb	r3, [r7, #14]
 8000738:	e00c      	b.n	8000754 <WriteByteTPS55288+0x78>
	}
	while (HAL_I2C_IsDeviceReady(I2C_Line_Address, Device_Address, 1, HAL_MAX_DELAY));
 800073a:	bf00      	nop
 800073c:	7bfb      	ldrb	r3, [r7, #15]
 800073e:	b299      	uxth	r1, r3
 8000740:	f04f 33ff 	mov.w	r3, #4294967295
 8000744:	2201      	movs	r2, #1
 8000746:	6938      	ldr	r0, [r7, #16]
 8000748:	f002 f9bc 	bl	8002ac4 <HAL_I2C_IsDeviceReady>
 800074c:	4603      	mov	r3, r0
 800074e:	2b00      	cmp	r3, #0
 8000750:	d1f4      	bne.n	800073c <WriteByteTPS55288+0x60>
	return HAL_Status;
 8000752:	7bbb      	ldrb	r3, [r7, #14]
}
 8000754:	4618      	mov	r0, r3
 8000756:	3718      	adds	r7, #24
 8000758:	46bd      	mov	sp, r7
 800075a:	bd80      	pop	{r7, pc}
 800075c:	0800575c 	.word	0x0800575c

08000760 <ReadByteTPS55288>:

uint8_t ReadByteTPS55288(uint8_t Converter_Index, uint8_t Register_Address, HAL_StatusTypeDef *Error_Handling)
{
 8000760:	b580      	push	{r7, lr}
 8000762:	b088      	sub	sp, #32
 8000764:	af02      	add	r7, sp, #8
 8000766:	4603      	mov	r3, r0
 8000768:	603a      	str	r2, [r7, #0]
 800076a:	71fb      	strb	r3, [r7, #7]
 800076c:	460b      	mov	r3, r1
 800076e:	71bb      	strb	r3, [r7, #6]
	uint8_t ReturnValue = 0;
 8000770:	2300      	movs	r3, #0
 8000772:	73bb      	strb	r3, [r7, #14]
	uint8_t address_type = Converter_Index % 2;
 8000774:	79fb      	ldrb	r3, [r7, #7]
 8000776:	f003 0301 	and.w	r3, r3, #1
 800077a:	75fb      	strb	r3, [r7, #23]
	I2C_HandleTypeDef *I2C_Line_Address = Determine_I2C_Bus_TPS55288(Converter_Index);
 800077c:	79fb      	ldrb	r3, [r7, #7]
 800077e:	4618      	mov	r0, r3
 8000780:	f7ff fef6 	bl	8000570 <Determine_I2C_Bus_TPS55288>
 8000784:	6138      	str	r0, [r7, #16]
	uint8_t Device_Address = AddressesTPS55288[address_type] << 1;
 8000786:	7dfb      	ldrb	r3, [r7, #23]
 8000788:	4a14      	ldr	r2, [pc, #80]	@ (80007dc <ReadByteTPS55288+0x7c>)
 800078a:	5cd3      	ldrb	r3, [r2, r3]
 800078c:	005b      	lsls	r3, r3, #1
 800078e:	73fb      	strb	r3, [r7, #15]
	uint8_t BytesToSend[1];
	BytesToSend[0] = Register_Address;
 8000790:	79bb      	ldrb	r3, [r7, #6]
 8000792:	733b      	strb	r3, [r7, #12]
	*Error_Handling = HAL_I2C_Master_Transmit(I2C_Line_Address, Device_Address, BytesToSend, 1, HAL_MAX_DELAY);
 8000794:	7bfb      	ldrb	r3, [r7, #15]
 8000796:	b299      	uxth	r1, r3
 8000798:	f107 020c 	add.w	r2, r7, #12
 800079c:	f04f 33ff 	mov.w	r3, #4294967295
 80007a0:	9300      	str	r3, [sp, #0]
 80007a2:	2301      	movs	r3, #1
 80007a4:	6938      	ldr	r0, [r7, #16]
 80007a6:	f001 fe5d 	bl	8002464 <HAL_I2C_Master_Transmit>
 80007aa:	4603      	mov	r3, r0
 80007ac:	461a      	mov	r2, r3
 80007ae:	683b      	ldr	r3, [r7, #0]
 80007b0:	701a      	strb	r2, [r3, #0]
	*Error_Handling = HAL_I2C_Master_Receive(I2C_Line_Address, Device_Address, &ReturnValue, 1, HAL_MAX_DELAY);
 80007b2:	7bfb      	ldrb	r3, [r7, #15]
 80007b4:	b299      	uxth	r1, r3
 80007b6:	f107 020e 	add.w	r2, r7, #14
 80007ba:	f04f 33ff 	mov.w	r3, #4294967295
 80007be:	9300      	str	r3, [sp, #0]
 80007c0:	2301      	movs	r3, #1
 80007c2:	6938      	ldr	r0, [r7, #16]
 80007c4:	f001 ff4c 	bl	8002660 <HAL_I2C_Master_Receive>
 80007c8:	4603      	mov	r3, r0
 80007ca:	461a      	mov	r2, r3
 80007cc:	683b      	ldr	r3, [r7, #0]
 80007ce:	701a      	strb	r2, [r3, #0]
	return ReturnValue;
 80007d0:	7bbb      	ldrb	r3, [r7, #14]
}
 80007d2:	4618      	mov	r0, r3
 80007d4:	3718      	adds	r7, #24
 80007d6:	46bd      	mov	sp, r7
 80007d8:	bd80      	pop	{r7, pc}
 80007da:	bf00      	nop
 80007dc:	0800575c 	.word	0x0800575c

080007e0 <TestAddressesTPS55288>:

void TestAddressesTPS55288(uint8_t Converter_Index, uint8_t Register_Address, HAL_StatusTypeDef *Error_Handling)
{
 80007e0:	b580      	push	{r7, lr}
 80007e2:	b088      	sub	sp, #32
 80007e4:	af02      	add	r7, sp, #8
 80007e6:	4603      	mov	r3, r0
 80007e8:	603a      	str	r2, [r7, #0]
 80007ea:	71fb      	strb	r3, [r7, #7]
 80007ec:	460b      	mov	r3, r1
 80007ee:	71bb      	strb	r3, [r7, #6]
	uint8_t ReturnValue = 0;
 80007f0:	2300      	movs	r3, #0
 80007f2:	72bb      	strb	r3, [r7, #10]
	uint8_t address_type = Converter_Index % 2;
 80007f4:	79fb      	ldrb	r3, [r7, #7]
 80007f6:	f003 0301 	and.w	r3, r3, #1
 80007fa:	74fb      	strb	r3, [r7, #19]
	I2C_HandleTypeDef *I2C_Line_Address = Determine_I2C_Bus_TPS55288(Converter_Index);
 80007fc:	79fb      	ldrb	r3, [r7, #7]
 80007fe:	4618      	mov	r0, r3
 8000800:	f7ff feb6 	bl	8000570 <Determine_I2C_Bus_TPS55288>
 8000804:	60f8      	str	r0, [r7, #12]
	uint8_t Device_Address;
	uint8_t BytesToSend[1];
	for (int i = 0; i < 2; i++) {
 8000806:	2300      	movs	r3, #0
 8000808:	617b      	str	r3, [r7, #20]
 800080a:	e03d      	b.n	8000888 <TestAddressesTPS55288+0xa8>
		Device_Address = AddressesTPS55288[i] << 1;
 800080c:	4a21      	ldr	r2, [pc, #132]	@ (8000894 <TestAddressesTPS55288+0xb4>)
 800080e:	697b      	ldr	r3, [r7, #20]
 8000810:	4413      	add	r3, r2
 8000812:	781b      	ldrb	r3, [r3, #0]
 8000814:	005b      	lsls	r3, r3, #1
 8000816:	72fb      	strb	r3, [r7, #11]
		BytesToSend[0] = Register_Address;
 8000818:	79bb      	ldrb	r3, [r7, #6]
 800081a:	723b      	strb	r3, [r7, #8]
		*Error_Handling = HAL_I2C_Master_Transmit(I2C_Line_Address, Device_Address, BytesToSend, 1, HAL_MAX_DELAY);
 800081c:	7afb      	ldrb	r3, [r7, #11]
 800081e:	b299      	uxth	r1, r3
 8000820:	f107 0208 	add.w	r2, r7, #8
 8000824:	f04f 33ff 	mov.w	r3, #4294967295
 8000828:	9300      	str	r3, [sp, #0]
 800082a:	2301      	movs	r3, #1
 800082c:	68f8      	ldr	r0, [r7, #12]
 800082e:	f001 fe19 	bl	8002464 <HAL_I2C_Master_Transmit>
 8000832:	4603      	mov	r3, r0
 8000834:	461a      	mov	r2, r3
 8000836:	683b      	ldr	r3, [r7, #0]
 8000838:	701a      	strb	r2, [r3, #0]
		*Error_Handling = HAL_I2C_Master_Receive(I2C_Line_Address, Device_Address, &ReturnValue, 1, HAL_MAX_DELAY);
 800083a:	7afb      	ldrb	r3, [r7, #11]
 800083c:	b299      	uxth	r1, r3
 800083e:	f107 020a 	add.w	r2, r7, #10
 8000842:	f04f 33ff 	mov.w	r3, #4294967295
 8000846:	9300      	str	r3, [sp, #0]
 8000848:	2301      	movs	r3, #1
 800084a:	68f8      	ldr	r0, [r7, #12]
 800084c:	f001 ff08 	bl	8002660 <HAL_I2C_Master_Receive>
 8000850:	4603      	mov	r3, r0
 8000852:	461a      	mov	r2, r3
 8000854:	683b      	ldr	r3, [r7, #0]
 8000856:	701a      	strb	r2, [r3, #0]
		if (*Error_Handling == HAL_OK) {
 8000858:	683b      	ldr	r3, [r7, #0]
 800085a:	781b      	ldrb	r3, [r3, #0]
 800085c:	2b00      	cmp	r3, #0
 800085e:	d110      	bne.n	8000882 <TestAddressesTPS55288+0xa2>
			if ((Device_Address >> 1) != AddressesTPS55288[address_type]) {
 8000860:	7afb      	ldrb	r3, [r7, #11]
 8000862:	085b      	lsrs	r3, r3, #1
 8000864:	b2da      	uxtb	r2, r3
 8000866:	7cfb      	ldrb	r3, [r7, #19]
 8000868:	490a      	ldr	r1, [pc, #40]	@ (8000894 <TestAddressesTPS55288+0xb4>)
 800086a:	5ccb      	ldrb	r3, [r1, r3]
 800086c:	429a      	cmp	r2, r3
 800086e:	d003      	beq.n	8000878 <TestAddressesTPS55288+0x98>
				Configure_Slave_AddressTPS55288(Converter_Index);
 8000870:	79fb      	ldrb	r3, [r7, #7]
 8000872:	4618      	mov	r0, r3
 8000874:	f7ff fea4 	bl	80005c0 <Configure_Slave_AddressTPS55288>
			}
			Enable_Output_TPS55288(Converter_Index);
 8000878:	79fb      	ldrb	r3, [r7, #7]
 800087a:	4618      	mov	r0, r3
 800087c:	f7ff ff02 	bl	8000684 <Enable_Output_TPS55288>
 8000880:	e005      	b.n	800088e <TestAddressesTPS55288+0xae>
	for (int i = 0; i < 2; i++) {
 8000882:	697b      	ldr	r3, [r7, #20]
 8000884:	3301      	adds	r3, #1
 8000886:	617b      	str	r3, [r7, #20]
 8000888:	697b      	ldr	r3, [r7, #20]
 800088a:	2b01      	cmp	r3, #1
 800088c:	ddbe      	ble.n	800080c <TestAddressesTPS55288+0x2c>
			return;
		}
	}
}
 800088e:	3718      	adds	r7, #24
 8000890:	46bd      	mov	sp, r7
 8000892:	bd80      	pop	{r7, pc}
 8000894:	0800575c 	.word	0x0800575c

08000898 <MX_GPIO_Init>:
/* USER CODE END 1 */

/** Configure pins
*/
void MX_GPIO_Init(void)
{
 8000898:	b580      	push	{r7, lr}
 800089a:	b088      	sub	sp, #32
 800089c:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800089e:	f107 030c 	add.w	r3, r7, #12
 80008a2:	2200      	movs	r2, #0
 80008a4:	601a      	str	r2, [r3, #0]
 80008a6:	605a      	str	r2, [r3, #4]
 80008a8:	609a      	str	r2, [r3, #8]
 80008aa:	60da      	str	r2, [r3, #12]
 80008ac:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80008ae:	2300      	movs	r3, #0
 80008b0:	60bb      	str	r3, [r7, #8]
 80008b2:	4b2a      	ldr	r3, [pc, #168]	@ (800095c <MX_GPIO_Init+0xc4>)
 80008b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80008b6:	4a29      	ldr	r2, [pc, #164]	@ (800095c <MX_GPIO_Init+0xc4>)
 80008b8:	f043 0304 	orr.w	r3, r3, #4
 80008bc:	6313      	str	r3, [r2, #48]	@ 0x30
 80008be:	4b27      	ldr	r3, [pc, #156]	@ (800095c <MX_GPIO_Init+0xc4>)
 80008c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80008c2:	f003 0304 	and.w	r3, r3, #4
 80008c6:	60bb      	str	r3, [r7, #8]
 80008c8:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80008ca:	2300      	movs	r3, #0
 80008cc:	607b      	str	r3, [r7, #4]
 80008ce:	4b23      	ldr	r3, [pc, #140]	@ (800095c <MX_GPIO_Init+0xc4>)
 80008d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80008d2:	4a22      	ldr	r2, [pc, #136]	@ (800095c <MX_GPIO_Init+0xc4>)
 80008d4:	f043 0301 	orr.w	r3, r3, #1
 80008d8:	6313      	str	r3, [r2, #48]	@ 0x30
 80008da:	4b20      	ldr	r3, [pc, #128]	@ (800095c <MX_GPIO_Init+0xc4>)
 80008dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80008de:	f003 0301 	and.w	r3, r3, #1
 80008e2:	607b      	str	r3, [r7, #4]
 80008e4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80008e6:	2300      	movs	r3, #0
 80008e8:	603b      	str	r3, [r7, #0]
 80008ea:	4b1c      	ldr	r3, [pc, #112]	@ (800095c <MX_GPIO_Init+0xc4>)
 80008ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80008ee:	4a1b      	ldr	r2, [pc, #108]	@ (800095c <MX_GPIO_Init+0xc4>)
 80008f0:	f043 0302 	orr.w	r3, r3, #2
 80008f4:	6313      	str	r3, [r2, #48]	@ 0x30
 80008f6:	4b19      	ldr	r3, [pc, #100]	@ (800095c <MX_GPIO_Init+0xc4>)
 80008f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80008fa:	f003 0302 	and.w	r3, r3, #2
 80008fe:	603b      	str	r3, [r7, #0]
 8000900:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(VCC_GPIO_Port, VCC_Pin, GPIO_PIN_RESET);
 8000902:	2200      	movs	r2, #0
 8000904:	2120      	movs	r1, #32
 8000906:	4816      	ldr	r0, [pc, #88]	@ (8000960 <MX_GPIO_Init+0xc8>)
 8000908:	f001 fc36 	bl	8002178 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Blue_Btn_Pin;
 800090c:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8000910:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000912:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 8000916:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000918:	2300      	movs	r3, #0
 800091a:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(Blue_Btn_GPIO_Port, &GPIO_InitStruct);
 800091c:	f107 030c 	add.w	r3, r7, #12
 8000920:	4619      	mov	r1, r3
 8000922:	4810      	ldr	r0, [pc, #64]	@ (8000964 <MX_GPIO_Init+0xcc>)
 8000924:	f001 faa4 	bl	8001e70 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = VCC_Pin;
 8000928:	2320      	movs	r3, #32
 800092a:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800092c:	2301      	movs	r3, #1
 800092e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000930:	2300      	movs	r3, #0
 8000932:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000934:	2300      	movs	r3, #0
 8000936:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(VCC_GPIO_Port, &GPIO_InitStruct);
 8000938:	f107 030c 	add.w	r3, r7, #12
 800093c:	4619      	mov	r1, r3
 800093e:	4808      	ldr	r0, [pc, #32]	@ (8000960 <MX_GPIO_Init+0xc8>)
 8000940:	f001 fa96 	bl	8001e70 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8000944:	2200      	movs	r2, #0
 8000946:	2100      	movs	r1, #0
 8000948:	2028      	movs	r0, #40	@ 0x28
 800094a:	f001 f9c8 	bl	8001cde <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 800094e:	2028      	movs	r0, #40	@ 0x28
 8000950:	f001 f9e1 	bl	8001d16 <HAL_NVIC_EnableIRQ>

}
 8000954:	bf00      	nop
 8000956:	3720      	adds	r7, #32
 8000958:	46bd      	mov	sp, r7
 800095a:	bd80      	pop	{r7, pc}
 800095c:	40023800 	.word	0x40023800
 8000960:	40020000 	.word	0x40020000
 8000964:	40020800 	.word	0x40020800

08000968 <Initialize_HillClimbing>:
#include "hillclimbing.h"

uint32_t Converter_Number_HC = 0;

void Initialize_HillClimbing(uint32_t Number_of_Converters, SolarPanel *SolarPanels)
{
 8000968:	b580      	push	{r7, lr}
 800096a:	b086      	sub	sp, #24
 800096c:	af00      	add	r7, sp, #0
 800096e:	6078      	str	r0, [r7, #4]
 8000970:	6039      	str	r1, [r7, #0]
	Converter_Number_HC = Number_of_Converters;
 8000972:	4a2c      	ldr	r2, [pc, #176]	@ (8000a24 <Initialize_HillClimbing+0xbc>)
 8000974:	687b      	ldr	r3, [r7, #4]
 8000976:	6013      	str	r3, [r2, #0]
	float Voltage;
	float Current;
	for (int i = 0; i < Converter_Number_HC; i++) {
 8000978:	2300      	movs	r3, #0
 800097a:	617b      	str	r3, [r7, #20]
 800097c:	e047      	b.n	8000a0e <Initialize_HillClimbing+0xa6>
		Get_Sensor_Values_for_Panel_hc(i, &Voltage, &Current);
 800097e:	697b      	ldr	r3, [r7, #20]
 8000980:	b2db      	uxtb	r3, r3
 8000982:	f107 020c 	add.w	r2, r7, #12
 8000986:	f107 0110 	add.w	r1, r7, #16
 800098a:	4618      	mov	r0, r3
 800098c:	f000 f84c 	bl	8000a28 <Get_Sensor_Values_for_Panel_hc>
		SolarPanels[i].Current_Current = Current;
 8000990:	697a      	ldr	r2, [r7, #20]
 8000992:	4613      	mov	r3, r2
 8000994:	009b      	lsls	r3, r3, #2
 8000996:	4413      	add	r3, r2
 8000998:	009b      	lsls	r3, r3, #2
 800099a:	461a      	mov	r2, r3
 800099c:	683b      	ldr	r3, [r7, #0]
 800099e:	4413      	add	r3, r2
 80009a0:	68fa      	ldr	r2, [r7, #12]
 80009a2:	60da      	str	r2, [r3, #12]
		SolarPanels[i].Current_Voltage = Voltage;
 80009a4:	697a      	ldr	r2, [r7, #20]
 80009a6:	4613      	mov	r3, r2
 80009a8:	009b      	lsls	r3, r3, #2
 80009aa:	4413      	add	r3, r2
 80009ac:	009b      	lsls	r3, r3, #2
 80009ae:	461a      	mov	r2, r3
 80009b0:	683b      	ldr	r3, [r7, #0]
 80009b2:	4413      	add	r3, r2
 80009b4:	693a      	ldr	r2, [r7, #16]
 80009b6:	605a      	str	r2, [r3, #4]
		SolarPanels[i].Previous_Current = Current;
 80009b8:	697a      	ldr	r2, [r7, #20]
 80009ba:	4613      	mov	r3, r2
 80009bc:	009b      	lsls	r3, r3, #2
 80009be:	4413      	add	r3, r2
 80009c0:	009b      	lsls	r3, r3, #2
 80009c2:	461a      	mov	r2, r3
 80009c4:	683b      	ldr	r3, [r7, #0]
 80009c6:	4413      	add	r3, r2
 80009c8:	68fa      	ldr	r2, [r7, #12]
 80009ca:	609a      	str	r2, [r3, #8]
		SolarPanels[i].Previous_Voltage = Voltage;
 80009cc:	697a      	ldr	r2, [r7, #20]
 80009ce:	4613      	mov	r3, r2
 80009d0:	009b      	lsls	r3, r3, #2
 80009d2:	4413      	add	r3, r2
 80009d4:	009b      	lsls	r3, r3, #2
 80009d6:	461a      	mov	r2, r3
 80009d8:	683b      	ldr	r3, [r7, #0]
 80009da:	4413      	add	r3, r2
 80009dc:	693a      	ldr	r2, [r7, #16]
 80009de:	601a      	str	r2, [r3, #0]
		SolarPanels[i].Shading_Conditions = NOT_SHADED;
 80009e0:	697a      	ldr	r2, [r7, #20]
 80009e2:	4613      	mov	r3, r2
 80009e4:	009b      	lsls	r3, r3, #2
 80009e6:	4413      	add	r3, r2
 80009e8:	009b      	lsls	r3, r3, #2
 80009ea:	461a      	mov	r2, r3
 80009ec:	683b      	ldr	r3, [r7, #0]
 80009ee:	4413      	add	r3, r2
 80009f0:	2200      	movs	r2, #0
 80009f2:	741a      	strb	r2, [r3, #16]
		SolarPanels[i].At_MPP = NOT_AT_MPP;
 80009f4:	697a      	ldr	r2, [r7, #20]
 80009f6:	4613      	mov	r3, r2
 80009f8:	009b      	lsls	r3, r3, #2
 80009fa:	4413      	add	r3, r2
 80009fc:	009b      	lsls	r3, r3, #2
 80009fe:	461a      	mov	r2, r3
 8000a00:	683b      	ldr	r3, [r7, #0]
 8000a02:	4413      	add	r3, r2
 8000a04:	2200      	movs	r2, #0
 8000a06:	745a      	strb	r2, [r3, #17]
	for (int i = 0; i < Converter_Number_HC; i++) {
 8000a08:	697b      	ldr	r3, [r7, #20]
 8000a0a:	3301      	adds	r3, #1
 8000a0c:	617b      	str	r3, [r7, #20]
 8000a0e:	697a      	ldr	r2, [r7, #20]
 8000a10:	4b04      	ldr	r3, [pc, #16]	@ (8000a24 <Initialize_HillClimbing+0xbc>)
 8000a12:	681b      	ldr	r3, [r3, #0]
 8000a14:	429a      	cmp	r2, r3
 8000a16:	d3b2      	bcc.n	800097e <Initialize_HillClimbing+0x16>
	}
}
 8000a18:	bf00      	nop
 8000a1a:	bf00      	nop
 8000a1c:	3718      	adds	r7, #24
 8000a1e:	46bd      	mov	sp, r7
 8000a20:	bd80      	pop	{r7, pc}
 8000a22:	bf00      	nop
 8000a24:	2000007c 	.word	0x2000007c

08000a28 <Get_Sensor_Values_for_Panel_hc>:

void Get_Sensor_Values_for_Panel_hc(uint8_t Converter_Index, float *Voltage, float *Current)
{
 8000a28:	b580      	push	{r7, lr}
 8000a2a:	b084      	sub	sp, #16
 8000a2c:	af00      	add	r7, sp, #0
 8000a2e:	4603      	mov	r3, r0
 8000a30:	60b9      	str	r1, [r7, #8]
 8000a32:	607a      	str	r2, [r7, #4]
 8000a34:	73fb      	strb	r3, [r7, #15]
	Read_Sensor_ValuesACS37800(Converter_Index, Voltage, Current);
 8000a36:	7bfb      	ldrb	r3, [r7, #15]
 8000a38:	687a      	ldr	r2, [r7, #4]
 8000a3a:	68b9      	ldr	r1, [r7, #8]
 8000a3c:	4618      	mov	r0, r3
 8000a3e:	f000 fcd7 	bl	80013f0 <Read_Sensor_ValuesACS37800>
}
 8000a42:	bf00      	nop
 8000a44:	3710      	adds	r7, #16
 8000a46:	46bd      	mov	sp, r7
 8000a48:	bd80      	pop	{r7, pc}

08000a4a <Calculate_Power_hc>:

float Calculate_Power_hc(float Voltage, float Current)
{
 8000a4a:	b480      	push	{r7}
 8000a4c:	b083      	sub	sp, #12
 8000a4e:	af00      	add	r7, sp, #0
 8000a50:	ed87 0a01 	vstr	s0, [r7, #4]
 8000a54:	edc7 0a00 	vstr	s1, [r7]
	return Voltage * Current;
 8000a58:	ed97 7a01 	vldr	s14, [r7, #4]
 8000a5c:	edd7 7a00 	vldr	s15, [r7]
 8000a60:	ee67 7a27 	vmul.f32	s15, s14, s15
}
 8000a64:	eeb0 0a67 	vmov.f32	s0, s15
 8000a68:	370c      	adds	r7, #12
 8000a6a:	46bd      	mov	sp, r7
 8000a6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a70:	4770      	bx	lr
	...

08000a74 <MX_I2C1_Init>:
I2C_HandleTypeDef hi2c2;
I2C_HandleTypeDef hi2c3;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 8000a74:	b580      	push	{r7, lr}
 8000a76:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8000a78:	4b12      	ldr	r3, [pc, #72]	@ (8000ac4 <MX_I2C1_Init+0x50>)
 8000a7a:	4a13      	ldr	r2, [pc, #76]	@ (8000ac8 <MX_I2C1_Init+0x54>)
 8000a7c:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 8000a7e:	4b11      	ldr	r3, [pc, #68]	@ (8000ac4 <MX_I2C1_Init+0x50>)
 8000a80:	4a12      	ldr	r2, [pc, #72]	@ (8000acc <MX_I2C1_Init+0x58>)
 8000a82:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000a84:	4b0f      	ldr	r3, [pc, #60]	@ (8000ac4 <MX_I2C1_Init+0x50>)
 8000a86:	2200      	movs	r2, #0
 8000a88:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8000a8a:	4b0e      	ldr	r3, [pc, #56]	@ (8000ac4 <MX_I2C1_Init+0x50>)
 8000a8c:	2200      	movs	r2, #0
 8000a8e:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000a90:	4b0c      	ldr	r3, [pc, #48]	@ (8000ac4 <MX_I2C1_Init+0x50>)
 8000a92:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8000a96:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000a98:	4b0a      	ldr	r3, [pc, #40]	@ (8000ac4 <MX_I2C1_Init+0x50>)
 8000a9a:	2200      	movs	r2, #0
 8000a9c:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8000a9e:	4b09      	ldr	r3, [pc, #36]	@ (8000ac4 <MX_I2C1_Init+0x50>)
 8000aa0:	2200      	movs	r2, #0
 8000aa2:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000aa4:	4b07      	ldr	r3, [pc, #28]	@ (8000ac4 <MX_I2C1_Init+0x50>)
 8000aa6:	2200      	movs	r2, #0
 8000aa8:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000aaa:	4b06      	ldr	r3, [pc, #24]	@ (8000ac4 <MX_I2C1_Init+0x50>)
 8000aac:	2200      	movs	r2, #0
 8000aae:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8000ab0:	4804      	ldr	r0, [pc, #16]	@ (8000ac4 <MX_I2C1_Init+0x50>)
 8000ab2:	f001 fb93 	bl	80021dc <HAL_I2C_Init>
 8000ab6:	4603      	mov	r3, r0
 8000ab8:	2b00      	cmp	r3, #0
 8000aba:	d001      	beq.n	8000ac0 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8000abc:	f000 fadc 	bl	8001078 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8000ac0:	bf00      	nop
 8000ac2:	bd80      	pop	{r7, pc}
 8000ac4:	20000080 	.word	0x20000080
 8000ac8:	40005400 	.word	0x40005400
 8000acc:	000186a0 	.word	0x000186a0

08000ad0 <MX_I2C2_Init>:
/* I2C2 init function */
void MX_I2C2_Init(void)
{
 8000ad0:	b580      	push	{r7, lr}
 8000ad2:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 8000ad4:	4b12      	ldr	r3, [pc, #72]	@ (8000b20 <MX_I2C2_Init+0x50>)
 8000ad6:	4a13      	ldr	r2, [pc, #76]	@ (8000b24 <MX_I2C2_Init+0x54>)
 8000ad8:	601a      	str	r2, [r3, #0]
  hi2c2.Init.ClockSpeed = 100000;
 8000ada:	4b11      	ldr	r3, [pc, #68]	@ (8000b20 <MX_I2C2_Init+0x50>)
 8000adc:	4a12      	ldr	r2, [pc, #72]	@ (8000b28 <MX_I2C2_Init+0x58>)
 8000ade:	605a      	str	r2, [r3, #4]
  hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000ae0:	4b0f      	ldr	r3, [pc, #60]	@ (8000b20 <MX_I2C2_Init+0x50>)
 8000ae2:	2200      	movs	r2, #0
 8000ae4:	609a      	str	r2, [r3, #8]
  hi2c2.Init.OwnAddress1 = 0;
 8000ae6:	4b0e      	ldr	r3, [pc, #56]	@ (8000b20 <MX_I2C2_Init+0x50>)
 8000ae8:	2200      	movs	r2, #0
 8000aea:	60da      	str	r2, [r3, #12]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000aec:	4b0c      	ldr	r3, [pc, #48]	@ (8000b20 <MX_I2C2_Init+0x50>)
 8000aee:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8000af2:	611a      	str	r2, [r3, #16]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000af4:	4b0a      	ldr	r3, [pc, #40]	@ (8000b20 <MX_I2C2_Init+0x50>)
 8000af6:	2200      	movs	r2, #0
 8000af8:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2 = 0;
 8000afa:	4b09      	ldr	r3, [pc, #36]	@ (8000b20 <MX_I2C2_Init+0x50>)
 8000afc:	2200      	movs	r2, #0
 8000afe:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000b00:	4b07      	ldr	r3, [pc, #28]	@ (8000b20 <MX_I2C2_Init+0x50>)
 8000b02:	2200      	movs	r2, #0
 8000b04:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000b06:	4b06      	ldr	r3, [pc, #24]	@ (8000b20 <MX_I2C2_Init+0x50>)
 8000b08:	2200      	movs	r2, #0
 8000b0a:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8000b0c:	4804      	ldr	r0, [pc, #16]	@ (8000b20 <MX_I2C2_Init+0x50>)
 8000b0e:	f001 fb65 	bl	80021dc <HAL_I2C_Init>
 8000b12:	4603      	mov	r3, r0
 8000b14:	2b00      	cmp	r3, #0
 8000b16:	d001      	beq.n	8000b1c <MX_I2C2_Init+0x4c>
  {
    Error_Handler();
 8000b18:	f000 faae 	bl	8001078 <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 8000b1c:	bf00      	nop
 8000b1e:	bd80      	pop	{r7, pc}
 8000b20:	200000d4 	.word	0x200000d4
 8000b24:	40005800 	.word	0x40005800
 8000b28:	000186a0 	.word	0x000186a0

08000b2c <MX_I2C3_Init>:
/* I2C3 init function */
void MX_I2C3_Init(void)
{
 8000b2c:	b580      	push	{r7, lr}
 8000b2e:	af00      	add	r7, sp, #0
  /* USER CODE END I2C3_Init 0 */

  /* USER CODE BEGIN I2C3_Init 1 */

  /* USER CODE END I2C3_Init 1 */
  hi2c3.Instance = I2C3;
 8000b30:	4b12      	ldr	r3, [pc, #72]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b32:	4a13      	ldr	r2, [pc, #76]	@ (8000b80 <MX_I2C3_Init+0x54>)
 8000b34:	601a      	str	r2, [r3, #0]
  hi2c3.Init.ClockSpeed = 100000;
 8000b36:	4b11      	ldr	r3, [pc, #68]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b38:	4a12      	ldr	r2, [pc, #72]	@ (8000b84 <MX_I2C3_Init+0x58>)
 8000b3a:	605a      	str	r2, [r3, #4]
  hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000b3c:	4b0f      	ldr	r3, [pc, #60]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b3e:	2200      	movs	r2, #0
 8000b40:	609a      	str	r2, [r3, #8]
  hi2c3.Init.OwnAddress1 = 0;
 8000b42:	4b0e      	ldr	r3, [pc, #56]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b44:	2200      	movs	r2, #0
 8000b46:	60da      	str	r2, [r3, #12]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000b48:	4b0c      	ldr	r3, [pc, #48]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b4a:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8000b4e:	611a      	str	r2, [r3, #16]
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000b50:	4b0a      	ldr	r3, [pc, #40]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b52:	2200      	movs	r2, #0
 8000b54:	615a      	str	r2, [r3, #20]
  hi2c3.Init.OwnAddress2 = 0;
 8000b56:	4b09      	ldr	r3, [pc, #36]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b58:	2200      	movs	r2, #0
 8000b5a:	619a      	str	r2, [r3, #24]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000b5c:	4b07      	ldr	r3, [pc, #28]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b5e:	2200      	movs	r2, #0
 8000b60:	61da      	str	r2, [r3, #28]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000b62:	4b06      	ldr	r3, [pc, #24]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b64:	2200      	movs	r2, #0
 8000b66:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000b68:	4804      	ldr	r0, [pc, #16]	@ (8000b7c <MX_I2C3_Init+0x50>)
 8000b6a:	f001 fb37 	bl	80021dc <HAL_I2C_Init>
 8000b6e:	4603      	mov	r3, r0
 8000b70:	2b00      	cmp	r3, #0
 8000b72:	d001      	beq.n	8000b78 <MX_I2C3_Init+0x4c>
  {
    Error_Handler();
 8000b74:	f000 fa80 	bl	8001078 <Error_Handler>
  }
  /* USER CODE BEGIN I2C3_Init 2 */

  /* USER CODE END I2C3_Init 2 */

}
 8000b78:	bf00      	nop
 8000b7a:	bd80      	pop	{r7, pc}
 8000b7c:	20000128 	.word	0x20000128
 8000b80:	40005c00 	.word	0x40005c00
 8000b84:	000186a0 	.word	0x000186a0

08000b88 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 8000b88:	b580      	push	{r7, lr}
 8000b8a:	b08e      	sub	sp, #56	@ 0x38
 8000b8c:	af00      	add	r7, sp, #0
 8000b8e:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b90:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000b94:	2200      	movs	r2, #0
 8000b96:	601a      	str	r2, [r3, #0]
 8000b98:	605a      	str	r2, [r3, #4]
 8000b9a:	609a      	str	r2, [r3, #8]
 8000b9c:	60da      	str	r2, [r3, #12]
 8000b9e:	611a      	str	r2, [r3, #16]
  if(i2cHandle->Instance==I2C1)
 8000ba0:	687b      	ldr	r3, [r7, #4]
 8000ba2:	681b      	ldr	r3, [r3, #0]
 8000ba4:	4a63      	ldr	r2, [pc, #396]	@ (8000d34 <HAL_I2C_MspInit+0x1ac>)
 8000ba6:	4293      	cmp	r3, r2
 8000ba8:	d12c      	bne.n	8000c04 <HAL_I2C_MspInit+0x7c>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000baa:	2300      	movs	r3, #0
 8000bac:	623b      	str	r3, [r7, #32]
 8000bae:	4b62      	ldr	r3, [pc, #392]	@ (8000d38 <HAL_I2C_MspInit+0x1b0>)
 8000bb0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000bb2:	4a61      	ldr	r2, [pc, #388]	@ (8000d38 <HAL_I2C_MspInit+0x1b0>)
 8000bb4:	f043 0302 	orr.w	r3, r3, #2
 8000bb8:	6313      	str	r3, [r2, #48]	@ 0x30
 8000bba:	4b5f      	ldr	r3, [pc, #380]	@ (8000d38 <HAL_I2C_MspInit+0x1b0>)
 8000bbc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000bbe:	f003 0302 	and.w	r3, r3, #2
 8000bc2:	623b      	str	r3, [r7, #32]
 8000bc4:	6a3b      	ldr	r3, [r7, #32]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8000bc6:	23c0      	movs	r3, #192	@ 0xc0
 8000bc8:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000bca:	2312      	movs	r3, #18
 8000bcc:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000bce:	2300      	movs	r3, #0
 8000bd0:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000bd2:	2303      	movs	r3, #3
 8000bd4:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8000bd6:	2304      	movs	r3, #4
 8000bd8:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000bda:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000bde:	4619      	mov	r1, r3
 8000be0:	4856      	ldr	r0, [pc, #344]	@ (8000d3c <HAL_I2C_MspInit+0x1b4>)
 8000be2:	f001 f945 	bl	8001e70 <HAL_GPIO_Init>

    /* I2C1 clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8000be6:	2300      	movs	r3, #0
 8000be8:	61fb      	str	r3, [r7, #28]
 8000bea:	4b53      	ldr	r3, [pc, #332]	@ (8000d38 <HAL_I2C_MspInit+0x1b0>)
 8000bec:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000bee:	4a52      	ldr	r2, [pc, #328]	@ (8000d38 <HAL_I2C_MspInit+0x1b0>)
 8000bf0:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8000bf4:	6413      	str	r3, [r2, #64]	@ 0x40
 8000bf6:	4b50      	ldr	r3, [pc, #320]	@ (8000d38 <HAL_I2C_MspInit+0x1b0>)
 8000bf8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000bfa:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8000bfe:	61fb      	str	r3, [r7, #28]
 8000c00:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_I2C3_CLK_ENABLE();
  /* USER CODE BEGIN I2C3_MspInit 1 */

  /* USER CODE END I2C3_MspInit 1 */
  }
}
 8000c02:	e093      	b.n	8000d2c <HAL_I2C_MspInit+0x1a4>
  else if(i2cHandle->Instance==I2C2)
 8000c04:	687b      	ldr	r3, [r7, #4]
 8000c06:	681b      	ldr	r3, [r3, #0]
 8000c08:	4a4d      	ldr	r2, [pc, #308]	@ (8000d40 <HAL_I2C_MspInit+0x1b8>)
 8000c0a:	4293      	cmp	r3, r2
 8000c0c:	d13d      	bne.n	8000c8a <HAL_I2C_MspInit+0x102>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000c0e:	2300      	movs	r3, #0
 8000c10:	61bb      	str	r3, [r7, #24]
 8000c12:	4b49      	ldr	r3, [pc, #292]	@ (8000d38 <HAL_I2C_MspInit+0x1b0>)
 8000c14:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c16:	4a48      	ldr	r2, [pc, #288]	@ (8000d38 <HAL_I2C_MspInit+0x1b0>)
 8000c18:	f043 0302 	orr.w	r3, r3, #2
 8000c1c:	6313      	str	r3, [r2, #48]	@ 0x30
 8000c1e:	4b46      	ldr	r3, [pc, #280]	@ (8000d38 <HAL_I2C_MspInit+0x1b0>)
 8000c20:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c22:	f003 0302 	and.w	r3, r3, #2
 8000c26:	61bb      	str	r3, [r7, #24]
 8000c28:	69bb      	ldr	r3, [r7, #24]
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8000c2a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000c2e:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000c30:	2312      	movs	r3, #18
 8000c32:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c34:	2300      	movs	r3, #0
 8000c36:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c38:	2303      	movs	r3, #3
 8000c3a:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8000c3c:	2304      	movs	r3, #4
 8000c3e:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000c40:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000c44:	4619      	mov	r1, r3
 8000c46:	483d      	ldr	r0, [pc, #244]	@ (8000d3c <HAL_I2C_MspInit+0x1b4>)
 8000c48:	f001 f912 	bl	8001e70 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8000c4c:	2308      	movs	r3, #8
 8000c4e:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000c50:	2312      	movs	r3, #18
 8000c52:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c54:	2300      	movs	r3, #0
 8000c56:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c58:	2303      	movs	r3, #3
 8000c5a:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF9_I2C2;
 8000c5c:	2309      	movs	r3, #9
 8000c5e:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000c60:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000c64:	4619      	mov	r1, r3
 8000c66:	4835      	ldr	r0, [pc, #212]	@ (8000d3c <HAL_I2C_MspInit+0x1b4>)
 8000c68:	f001 f902 	bl	8001e70 <HAL_GPIO_Init>
    __HAL_RCC_I2C2_CLK_ENABLE();
 8000c6c:	2300      	movs	r3, #0
 8000c6e:	617b      	str	r3, [r7, #20]
 8000c70:	4b31      	ldr	r3, [pc, #196]	@ (8000d38 <HAL_I2C_MspInit+0x1b0>)
 8000c72:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000c74:	4a30      	ldr	r2, [pc, #192]	@ (8000d38 <HAL_I2C_MspInit+0x1b0>)
 8000c76:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8000c7a:	6413      	str	r3, [r2, #64]	@ 0x40
 8000c7c:	4b2e      	ldr	r3, [pc, #184]	@ (8000d38 <HAL_I2C_MspInit+0x1b0>)
 8000c7e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000c80:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8000c84:	617b      	str	r3, [r7, #20]
 8000c86:	697b      	ldr	r3, [r7, #20]
}
 8000c88:	e050      	b.n	8000d2c <HAL_I2C_MspInit+0x1a4>
  else if(i2cHandle->Instance==I2C3)
 8000c8a:	687b      	ldr	r3, [r7, #4]
 8000c8c:	681b      	ldr	r3, [r3, #0]
 8000c8e:	4a2d      	ldr	r2, [pc, #180]	@ (8000d44 <HAL_I2C_MspInit+0x1bc>)
 8000c90:	4293      	cmp	r3, r2
 8000c92:	d14b      	bne.n	8000d2c <HAL_I2C_MspInit+0x1a4>
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000c94:	2300      	movs	r3, #0
 8000c96:	613b      	str	r3, [r7, #16]
 8000c98:	4b27      	ldr	r3, [pc, #156]	@ (8000d38 <HAL_I2C_MspInit+0x1b0>)
 8000c9a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c9c:	4a26      	ldr	r2, [pc, #152]	@ (8000d38 <HAL_I2C_MspInit+0x1b0>)
 8000c9e:	f043 0304 	orr.w	r3, r3, #4
 8000ca2:	6313      	str	r3, [r2, #48]	@ 0x30
 8000ca4:	4b24      	ldr	r3, [pc, #144]	@ (8000d38 <HAL_I2C_MspInit+0x1b0>)
 8000ca6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ca8:	f003 0304 	and.w	r3, r3, #4
 8000cac:	613b      	str	r3, [r7, #16]
 8000cae:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000cb0:	2300      	movs	r3, #0
 8000cb2:	60fb      	str	r3, [r7, #12]
 8000cb4:	4b20      	ldr	r3, [pc, #128]	@ (8000d38 <HAL_I2C_MspInit+0x1b0>)
 8000cb6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000cb8:	4a1f      	ldr	r2, [pc, #124]	@ (8000d38 <HAL_I2C_MspInit+0x1b0>)
 8000cba:	f043 0301 	orr.w	r3, r3, #1
 8000cbe:	6313      	str	r3, [r2, #48]	@ 0x30
 8000cc0:	4b1d      	ldr	r3, [pc, #116]	@ (8000d38 <HAL_I2C_MspInit+0x1b0>)
 8000cc2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000cc4:	f003 0301 	and.w	r3, r3, #1
 8000cc8:	60fb      	str	r3, [r7, #12]
 8000cca:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8000ccc:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8000cd0:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000cd2:	2312      	movs	r3, #18
 8000cd4:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cd6:	2300      	movs	r3, #0
 8000cd8:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000cda:	2303      	movs	r3, #3
 8000cdc:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8000cde:	2304      	movs	r3, #4
 8000ce0:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000ce2:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000ce6:	4619      	mov	r1, r3
 8000ce8:	4817      	ldr	r0, [pc, #92]	@ (8000d48 <HAL_I2C_MspInit+0x1c0>)
 8000cea:	f001 f8c1 	bl	8001e70 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8000cee:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8000cf2:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000cf4:	2312      	movs	r3, #18
 8000cf6:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cf8:	2300      	movs	r3, #0
 8000cfa:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000cfc:	2303      	movs	r3, #3
 8000cfe:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8000d00:	2304      	movs	r3, #4
 8000d02:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d04:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000d08:	4619      	mov	r1, r3
 8000d0a:	4810      	ldr	r0, [pc, #64]	@ (8000d4c <HAL_I2C_MspInit+0x1c4>)
 8000d0c:	f001 f8b0 	bl	8001e70 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8000d10:	2300      	movs	r3, #0
 8000d12:	60bb      	str	r3, [r7, #8]
 8000d14:	4b08      	ldr	r3, [pc, #32]	@ (8000d38 <HAL_I2C_MspInit+0x1b0>)
 8000d16:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000d18:	4a07      	ldr	r2, [pc, #28]	@ (8000d38 <HAL_I2C_MspInit+0x1b0>)
 8000d1a:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8000d1e:	6413      	str	r3, [r2, #64]	@ 0x40
 8000d20:	4b05      	ldr	r3, [pc, #20]	@ (8000d38 <HAL_I2C_MspInit+0x1b0>)
 8000d22:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000d24:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8000d28:	60bb      	str	r3, [r7, #8]
 8000d2a:	68bb      	ldr	r3, [r7, #8]
}
 8000d2c:	bf00      	nop
 8000d2e:	3738      	adds	r7, #56	@ 0x38
 8000d30:	46bd      	mov	sp, r7
 8000d32:	bd80      	pop	{r7, pc}
 8000d34:	40005400 	.word	0x40005400
 8000d38:	40023800 	.word	0x40023800
 8000d3c:	40020400 	.word	0x40020400
 8000d40:	40005800 	.word	0x40005800
 8000d44:	40005c00 	.word	0x40005c00
 8000d48:	40020800 	.word	0x40020800
 8000d4c:	40020000 	.word	0x40020000

08000d50 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000d50:	b580      	push	{r7, lr}
 8000d52:	b08c      	sub	sp, #48	@ 0x30
 8000d54:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN 1 */
  uint8_t Single_Converter_Index = 0;
 8000d56:	2300      	movs	r3, #0
 8000d58:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000d5c:	f000 fe4e 	bl	80019fc <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000d60:	f000 f876 	bl	8000e50 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000d64:	f7ff fd98 	bl	8000898 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8000d68:	f000 fd64 	bl	8001834 <MX_USART2_UART_Init>
  MX_I2C1_Init();
 8000d6c:	f7ff fe82 	bl	8000a74 <MX_I2C1_Init>
  MX_I2C2_Init();
 8000d70:	f7ff feae 	bl	8000ad0 <MX_I2C2_Init>
  MX_I2C3_Init();
 8000d74:	f7ff feda 	bl	8000b2c <MX_I2C3_Init>

	  }
	  while (1);
  }
  else {
	  sprintf((char *)OutputBuffer, "Communication Started\r\n");
 8000d78:	492b      	ldr	r1, [pc, #172]	@ (8000e28 <main+0xd8>)
 8000d7a:	482c      	ldr	r0, [pc, #176]	@ (8000e2c <main+0xdc>)
 8000d7c:	f004 f804 	bl	8004d88 <siprintf>
	  PrintOutputBuffer(OutputBuffer);
 8000d80:	482a      	ldr	r0, [pc, #168]	@ (8000e2c <main+0xdc>)
 8000d82:	f000 fdeb 	bl	800195c <PrintOutputBuffer>
	  sprintf((char *)OutputBuffer, "Receiving Character\r\n");
 8000d86:	492a      	ldr	r1, [pc, #168]	@ (8000e30 <main+0xe0>)
 8000d88:	4828      	ldr	r0, [pc, #160]	@ (8000e2c <main+0xdc>)
 8000d8a:	f003 fffd 	bl	8004d88 <siprintf>
	  PrintOutputBuffer(OutputBuffer);
 8000d8e:	4827      	ldr	r0, [pc, #156]	@ (8000e2c <main+0xdc>)
 8000d90:	f000 fde4 	bl	800195c <PrintOutputBuffer>
	  HAL_Status = HAL_UART_Receive_IT(&huart2, &ReceiveCharacter, 1);
 8000d94:	2201      	movs	r2, #1
 8000d96:	4927      	ldr	r1, [pc, #156]	@ (8000e34 <main+0xe4>)
 8000d98:	4827      	ldr	r0, [pc, #156]	@ (8000e38 <main+0xe8>)
 8000d9a:	f003 f87a 	bl	8003e92 <HAL_UART_Receive_IT>
 8000d9e:	4603      	mov	r3, r0
 8000da0:	461a      	mov	r2, r3
 8000da2:	4b26      	ldr	r3, [pc, #152]	@ (8000e3c <main+0xec>)
 8000da4:	701a      	strb	r2, [r3, #0]
  }

  HAL_GPIO_WritePin(VCC_GPIO_Port, VCC_Pin, GPIO_PIN_SET);
 8000da6:	2201      	movs	r2, #1
 8000da8:	2120      	movs	r1, #32
 8000daa:	4825      	ldr	r0, [pc, #148]	@ (8000e40 <main+0xf0>)
 8000dac:	f001 f9e4 	bl	8002178 <HAL_GPIO_WritePin>
  HAL_StatusTypeDef HAL_Status = HAL_ERROR;
 8000db0:	2301      	movs	r3, #1
 8000db2:	f887 302d 	strb.w	r3, [r7, #45]	@ 0x2d
  uint8_t Index_of_Test = 1;
 8000db6:	2301      	movs	r3, #1
 8000db8:	f887 302e 	strb.w	r3, [r7, #46]	@ 0x2e

  TestAddressesACS37800(Index_of_Test, I2C_ADDR_REGISTER + EEPROM, &HAL_Status);
 8000dbc:	f107 022d 	add.w	r2, r7, #45	@ 0x2d
 8000dc0:	f897 302e 	ldrb.w	r3, [r7, #46]	@ 0x2e
 8000dc4:	210f      	movs	r1, #15
 8000dc6:	4618      	mov	r0, r3
 8000dc8:	f000 fc2e 	bl	8001628 <TestAddressesACS37800>

  if (HAL_Status == HAL_OK) {
 8000dcc:	f897 302d 	ldrb.w	r3, [r7, #45]	@ 0x2d
 8000dd0:	2b00      	cmp	r3, #0
 8000dd2:	d104      	bne.n	8000dde <main+0x8e>
	sprintf((char *)OutputBuffer, "ACS Working\r\n");
 8000dd4:	491b      	ldr	r1, [pc, #108]	@ (8000e44 <main+0xf4>)
 8000dd6:	4815      	ldr	r0, [pc, #84]	@ (8000e2c <main+0xdc>)
 8000dd8:	f003 ffd6 	bl	8004d88 <siprintf>
 8000ddc:	e003      	b.n	8000de6 <main+0x96>
  }
  else {
	sprintf((char *)OutputBuffer, "HAL Error\r\n");
 8000dde:	491a      	ldr	r1, [pc, #104]	@ (8000e48 <main+0xf8>)
 8000de0:	4812      	ldr	r0, [pc, #72]	@ (8000e2c <main+0xdc>)
 8000de2:	f003 ffd1 	bl	8004d88 <siprintf>
  }
  PrintOutputBuffer(OutputBuffer);
 8000de6:	4811      	ldr	r0, [pc, #68]	@ (8000e2c <main+0xdc>)
 8000de8:	f000 fdb8 	bl	800195c <PrintOutputBuffer>
  TestAddressesTPS55288(Index_of_Test, MODE, &HAL_Status);
 8000dec:	f107 022d 	add.w	r2, r7, #45	@ 0x2d
 8000df0:	f897 302e 	ldrb.w	r3, [r7, #46]	@ 0x2e
 8000df4:	2106      	movs	r1, #6
 8000df6:	4618      	mov	r0, r3
 8000df8:	f7ff fcf2 	bl	80007e0 <TestAddressesTPS55288>
  if (HAL_Status == HAL_OK) {
 8000dfc:	f897 302d 	ldrb.w	r3, [r7, #45]	@ 0x2d
 8000e00:	2b00      	cmp	r3, #0
 8000e02:	d104      	bne.n	8000e0e <main+0xbe>
	  sprintf((char *)OutputBuffer, "TPS Working\r\n");
 8000e04:	4911      	ldr	r1, [pc, #68]	@ (8000e4c <main+0xfc>)
 8000e06:	4809      	ldr	r0, [pc, #36]	@ (8000e2c <main+0xdc>)
 8000e08:	f003 ffbe 	bl	8004d88 <siprintf>
 8000e0c:	e003      	b.n	8000e16 <main+0xc6>
  }
  else {
	  sprintf((char *)OutputBuffer, "HAL Error\r\n");
 8000e0e:	490e      	ldr	r1, [pc, #56]	@ (8000e48 <main+0xf8>)
 8000e10:	4806      	ldr	r0, [pc, #24]	@ (8000e2c <main+0xdc>)
 8000e12:	f003 ffb9 	bl	8004d88 <siprintf>
  }
  PrintOutputBuffer(OutputBuffer);
 8000e16:	4805      	ldr	r0, [pc, #20]	@ (8000e2c <main+0xdc>)
 8000e18:	f000 fda0 	bl	800195c <PrintOutputBuffer>
//			  break;
//		  case SMART_ALGORITHM:
//
//			  break;
//	  }
	  HAL_Delay(500);
 8000e1c:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8000e20:	f000 fe5e 	bl	8001ae0 <HAL_Delay>
 8000e24:	e7fa      	b.n	8000e1c <main+0xcc>
 8000e26:	bf00      	nop
 8000e28:	080056e0 	.word	0x080056e0
 8000e2c:	20000180 	.word	0x20000180
 8000e30:	080056f8 	.word	0x080056f8
 8000e34:	2000017c 	.word	0x2000017c
 8000e38:	2000021c 	.word	0x2000021c
 8000e3c:	20000201 	.word	0x20000201
 8000e40:	40020000 	.word	0x40020000
 8000e44:	08005710 	.word	0x08005710
 8000e48:	08005720 	.word	0x08005720
 8000e4c:	0800572c 	.word	0x0800572c

08000e50 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000e50:	b580      	push	{r7, lr}
 8000e52:	b094      	sub	sp, #80	@ 0x50
 8000e54:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000e56:	f107 0320 	add.w	r3, r7, #32
 8000e5a:	2230      	movs	r2, #48	@ 0x30
 8000e5c:	2100      	movs	r1, #0
 8000e5e:	4618      	mov	r0, r3
 8000e60:	f003 ffb2 	bl	8004dc8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000e64:	f107 030c 	add.w	r3, r7, #12
 8000e68:	2200      	movs	r2, #0
 8000e6a:	601a      	str	r2, [r3, #0]
 8000e6c:	605a      	str	r2, [r3, #4]
 8000e6e:	609a      	str	r2, [r3, #8]
 8000e70:	60da      	str	r2, [r3, #12]
 8000e72:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000e74:	2300      	movs	r3, #0
 8000e76:	60bb      	str	r3, [r7, #8]
 8000e78:	4b23      	ldr	r3, [pc, #140]	@ (8000f08 <SystemClock_Config+0xb8>)
 8000e7a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000e7c:	4a22      	ldr	r2, [pc, #136]	@ (8000f08 <SystemClock_Config+0xb8>)
 8000e7e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000e82:	6413      	str	r3, [r2, #64]	@ 0x40
 8000e84:	4b20      	ldr	r3, [pc, #128]	@ (8000f08 <SystemClock_Config+0xb8>)
 8000e86:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000e88:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000e8c:	60bb      	str	r3, [r7, #8]
 8000e8e:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 8000e90:	2300      	movs	r3, #0
 8000e92:	607b      	str	r3, [r7, #4]
 8000e94:	4b1d      	ldr	r3, [pc, #116]	@ (8000f0c <SystemClock_Config+0xbc>)
 8000e96:	681b      	ldr	r3, [r3, #0]
 8000e98:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8000e9c:	4a1b      	ldr	r2, [pc, #108]	@ (8000f0c <SystemClock_Config+0xbc>)
 8000e9e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8000ea2:	6013      	str	r3, [r2, #0]
 8000ea4:	4b19      	ldr	r3, [pc, #100]	@ (8000f0c <SystemClock_Config+0xbc>)
 8000ea6:	681b      	ldr	r3, [r3, #0]
 8000ea8:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8000eac:	607b      	str	r3, [r7, #4]
 8000eae:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000eb0:	2302      	movs	r3, #2
 8000eb2:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000eb4:	2301      	movs	r3, #1
 8000eb6:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000eb8:	2310      	movs	r3, #16
 8000eba:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8000ebc:	2300      	movs	r3, #0
 8000ebe:	63bb      	str	r3, [r7, #56]	@ 0x38
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000ec0:	f107 0320 	add.w	r3, r7, #32
 8000ec4:	4618      	mov	r0, r3
 8000ec6:	f002 fab1 	bl	800342c <HAL_RCC_OscConfig>
 8000eca:	4603      	mov	r3, r0
 8000ecc:	2b00      	cmp	r3, #0
 8000ece:	d001      	beq.n	8000ed4 <SystemClock_Config+0x84>
  {
    Error_Handler();
 8000ed0:	f000 f8d2 	bl	8001078 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000ed4:	230f      	movs	r3, #15
 8000ed6:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8000ed8:	2300      	movs	r3, #0
 8000eda:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000edc:	2300      	movs	r3, #0
 8000ede:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000ee0:	2300      	movs	r3, #0
 8000ee2:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000ee4:	2300      	movs	r3, #0
 8000ee6:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8000ee8:	f107 030c 	add.w	r3, r7, #12
 8000eec:	2100      	movs	r1, #0
 8000eee:	4618      	mov	r0, r3
 8000ef0:	f002 fd14 	bl	800391c <HAL_RCC_ClockConfig>
 8000ef4:	4603      	mov	r3, r0
 8000ef6:	2b00      	cmp	r3, #0
 8000ef8:	d001      	beq.n	8000efe <SystemClock_Config+0xae>
  {
    Error_Handler();
 8000efa:	f000 f8bd 	bl	8001078 <Error_Handler>
  }
}
 8000efe:	bf00      	nop
 8000f00:	3750      	adds	r7, #80	@ 0x50
 8000f02:	46bd      	mov	sp, r7
 8000f04:	bd80      	pop	{r7, pc}
 8000f06:	bf00      	nop
 8000f08:	40023800 	.word	0x40023800
 8000f0c:	40007000 	.word	0x40007000

08000f10 <HAL_GPIO_EXTI_Callback>:

/* USER CODE BEGIN 4 */
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8000f10:	b580      	push	{r7, lr}
 8000f12:	b082      	sub	sp, #8
 8000f14:	af00      	add	r7, sp, #0
 8000f16:	4603      	mov	r3, r0
 8000f18:	80fb      	strh	r3, [r7, #6]
	Enable_Output_TPS55288(1);
 8000f1a:	2001      	movs	r0, #1
 8000f1c:	f7ff fbb2 	bl	8000684 <Enable_Output_TPS55288>
	ReadBytesACS37800(1, RMSAVGONESEC_REGISTER, &HAL_Status);
 8000f20:	4a09      	ldr	r2, [pc, #36]	@ (8000f48 <HAL_GPIO_EXTI_Callback+0x38>)
 8000f22:	2126      	movs	r1, #38	@ 0x26
 8000f24:	2001      	movs	r0, #1
 8000f26:	f000 fb29 	bl	800157c <ReadBytesACS37800>
	ReadBytesACS37800(1, RMS_REGISTER, &HAL_Status);
 8000f2a:	4a07      	ldr	r2, [pc, #28]	@ (8000f48 <HAL_GPIO_EXTI_Callback+0x38>)
 8000f2c:	2120      	movs	r1, #32
 8000f2e:	2001      	movs	r0, #1
 8000f30:	f000 fb24 	bl	800157c <ReadBytesACS37800>
	ReadBytesACS37800(1, CODES_REGISTER, &HAL_Status);
 8000f34:	4a04      	ldr	r2, [pc, #16]	@ (8000f48 <HAL_GPIO_EXTI_Callback+0x38>)
 8000f36:	212a      	movs	r1, #42	@ 0x2a
 8000f38:	2001      	movs	r0, #1
 8000f3a:	f000 fb1f 	bl	800157c <ReadBytesACS37800>
//	for (int i = 0; i < 0xf; i++)
//	Update_Reference_Voltage_TPS55288(1, 1, 8);
}
 8000f3e:	bf00      	nop
 8000f40:	3708      	adds	r7, #8
 8000f42:	46bd      	mov	sp, r7
 8000f44:	bd80      	pop	{r7, pc}
 8000f46:	bf00      	nop
 8000f48:	20000201 	.word	0x20000201

08000f4c <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8000f4c:	b580      	push	{r7, lr}
 8000f4e:	b086      	sub	sp, #24
 8000f50:	af00      	add	r7, sp, #0
 8000f52:	6078      	str	r0, [r7, #4]
  if (TESTING_MODE) return;
  Interrupt_Occurred = 1;
 8000f54:	4b3b      	ldr	r3, [pc, #236]	@ (8001044 <HAL_UART_RxCpltCallback+0xf8>)
 8000f56:	2201      	movs	r2, #1
 8000f58:	701a      	strb	r2, [r3, #0]
  HAL_Status = HAL_UART_Receive_IT(&huart2, &ReceiveCharacter, 1);
 8000f5a:	2201      	movs	r2, #1
 8000f5c:	493a      	ldr	r1, [pc, #232]	@ (8001048 <HAL_UART_RxCpltCallback+0xfc>)
 8000f5e:	483b      	ldr	r0, [pc, #236]	@ (800104c <HAL_UART_RxCpltCallback+0x100>)
 8000f60:	f002 ff97 	bl	8003e92 <HAL_UART_Receive_IT>
 8000f64:	4603      	mov	r3, r0
 8000f66:	461a      	mov	r2, r3
 8000f68:	4b39      	ldr	r3, [pc, #228]	@ (8001050 <HAL_UART_RxCpltCallback+0x104>)
 8000f6a:	701a      	strb	r2, [r3, #0]
  if (ReceiveCharacter == '0') {
 8000f6c:	4b36      	ldr	r3, [pc, #216]	@ (8001048 <HAL_UART_RxCpltCallback+0xfc>)
 8000f6e:	781b      	ldrb	r3, [r3, #0]
 8000f70:	2b30      	cmp	r3, #48	@ 0x30
 8000f72:	d125      	bne.n	8000fc0 <HAL_UART_RxCpltCallback+0x74>
	  float Voltage;
	  float Current;
	  float Power;
//	  Read_Sensor_ValuesACS37800(NUMBER_OF_CONVERTERS - 1, &Voltage, &Current);
	  Get_Sensor_Values_for_Panel_hc_test(NUMBER_OF_CONVERTERS - 1, &Voltage, &Current);
 8000f74:	f107 0210 	add.w	r2, r7, #16
 8000f78:	f107 0314 	add.w	r3, r7, #20
 8000f7c:	4619      	mov	r1, r3
 8000f7e:	2000      	movs	r0, #0
 8000f80:	f000 fa1e 	bl	80013c0 <Get_Sensor_Values_for_Panel_hc_test>
//	  Voltage = 20;
//	  Current = 30;
	  Power = Calculate_Power_hc(Voltage, Current);
 8000f84:	edd7 7a05 	vldr	s15, [r7, #20]
 8000f88:	ed97 7a04 	vldr	s14, [r7, #16]
 8000f8c:	eef0 0a47 	vmov.f32	s1, s14
 8000f90:	eeb0 0a67 	vmov.f32	s0, s15
 8000f94:	f7ff fd59 	bl	8000a4a <Calculate_Power_hc>
 8000f98:	eef0 7a40 	vmov.f32	s15, s0
 8000f9c:	edc7 7a03 	vstr	s15, [r7, #12]
	  memcpy(OutputBuffer, &Voltage, 4);
 8000fa0:	697b      	ldr	r3, [r7, #20]
 8000fa2:	4a2c      	ldr	r2, [pc, #176]	@ (8001054 <HAL_UART_RxCpltCallback+0x108>)
 8000fa4:	6013      	str	r3, [r2, #0]
	  memcpy(OutputBuffer + 4, &Current, 4);
 8000fa6:	4a2c      	ldr	r2, [pc, #176]	@ (8001058 <HAL_UART_RxCpltCallback+0x10c>)
 8000fa8:	693b      	ldr	r3, [r7, #16]
 8000faa:	6013      	str	r3, [r2, #0]
	  memcpy(OutputBuffer + 8, &Power, 4);
 8000fac:	4a2b      	ldr	r2, [pc, #172]	@ (800105c <HAL_UART_RxCpltCallback+0x110>)
 8000fae:	68fb      	ldr	r3, [r7, #12]
 8000fb0:	6013      	str	r3, [r2, #0]
	  OutputBuffer[DATALENGTH] = '\0';
 8000fb2:	4b28      	ldr	r3, [pc, #160]	@ (8001054 <HAL_UART_RxCpltCallback+0x108>)
 8000fb4:	2200      	movs	r2, #0
 8000fb6:	731a      	strb	r2, [r3, #12]
	  PrintOutputData(OutputBuffer);
 8000fb8:	4826      	ldr	r0, [pc, #152]	@ (8001054 <HAL_UART_RxCpltCallback+0x108>)
 8000fba:	f000 fcb7 	bl	800192c <PrintOutputData>
 8000fbe:	e03e      	b.n	800103e <HAL_UART_RxCpltCallback+0xf2>
  }
  else if (ReceiveCharacter == '1') {
 8000fc0:	4b21      	ldr	r3, [pc, #132]	@ (8001048 <HAL_UART_RxCpltCallback+0xfc>)
 8000fc2:	781b      	ldrb	r3, [r3, #0]
 8000fc4:	2b31      	cmp	r3, #49	@ 0x31
 8000fc6:	d10a      	bne.n	8000fde <HAL_UART_RxCpltCallback+0x92>
	  sprintf((char *)OutputBuffer, "P&O");
 8000fc8:	4925      	ldr	r1, [pc, #148]	@ (8001060 <HAL_UART_RxCpltCallback+0x114>)
 8000fca:	4822      	ldr	r0, [pc, #136]	@ (8001054 <HAL_UART_RxCpltCallback+0x108>)
 8000fcc:	f003 fedc 	bl	8004d88 <siprintf>
	  PrintOutputBuffer(OutputBuffer);
 8000fd0:	4820      	ldr	r0, [pc, #128]	@ (8001054 <HAL_UART_RxCpltCallback+0x108>)
 8000fd2:	f000 fcc3 	bl	800195c <PrintOutputBuffer>
	  Current_Mode = PERTURB_AND_OBSERVE;
 8000fd6:	4b23      	ldr	r3, [pc, #140]	@ (8001064 <HAL_UART_RxCpltCallback+0x118>)
 8000fd8:	2201      	movs	r2, #1
 8000fda:	701a      	strb	r2, [r3, #0]
 8000fdc:	e02f      	b.n	800103e <HAL_UART_RxCpltCallback+0xf2>
//	  Initialize_PerturbAndObserve(NUMBER_OF_CONVERTERS, SolarPanels);
  }
  else if (ReceiveCharacter == '2') {
 8000fde:	4b1a      	ldr	r3, [pc, #104]	@ (8001048 <HAL_UART_RxCpltCallback+0xfc>)
 8000fe0:	781b      	ldrb	r3, [r3, #0]
 8000fe2:	2b32      	cmp	r3, #50	@ 0x32
 8000fe4:	d10e      	bne.n	8001004 <HAL_UART_RxCpltCallback+0xb8>
	  sprintf((char *)OutputBuffer, "HC");
 8000fe6:	4920      	ldr	r1, [pc, #128]	@ (8001068 <HAL_UART_RxCpltCallback+0x11c>)
 8000fe8:	481a      	ldr	r0, [pc, #104]	@ (8001054 <HAL_UART_RxCpltCallback+0x108>)
 8000fea:	f003 fecd 	bl	8004d88 <siprintf>
	  PrintOutputBuffer(OutputBuffer);
 8000fee:	4819      	ldr	r0, [pc, #100]	@ (8001054 <HAL_UART_RxCpltCallback+0x108>)
 8000ff0:	f000 fcb4 	bl	800195c <PrintOutputBuffer>
	  Current_Mode = HILL_CLIMBING;
 8000ff4:	4b1b      	ldr	r3, [pc, #108]	@ (8001064 <HAL_UART_RxCpltCallback+0x118>)
 8000ff6:	2202      	movs	r2, #2
 8000ff8:	701a      	strb	r2, [r3, #0]
	  Initialize_HillClimbing(NUMBER_OF_CONVERTERS, SolarPanelsMain);
 8000ffa:	491c      	ldr	r1, [pc, #112]	@ (800106c <HAL_UART_RxCpltCallback+0x120>)
 8000ffc:	2001      	movs	r0, #1
 8000ffe:	f7ff fcb3 	bl	8000968 <Initialize_HillClimbing>
 8001002:	e01c      	b.n	800103e <HAL_UART_RxCpltCallback+0xf2>
  }
  else if (ReceiveCharacter == '3') {
 8001004:	4b10      	ldr	r3, [pc, #64]	@ (8001048 <HAL_UART_RxCpltCallback+0xfc>)
 8001006:	781b      	ldrb	r3, [r3, #0]
 8001008:	2b33      	cmp	r3, #51	@ 0x33
 800100a:	d10a      	bne.n	8001022 <HAL_UART_RxCpltCallback+0xd6>
	  sprintf((char *)OutputBuffer, "SA");
 800100c:	4918      	ldr	r1, [pc, #96]	@ (8001070 <HAL_UART_RxCpltCallback+0x124>)
 800100e:	4811      	ldr	r0, [pc, #68]	@ (8001054 <HAL_UART_RxCpltCallback+0x108>)
 8001010:	f003 feba 	bl	8004d88 <siprintf>
	  PrintOutputBuffer(OutputBuffer);
 8001014:	480f      	ldr	r0, [pc, #60]	@ (8001054 <HAL_UART_RxCpltCallback+0x108>)
 8001016:	f000 fca1 	bl	800195c <PrintOutputBuffer>
	  Current_Mode = SMART_ALGORITHM;
 800101a:	4b12      	ldr	r3, [pc, #72]	@ (8001064 <HAL_UART_RxCpltCallback+0x118>)
 800101c:	2203      	movs	r2, #3
 800101e:	701a      	strb	r2, [r3, #0]
 8001020:	e00d      	b.n	800103e <HAL_UART_RxCpltCallback+0xf2>

  }
  else if (ReceiveCharacter == '4') {
 8001022:	4b09      	ldr	r3, [pc, #36]	@ (8001048 <HAL_UART_RxCpltCallback+0xfc>)
 8001024:	781b      	ldrb	r3, [r3, #0]
 8001026:	2b34      	cmp	r3, #52	@ 0x34
 8001028:	d109      	bne.n	800103e <HAL_UART_RxCpltCallback+0xf2>
	  sprintf((char *)OutputBuffer, "PS");
 800102a:	4912      	ldr	r1, [pc, #72]	@ (8001074 <HAL_UART_RxCpltCallback+0x128>)
 800102c:	4809      	ldr	r0, [pc, #36]	@ (8001054 <HAL_UART_RxCpltCallback+0x108>)
 800102e:	f003 feab 	bl	8004d88 <siprintf>
	  PrintOutputBuffer(OutputBuffer);
 8001032:	4808      	ldr	r0, [pc, #32]	@ (8001054 <HAL_UART_RxCpltCallback+0x108>)
 8001034:	f000 fc92 	bl	800195c <PrintOutputBuffer>
	  Current_Mode = SWEEP_PANELS;
 8001038:	4b0a      	ldr	r3, [pc, #40]	@ (8001064 <HAL_UART_RxCpltCallback+0x118>)
 800103a:	2204      	movs	r2, #4
 800103c:	701a      	strb	r2, [r3, #0]
//	  Reset_Converters(NUMBER_OF_CONVERTERS);
  }
}
 800103e:	3718      	adds	r7, #24
 8001040:	46bd      	mov	sp, r7
 8001042:	bd80      	pop	{r7, pc}
 8001044:	20000200 	.word	0x20000200
 8001048:	2000017c 	.word	0x2000017c
 800104c:	2000021c 	.word	0x2000021c
 8001050:	20000201 	.word	0x20000201
 8001054:	20000180 	.word	0x20000180
 8001058:	20000184 	.word	0x20000184
 800105c:	20000188 	.word	0x20000188
 8001060:	0800573c 	.word	0x0800573c
 8001064:	20000000 	.word	0x20000000
 8001068:	08005740 	.word	0x08005740
 800106c:	20000204 	.word	0x20000204
 8001070:	08005744 	.word	0x08005744
 8001074:	08005748 	.word	0x08005748

08001078 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001078:	b480      	push	{r7}
 800107a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800107c:	b672      	cpsid	i
}
 800107e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001080:	bf00      	nop
 8001082:	e7fd      	b.n	8001080 <Error_Handler+0x8>

08001084 <Determine_I2C_Bus_ACS37800>:
extern I2C_HandleTypeDef hi2c3;

const uint8_t AddressesACS37800[2] = {0x60, 0x61};

I2C_HandleTypeDef *Determine_I2C_Bus_ACS37800(uint8_t Converter_Index)
{
 8001084:	b480      	push	{r7}
 8001086:	b085      	sub	sp, #20
 8001088:	af00      	add	r7, sp, #0
 800108a:	4603      	mov	r3, r0
 800108c:	71fb      	strb	r3, [r7, #7]
	uint8_t converter_set = Converter_Index / 2;
 800108e:	79fb      	ldrb	r3, [r7, #7]
 8001090:	085b      	lsrs	r3, r3, #1
 8001092:	72fb      	strb	r3, [r7, #11]
	I2C_HandleTypeDef *I2C_Line_Address;
	switch (converter_set) {
 8001094:	7afb      	ldrb	r3, [r7, #11]
 8001096:	2b02      	cmp	r3, #2
 8001098:	d00c      	beq.n	80010b4 <Determine_I2C_Bus_ACS37800+0x30>
 800109a:	2b02      	cmp	r3, #2
 800109c:	dc0d      	bgt.n	80010ba <Determine_I2C_Bus_ACS37800+0x36>
 800109e:	2b00      	cmp	r3, #0
 80010a0:	d002      	beq.n	80010a8 <Determine_I2C_Bus_ACS37800+0x24>
 80010a2:	2b01      	cmp	r3, #1
 80010a4:	d003      	beq.n	80010ae <Determine_I2C_Bus_ACS37800+0x2a>
 80010a6:	e008      	b.n	80010ba <Determine_I2C_Bus_ACS37800+0x36>
	case 0:
		I2C_Line_Address = &hi2c1;
 80010a8:	4b07      	ldr	r3, [pc, #28]	@ (80010c8 <Determine_I2C_Bus_ACS37800+0x44>)
 80010aa:	60fb      	str	r3, [r7, #12]
		break;
 80010ac:	e005      	b.n	80010ba <Determine_I2C_Bus_ACS37800+0x36>
	case 1:
		I2C_Line_Address = &hi2c2;
 80010ae:	4b07      	ldr	r3, [pc, #28]	@ (80010cc <Determine_I2C_Bus_ACS37800+0x48>)
 80010b0:	60fb      	str	r3, [r7, #12]
		break;
 80010b2:	e002      	b.n	80010ba <Determine_I2C_Bus_ACS37800+0x36>
	case 2:
		I2C_Line_Address = &hi2c3;
 80010b4:	4b06      	ldr	r3, [pc, #24]	@ (80010d0 <Determine_I2C_Bus_ACS37800+0x4c>)
 80010b6:	60fb      	str	r3, [r7, #12]
		break;
 80010b8:	bf00      	nop
	}
	return I2C_Line_Address;
 80010ba:	68fb      	ldr	r3, [r7, #12]
}
 80010bc:	4618      	mov	r0, r3
 80010be:	3714      	adds	r7, #20
 80010c0:	46bd      	mov	sp, r7
 80010c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010c6:	4770      	bx	lr
 80010c8:	20000080 	.word	0x20000080
 80010cc:	200000d4 	.word	0x200000d4
 80010d0:	20000128 	.word	0x20000128

080010d4 <Configure_Slave_AddressACS37800>:

void Configure_Slave_AddressACS37800(uint8_t Converter_Index)
{
 80010d4:	b580      	push	{r7, lr}
 80010d6:	b086      	sub	sp, #24
 80010d8:	af00      	add	r7, sp, #0
 80010da:	4603      	mov	r3, r0
 80010dc:	71fb      	strb	r3, [r7, #7]
	HAL_StatusTypeDef HAL_Status = HAL_ERROR;
 80010de:	2301      	movs	r3, #1
 80010e0:	737b      	strb	r3, [r7, #13]
	uint32_t ReadValue = 0;
 80010e2:	2300      	movs	r3, #0
 80010e4:	613b      	str	r3, [r7, #16]
	uint32_t WriteValue = 0;
 80010e6:	2300      	movs	r3, #0
 80010e8:	617b      	str	r3, [r7, #20]
	uint8_t Address = I2C_ADDR_REGISTER + EEPROM;
 80010ea:	230f      	movs	r3, #15
 80010ec:	73fb      	strb	r3, [r7, #15]
	uint8_t address_type = Converter_Index % 2;
 80010ee:	79fb      	ldrb	r3, [r7, #7]
 80010f0:	f003 0301 	and.w	r3, r3, #1
 80010f4:	73bb      	strb	r3, [r7, #14]
	ReadValue = ReadBytesACS37800(Converter_Index, Address, &HAL_Status);
 80010f6:	f107 020d 	add.w	r2, r7, #13
 80010fa:	7bf9      	ldrb	r1, [r7, #15]
 80010fc:	79fb      	ldrb	r3, [r7, #7]
 80010fe:	4618      	mov	r0, r3
 8001100:	f000 fa3c 	bl	800157c <ReadBytesACS37800>
 8001104:	6138      	str	r0, [r7, #16]
	WriteValue = (ReadValue & I2C_ADDR_MASK) + ((uint32_t) AddressesACS37800[address_type] << I2C_SLV_ADDR);
 8001106:	693b      	ldr	r3, [r7, #16]
 8001108:	f423 72fe 	bic.w	r2, r3, #508	@ 0x1fc
 800110c:	7bbb      	ldrb	r3, [r7, #14]
 800110e:	4929      	ldr	r1, [pc, #164]	@ (80011b4 <Configure_Slave_AddressACS37800+0xe0>)
 8001110:	5ccb      	ldrb	r3, [r1, r3]
 8001112:	009b      	lsls	r3, r3, #2
 8001114:	4413      	add	r3, r2
 8001116:	617b      	str	r3, [r7, #20]
	if (HAL_Status != HAL_OK) {
 8001118:	7b7b      	ldrb	r3, [r7, #13]
 800111a:	2b00      	cmp	r3, #0
 800111c:	d01c      	beq.n	8001158 <Configure_Slave_AddressACS37800+0x84>
		Converter_Index = Converter_Index + (Converter_Index % 2 ? -1 : 1);
 800111e:	79fb      	ldrb	r3, [r7, #7]
 8001120:	f003 0301 	and.w	r3, r3, #1
 8001124:	b2db      	uxtb	r3, r3
 8001126:	2b00      	cmp	r3, #0
 8001128:	d001      	beq.n	800112e <Configure_Slave_AddressACS37800+0x5a>
 800112a:	22ff      	movs	r2, #255	@ 0xff
 800112c:	e000      	b.n	8001130 <Configure_Slave_AddressACS37800+0x5c>
 800112e:	2201      	movs	r2, #1
 8001130:	79fb      	ldrb	r3, [r7, #7]
 8001132:	4413      	add	r3, r2
 8001134:	71fb      	strb	r3, [r7, #7]
		ReadValue = ReadBytesACS37800(Converter_Index, Address, &HAL_Status);
 8001136:	f107 020d 	add.w	r2, r7, #13
 800113a:	7bf9      	ldrb	r1, [r7, #15]
 800113c:	79fb      	ldrb	r3, [r7, #7]
 800113e:	4618      	mov	r0, r3
 8001140:	f000 fa1c 	bl	800157c <ReadBytesACS37800>
 8001144:	6138      	str	r0, [r7, #16]
		WriteValue = (ReadValue & I2C_ADDR_MASK) + ((uint32_t) AddressesACS37800[address_type] << I2C_SLV_ADDR);
 8001146:	693b      	ldr	r3, [r7, #16]
 8001148:	f423 72fe 	bic.w	r2, r3, #508	@ 0x1fc
 800114c:	7bbb      	ldrb	r3, [r7, #14]
 800114e:	4919      	ldr	r1, [pc, #100]	@ (80011b4 <Configure_Slave_AddressACS37800+0xe0>)
 8001150:	5ccb      	ldrb	r3, [r1, r3]
 8001152:	009b      	lsls	r3, r3, #2
 8001154:	4413      	add	r3, r2
 8001156:	617b      	str	r3, [r7, #20]
	}
	HAL_Status = WriteBytesACS37800(Converter_Index, ACCESS_CODE_REGISTER, ACCESS_CODE);
 8001158:	79fb      	ldrb	r3, [r7, #7]
 800115a:	4a17      	ldr	r2, [pc, #92]	@ (80011b8 <Configure_Slave_AddressACS37800+0xe4>)
 800115c:	212f      	movs	r1, #47	@ 0x2f
 800115e:	4618      	mov	r0, r3
 8001160:	f000 f9ae 	bl	80014c0 <WriteBytesACS37800>
 8001164:	4603      	mov	r3, r0
 8001166:	737b      	strb	r3, [r7, #13]
	HAL_Status = WriteBytesACS37800(Converter_Index, Address, WriteValue);
 8001168:	7bf9      	ldrb	r1, [r7, #15]
 800116a:	79fb      	ldrb	r3, [r7, #7]
 800116c:	697a      	ldr	r2, [r7, #20]
 800116e:	4618      	mov	r0, r3
 8001170:	f000 f9a6 	bl	80014c0 <WriteBytesACS37800>
 8001174:	4603      	mov	r3, r0
 8001176:	737b      	strb	r3, [r7, #13]
	if (HAL_Status != HAL_OK) {
 8001178:	7b7b      	ldrb	r3, [r7, #13]
 800117a:	2b00      	cmp	r3, #0
 800117c:	d001      	beq.n	8001182 <Configure_Slave_AddressACS37800+0xae>
		Error_Handler();
 800117e:	f7ff ff7b 	bl	8001078 <Error_Handler>
	}
	Disable_Peripheral_Addressing_CircuitACS37800(Converter_Index);
 8001182:	79fb      	ldrb	r3, [r7, #7]
 8001184:	4618      	mov	r0, r3
 8001186:	f000 f88f 	bl	80012a8 <Disable_Peripheral_Addressing_CircuitACS37800>
	Update_Sample_Values(Converter_Index);
 800118a:	79fb      	ldrb	r3, [r7, #7]
 800118c:	4618      	mov	r0, r3
 800118e:	f000 f867 	bl	8001260 <Update_Sample_Values>
	Bypass_N_EN_ACS37800(Converter_Index);
 8001192:	79fb      	ldrb	r3, [r7, #7]
 8001194:	4618      	mov	r0, r3
 8001196:	f000 f811 	bl	80011bc <Bypass_N_EN_ACS37800>
	Set_N_ACS37800(Converter_Index);
 800119a:	79fb      	ldrb	r3, [r7, #7]
 800119c:	4618      	mov	r0, r3
 800119e:	f000 f835 	bl	800120c <Set_N_ACS37800>
	Current_Average_Select_EnableACS37800(Converter_Index);
 80011a2:	79fb      	ldrb	r3, [r7, #7]
 80011a4:	4618      	mov	r0, r3
 80011a6:	f000 f95d 	bl	8001464 <Current_Average_Select_EnableACS37800>
}
 80011aa:	bf00      	nop
 80011ac:	3718      	adds	r7, #24
 80011ae:	46bd      	mov	sp, r7
 80011b0:	bd80      	pop	{r7, pc}
 80011b2:	bf00      	nop
 80011b4:	08005760 	.word	0x08005760
 80011b8:	4f70656e 	.word	0x4f70656e

080011bc <Bypass_N_EN_ACS37800>:

void Bypass_N_EN_ACS37800(uint8_t Converter_Index)
{
 80011bc:	b580      	push	{r7, lr}
 80011be:	b086      	sub	sp, #24
 80011c0:	af00      	add	r7, sp, #0
 80011c2:	4603      	mov	r3, r0
 80011c4:	71fb      	strb	r3, [r7, #7]
	uint32_t ReadValue = 0;
 80011c6:	2300      	movs	r3, #0
 80011c8:	617b      	str	r3, [r7, #20]
	uint32_t WriteValue = 0;
 80011ca:	2300      	movs	r3, #0
 80011cc:	613b      	str	r3, [r7, #16]
	HAL_StatusTypeDef HAL_Status = HAL_ERROR;
 80011ce:	2301      	movs	r3, #1
 80011d0:	73bb      	strb	r3, [r7, #14]
	uint8_t Address = I2C_ADDR_REGISTER + EEPROM;
 80011d2:	230f      	movs	r3, #15
 80011d4:	73fb      	strb	r3, [r7, #15]
	ReadValue = ReadBytesACS37800(Converter_Index, Address, &HAL_Status);
 80011d6:	f107 020e 	add.w	r2, r7, #14
 80011da:	7bf9      	ldrb	r1, [r7, #15]
 80011dc:	79fb      	ldrb	r3, [r7, #7]
 80011de:	4618      	mov	r0, r3
 80011e0:	f000 f9cc 	bl	800157c <ReadBytesACS37800>
 80011e4:	6178      	str	r0, [r7, #20]
	if (HAL_Status == HAL_OK) {
 80011e6:	7bbb      	ldrb	r3, [r7, #14]
 80011e8:	2b00      	cmp	r3, #0
 80011ea:	d10b      	bne.n	8001204 <Bypass_N_EN_ACS37800+0x48>
		WriteValue = ReadValue | (1 << BYPASS_N_EN);
 80011ec:	697b      	ldr	r3, [r7, #20]
 80011ee:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80011f2:	613b      	str	r3, [r7, #16]
		HAL_Status = WriteBytesACS37800(Converter_Index, Address, WriteValue);
 80011f4:	7bf9      	ldrb	r1, [r7, #15]
 80011f6:	79fb      	ldrb	r3, [r7, #7]
 80011f8:	693a      	ldr	r2, [r7, #16]
 80011fa:	4618      	mov	r0, r3
 80011fc:	f000 f960 	bl	80014c0 <WriteBytesACS37800>
 8001200:	4603      	mov	r3, r0
 8001202:	73bb      	strb	r3, [r7, #14]
	}
}
 8001204:	bf00      	nop
 8001206:	3718      	adds	r7, #24
 8001208:	46bd      	mov	sp, r7
 800120a:	bd80      	pop	{r7, pc}

0800120c <Set_N_ACS37800>:

void Set_N_ACS37800(uint8_t Converter_Index)
{
 800120c:	b580      	push	{r7, lr}
 800120e:	b086      	sub	sp, #24
 8001210:	af00      	add	r7, sp, #0
 8001212:	4603      	mov	r3, r0
 8001214:	71fb      	strb	r3, [r7, #7]
	uint32_t ReadValue = 0;
 8001216:	2300      	movs	r3, #0
 8001218:	617b      	str	r3, [r7, #20]
	uint32_t WriteValue = 0;
 800121a:	2300      	movs	r3, #0
 800121c:	613b      	str	r3, [r7, #16]
	HAL_StatusTypeDef HAL_Status = HAL_ERROR;
 800121e:	2301      	movs	r3, #1
 8001220:	73bb      	strb	r3, [r7, #14]
	uint8_t Address = I2C_ADDR_REGISTER + EEPROM;
 8001222:	230f      	movs	r3, #15
 8001224:	73fb      	strb	r3, [r7, #15]
	ReadValue = ReadBytesACS37800(Converter_Index, Address, &HAL_Status);
 8001226:	f107 020e 	add.w	r2, r7, #14
 800122a:	7bf9      	ldrb	r1, [r7, #15]
 800122c:	79fb      	ldrb	r3, [r7, #7]
 800122e:	4618      	mov	r0, r3
 8001230:	f000 f9a4 	bl	800157c <ReadBytesACS37800>
 8001234:	6178      	str	r0, [r7, #20]
	if (HAL_Status == HAL_OK) {
 8001236:	7bbb      	ldrb	r3, [r7, #14]
 8001238:	2b00      	cmp	r3, #0
 800123a:	d10d      	bne.n	8001258 <Set_N_ACS37800+0x4c>
		WriteValue = (ReadValue & N_MASK) + (NUMBER_OF_SAMPLES_FOR_RMS << N);
 800123c:	697b      	ldr	r3, [r7, #20]
 800123e:	f3c3 030d 	ubfx	r3, r3, #0, #14
 8001242:	f503 13fe 	add.w	r3, r3, #2080768	@ 0x1fc000
 8001246:	613b      	str	r3, [r7, #16]
		HAL_Status = WriteBytesACS37800(Converter_Index, Address, WriteValue);
 8001248:	7bf9      	ldrb	r1, [r7, #15]
 800124a:	79fb      	ldrb	r3, [r7, #7]
 800124c:	693a      	ldr	r2, [r7, #16]
 800124e:	4618      	mov	r0, r3
 8001250:	f000 f936 	bl	80014c0 <WriteBytesACS37800>
 8001254:	4603      	mov	r3, r0
 8001256:	73bb      	strb	r3, [r7, #14]
	}
}
 8001258:	bf00      	nop
 800125a:	3718      	adds	r7, #24
 800125c:	46bd      	mov	sp, r7
 800125e:	bd80      	pop	{r7, pc}

08001260 <Update_Sample_Values>:

void Update_Sample_Values(uint8_t Converter_Index)
{
 8001260:	b580      	push	{r7, lr}
 8001262:	b086      	sub	sp, #24
 8001264:	af00      	add	r7, sp, #0
 8001266:	4603      	mov	r3, r0
 8001268:	71fb      	strb	r3, [r7, #7]
	HAL_StatusTypeDef HAL_Status = HAL_ERROR;
 800126a:	2301      	movs	r3, #1
 800126c:	73bb      	strb	r3, [r7, #14]
	uint32_t ReadValue = 0;
 800126e:	2300      	movs	r3, #0
 8001270:	617b      	str	r3, [r7, #20]
	uint32_t WriteValue = 0;
 8001272:	2300      	movs	r3, #0
 8001274:	613b      	str	r3, [r7, #16]
	uint8_t Address = NUM_AVG_REGISTER + EEPROM;
 8001276:	230c      	movs	r3, #12
 8001278:	73fb      	strb	r3, [r7, #15]
	ReadValue = ReadBytesACS37800(Converter_Index, Address, &HAL_Status);
 800127a:	f107 020e 	add.w	r2, r7, #14
 800127e:	7bf9      	ldrb	r1, [r7, #15]
 8001280:	79fb      	ldrb	r3, [r7, #7]
 8001282:	4618      	mov	r0, r3
 8001284:	f000 f97a 	bl	800157c <ReadBytesACS37800>
 8001288:	6178      	str	r0, [r7, #20]
	WriteValue = (ReadValue & NUM_AVG_MASK) + NUMBER_OF_SAMPLES_FOR_RMS;
 800128a:	697b      	ldr	r3, [r7, #20]
 800128c:	f023 0307 	bic.w	r3, r3, #7
 8001290:	337f      	adds	r3, #127	@ 0x7f
 8001292:	613b      	str	r3, [r7, #16]
	WriteBytesACS37800(Converter_Index, Address, WriteValue);
 8001294:	7bf9      	ldrb	r1, [r7, #15]
 8001296:	79fb      	ldrb	r3, [r7, #7]
 8001298:	693a      	ldr	r2, [r7, #16]
 800129a:	4618      	mov	r0, r3
 800129c:	f000 f910 	bl	80014c0 <WriteBytesACS37800>
}
 80012a0:	bf00      	nop
 80012a2:	3718      	adds	r7, #24
 80012a4:	46bd      	mov	sp, r7
 80012a6:	bd80      	pop	{r7, pc}

080012a8 <Disable_Peripheral_Addressing_CircuitACS37800>:

void Disable_Peripheral_Addressing_CircuitACS37800(uint8_t Converter_Index)
{
 80012a8:	b580      	push	{r7, lr}
 80012aa:	b086      	sub	sp, #24
 80012ac:	af00      	add	r7, sp, #0
 80012ae:	4603      	mov	r3, r0
 80012b0:	71fb      	strb	r3, [r7, #7]
	uint32_t ReadValue = 0;
 80012b2:	2300      	movs	r3, #0
 80012b4:	617b      	str	r3, [r7, #20]
	uint32_t WriteValue = 0;
 80012b6:	2300      	movs	r3, #0
 80012b8:	613b      	str	r3, [r7, #16]
	HAL_StatusTypeDef HAL_Status = HAL_ERROR;
 80012ba:	2301      	movs	r3, #1
 80012bc:	73bb      	strb	r3, [r7, #14]
	uint8_t Address = I2C_ADDR_REGISTER + EEPROM;
 80012be:	230f      	movs	r3, #15
 80012c0:	73fb      	strb	r3, [r7, #15]
	ReadValue = ReadBytesACS37800(Converter_Index, Address, &HAL_Status);
 80012c2:	f107 020e 	add.w	r2, r7, #14
 80012c6:	7bf9      	ldrb	r1, [r7, #15]
 80012c8:	79fb      	ldrb	r3, [r7, #7]
 80012ca:	4618      	mov	r0, r3
 80012cc:	f000 f956 	bl	800157c <ReadBytesACS37800>
 80012d0:	6178      	str	r0, [r7, #20]
	if (HAL_Status == HAL_OK) {
 80012d2:	7bbb      	ldrb	r3, [r7, #14]
 80012d4:	2b00      	cmp	r3, #0
 80012d6:	d10d      	bne.n	80012f4 <Disable_Peripheral_Addressing_CircuitACS37800+0x4c>
		WriteValue = (ReadValue & I2C_DIS_MASK) + (1 << I2C_DIS_SLV_ADDR);
 80012d8:	697b      	ldr	r3, [r7, #20]
 80012da:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 80012de:	f503 7300 	add.w	r3, r3, #512	@ 0x200
 80012e2:	613b      	str	r3, [r7, #16]
		HAL_Status = WriteBytesACS37800(Converter_Index, Address, WriteValue);
 80012e4:	7bf9      	ldrb	r1, [r7, #15]
 80012e6:	79fb      	ldrb	r3, [r7, #7]
 80012e8:	693a      	ldr	r2, [r7, #16]
 80012ea:	4618      	mov	r0, r3
 80012ec:	f000 f8e8 	bl	80014c0 <WriteBytesACS37800>
 80012f0:	4603      	mov	r3, r0
 80012f2:	73bb      	strb	r3, [r7, #14]
	}
}
 80012f4:	bf00      	nop
 80012f6:	3718      	adds	r7, #24
 80012f8:	46bd      	mov	sp, r7
 80012fa:	bd80      	pop	{r7, pc}

080012fc <Calculate_Voltage_RMSACS37800>:

uint32_t Calculate_Voltage_RMSACS37800(int16_t Vin)
{
 80012fc:	b480      	push	{r7}
 80012fe:	b085      	sub	sp, #20
 8001300:	af00      	add	r7, sp, #0
 8001302:	4603      	mov	r3, r0
 8001304:	80fb      	strh	r3, [r7, #6]
	float Vin_as_float = Vin / (1 << 14);
 8001306:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800130a:	2b00      	cmp	r3, #0
 800130c:	da02      	bge.n	8001314 <Calculate_Voltage_RMSACS37800+0x18>
 800130e:	f503 537f 	add.w	r3, r3, #16320	@ 0x3fc0
 8001312:	333f      	adds	r3, #63	@ 0x3f
 8001314:	139b      	asrs	r3, r3, #14
 8001316:	b21b      	sxth	r3, r3
 8001318:	ee07 3a90 	vmov	s15, r3
 800131c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001320:	edc7 7a03 	vstr	s15, [r7, #12]
	uint32_t V_line = (Vin_as_float * (RISO + RSENSE)) / RSENSE;
 8001324:	edd7 7a03 	vldr	s15, [r7, #12]
 8001328:	ee77 7aa7 	vadd.f32	s15, s15, s15
 800132c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001330:	ee17 3a90 	vmov	r3, s15
 8001334:	60bb      	str	r3, [r7, #8]
	return V_line;
 8001336:	68bb      	ldr	r3, [r7, #8]
}
 8001338:	4618      	mov	r0, r3
 800133a:	3714      	adds	r7, #20
 800133c:	46bd      	mov	sp, r7
 800133e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001342:	4770      	bx	lr

08001344 <Calculate_Current_RMSACS37800>:

uint32_t Calculate_Current_RMSACS37800(int16_t Iin, int16_t Vin, float V_line)
{
 8001344:	b480      	push	{r7}
 8001346:	b087      	sub	sp, #28
 8001348:	af00      	add	r7, sp, #0
 800134a:	4603      	mov	r3, r0
 800134c:	460a      	mov	r2, r1
 800134e:	ed87 0a00 	vstr	s0, [r7]
 8001352:	80fb      	strh	r3, [r7, #6]
 8001354:	4613      	mov	r3, r2
 8001356:	80bb      	strh	r3, [r7, #4]
	float Vin_as_float = Vin / (1 << 14);
 8001358:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 800135c:	2b00      	cmp	r3, #0
 800135e:	da02      	bge.n	8001366 <Calculate_Current_RMSACS37800+0x22>
 8001360:	f503 537f 	add.w	r3, r3, #16320	@ 0x3fc0
 8001364:	333f      	adds	r3, #63	@ 0x3f
 8001366:	139b      	asrs	r3, r3, #14
 8001368:	b21b      	sxth	r3, r3
 800136a:	ee07 3a90 	vmov	s15, r3
 800136e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001372:	edc7 7a05 	vstr	s15, [r7, #20]
	float Iin_as_float = Iin / (1 << 14);
 8001376:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800137a:	2b00      	cmp	r3, #0
 800137c:	da02      	bge.n	8001384 <Calculate_Current_RMSACS37800+0x40>
 800137e:	f503 537f 	add.w	r3, r3, #16320	@ 0x3fc0
 8001382:	333f      	adds	r3, #63	@ 0x3f
 8001384:	139b      	asrs	r3, r3, #14
 8001386:	b21b      	sxth	r3, r3
 8001388:	ee07 3a90 	vmov	s15, r3
 800138c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001390:	edc7 7a04 	vstr	s15, [r7, #16]
	uint32_t I_line = Iin_as_float * (V_line / Vin_as_float);
 8001394:	edd7 6a00 	vldr	s13, [r7]
 8001398:	edd7 7a05 	vldr	s15, [r7, #20]
 800139c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80013a0:	edd7 7a04 	vldr	s15, [r7, #16]
 80013a4:	ee67 7a27 	vmul.f32	s15, s14, s15
 80013a8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80013ac:	ee17 3a90 	vmov	r3, s15
 80013b0:	60fb      	str	r3, [r7, #12]
	return I_line;
 80013b2:	68fb      	ldr	r3, [r7, #12]
}
 80013b4:	4618      	mov	r0, r3
 80013b6:	371c      	adds	r7, #28
 80013b8:	46bd      	mov	sp, r7
 80013ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013be:	4770      	bx	lr

080013c0 <Get_Sensor_Values_for_Panel_hc_test>:

void Get_Sensor_Values_for_Panel_hc_test(uint8_t Converter_Index, float *Voltage, float *Current)
{
 80013c0:	b480      	push	{r7}
 80013c2:	b085      	sub	sp, #20
 80013c4:	af00      	add	r7, sp, #0
 80013c6:	4603      	mov	r3, r0
 80013c8:	60b9      	str	r1, [r7, #8]
 80013ca:	607a      	str	r2, [r7, #4]
 80013cc:	73fb      	strb	r3, [r7, #15]
	*Voltage = 1.6;
 80013ce:	68bb      	ldr	r3, [r7, #8]
 80013d0:	4a05      	ldr	r2, [pc, #20]	@ (80013e8 <Get_Sensor_Values_for_Panel_hc_test+0x28>)
 80013d2:	601a      	str	r2, [r3, #0]
	*Current = 7.3;
 80013d4:	687b      	ldr	r3, [r7, #4]
 80013d6:	4a05      	ldr	r2, [pc, #20]	@ (80013ec <Get_Sensor_Values_for_Panel_hc_test+0x2c>)
 80013d8:	601a      	str	r2, [r3, #0]
}
 80013da:	bf00      	nop
 80013dc:	3714      	adds	r7, #20
 80013de:	46bd      	mov	sp, r7
 80013e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013e4:	4770      	bx	lr
 80013e6:	bf00      	nop
 80013e8:	3fcccccd 	.word	0x3fcccccd
 80013ec:	40e9999a 	.word	0x40e9999a

080013f0 <Read_Sensor_ValuesACS37800>:

void Read_Sensor_ValuesACS37800(uint8_t Converter_Index, float *Voltage, float *Current)
{
 80013f0:	b580      	push	{r7, lr}
 80013f2:	b088      	sub	sp, #32
 80013f4:	af00      	add	r7, sp, #0
 80013f6:	4603      	mov	r3, r0
 80013f8:	60b9      	str	r1, [r7, #8]
 80013fa:	607a      	str	r2, [r7, #4]
 80013fc:	73fb      	strb	r3, [r7, #15]
	HAL_StatusTypeDef HAL_Status = HAL_ERROR;
 80013fe:	2301      	movs	r3, #1
 8001400:	75fb      	strb	r3, [r7, #23]
	uint32_t ReadValue;
	int16_t Vin;
	int16_t Iin;
	ReadValue = ReadBytesACS37800(Converter_Index, RMS_REGISTER, &HAL_Status);
 8001402:	f107 0217 	add.w	r2, r7, #23
 8001406:	7bfb      	ldrb	r3, [r7, #15]
 8001408:	2120      	movs	r1, #32
 800140a:	4618      	mov	r0, r3
 800140c:	f000 f8b6 	bl	800157c <ReadBytesACS37800>
 8001410:	61f8      	str	r0, [r7, #28]
	Vin = ReadValue & 0xffff;
 8001412:	69fb      	ldr	r3, [r7, #28]
 8001414:	837b      	strh	r3, [r7, #26]
	Iin = (ReadValue >> 16) & 0xffff;
 8001416:	69fb      	ldr	r3, [r7, #28]
 8001418:	0c1b      	lsrs	r3, r3, #16
 800141a:	833b      	strh	r3, [r7, #24]
	*Voltage = Calculate_Voltage_RMSACS37800(Vin);
 800141c:	f9b7 301a 	ldrsh.w	r3, [r7, #26]
 8001420:	4618      	mov	r0, r3
 8001422:	f7ff ff6b 	bl	80012fc <Calculate_Voltage_RMSACS37800>
 8001426:	ee07 0a90 	vmov	s15, r0
 800142a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800142e:	68bb      	ldr	r3, [r7, #8]
 8001430:	edc3 7a00 	vstr	s15, [r3]
	*Current = Calculate_Current_RMSACS37800(Iin, Vin, *Voltage);
 8001434:	68bb      	ldr	r3, [r7, #8]
 8001436:	edd3 7a00 	vldr	s15, [r3]
 800143a:	f9b7 201a 	ldrsh.w	r2, [r7, #26]
 800143e:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 8001442:	eeb0 0a67 	vmov.f32	s0, s15
 8001446:	4611      	mov	r1, r2
 8001448:	4618      	mov	r0, r3
 800144a:	f7ff ff7b 	bl	8001344 <Calculate_Current_RMSACS37800>
 800144e:	ee07 0a90 	vmov	s15, r0
 8001452:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001456:	687b      	ldr	r3, [r7, #4]
 8001458:	edc3 7a00 	vstr	s15, [r3]
}
 800145c:	bf00      	nop
 800145e:	3720      	adds	r7, #32
 8001460:	46bd      	mov	sp, r7
 8001462:	bd80      	pop	{r7, pc}

08001464 <Current_Average_Select_EnableACS37800>:
		Error_Handler();
	}
}

void Current_Average_Select_EnableACS37800(uint8_t Converter_Index)
{
 8001464:	b580      	push	{r7, lr}
 8001466:	b086      	sub	sp, #24
 8001468:	af00      	add	r7, sp, #0
 800146a:	4603      	mov	r3, r0
 800146c:	71fb      	strb	r3, [r7, #7]
	HAL_StatusTypeDef HAL_Status = HAL_ERROR;
 800146e:	2301      	movs	r3, #1
 8001470:	72fb      	strb	r3, [r7, #11]
	uint8_t Address = SEL_REGISTER + EEPROM;
 8001472:	230b      	movs	r3, #11
 8001474:	75fb      	strb	r3, [r7, #23]
	uint32_t ReadValue;
	uint32_t WriteValue;
	ReadValue = ReadBytesACS37800(Converter_Index, Address, &HAL_Status);
 8001476:	f107 020b 	add.w	r2, r7, #11
 800147a:	7df9      	ldrb	r1, [r7, #23]
 800147c:	79fb      	ldrb	r3, [r7, #7]
 800147e:	4618      	mov	r0, r3
 8001480:	f000 f87c 	bl	800157c <ReadBytesACS37800>
 8001484:	6138      	str	r0, [r7, #16]
	if (HAL_Status != HAL_OK) {
 8001486:	7afb      	ldrb	r3, [r7, #11]
 8001488:	2b00      	cmp	r3, #0
 800148a:	d001      	beq.n	8001490 <Current_Average_Select_EnableACS37800+0x2c>
		Error_Handler();
 800148c:	f7ff fdf4 	bl	8001078 <Error_Handler>
	}
	WriteValue = (ReadValue & SEL_MASK) + (1 << IAVGSELEN);
 8001490:	693b      	ldr	r3, [r7, #16]
 8001492:	f423 0380 	bic.w	r3, r3, #4194304	@ 0x400000
 8001496:	f503 0380 	add.w	r3, r3, #4194304	@ 0x400000
 800149a:	60fb      	str	r3, [r7, #12]
	HAL_Status = WriteBytesACS37800(Converter_Index, Address, WriteValue);
 800149c:	7df9      	ldrb	r1, [r7, #23]
 800149e:	79fb      	ldrb	r3, [r7, #7]
 80014a0:	68fa      	ldr	r2, [r7, #12]
 80014a2:	4618      	mov	r0, r3
 80014a4:	f000 f80c 	bl	80014c0 <WriteBytesACS37800>
 80014a8:	4603      	mov	r3, r0
 80014aa:	72fb      	strb	r3, [r7, #11]
	if (HAL_Status != HAL_OK) {
 80014ac:	7afb      	ldrb	r3, [r7, #11]
 80014ae:	2b00      	cmp	r3, #0
 80014b0:	d001      	beq.n	80014b6 <Current_Average_Select_EnableACS37800+0x52>
		Error_Handler();
 80014b2:	f7ff fde1 	bl	8001078 <Error_Handler>
	}
}
 80014b6:	bf00      	nop
 80014b8:	3718      	adds	r7, #24
 80014ba:	46bd      	mov	sp, r7
 80014bc:	bd80      	pop	{r7, pc}
	...

080014c0 <WriteBytesACS37800>:

HAL_StatusTypeDef WriteBytesACS37800(uint8_t Converter_Index, uint8_t Register_Address, uint32_t WriteData)
{
 80014c0:	b580      	push	{r7, lr}
 80014c2:	b08a      	sub	sp, #40	@ 0x28
 80014c4:	af02      	add	r7, sp, #8
 80014c6:	4603      	mov	r3, r0
 80014c8:	603a      	str	r2, [r7, #0]
 80014ca:	71fb      	strb	r3, [r7, #7]
 80014cc:	460b      	mov	r3, r1
 80014ce:	71bb      	strb	r3, [r7, #6]
	uint8_t address_type = Converter_Index % 2;
 80014d0:	79fb      	ldrb	r3, [r7, #7]
 80014d2:	f003 0301 	and.w	r3, r3, #1
 80014d6:	76fb      	strb	r3, [r7, #27]
	I2C_HandleTypeDef *I2C_Line_Address = Determine_I2C_Bus_ACS37800(Converter_Index);
 80014d8:	79fb      	ldrb	r3, [r7, #7]
 80014da:	4618      	mov	r0, r3
 80014dc:	f7ff fdd2 	bl	8001084 <Determine_I2C_Bus_ACS37800>
 80014e0:	6178      	str	r0, [r7, #20]
	uint8_t Device_Address = AddressesACS37800[address_type] << 1;
 80014e2:	7efb      	ldrb	r3, [r7, #27]
 80014e4:	4a24      	ldr	r2, [pc, #144]	@ (8001578 <WriteBytesACS37800+0xb8>)
 80014e6:	5cd3      	ldrb	r3, [r2, r3]
 80014e8:	005b      	lsls	r3, r3, #1
 80014ea:	74fb      	strb	r3, [r7, #19]
	uint8_t BytesToSend[5];
	BytesToSend[0] = Register_Address;
 80014ec:	79bb      	ldrb	r3, [r7, #6]
 80014ee:	733b      	strb	r3, [r7, #12]
	for (int i = 0; i < 4; i++) {
 80014f0:	2300      	movs	r3, #0
 80014f2:	61fb      	str	r3, [r7, #28]
 80014f4:	e00d      	b.n	8001512 <WriteBytesACS37800+0x52>
		BytesToSend[i + 1] = (uint8_t) (WriteData >> (8 * i)) & 0xff;
 80014f6:	69fb      	ldr	r3, [r7, #28]
 80014f8:	00db      	lsls	r3, r3, #3
 80014fa:	683a      	ldr	r2, [r7, #0]
 80014fc:	40da      	lsrs	r2, r3
 80014fe:	69fb      	ldr	r3, [r7, #28]
 8001500:	3301      	adds	r3, #1
 8001502:	b2d2      	uxtb	r2, r2
 8001504:	3320      	adds	r3, #32
 8001506:	443b      	add	r3, r7
 8001508:	f803 2c14 	strb.w	r2, [r3, #-20]
	for (int i = 0; i < 4; i++) {
 800150c:	69fb      	ldr	r3, [r7, #28]
 800150e:	3301      	adds	r3, #1
 8001510:	61fb      	str	r3, [r7, #28]
 8001512:	69fb      	ldr	r3, [r7, #28]
 8001514:	2b03      	cmp	r3, #3
 8001516:	ddee      	ble.n	80014f6 <WriteBytesACS37800+0x36>
	}
	HAL_StatusTypeDef HAL_Status = HAL_ERROR;
 8001518:	2301      	movs	r3, #1
 800151a:	74bb      	strb	r3, [r7, #18]
	HAL_Status = HAL_I2C_Master_Transmit(I2C_Line_Address, Device_Address, BytesToSend, 5, HAL_MAX_DELAY);
 800151c:	7cfb      	ldrb	r3, [r7, #19]
 800151e:	b299      	uxth	r1, r3
 8001520:	f107 020c 	add.w	r2, r7, #12
 8001524:	f04f 33ff 	mov.w	r3, #4294967295
 8001528:	9300      	str	r3, [sp, #0]
 800152a:	2305      	movs	r3, #5
 800152c:	6978      	ldr	r0, [r7, #20]
 800152e:	f000 ff99 	bl	8002464 <HAL_I2C_Master_Transmit>
 8001532:	4603      	mov	r3, r0
 8001534:	74bb      	strb	r3, [r7, #18]
	if (HAL_Status != HAL_OK) {
 8001536:	7cbb      	ldrb	r3, [r7, #18]
 8001538:	2b00      	cmp	r3, #0
 800153a:	d001      	beq.n	8001540 <WriteBytesACS37800+0x80>
		return HAL_Status;
 800153c:	7cbb      	ldrb	r3, [r7, #18]
 800153e:	e017      	b.n	8001570 <WriteBytesACS37800+0xb0>
//		Error_Handler();
	}
	while (HAL_I2C_IsDeviceReady(I2C_Line_Address, Device_Address, 1, HAL_MAX_DELAY));
 8001540:	bf00      	nop
 8001542:	7cfb      	ldrb	r3, [r7, #19]
 8001544:	b299      	uxth	r1, r3
 8001546:	f04f 33ff 	mov.w	r3, #4294967295
 800154a:	2201      	movs	r2, #1
 800154c:	6978      	ldr	r0, [r7, #20]
 800154e:	f001 fab9 	bl	8002ac4 <HAL_I2C_IsDeviceReady>
 8001552:	4603      	mov	r3, r0
 8001554:	2b00      	cmp	r3, #0
 8001556:	d1f4      	bne.n	8001542 <WriteBytesACS37800+0x82>
	if (Register_Address < 0x10) {
 8001558:	79bb      	ldrb	r3, [r7, #6]
 800155a:	2b0f      	cmp	r3, #15
 800155c:	d807      	bhi.n	800156e <WriteBytesACS37800+0xae>
		WriteBytesACS37800(Converter_Index, Register_Address + SHADOW, WriteData);
 800155e:	79bb      	ldrb	r3, [r7, #6]
 8001560:	3310      	adds	r3, #16
 8001562:	b2d9      	uxtb	r1, r3
 8001564:	79fb      	ldrb	r3, [r7, #7]
 8001566:	683a      	ldr	r2, [r7, #0]
 8001568:	4618      	mov	r0, r3
 800156a:	f7ff ffa9 	bl	80014c0 <WriteBytesACS37800>
	}
	return HAL_Status;
 800156e:	7cbb      	ldrb	r3, [r7, #18]
}
 8001570:	4618      	mov	r0, r3
 8001572:	3720      	adds	r7, #32
 8001574:	46bd      	mov	sp, r7
 8001576:	bd80      	pop	{r7, pc}
 8001578:	08005760 	.word	0x08005760

0800157c <ReadBytesACS37800>:

uint32_t ReadBytesACS37800(uint8_t Converter_Index, uint8_t Register_Address, HAL_StatusTypeDef *Error_Handling)
{
 800157c:	b580      	push	{r7, lr}
 800157e:	b08c      	sub	sp, #48	@ 0x30
 8001580:	af02      	add	r7, sp, #8
 8001582:	4603      	mov	r3, r0
 8001584:	603a      	str	r2, [r7, #0]
 8001586:	71fb      	strb	r3, [r7, #7]
 8001588:	460b      	mov	r3, r1
 800158a:	71bb      	strb	r3, [r7, #6]
	uint32_t ReturnValue = 0;
 800158c:	2300      	movs	r3, #0
 800158e:	627b      	str	r3, [r7, #36]	@ 0x24
	uint8_t ReadValue[4];
	uint8_t address_type = Converter_Index % 2;
 8001590:	79fb      	ldrb	r3, [r7, #7]
 8001592:	f003 0301 	and.w	r3, r3, #1
 8001596:	77fb      	strb	r3, [r7, #31]
	I2C_HandleTypeDef *I2C_Line_Address = Determine_I2C_Bus_ACS37800(Converter_Index);
 8001598:	79fb      	ldrb	r3, [r7, #7]
 800159a:	4618      	mov	r0, r3
 800159c:	f7ff fd72 	bl	8001084 <Determine_I2C_Bus_ACS37800>
 80015a0:	61b8      	str	r0, [r7, #24]
	uint8_t Device_Address = AddressesACS37800[address_type] << 1;
 80015a2:	7ffb      	ldrb	r3, [r7, #31]
 80015a4:	4a1f      	ldr	r2, [pc, #124]	@ (8001624 <ReadBytesACS37800+0xa8>)
 80015a6:	5cd3      	ldrb	r3, [r2, r3]
 80015a8:	005b      	lsls	r3, r3, #1
 80015aa:	75fb      	strb	r3, [r7, #23]
	uint8_t BytesToSend[1];
	BytesToSend[0] = Register_Address;
 80015ac:	79bb      	ldrb	r3, [r7, #6]
 80015ae:	733b      	strb	r3, [r7, #12]
	*Error_Handling = HAL_I2C_Master_Transmit(I2C_Line_Address, Device_Address, BytesToSend, 1, HAL_MAX_DELAY);
 80015b0:	7dfb      	ldrb	r3, [r7, #23]
 80015b2:	b299      	uxth	r1, r3
 80015b4:	f107 020c 	add.w	r2, r7, #12
 80015b8:	f04f 33ff 	mov.w	r3, #4294967295
 80015bc:	9300      	str	r3, [sp, #0]
 80015be:	2301      	movs	r3, #1
 80015c0:	69b8      	ldr	r0, [r7, #24]
 80015c2:	f000 ff4f 	bl	8002464 <HAL_I2C_Master_Transmit>
 80015c6:	4603      	mov	r3, r0
 80015c8:	461a      	mov	r2, r3
 80015ca:	683b      	ldr	r3, [r7, #0]
 80015cc:	701a      	strb	r2, [r3, #0]
	*Error_Handling = HAL_I2C_Master_Receive(I2C_Line_Address, Device_Address, ReadValue, 4, HAL_MAX_DELAY);
 80015ce:	7dfb      	ldrb	r3, [r7, #23]
 80015d0:	b299      	uxth	r1, r3
 80015d2:	f107 0210 	add.w	r2, r7, #16
 80015d6:	f04f 33ff 	mov.w	r3, #4294967295
 80015da:	9300      	str	r3, [sp, #0]
 80015dc:	2304      	movs	r3, #4
 80015de:	69b8      	ldr	r0, [r7, #24]
 80015e0:	f001 f83e 	bl	8002660 <HAL_I2C_Master_Receive>
 80015e4:	4603      	mov	r3, r0
 80015e6:	461a      	mov	r2, r3
 80015e8:	683b      	ldr	r3, [r7, #0]
 80015ea:	701a      	strb	r2, [r3, #0]
	for (int i = 0; i < 4; i++) {
 80015ec:	2300      	movs	r3, #0
 80015ee:	623b      	str	r3, [r7, #32]
 80015f0:	e00f      	b.n	8001612 <ReadBytesACS37800+0x96>
		ReturnValue = ReturnValue + ((uint32_t) ReadValue[i] << (8 * i));
 80015f2:	f107 0210 	add.w	r2, r7, #16
 80015f6:	6a3b      	ldr	r3, [r7, #32]
 80015f8:	4413      	add	r3, r2
 80015fa:	781b      	ldrb	r3, [r3, #0]
 80015fc:	461a      	mov	r2, r3
 80015fe:	6a3b      	ldr	r3, [r7, #32]
 8001600:	00db      	lsls	r3, r3, #3
 8001602:	fa02 f303 	lsl.w	r3, r2, r3
 8001606:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001608:	4413      	add	r3, r2
 800160a:	627b      	str	r3, [r7, #36]	@ 0x24
	for (int i = 0; i < 4; i++) {
 800160c:	6a3b      	ldr	r3, [r7, #32]
 800160e:	3301      	adds	r3, #1
 8001610:	623b      	str	r3, [r7, #32]
 8001612:	6a3b      	ldr	r3, [r7, #32]
 8001614:	2b03      	cmp	r3, #3
 8001616:	ddec      	ble.n	80015f2 <ReadBytesACS37800+0x76>
	}
	return ReturnValue;
 8001618:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
}
 800161a:	4618      	mov	r0, r3
 800161c:	3728      	adds	r7, #40	@ 0x28
 800161e:	46bd      	mov	sp, r7
 8001620:	bd80      	pop	{r7, pc}
 8001622:	bf00      	nop
 8001624:	08005760 	.word	0x08005760

08001628 <TestAddressesACS37800>:

void TestAddressesACS37800(uint8_t Converter_Index, uint8_t Register_Address, HAL_StatusTypeDef *Error_Handling)
{
 8001628:	b590      	push	{r4, r7, lr}
 800162a:	b08f      	sub	sp, #60	@ 0x3c
 800162c:	af02      	add	r7, sp, #8
 800162e:	4603      	mov	r3, r0
 8001630:	603a      	str	r2, [r7, #0]
 8001632:	71fb      	strb	r3, [r7, #7]
 8001634:	460b      	mov	r3, r1
 8001636:	71bb      	strb	r3, [r7, #6]
	uint8_t Potential_addresses[16] = {96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 127};
 8001638:	4b24      	ldr	r3, [pc, #144]	@ (80016cc <TestAddressesACS37800+0xa4>)
 800163a:	f107 0414 	add.w	r4, r7, #20
 800163e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001640:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	uint8_t ReadValue[4];
	I2C_HandleTypeDef *I2C_Line_Address = Determine_I2C_Bus_ACS37800(Converter_Index);
 8001644:	79fb      	ldrb	r3, [r7, #7]
 8001646:	4618      	mov	r0, r3
 8001648:	f7ff fd1c 	bl	8001084 <Determine_I2C_Bus_ACS37800>
 800164c:	62b8      	str	r0, [r7, #40]	@ 0x28
	uint8_t BytesToSend[1];
	uint8_t Device_Address;
	for (int i = 0; i < 16; i++) {
 800164e:	2300      	movs	r3, #0
 8001650:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8001652:	e035      	b.n	80016c0 <TestAddressesACS37800+0x98>
		Device_Address = Potential_addresses[i] << 1;
 8001654:	f107 0214 	add.w	r2, r7, #20
 8001658:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800165a:	4413      	add	r3, r2
 800165c:	781b      	ldrb	r3, [r3, #0]
 800165e:	005b      	lsls	r3, r3, #1
 8001660:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
		BytesToSend[0] = Register_Address;
 8001664:	79bb      	ldrb	r3, [r7, #6]
 8001666:	733b      	strb	r3, [r7, #12]
		*Error_Handling = HAL_I2C_Master_Transmit(I2C_Line_Address, Device_Address, BytesToSend, 1, HAL_MAX_DELAY);
 8001668:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800166c:	b299      	uxth	r1, r3
 800166e:	f107 020c 	add.w	r2, r7, #12
 8001672:	f04f 33ff 	mov.w	r3, #4294967295
 8001676:	9300      	str	r3, [sp, #0]
 8001678:	2301      	movs	r3, #1
 800167a:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800167c:	f000 fef2 	bl	8002464 <HAL_I2C_Master_Transmit>
 8001680:	4603      	mov	r3, r0
 8001682:	461a      	mov	r2, r3
 8001684:	683b      	ldr	r3, [r7, #0]
 8001686:	701a      	strb	r2, [r3, #0]
		*Error_Handling = HAL_I2C_Master_Receive(I2C_Line_Address, Device_Address, ReadValue, 4, HAL_MAX_DELAY);
 8001688:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800168c:	b299      	uxth	r1, r3
 800168e:	f107 0210 	add.w	r2, r7, #16
 8001692:	f04f 33ff 	mov.w	r3, #4294967295
 8001696:	9300      	str	r3, [sp, #0]
 8001698:	2304      	movs	r3, #4
 800169a:	6ab8      	ldr	r0, [r7, #40]	@ 0x28
 800169c:	f000 ffe0 	bl	8002660 <HAL_I2C_Master_Receive>
 80016a0:	4603      	mov	r3, r0
 80016a2:	461a      	mov	r2, r3
 80016a4:	683b      	ldr	r3, [r7, #0]
 80016a6:	701a      	strb	r2, [r3, #0]
		if (*Error_Handling == HAL_OK) {
 80016a8:	683b      	ldr	r3, [r7, #0]
 80016aa:	781b      	ldrb	r3, [r3, #0]
 80016ac:	2b00      	cmp	r3, #0
 80016ae:	d104      	bne.n	80016ba <TestAddressesACS37800+0x92>
			Configure_Slave_AddressACS37800(Converter_Index);
 80016b0:	79fb      	ldrb	r3, [r7, #7]
 80016b2:	4618      	mov	r0, r3
 80016b4:	f7ff fd0e 	bl	80010d4 <Configure_Slave_AddressACS37800>
 80016b8:	e005      	b.n	80016c6 <TestAddressesACS37800+0x9e>
	for (int i = 0; i < 16; i++) {
 80016ba:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80016bc:	3301      	adds	r3, #1
 80016be:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80016c0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80016c2:	2b0f      	cmp	r3, #15
 80016c4:	ddc6      	ble.n	8001654 <TestAddressesACS37800+0x2c>
			return;
		}
	}
}
 80016c6:	3734      	adds	r7, #52	@ 0x34
 80016c8:	46bd      	mov	sp, r7
 80016ca:	bd90      	pop	{r4, r7, pc}
 80016cc:	0800574c 	.word	0x0800574c

080016d0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80016d0:	b480      	push	{r7}
 80016d2:	b083      	sub	sp, #12
 80016d4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80016d6:	2300      	movs	r3, #0
 80016d8:	607b      	str	r3, [r7, #4]
 80016da:	4b10      	ldr	r3, [pc, #64]	@ (800171c <HAL_MspInit+0x4c>)
 80016dc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80016de:	4a0f      	ldr	r2, [pc, #60]	@ (800171c <HAL_MspInit+0x4c>)
 80016e0:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80016e4:	6453      	str	r3, [r2, #68]	@ 0x44
 80016e6:	4b0d      	ldr	r3, [pc, #52]	@ (800171c <HAL_MspInit+0x4c>)
 80016e8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80016ea:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80016ee:	607b      	str	r3, [r7, #4]
 80016f0:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80016f2:	2300      	movs	r3, #0
 80016f4:	603b      	str	r3, [r7, #0]
 80016f6:	4b09      	ldr	r3, [pc, #36]	@ (800171c <HAL_MspInit+0x4c>)
 80016f8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80016fa:	4a08      	ldr	r2, [pc, #32]	@ (800171c <HAL_MspInit+0x4c>)
 80016fc:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001700:	6413      	str	r3, [r2, #64]	@ 0x40
 8001702:	4b06      	ldr	r3, [pc, #24]	@ (800171c <HAL_MspInit+0x4c>)
 8001704:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001706:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800170a:	603b      	str	r3, [r7, #0]
 800170c:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800170e:	bf00      	nop
 8001710:	370c      	adds	r7, #12
 8001712:	46bd      	mov	sp, r7
 8001714:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001718:	4770      	bx	lr
 800171a:	bf00      	nop
 800171c:	40023800 	.word	0x40023800

08001720 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001720:	b480      	push	{r7}
 8001722:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001724:	bf00      	nop
 8001726:	e7fd      	b.n	8001724 <NMI_Handler+0x4>

08001728 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001728:	b480      	push	{r7}
 800172a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800172c:	bf00      	nop
 800172e:	e7fd      	b.n	800172c <HardFault_Handler+0x4>

08001730 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001730:	b480      	push	{r7}
 8001732:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001734:	bf00      	nop
 8001736:	e7fd      	b.n	8001734 <MemManage_Handler+0x4>

08001738 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001738:	b480      	push	{r7}
 800173a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800173c:	bf00      	nop
 800173e:	e7fd      	b.n	800173c <BusFault_Handler+0x4>

08001740 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001740:	b480      	push	{r7}
 8001742:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001744:	bf00      	nop
 8001746:	e7fd      	b.n	8001744 <UsageFault_Handler+0x4>

08001748 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001748:	b480      	push	{r7}
 800174a:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800174c:	bf00      	nop
 800174e:	46bd      	mov	sp, r7
 8001750:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001754:	4770      	bx	lr

08001756 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001756:	b480      	push	{r7}
 8001758:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800175a:	bf00      	nop
 800175c:	46bd      	mov	sp, r7
 800175e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001762:	4770      	bx	lr

08001764 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001764:	b480      	push	{r7}
 8001766:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001768:	bf00      	nop
 800176a:	46bd      	mov	sp, r7
 800176c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001770:	4770      	bx	lr

08001772 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001772:	b580      	push	{r7, lr}
 8001774:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001776:	f000 f993 	bl	8001aa0 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800177a:	bf00      	nop
 800177c:	bd80      	pop	{r7, pc}
	...

08001780 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 8001780:	b580      	push	{r7, lr}
 8001782:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8001784:	4802      	ldr	r0, [pc, #8]	@ (8001790 <USART2_IRQHandler+0x10>)
 8001786:	f002 fba9 	bl	8003edc <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */
//  HAL_UART_RxCpltCallback(&huart2);
  /* USER CODE END USART2_IRQn 1 */
}
 800178a:	bf00      	nop
 800178c:	bd80      	pop	{r7, pc}
 800178e:	bf00      	nop
 8001790:	2000021c 	.word	0x2000021c

08001794 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 8001794:	b580      	push	{r7, lr}
 8001796:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(Blue_Btn_Pin);
 8001798:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 800179c:	f000 fd06 	bl	80021ac <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 80017a0:	bf00      	nop
 80017a2:	bd80      	pop	{r7, pc}

080017a4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80017a4:	b580      	push	{r7, lr}
 80017a6:	b086      	sub	sp, #24
 80017a8:	af00      	add	r7, sp, #0
 80017aa:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80017ac:	4a14      	ldr	r2, [pc, #80]	@ (8001800 <_sbrk+0x5c>)
 80017ae:	4b15      	ldr	r3, [pc, #84]	@ (8001804 <_sbrk+0x60>)
 80017b0:	1ad3      	subs	r3, r2, r3
 80017b2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80017b4:	697b      	ldr	r3, [r7, #20]
 80017b6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80017b8:	4b13      	ldr	r3, [pc, #76]	@ (8001808 <_sbrk+0x64>)
 80017ba:	681b      	ldr	r3, [r3, #0]
 80017bc:	2b00      	cmp	r3, #0
 80017be:	d102      	bne.n	80017c6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80017c0:	4b11      	ldr	r3, [pc, #68]	@ (8001808 <_sbrk+0x64>)
 80017c2:	4a12      	ldr	r2, [pc, #72]	@ (800180c <_sbrk+0x68>)
 80017c4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80017c6:	4b10      	ldr	r3, [pc, #64]	@ (8001808 <_sbrk+0x64>)
 80017c8:	681a      	ldr	r2, [r3, #0]
 80017ca:	687b      	ldr	r3, [r7, #4]
 80017cc:	4413      	add	r3, r2
 80017ce:	693a      	ldr	r2, [r7, #16]
 80017d0:	429a      	cmp	r2, r3
 80017d2:	d207      	bcs.n	80017e4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80017d4:	f003 fb00 	bl	8004dd8 <__errno>
 80017d8:	4603      	mov	r3, r0
 80017da:	220c      	movs	r2, #12
 80017dc:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80017de:	f04f 33ff 	mov.w	r3, #4294967295
 80017e2:	e009      	b.n	80017f8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80017e4:	4b08      	ldr	r3, [pc, #32]	@ (8001808 <_sbrk+0x64>)
 80017e6:	681b      	ldr	r3, [r3, #0]
 80017e8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80017ea:	4b07      	ldr	r3, [pc, #28]	@ (8001808 <_sbrk+0x64>)
 80017ec:	681a      	ldr	r2, [r3, #0]
 80017ee:	687b      	ldr	r3, [r7, #4]
 80017f0:	4413      	add	r3, r2
 80017f2:	4a05      	ldr	r2, [pc, #20]	@ (8001808 <_sbrk+0x64>)
 80017f4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80017f6:	68fb      	ldr	r3, [r7, #12]
}
 80017f8:	4618      	mov	r0, r3
 80017fa:	3718      	adds	r7, #24
 80017fc:	46bd      	mov	sp, r7
 80017fe:	bd80      	pop	{r7, pc}
 8001800:	20018000 	.word	0x20018000
 8001804:	00000400 	.word	0x00000400
 8001808:	20000218 	.word	0x20000218
 800180c:	200003b0 	.word	0x200003b0

08001810 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001810:	b480      	push	{r7}
 8001812:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001814:	4b06      	ldr	r3, [pc, #24]	@ (8001830 <SystemInit+0x20>)
 8001816:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800181a:	4a05      	ldr	r2, [pc, #20]	@ (8001830 <SystemInit+0x20>)
 800181c:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001820:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001824:	bf00      	nop
 8001826:	46bd      	mov	sp, r7
 8001828:	f85d 7b04 	ldr.w	r7, [sp], #4
 800182c:	4770      	bx	lr
 800182e:	bf00      	nop
 8001830:	e000ed00 	.word	0xe000ed00

08001834 <MX_USART2_UART_Init>:
UART_HandleTypeDef huart2;

/* USART2 init function */

void MX_USART2_UART_Init(void)
{
 8001834:	b580      	push	{r7, lr}
 8001836:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8001838:	4b12      	ldr	r3, [pc, #72]	@ (8001884 <MX_USART2_UART_Init+0x50>)
 800183a:	4a13      	ldr	r2, [pc, #76]	@ (8001888 <MX_USART2_UART_Init+0x54>)
 800183c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 800183e:	4b11      	ldr	r3, [pc, #68]	@ (8001884 <MX_USART2_UART_Init+0x50>)
 8001840:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8001844:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_9B;
 8001846:	4b0f      	ldr	r3, [pc, #60]	@ (8001884 <MX_USART2_UART_Init+0x50>)
 8001848:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 800184c:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 800184e:	4b0d      	ldr	r3, [pc, #52]	@ (8001884 <MX_USART2_UART_Init+0x50>)
 8001850:	2200      	movs	r2, #0
 8001852:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_EVEN;
 8001854:	4b0b      	ldr	r3, [pc, #44]	@ (8001884 <MX_USART2_UART_Init+0x50>)
 8001856:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800185a:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 800185c:	4b09      	ldr	r3, [pc, #36]	@ (8001884 <MX_USART2_UART_Init+0x50>)
 800185e:	220c      	movs	r2, #12
 8001860:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001862:	4b08      	ldr	r3, [pc, #32]	@ (8001884 <MX_USART2_UART_Init+0x50>)
 8001864:	2200      	movs	r2, #0
 8001866:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8001868:	4b06      	ldr	r3, [pc, #24]	@ (8001884 <MX_USART2_UART_Init+0x50>)
 800186a:	2200      	movs	r2, #0
 800186c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800186e:	4805      	ldr	r0, [pc, #20]	@ (8001884 <MX_USART2_UART_Init+0x50>)
 8001870:	f002 fa34 	bl	8003cdc <HAL_UART_Init>
 8001874:	4603      	mov	r3, r0
 8001876:	2b00      	cmp	r3, #0
 8001878:	d001      	beq.n	800187e <MX_USART2_UART_Init+0x4a>
  {
    Error_Handler();
 800187a:	f7ff fbfd 	bl	8001078 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800187e:	bf00      	nop
 8001880:	bd80      	pop	{r7, pc}
 8001882:	bf00      	nop
 8001884:	2000021c 	.word	0x2000021c
 8001888:	40004400 	.word	0x40004400

0800188c <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 800188c:	b580      	push	{r7, lr}
 800188e:	b08a      	sub	sp, #40	@ 0x28
 8001890:	af00      	add	r7, sp, #0
 8001892:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001894:	f107 0314 	add.w	r3, r7, #20
 8001898:	2200      	movs	r2, #0
 800189a:	601a      	str	r2, [r3, #0]
 800189c:	605a      	str	r2, [r3, #4]
 800189e:	609a      	str	r2, [r3, #8]
 80018a0:	60da      	str	r2, [r3, #12]
 80018a2:	611a      	str	r2, [r3, #16]
  if(uartHandle->Instance==USART2)
 80018a4:	687b      	ldr	r3, [r7, #4]
 80018a6:	681b      	ldr	r3, [r3, #0]
 80018a8:	4a1d      	ldr	r2, [pc, #116]	@ (8001920 <HAL_UART_MspInit+0x94>)
 80018aa:	4293      	cmp	r3, r2
 80018ac:	d133      	bne.n	8001916 <HAL_UART_MspInit+0x8a>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* USART2 clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 80018ae:	2300      	movs	r3, #0
 80018b0:	613b      	str	r3, [r7, #16]
 80018b2:	4b1c      	ldr	r3, [pc, #112]	@ (8001924 <HAL_UART_MspInit+0x98>)
 80018b4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80018b6:	4a1b      	ldr	r2, [pc, #108]	@ (8001924 <HAL_UART_MspInit+0x98>)
 80018b8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80018bc:	6413      	str	r3, [r2, #64]	@ 0x40
 80018be:	4b19      	ldr	r3, [pc, #100]	@ (8001924 <HAL_UART_MspInit+0x98>)
 80018c0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80018c2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80018c6:	613b      	str	r3, [r7, #16]
 80018c8:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80018ca:	2300      	movs	r3, #0
 80018cc:	60fb      	str	r3, [r7, #12]
 80018ce:	4b15      	ldr	r3, [pc, #84]	@ (8001924 <HAL_UART_MspInit+0x98>)
 80018d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80018d2:	4a14      	ldr	r2, [pc, #80]	@ (8001924 <HAL_UART_MspInit+0x98>)
 80018d4:	f043 0301 	orr.w	r3, r3, #1
 80018d8:	6313      	str	r3, [r2, #48]	@ 0x30
 80018da:	4b12      	ldr	r3, [pc, #72]	@ (8001924 <HAL_UART_MspInit+0x98>)
 80018dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80018de:	f003 0301 	and.w	r3, r3, #1
 80018e2:	60fb      	str	r3, [r7, #12]
 80018e4:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 80018e6:	230c      	movs	r3, #12
 80018e8:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80018ea:	2302      	movs	r3, #2
 80018ec:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80018ee:	2300      	movs	r3, #0
 80018f0:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80018f2:	2303      	movs	r3, #3
 80018f4:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 80018f6:	2307      	movs	r3, #7
 80018f8:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80018fa:	f107 0314 	add.w	r3, r7, #20
 80018fe:	4619      	mov	r1, r3
 8001900:	4809      	ldr	r0, [pc, #36]	@ (8001928 <HAL_UART_MspInit+0x9c>)
 8001902:	f000 fab5 	bl	8001e70 <HAL_GPIO_Init>

    /* USART2 interrupt Init */
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 8001906:	2200      	movs	r2, #0
 8001908:	2100      	movs	r1, #0
 800190a:	2026      	movs	r0, #38	@ 0x26
 800190c:	f000 f9e7 	bl	8001cde <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8001910:	2026      	movs	r0, #38	@ 0x26
 8001912:	f000 fa00 	bl	8001d16 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }
}
 8001916:	bf00      	nop
 8001918:	3728      	adds	r7, #40	@ 0x28
 800191a:	46bd      	mov	sp, r7
 800191c:	bd80      	pop	{r7, pc}
 800191e:	bf00      	nop
 8001920:	40004400 	.word	0x40004400
 8001924:	40023800 	.word	0x40023800
 8001928:	40020000 	.word	0x40020000

0800192c <PrintOutputData>:
  }
}

/* USER CODE BEGIN 1 */
void PrintOutputData(uint8_t *OutputBuffer)
{
 800192c:	b580      	push	{r7, lr}
 800192e:	b084      	sub	sp, #16
 8001930:	af00      	add	r7, sp, #0
 8001932:	6078      	str	r0, [r7, #4]
	HAL_StatusTypeDef HALStatus;
	HALStatus = HAL_UART_Transmit(&huart2, OutputBuffer, 12, HAL_MAX_DELAY);
 8001934:	f04f 33ff 	mov.w	r3, #4294967295
 8001938:	220c      	movs	r2, #12
 800193a:	6879      	ldr	r1, [r7, #4]
 800193c:	4806      	ldr	r0, [pc, #24]	@ (8001958 <PrintOutputData+0x2c>)
 800193e:	f002 fa1d 	bl	8003d7c <HAL_UART_Transmit>
 8001942:	4603      	mov	r3, r0
 8001944:	73fb      	strb	r3, [r7, #15]
	if (HALStatus != HAL_OK) {
 8001946:	7bfb      	ldrb	r3, [r7, #15]
 8001948:	2b00      	cmp	r3, #0
 800194a:	d001      	beq.n	8001950 <PrintOutputData+0x24>
		Error_Handler();
 800194c:	f7ff fb94 	bl	8001078 <Error_Handler>
	}
}
 8001950:	bf00      	nop
 8001952:	3710      	adds	r7, #16
 8001954:	46bd      	mov	sp, r7
 8001956:	bd80      	pop	{r7, pc}
 8001958:	2000021c 	.word	0x2000021c

0800195c <PrintOutputBuffer>:

void PrintOutputBuffer(uint8_t *OutputBuffer)
{
 800195c:	b580      	push	{r7, lr}
 800195e:	b084      	sub	sp, #16
 8001960:	af00      	add	r7, sp, #0
 8001962:	6078      	str	r0, [r7, #4]
	uint32_t StringLength;
	HAL_StatusTypeDef HALStatus;

	for (StringLength = 0; *(OutputBuffer + StringLength); StringLength++);
 8001964:	2300      	movs	r3, #0
 8001966:	60fb      	str	r3, [r7, #12]
 8001968:	e002      	b.n	8001970 <PrintOutputBuffer+0x14>
 800196a:	68fb      	ldr	r3, [r7, #12]
 800196c:	3301      	adds	r3, #1
 800196e:	60fb      	str	r3, [r7, #12]
 8001970:	687a      	ldr	r2, [r7, #4]
 8001972:	68fb      	ldr	r3, [r7, #12]
 8001974:	4413      	add	r3, r2
 8001976:	781b      	ldrb	r3, [r3, #0]
 8001978:	2b00      	cmp	r3, #0
 800197a:	d1f6      	bne.n	800196a <PrintOutputBuffer+0xe>

	HALStatus = HAL_UART_Transmit(&huart2, OutputBuffer, StringLength, HAL_MAX_DELAY);
 800197c:	68fb      	ldr	r3, [r7, #12]
 800197e:	b29a      	uxth	r2, r3
 8001980:	f04f 33ff 	mov.w	r3, #4294967295
 8001984:	6879      	ldr	r1, [r7, #4]
 8001986:	4807      	ldr	r0, [pc, #28]	@ (80019a4 <PrintOutputBuffer+0x48>)
 8001988:	f002 f9f8 	bl	8003d7c <HAL_UART_Transmit>
 800198c:	4603      	mov	r3, r0
 800198e:	72fb      	strb	r3, [r7, #11]

	if (HALStatus != HAL_OK) {
 8001990:	7afb      	ldrb	r3, [r7, #11]
 8001992:	2b00      	cmp	r3, #0
 8001994:	d001      	beq.n	800199a <PrintOutputBuffer+0x3e>
		Error_Handler();
 8001996:	f7ff fb6f 	bl	8001078 <Error_Handler>
	}

}
 800199a:	bf00      	nop
 800199c:	3710      	adds	r7, #16
 800199e:	46bd      	mov	sp, r7
 80019a0:	bd80      	pop	{r7, pc}
 80019a2:	bf00      	nop
 80019a4:	2000021c 	.word	0x2000021c

080019a8 <Reset_Handler>:
 80019a8:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80019e0 <LoopFillZerobss+0xe>
 80019ac:	f7ff ff30 	bl	8001810 <SystemInit>
 80019b0:	480c      	ldr	r0, [pc, #48]	@ (80019e4 <LoopFillZerobss+0x12>)
 80019b2:	490d      	ldr	r1, [pc, #52]	@ (80019e8 <LoopFillZerobss+0x16>)
 80019b4:	4a0d      	ldr	r2, [pc, #52]	@ (80019ec <LoopFillZerobss+0x1a>)
 80019b6:	2300      	movs	r3, #0
 80019b8:	e002      	b.n	80019c0 <LoopCopyDataInit>

080019ba <CopyDataInit>:
 80019ba:	58d4      	ldr	r4, [r2, r3]
 80019bc:	50c4      	str	r4, [r0, r3]
 80019be:	3304      	adds	r3, #4

080019c0 <LoopCopyDataInit>:
 80019c0:	18c4      	adds	r4, r0, r3
 80019c2:	428c      	cmp	r4, r1
 80019c4:	d3f9      	bcc.n	80019ba <CopyDataInit>
 80019c6:	4a0a      	ldr	r2, [pc, #40]	@ (80019f0 <LoopFillZerobss+0x1e>)
 80019c8:	4c0a      	ldr	r4, [pc, #40]	@ (80019f4 <LoopFillZerobss+0x22>)
 80019ca:	2300      	movs	r3, #0
 80019cc:	e001      	b.n	80019d2 <LoopFillZerobss>

080019ce <FillZerobss>:
 80019ce:	6013      	str	r3, [r2, #0]
 80019d0:	3204      	adds	r2, #4

080019d2 <LoopFillZerobss>:
 80019d2:	42a2      	cmp	r2, r4
 80019d4:	d3fb      	bcc.n	80019ce <FillZerobss>
 80019d6:	f003 fa05 	bl	8004de4 <__libc_init_array>
 80019da:	f7ff f9b9 	bl	8000d50 <main>
 80019de:	4770      	bx	lr
 80019e0:	20018000 	.word	0x20018000
 80019e4:	20000000 	.word	0x20000000
 80019e8:	20000060 	.word	0x20000060
 80019ec:	080057c0 	.word	0x080057c0
 80019f0:	20000060 	.word	0x20000060
 80019f4:	200003b0 	.word	0x200003b0

080019f8 <ADC_IRQHandler>:
 80019f8:	e7fe      	b.n	80019f8 <ADC_IRQHandler>
	...

080019fc <HAL_Init>:
 80019fc:	b580      	push	{r7, lr}
 80019fe:	af00      	add	r7, sp, #0
 8001a00:	4b0e      	ldr	r3, [pc, #56]	@ (8001a3c <HAL_Init+0x40>)
 8001a02:	681b      	ldr	r3, [r3, #0]
 8001a04:	4a0d      	ldr	r2, [pc, #52]	@ (8001a3c <HAL_Init+0x40>)
 8001a06:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001a0a:	6013      	str	r3, [r2, #0]
 8001a0c:	4b0b      	ldr	r3, [pc, #44]	@ (8001a3c <HAL_Init+0x40>)
 8001a0e:	681b      	ldr	r3, [r3, #0]
 8001a10:	4a0a      	ldr	r2, [pc, #40]	@ (8001a3c <HAL_Init+0x40>)
 8001a12:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001a16:	6013      	str	r3, [r2, #0]
 8001a18:	4b08      	ldr	r3, [pc, #32]	@ (8001a3c <HAL_Init+0x40>)
 8001a1a:	681b      	ldr	r3, [r3, #0]
 8001a1c:	4a07      	ldr	r2, [pc, #28]	@ (8001a3c <HAL_Init+0x40>)
 8001a1e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001a22:	6013      	str	r3, [r2, #0]
 8001a24:	2003      	movs	r0, #3
 8001a26:	f000 f94f 	bl	8001cc8 <HAL_NVIC_SetPriorityGrouping>
 8001a2a:	200f      	movs	r0, #15
 8001a2c:	f000 f808 	bl	8001a40 <HAL_InitTick>
 8001a30:	f7ff fe4e 	bl	80016d0 <HAL_MspInit>
 8001a34:	2300      	movs	r3, #0
 8001a36:	4618      	mov	r0, r3
 8001a38:	bd80      	pop	{r7, pc}
 8001a3a:	bf00      	nop
 8001a3c:	40023c00 	.word	0x40023c00

08001a40 <HAL_InitTick>:
 8001a40:	b580      	push	{r7, lr}
 8001a42:	b082      	sub	sp, #8
 8001a44:	af00      	add	r7, sp, #0
 8001a46:	6078      	str	r0, [r7, #4]
 8001a48:	4b12      	ldr	r3, [pc, #72]	@ (8001a94 <HAL_InitTick+0x54>)
 8001a4a:	681a      	ldr	r2, [r3, #0]
 8001a4c:	4b12      	ldr	r3, [pc, #72]	@ (8001a98 <HAL_InitTick+0x58>)
 8001a4e:	781b      	ldrb	r3, [r3, #0]
 8001a50:	4619      	mov	r1, r3
 8001a52:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001a56:	fbb3 f3f1 	udiv	r3, r3, r1
 8001a5a:	fbb2 f3f3 	udiv	r3, r2, r3
 8001a5e:	4618      	mov	r0, r3
 8001a60:	f000 f967 	bl	8001d32 <HAL_SYSTICK_Config>
 8001a64:	4603      	mov	r3, r0
 8001a66:	2b00      	cmp	r3, #0
 8001a68:	d001      	beq.n	8001a6e <HAL_InitTick+0x2e>
 8001a6a:	2301      	movs	r3, #1
 8001a6c:	e00e      	b.n	8001a8c <HAL_InitTick+0x4c>
 8001a6e:	687b      	ldr	r3, [r7, #4]
 8001a70:	2b0f      	cmp	r3, #15
 8001a72:	d80a      	bhi.n	8001a8a <HAL_InitTick+0x4a>
 8001a74:	2200      	movs	r2, #0
 8001a76:	6879      	ldr	r1, [r7, #4]
 8001a78:	f04f 30ff 	mov.w	r0, #4294967295
 8001a7c:	f000 f92f 	bl	8001cde <HAL_NVIC_SetPriority>
 8001a80:	4a06      	ldr	r2, [pc, #24]	@ (8001a9c <HAL_InitTick+0x5c>)
 8001a82:	687b      	ldr	r3, [r7, #4]
 8001a84:	6013      	str	r3, [r2, #0]
 8001a86:	2300      	movs	r3, #0
 8001a88:	e000      	b.n	8001a8c <HAL_InitTick+0x4c>
 8001a8a:	2301      	movs	r3, #1
 8001a8c:	4618      	mov	r0, r3
 8001a8e:	3708      	adds	r7, #8
 8001a90:	46bd      	mov	sp, r7
 8001a92:	bd80      	pop	{r7, pc}
 8001a94:	20000004 	.word	0x20000004
 8001a98:	2000000c 	.word	0x2000000c
 8001a9c:	20000008 	.word	0x20000008

08001aa0 <HAL_IncTick>:
 8001aa0:	b480      	push	{r7}
 8001aa2:	af00      	add	r7, sp, #0
 8001aa4:	4b06      	ldr	r3, [pc, #24]	@ (8001ac0 <HAL_IncTick+0x20>)
 8001aa6:	781b      	ldrb	r3, [r3, #0]
 8001aa8:	461a      	mov	r2, r3
 8001aaa:	4b06      	ldr	r3, [pc, #24]	@ (8001ac4 <HAL_IncTick+0x24>)
 8001aac:	681b      	ldr	r3, [r3, #0]
 8001aae:	4413      	add	r3, r2
 8001ab0:	4a04      	ldr	r2, [pc, #16]	@ (8001ac4 <HAL_IncTick+0x24>)
 8001ab2:	6013      	str	r3, [r2, #0]
 8001ab4:	bf00      	nop
 8001ab6:	46bd      	mov	sp, r7
 8001ab8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001abc:	4770      	bx	lr
 8001abe:	bf00      	nop
 8001ac0:	2000000c 	.word	0x2000000c
 8001ac4:	20000264 	.word	0x20000264

08001ac8 <HAL_GetTick>:
 8001ac8:	b480      	push	{r7}
 8001aca:	af00      	add	r7, sp, #0
 8001acc:	4b03      	ldr	r3, [pc, #12]	@ (8001adc <HAL_GetTick+0x14>)
 8001ace:	681b      	ldr	r3, [r3, #0]
 8001ad0:	4618      	mov	r0, r3
 8001ad2:	46bd      	mov	sp, r7
 8001ad4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ad8:	4770      	bx	lr
 8001ada:	bf00      	nop
 8001adc:	20000264 	.word	0x20000264

08001ae0 <HAL_Delay>:
 8001ae0:	b580      	push	{r7, lr}
 8001ae2:	b084      	sub	sp, #16
 8001ae4:	af00      	add	r7, sp, #0
 8001ae6:	6078      	str	r0, [r7, #4]
 8001ae8:	f7ff ffee 	bl	8001ac8 <HAL_GetTick>
 8001aec:	60b8      	str	r0, [r7, #8]
 8001aee:	687b      	ldr	r3, [r7, #4]
 8001af0:	60fb      	str	r3, [r7, #12]
 8001af2:	68fb      	ldr	r3, [r7, #12]
 8001af4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001af8:	d005      	beq.n	8001b06 <HAL_Delay+0x26>
 8001afa:	4b0a      	ldr	r3, [pc, #40]	@ (8001b24 <HAL_Delay+0x44>)
 8001afc:	781b      	ldrb	r3, [r3, #0]
 8001afe:	461a      	mov	r2, r3
 8001b00:	68fb      	ldr	r3, [r7, #12]
 8001b02:	4413      	add	r3, r2
 8001b04:	60fb      	str	r3, [r7, #12]
 8001b06:	bf00      	nop
 8001b08:	f7ff ffde 	bl	8001ac8 <HAL_GetTick>
 8001b0c:	4602      	mov	r2, r0
 8001b0e:	68bb      	ldr	r3, [r7, #8]
 8001b10:	1ad3      	subs	r3, r2, r3
 8001b12:	68fa      	ldr	r2, [r7, #12]
 8001b14:	429a      	cmp	r2, r3
 8001b16:	d8f7      	bhi.n	8001b08 <HAL_Delay+0x28>
 8001b18:	bf00      	nop
 8001b1a:	bf00      	nop
 8001b1c:	3710      	adds	r7, #16
 8001b1e:	46bd      	mov	sp, r7
 8001b20:	bd80      	pop	{r7, pc}
 8001b22:	bf00      	nop
 8001b24:	2000000c 	.word	0x2000000c

08001b28 <__NVIC_SetPriorityGrouping>:
 8001b28:	b480      	push	{r7}
 8001b2a:	b085      	sub	sp, #20
 8001b2c:	af00      	add	r7, sp, #0
 8001b2e:	6078      	str	r0, [r7, #4]
 8001b30:	687b      	ldr	r3, [r7, #4]
 8001b32:	f003 0307 	and.w	r3, r3, #7
 8001b36:	60fb      	str	r3, [r7, #12]
 8001b38:	4b0c      	ldr	r3, [pc, #48]	@ (8001b6c <__NVIC_SetPriorityGrouping+0x44>)
 8001b3a:	68db      	ldr	r3, [r3, #12]
 8001b3c:	60bb      	str	r3, [r7, #8]
 8001b3e:	68ba      	ldr	r2, [r7, #8]
 8001b40:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8001b44:	4013      	ands	r3, r2
 8001b46:	60bb      	str	r3, [r7, #8]
 8001b48:	68fb      	ldr	r3, [r7, #12]
 8001b4a:	021a      	lsls	r2, r3, #8
 8001b4c:	68bb      	ldr	r3, [r7, #8]
 8001b4e:	4313      	orrs	r3, r2
 8001b50:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8001b54:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001b58:	60bb      	str	r3, [r7, #8]
 8001b5a:	4a04      	ldr	r2, [pc, #16]	@ (8001b6c <__NVIC_SetPriorityGrouping+0x44>)
 8001b5c:	68bb      	ldr	r3, [r7, #8]
 8001b5e:	60d3      	str	r3, [r2, #12]
 8001b60:	bf00      	nop
 8001b62:	3714      	adds	r7, #20
 8001b64:	46bd      	mov	sp, r7
 8001b66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b6a:	4770      	bx	lr
 8001b6c:	e000ed00 	.word	0xe000ed00

08001b70 <__NVIC_GetPriorityGrouping>:
 8001b70:	b480      	push	{r7}
 8001b72:	af00      	add	r7, sp, #0
 8001b74:	4b04      	ldr	r3, [pc, #16]	@ (8001b88 <__NVIC_GetPriorityGrouping+0x18>)
 8001b76:	68db      	ldr	r3, [r3, #12]
 8001b78:	0a1b      	lsrs	r3, r3, #8
 8001b7a:	f003 0307 	and.w	r3, r3, #7
 8001b7e:	4618      	mov	r0, r3
 8001b80:	46bd      	mov	sp, r7
 8001b82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b86:	4770      	bx	lr
 8001b88:	e000ed00 	.word	0xe000ed00

08001b8c <__NVIC_EnableIRQ>:
 8001b8c:	b480      	push	{r7}
 8001b8e:	b083      	sub	sp, #12
 8001b90:	af00      	add	r7, sp, #0
 8001b92:	4603      	mov	r3, r0
 8001b94:	71fb      	strb	r3, [r7, #7]
 8001b96:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001b9a:	2b00      	cmp	r3, #0
 8001b9c:	db0b      	blt.n	8001bb6 <__NVIC_EnableIRQ+0x2a>
 8001b9e:	79fb      	ldrb	r3, [r7, #7]
 8001ba0:	f003 021f 	and.w	r2, r3, #31
 8001ba4:	4907      	ldr	r1, [pc, #28]	@ (8001bc4 <__NVIC_EnableIRQ+0x38>)
 8001ba6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001baa:	095b      	lsrs	r3, r3, #5
 8001bac:	2001      	movs	r0, #1
 8001bae:	fa00 f202 	lsl.w	r2, r0, r2
 8001bb2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001bb6:	bf00      	nop
 8001bb8:	370c      	adds	r7, #12
 8001bba:	46bd      	mov	sp, r7
 8001bbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bc0:	4770      	bx	lr
 8001bc2:	bf00      	nop
 8001bc4:	e000e100 	.word	0xe000e100

08001bc8 <__NVIC_SetPriority>:
 8001bc8:	b480      	push	{r7}
 8001bca:	b083      	sub	sp, #12
 8001bcc:	af00      	add	r7, sp, #0
 8001bce:	4603      	mov	r3, r0
 8001bd0:	6039      	str	r1, [r7, #0]
 8001bd2:	71fb      	strb	r3, [r7, #7]
 8001bd4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001bd8:	2b00      	cmp	r3, #0
 8001bda:	db0a      	blt.n	8001bf2 <__NVIC_SetPriority+0x2a>
 8001bdc:	683b      	ldr	r3, [r7, #0]
 8001bde:	b2da      	uxtb	r2, r3
 8001be0:	490c      	ldr	r1, [pc, #48]	@ (8001c14 <__NVIC_SetPriority+0x4c>)
 8001be2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001be6:	0112      	lsls	r2, r2, #4
 8001be8:	b2d2      	uxtb	r2, r2
 8001bea:	440b      	add	r3, r1
 8001bec:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001bf0:	e00a      	b.n	8001c08 <__NVIC_SetPriority+0x40>
 8001bf2:	683b      	ldr	r3, [r7, #0]
 8001bf4:	b2da      	uxtb	r2, r3
 8001bf6:	4908      	ldr	r1, [pc, #32]	@ (8001c18 <__NVIC_SetPriority+0x50>)
 8001bf8:	79fb      	ldrb	r3, [r7, #7]
 8001bfa:	f003 030f 	and.w	r3, r3, #15
 8001bfe:	3b04      	subs	r3, #4
 8001c00:	0112      	lsls	r2, r2, #4
 8001c02:	b2d2      	uxtb	r2, r2
 8001c04:	440b      	add	r3, r1
 8001c06:	761a      	strb	r2, [r3, #24]
 8001c08:	bf00      	nop
 8001c0a:	370c      	adds	r7, #12
 8001c0c:	46bd      	mov	sp, r7
 8001c0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c12:	4770      	bx	lr
 8001c14:	e000e100 	.word	0xe000e100
 8001c18:	e000ed00 	.word	0xe000ed00

08001c1c <NVIC_EncodePriority>:
 8001c1c:	b480      	push	{r7}
 8001c1e:	b089      	sub	sp, #36	@ 0x24
 8001c20:	af00      	add	r7, sp, #0
 8001c22:	60f8      	str	r0, [r7, #12]
 8001c24:	60b9      	str	r1, [r7, #8]
 8001c26:	607a      	str	r2, [r7, #4]
 8001c28:	68fb      	ldr	r3, [r7, #12]
 8001c2a:	f003 0307 	and.w	r3, r3, #7
 8001c2e:	61fb      	str	r3, [r7, #28]
 8001c30:	69fb      	ldr	r3, [r7, #28]
 8001c32:	f1c3 0307 	rsb	r3, r3, #7
 8001c36:	2b04      	cmp	r3, #4
 8001c38:	bf28      	it	cs
 8001c3a:	2304      	movcs	r3, #4
 8001c3c:	61bb      	str	r3, [r7, #24]
 8001c3e:	69fb      	ldr	r3, [r7, #28]
 8001c40:	3304      	adds	r3, #4
 8001c42:	2b06      	cmp	r3, #6
 8001c44:	d902      	bls.n	8001c4c <NVIC_EncodePriority+0x30>
 8001c46:	69fb      	ldr	r3, [r7, #28]
 8001c48:	3b03      	subs	r3, #3
 8001c4a:	e000      	b.n	8001c4e <NVIC_EncodePriority+0x32>
 8001c4c:	2300      	movs	r3, #0
 8001c4e:	617b      	str	r3, [r7, #20]
 8001c50:	f04f 32ff 	mov.w	r2, #4294967295
 8001c54:	69bb      	ldr	r3, [r7, #24]
 8001c56:	fa02 f303 	lsl.w	r3, r2, r3
 8001c5a:	43da      	mvns	r2, r3
 8001c5c:	68bb      	ldr	r3, [r7, #8]
 8001c5e:	401a      	ands	r2, r3
 8001c60:	697b      	ldr	r3, [r7, #20]
 8001c62:	409a      	lsls	r2, r3
 8001c64:	f04f 31ff 	mov.w	r1, #4294967295
 8001c68:	697b      	ldr	r3, [r7, #20]
 8001c6a:	fa01 f303 	lsl.w	r3, r1, r3
 8001c6e:	43d9      	mvns	r1, r3
 8001c70:	687b      	ldr	r3, [r7, #4]
 8001c72:	400b      	ands	r3, r1
 8001c74:	4313      	orrs	r3, r2
 8001c76:	4618      	mov	r0, r3
 8001c78:	3724      	adds	r7, #36	@ 0x24
 8001c7a:	46bd      	mov	sp, r7
 8001c7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c80:	4770      	bx	lr
	...

08001c84 <SysTick_Config>:
 8001c84:	b580      	push	{r7, lr}
 8001c86:	b082      	sub	sp, #8
 8001c88:	af00      	add	r7, sp, #0
 8001c8a:	6078      	str	r0, [r7, #4]
 8001c8c:	687b      	ldr	r3, [r7, #4]
 8001c8e:	3b01      	subs	r3, #1
 8001c90:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8001c94:	d301      	bcc.n	8001c9a <SysTick_Config+0x16>
 8001c96:	2301      	movs	r3, #1
 8001c98:	e00f      	b.n	8001cba <SysTick_Config+0x36>
 8001c9a:	4a0a      	ldr	r2, [pc, #40]	@ (8001cc4 <SysTick_Config+0x40>)
 8001c9c:	687b      	ldr	r3, [r7, #4]
 8001c9e:	3b01      	subs	r3, #1
 8001ca0:	6053      	str	r3, [r2, #4]
 8001ca2:	210f      	movs	r1, #15
 8001ca4:	f04f 30ff 	mov.w	r0, #4294967295
 8001ca8:	f7ff ff8e 	bl	8001bc8 <__NVIC_SetPriority>
 8001cac:	4b05      	ldr	r3, [pc, #20]	@ (8001cc4 <SysTick_Config+0x40>)
 8001cae:	2200      	movs	r2, #0
 8001cb0:	609a      	str	r2, [r3, #8]
 8001cb2:	4b04      	ldr	r3, [pc, #16]	@ (8001cc4 <SysTick_Config+0x40>)
 8001cb4:	2207      	movs	r2, #7
 8001cb6:	601a      	str	r2, [r3, #0]
 8001cb8:	2300      	movs	r3, #0
 8001cba:	4618      	mov	r0, r3
 8001cbc:	3708      	adds	r7, #8
 8001cbe:	46bd      	mov	sp, r7
 8001cc0:	bd80      	pop	{r7, pc}
 8001cc2:	bf00      	nop
 8001cc4:	e000e010 	.word	0xe000e010

08001cc8 <HAL_NVIC_SetPriorityGrouping>:
 8001cc8:	b580      	push	{r7, lr}
 8001cca:	b082      	sub	sp, #8
 8001ccc:	af00      	add	r7, sp, #0
 8001cce:	6078      	str	r0, [r7, #4]
 8001cd0:	6878      	ldr	r0, [r7, #4]
 8001cd2:	f7ff ff29 	bl	8001b28 <__NVIC_SetPriorityGrouping>
 8001cd6:	bf00      	nop
 8001cd8:	3708      	adds	r7, #8
 8001cda:	46bd      	mov	sp, r7
 8001cdc:	bd80      	pop	{r7, pc}

08001cde <HAL_NVIC_SetPriority>:
 8001cde:	b580      	push	{r7, lr}
 8001ce0:	b086      	sub	sp, #24
 8001ce2:	af00      	add	r7, sp, #0
 8001ce4:	4603      	mov	r3, r0
 8001ce6:	60b9      	str	r1, [r7, #8]
 8001ce8:	607a      	str	r2, [r7, #4]
 8001cea:	73fb      	strb	r3, [r7, #15]
 8001cec:	2300      	movs	r3, #0
 8001cee:	617b      	str	r3, [r7, #20]
 8001cf0:	f7ff ff3e 	bl	8001b70 <__NVIC_GetPriorityGrouping>
 8001cf4:	6178      	str	r0, [r7, #20]
 8001cf6:	687a      	ldr	r2, [r7, #4]
 8001cf8:	68b9      	ldr	r1, [r7, #8]
 8001cfa:	6978      	ldr	r0, [r7, #20]
 8001cfc:	f7ff ff8e 	bl	8001c1c <NVIC_EncodePriority>
 8001d00:	4602      	mov	r2, r0
 8001d02:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001d06:	4611      	mov	r1, r2
 8001d08:	4618      	mov	r0, r3
 8001d0a:	f7ff ff5d 	bl	8001bc8 <__NVIC_SetPriority>
 8001d0e:	bf00      	nop
 8001d10:	3718      	adds	r7, #24
 8001d12:	46bd      	mov	sp, r7
 8001d14:	bd80      	pop	{r7, pc}

08001d16 <HAL_NVIC_EnableIRQ>:
 8001d16:	b580      	push	{r7, lr}
 8001d18:	b082      	sub	sp, #8
 8001d1a:	af00      	add	r7, sp, #0
 8001d1c:	4603      	mov	r3, r0
 8001d1e:	71fb      	strb	r3, [r7, #7]
 8001d20:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001d24:	4618      	mov	r0, r3
 8001d26:	f7ff ff31 	bl	8001b8c <__NVIC_EnableIRQ>
 8001d2a:	bf00      	nop
 8001d2c:	3708      	adds	r7, #8
 8001d2e:	46bd      	mov	sp, r7
 8001d30:	bd80      	pop	{r7, pc}

08001d32 <HAL_SYSTICK_Config>:
 8001d32:	b580      	push	{r7, lr}
 8001d34:	b082      	sub	sp, #8
 8001d36:	af00      	add	r7, sp, #0
 8001d38:	6078      	str	r0, [r7, #4]
 8001d3a:	6878      	ldr	r0, [r7, #4]
 8001d3c:	f7ff ffa2 	bl	8001c84 <SysTick_Config>
 8001d40:	4603      	mov	r3, r0
 8001d42:	4618      	mov	r0, r3
 8001d44:	3708      	adds	r7, #8
 8001d46:	46bd      	mov	sp, r7
 8001d48:	bd80      	pop	{r7, pc}

08001d4a <HAL_DMA_Abort>:
 8001d4a:	b580      	push	{r7, lr}
 8001d4c:	b084      	sub	sp, #16
 8001d4e:	af00      	add	r7, sp, #0
 8001d50:	6078      	str	r0, [r7, #4]
 8001d52:	687b      	ldr	r3, [r7, #4]
 8001d54:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001d56:	60fb      	str	r3, [r7, #12]
 8001d58:	f7ff feb6 	bl	8001ac8 <HAL_GetTick>
 8001d5c:	60b8      	str	r0, [r7, #8]
 8001d5e:	687b      	ldr	r3, [r7, #4]
 8001d60:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8001d64:	b2db      	uxtb	r3, r3
 8001d66:	2b02      	cmp	r3, #2
 8001d68:	d008      	beq.n	8001d7c <HAL_DMA_Abort+0x32>
 8001d6a:	687b      	ldr	r3, [r7, #4]
 8001d6c:	2280      	movs	r2, #128	@ 0x80
 8001d6e:	655a      	str	r2, [r3, #84]	@ 0x54
 8001d70:	687b      	ldr	r3, [r7, #4]
 8001d72:	2200      	movs	r2, #0
 8001d74:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8001d78:	2301      	movs	r3, #1
 8001d7a:	e052      	b.n	8001e22 <HAL_DMA_Abort+0xd8>
 8001d7c:	687b      	ldr	r3, [r7, #4]
 8001d7e:	681b      	ldr	r3, [r3, #0]
 8001d80:	681a      	ldr	r2, [r3, #0]
 8001d82:	687b      	ldr	r3, [r7, #4]
 8001d84:	681b      	ldr	r3, [r3, #0]
 8001d86:	f022 0216 	bic.w	r2, r2, #22
 8001d8a:	601a      	str	r2, [r3, #0]
 8001d8c:	687b      	ldr	r3, [r7, #4]
 8001d8e:	681b      	ldr	r3, [r3, #0]
 8001d90:	695a      	ldr	r2, [r3, #20]
 8001d92:	687b      	ldr	r3, [r7, #4]
 8001d94:	681b      	ldr	r3, [r3, #0]
 8001d96:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8001d9a:	615a      	str	r2, [r3, #20]
 8001d9c:	687b      	ldr	r3, [r7, #4]
 8001d9e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001da0:	2b00      	cmp	r3, #0
 8001da2:	d103      	bne.n	8001dac <HAL_DMA_Abort+0x62>
 8001da4:	687b      	ldr	r3, [r7, #4]
 8001da6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001da8:	2b00      	cmp	r3, #0
 8001daa:	d007      	beq.n	8001dbc <HAL_DMA_Abort+0x72>
 8001dac:	687b      	ldr	r3, [r7, #4]
 8001dae:	681b      	ldr	r3, [r3, #0]
 8001db0:	681a      	ldr	r2, [r3, #0]
 8001db2:	687b      	ldr	r3, [r7, #4]
 8001db4:	681b      	ldr	r3, [r3, #0]
 8001db6:	f022 0208 	bic.w	r2, r2, #8
 8001dba:	601a      	str	r2, [r3, #0]
 8001dbc:	687b      	ldr	r3, [r7, #4]
 8001dbe:	681b      	ldr	r3, [r3, #0]
 8001dc0:	681a      	ldr	r2, [r3, #0]
 8001dc2:	687b      	ldr	r3, [r7, #4]
 8001dc4:	681b      	ldr	r3, [r3, #0]
 8001dc6:	f022 0201 	bic.w	r2, r2, #1
 8001dca:	601a      	str	r2, [r3, #0]
 8001dcc:	e013      	b.n	8001df6 <HAL_DMA_Abort+0xac>
 8001dce:	f7ff fe7b 	bl	8001ac8 <HAL_GetTick>
 8001dd2:	4602      	mov	r2, r0
 8001dd4:	68bb      	ldr	r3, [r7, #8]
 8001dd6:	1ad3      	subs	r3, r2, r3
 8001dd8:	2b05      	cmp	r3, #5
 8001dda:	d90c      	bls.n	8001df6 <HAL_DMA_Abort+0xac>
 8001ddc:	687b      	ldr	r3, [r7, #4]
 8001dde:	2220      	movs	r2, #32
 8001de0:	655a      	str	r2, [r3, #84]	@ 0x54
 8001de2:	687b      	ldr	r3, [r7, #4]
 8001de4:	2203      	movs	r2, #3
 8001de6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8001dea:	687b      	ldr	r3, [r7, #4]
 8001dec:	2200      	movs	r2, #0
 8001dee:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8001df2:	2303      	movs	r3, #3
 8001df4:	e015      	b.n	8001e22 <HAL_DMA_Abort+0xd8>
 8001df6:	687b      	ldr	r3, [r7, #4]
 8001df8:	681b      	ldr	r3, [r3, #0]
 8001dfa:	681b      	ldr	r3, [r3, #0]
 8001dfc:	f003 0301 	and.w	r3, r3, #1
 8001e00:	2b00      	cmp	r3, #0
 8001e02:	d1e4      	bne.n	8001dce <HAL_DMA_Abort+0x84>
 8001e04:	687b      	ldr	r3, [r7, #4]
 8001e06:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8001e08:	223f      	movs	r2, #63	@ 0x3f
 8001e0a:	409a      	lsls	r2, r3
 8001e0c:	68fb      	ldr	r3, [r7, #12]
 8001e0e:	609a      	str	r2, [r3, #8]
 8001e10:	687b      	ldr	r3, [r7, #4]
 8001e12:	2201      	movs	r2, #1
 8001e14:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8001e18:	687b      	ldr	r3, [r7, #4]
 8001e1a:	2200      	movs	r2, #0
 8001e1c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8001e20:	2300      	movs	r3, #0
 8001e22:	4618      	mov	r0, r3
 8001e24:	3710      	adds	r7, #16
 8001e26:	46bd      	mov	sp, r7
 8001e28:	bd80      	pop	{r7, pc}

08001e2a <HAL_DMA_Abort_IT>:
 8001e2a:	b480      	push	{r7}
 8001e2c:	b083      	sub	sp, #12
 8001e2e:	af00      	add	r7, sp, #0
 8001e30:	6078      	str	r0, [r7, #4]
 8001e32:	687b      	ldr	r3, [r7, #4]
 8001e34:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8001e38:	b2db      	uxtb	r3, r3
 8001e3a:	2b02      	cmp	r3, #2
 8001e3c:	d004      	beq.n	8001e48 <HAL_DMA_Abort_IT+0x1e>
 8001e3e:	687b      	ldr	r3, [r7, #4]
 8001e40:	2280      	movs	r2, #128	@ 0x80
 8001e42:	655a      	str	r2, [r3, #84]	@ 0x54
 8001e44:	2301      	movs	r3, #1
 8001e46:	e00c      	b.n	8001e62 <HAL_DMA_Abort_IT+0x38>
 8001e48:	687b      	ldr	r3, [r7, #4]
 8001e4a:	2205      	movs	r2, #5
 8001e4c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8001e50:	687b      	ldr	r3, [r7, #4]
 8001e52:	681b      	ldr	r3, [r3, #0]
 8001e54:	681a      	ldr	r2, [r3, #0]
 8001e56:	687b      	ldr	r3, [r7, #4]
 8001e58:	681b      	ldr	r3, [r3, #0]
 8001e5a:	f022 0201 	bic.w	r2, r2, #1
 8001e5e:	601a      	str	r2, [r3, #0]
 8001e60:	2300      	movs	r3, #0
 8001e62:	4618      	mov	r0, r3
 8001e64:	370c      	adds	r7, #12
 8001e66:	46bd      	mov	sp, r7
 8001e68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e6c:	4770      	bx	lr
	...

08001e70 <HAL_GPIO_Init>:
 8001e70:	b480      	push	{r7}
 8001e72:	b089      	sub	sp, #36	@ 0x24
 8001e74:	af00      	add	r7, sp, #0
 8001e76:	6078      	str	r0, [r7, #4]
 8001e78:	6039      	str	r1, [r7, #0]
 8001e7a:	2300      	movs	r3, #0
 8001e7c:	617b      	str	r3, [r7, #20]
 8001e7e:	2300      	movs	r3, #0
 8001e80:	613b      	str	r3, [r7, #16]
 8001e82:	2300      	movs	r3, #0
 8001e84:	61bb      	str	r3, [r7, #24]
 8001e86:	2300      	movs	r3, #0
 8001e88:	61fb      	str	r3, [r7, #28]
 8001e8a:	e159      	b.n	8002140 <HAL_GPIO_Init+0x2d0>
 8001e8c:	2201      	movs	r2, #1
 8001e8e:	69fb      	ldr	r3, [r7, #28]
 8001e90:	fa02 f303 	lsl.w	r3, r2, r3
 8001e94:	617b      	str	r3, [r7, #20]
 8001e96:	683b      	ldr	r3, [r7, #0]
 8001e98:	681b      	ldr	r3, [r3, #0]
 8001e9a:	697a      	ldr	r2, [r7, #20]
 8001e9c:	4013      	ands	r3, r2
 8001e9e:	613b      	str	r3, [r7, #16]
 8001ea0:	693a      	ldr	r2, [r7, #16]
 8001ea2:	697b      	ldr	r3, [r7, #20]
 8001ea4:	429a      	cmp	r2, r3
 8001ea6:	f040 8148 	bne.w	800213a <HAL_GPIO_Init+0x2ca>
 8001eaa:	683b      	ldr	r3, [r7, #0]
 8001eac:	685b      	ldr	r3, [r3, #4]
 8001eae:	f003 0303 	and.w	r3, r3, #3
 8001eb2:	2b01      	cmp	r3, #1
 8001eb4:	d005      	beq.n	8001ec2 <HAL_GPIO_Init+0x52>
 8001eb6:	683b      	ldr	r3, [r7, #0]
 8001eb8:	685b      	ldr	r3, [r3, #4]
 8001eba:	f003 0303 	and.w	r3, r3, #3
 8001ebe:	2b02      	cmp	r3, #2
 8001ec0:	d130      	bne.n	8001f24 <HAL_GPIO_Init+0xb4>
 8001ec2:	687b      	ldr	r3, [r7, #4]
 8001ec4:	689b      	ldr	r3, [r3, #8]
 8001ec6:	61bb      	str	r3, [r7, #24]
 8001ec8:	69fb      	ldr	r3, [r7, #28]
 8001eca:	005b      	lsls	r3, r3, #1
 8001ecc:	2203      	movs	r2, #3
 8001ece:	fa02 f303 	lsl.w	r3, r2, r3
 8001ed2:	43db      	mvns	r3, r3
 8001ed4:	69ba      	ldr	r2, [r7, #24]
 8001ed6:	4013      	ands	r3, r2
 8001ed8:	61bb      	str	r3, [r7, #24]
 8001eda:	683b      	ldr	r3, [r7, #0]
 8001edc:	68da      	ldr	r2, [r3, #12]
 8001ede:	69fb      	ldr	r3, [r7, #28]
 8001ee0:	005b      	lsls	r3, r3, #1
 8001ee2:	fa02 f303 	lsl.w	r3, r2, r3
 8001ee6:	69ba      	ldr	r2, [r7, #24]
 8001ee8:	4313      	orrs	r3, r2
 8001eea:	61bb      	str	r3, [r7, #24]
 8001eec:	687b      	ldr	r3, [r7, #4]
 8001eee:	69ba      	ldr	r2, [r7, #24]
 8001ef0:	609a      	str	r2, [r3, #8]
 8001ef2:	687b      	ldr	r3, [r7, #4]
 8001ef4:	685b      	ldr	r3, [r3, #4]
 8001ef6:	61bb      	str	r3, [r7, #24]
 8001ef8:	2201      	movs	r2, #1
 8001efa:	69fb      	ldr	r3, [r7, #28]
 8001efc:	fa02 f303 	lsl.w	r3, r2, r3
 8001f00:	43db      	mvns	r3, r3
 8001f02:	69ba      	ldr	r2, [r7, #24]
 8001f04:	4013      	ands	r3, r2
 8001f06:	61bb      	str	r3, [r7, #24]
 8001f08:	683b      	ldr	r3, [r7, #0]
 8001f0a:	685b      	ldr	r3, [r3, #4]
 8001f0c:	091b      	lsrs	r3, r3, #4
 8001f0e:	f003 0201 	and.w	r2, r3, #1
 8001f12:	69fb      	ldr	r3, [r7, #28]
 8001f14:	fa02 f303 	lsl.w	r3, r2, r3
 8001f18:	69ba      	ldr	r2, [r7, #24]
 8001f1a:	4313      	orrs	r3, r2
 8001f1c:	61bb      	str	r3, [r7, #24]
 8001f1e:	687b      	ldr	r3, [r7, #4]
 8001f20:	69ba      	ldr	r2, [r7, #24]
 8001f22:	605a      	str	r2, [r3, #4]
 8001f24:	683b      	ldr	r3, [r7, #0]
 8001f26:	685b      	ldr	r3, [r3, #4]
 8001f28:	f003 0303 	and.w	r3, r3, #3
 8001f2c:	2b03      	cmp	r3, #3
 8001f2e:	d017      	beq.n	8001f60 <HAL_GPIO_Init+0xf0>
 8001f30:	687b      	ldr	r3, [r7, #4]
 8001f32:	68db      	ldr	r3, [r3, #12]
 8001f34:	61bb      	str	r3, [r7, #24]
 8001f36:	69fb      	ldr	r3, [r7, #28]
 8001f38:	005b      	lsls	r3, r3, #1
 8001f3a:	2203      	movs	r2, #3
 8001f3c:	fa02 f303 	lsl.w	r3, r2, r3
 8001f40:	43db      	mvns	r3, r3
 8001f42:	69ba      	ldr	r2, [r7, #24]
 8001f44:	4013      	ands	r3, r2
 8001f46:	61bb      	str	r3, [r7, #24]
 8001f48:	683b      	ldr	r3, [r7, #0]
 8001f4a:	689a      	ldr	r2, [r3, #8]
 8001f4c:	69fb      	ldr	r3, [r7, #28]
 8001f4e:	005b      	lsls	r3, r3, #1
 8001f50:	fa02 f303 	lsl.w	r3, r2, r3
 8001f54:	69ba      	ldr	r2, [r7, #24]
 8001f56:	4313      	orrs	r3, r2
 8001f58:	61bb      	str	r3, [r7, #24]
 8001f5a:	687b      	ldr	r3, [r7, #4]
 8001f5c:	69ba      	ldr	r2, [r7, #24]
 8001f5e:	60da      	str	r2, [r3, #12]
 8001f60:	683b      	ldr	r3, [r7, #0]
 8001f62:	685b      	ldr	r3, [r3, #4]
 8001f64:	f003 0303 	and.w	r3, r3, #3
 8001f68:	2b02      	cmp	r3, #2
 8001f6a:	d123      	bne.n	8001fb4 <HAL_GPIO_Init+0x144>
 8001f6c:	69fb      	ldr	r3, [r7, #28]
 8001f6e:	08da      	lsrs	r2, r3, #3
 8001f70:	687b      	ldr	r3, [r7, #4]
 8001f72:	3208      	adds	r2, #8
 8001f74:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001f78:	61bb      	str	r3, [r7, #24]
 8001f7a:	69fb      	ldr	r3, [r7, #28]
 8001f7c:	f003 0307 	and.w	r3, r3, #7
 8001f80:	009b      	lsls	r3, r3, #2
 8001f82:	220f      	movs	r2, #15
 8001f84:	fa02 f303 	lsl.w	r3, r2, r3
 8001f88:	43db      	mvns	r3, r3
 8001f8a:	69ba      	ldr	r2, [r7, #24]
 8001f8c:	4013      	ands	r3, r2
 8001f8e:	61bb      	str	r3, [r7, #24]
 8001f90:	683b      	ldr	r3, [r7, #0]
 8001f92:	691a      	ldr	r2, [r3, #16]
 8001f94:	69fb      	ldr	r3, [r7, #28]
 8001f96:	f003 0307 	and.w	r3, r3, #7
 8001f9a:	009b      	lsls	r3, r3, #2
 8001f9c:	fa02 f303 	lsl.w	r3, r2, r3
 8001fa0:	69ba      	ldr	r2, [r7, #24]
 8001fa2:	4313      	orrs	r3, r2
 8001fa4:	61bb      	str	r3, [r7, #24]
 8001fa6:	69fb      	ldr	r3, [r7, #28]
 8001fa8:	08da      	lsrs	r2, r3, #3
 8001faa:	687b      	ldr	r3, [r7, #4]
 8001fac:	3208      	adds	r2, #8
 8001fae:	69b9      	ldr	r1, [r7, #24]
 8001fb0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001fb4:	687b      	ldr	r3, [r7, #4]
 8001fb6:	681b      	ldr	r3, [r3, #0]
 8001fb8:	61bb      	str	r3, [r7, #24]
 8001fba:	69fb      	ldr	r3, [r7, #28]
 8001fbc:	005b      	lsls	r3, r3, #1
 8001fbe:	2203      	movs	r2, #3
 8001fc0:	fa02 f303 	lsl.w	r3, r2, r3
 8001fc4:	43db      	mvns	r3, r3
 8001fc6:	69ba      	ldr	r2, [r7, #24]
 8001fc8:	4013      	ands	r3, r2
 8001fca:	61bb      	str	r3, [r7, #24]
 8001fcc:	683b      	ldr	r3, [r7, #0]
 8001fce:	685b      	ldr	r3, [r3, #4]
 8001fd0:	f003 0203 	and.w	r2, r3, #3
 8001fd4:	69fb      	ldr	r3, [r7, #28]
 8001fd6:	005b      	lsls	r3, r3, #1
 8001fd8:	fa02 f303 	lsl.w	r3, r2, r3
 8001fdc:	69ba      	ldr	r2, [r7, #24]
 8001fde:	4313      	orrs	r3, r2
 8001fe0:	61bb      	str	r3, [r7, #24]
 8001fe2:	687b      	ldr	r3, [r7, #4]
 8001fe4:	69ba      	ldr	r2, [r7, #24]
 8001fe6:	601a      	str	r2, [r3, #0]
 8001fe8:	683b      	ldr	r3, [r7, #0]
 8001fea:	685b      	ldr	r3, [r3, #4]
 8001fec:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8001ff0:	2b00      	cmp	r3, #0
 8001ff2:	f000 80a2 	beq.w	800213a <HAL_GPIO_Init+0x2ca>
 8001ff6:	2300      	movs	r3, #0
 8001ff8:	60fb      	str	r3, [r7, #12]
 8001ffa:	4b57      	ldr	r3, [pc, #348]	@ (8002158 <HAL_GPIO_Init+0x2e8>)
 8001ffc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001ffe:	4a56      	ldr	r2, [pc, #344]	@ (8002158 <HAL_GPIO_Init+0x2e8>)
 8002000:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002004:	6453      	str	r3, [r2, #68]	@ 0x44
 8002006:	4b54      	ldr	r3, [pc, #336]	@ (8002158 <HAL_GPIO_Init+0x2e8>)
 8002008:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800200a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800200e:	60fb      	str	r3, [r7, #12]
 8002010:	68fb      	ldr	r3, [r7, #12]
 8002012:	4a52      	ldr	r2, [pc, #328]	@ (800215c <HAL_GPIO_Init+0x2ec>)
 8002014:	69fb      	ldr	r3, [r7, #28]
 8002016:	089b      	lsrs	r3, r3, #2
 8002018:	3302      	adds	r3, #2
 800201a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800201e:	61bb      	str	r3, [r7, #24]
 8002020:	69fb      	ldr	r3, [r7, #28]
 8002022:	f003 0303 	and.w	r3, r3, #3
 8002026:	009b      	lsls	r3, r3, #2
 8002028:	220f      	movs	r2, #15
 800202a:	fa02 f303 	lsl.w	r3, r2, r3
 800202e:	43db      	mvns	r3, r3
 8002030:	69ba      	ldr	r2, [r7, #24]
 8002032:	4013      	ands	r3, r2
 8002034:	61bb      	str	r3, [r7, #24]
 8002036:	687b      	ldr	r3, [r7, #4]
 8002038:	4a49      	ldr	r2, [pc, #292]	@ (8002160 <HAL_GPIO_Init+0x2f0>)
 800203a:	4293      	cmp	r3, r2
 800203c:	d019      	beq.n	8002072 <HAL_GPIO_Init+0x202>
 800203e:	687b      	ldr	r3, [r7, #4]
 8002040:	4a48      	ldr	r2, [pc, #288]	@ (8002164 <HAL_GPIO_Init+0x2f4>)
 8002042:	4293      	cmp	r3, r2
 8002044:	d013      	beq.n	800206e <HAL_GPIO_Init+0x1fe>
 8002046:	687b      	ldr	r3, [r7, #4]
 8002048:	4a47      	ldr	r2, [pc, #284]	@ (8002168 <HAL_GPIO_Init+0x2f8>)
 800204a:	4293      	cmp	r3, r2
 800204c:	d00d      	beq.n	800206a <HAL_GPIO_Init+0x1fa>
 800204e:	687b      	ldr	r3, [r7, #4]
 8002050:	4a46      	ldr	r2, [pc, #280]	@ (800216c <HAL_GPIO_Init+0x2fc>)
 8002052:	4293      	cmp	r3, r2
 8002054:	d007      	beq.n	8002066 <HAL_GPIO_Init+0x1f6>
 8002056:	687b      	ldr	r3, [r7, #4]
 8002058:	4a45      	ldr	r2, [pc, #276]	@ (8002170 <HAL_GPIO_Init+0x300>)
 800205a:	4293      	cmp	r3, r2
 800205c:	d101      	bne.n	8002062 <HAL_GPIO_Init+0x1f2>
 800205e:	2304      	movs	r3, #4
 8002060:	e008      	b.n	8002074 <HAL_GPIO_Init+0x204>
 8002062:	2307      	movs	r3, #7
 8002064:	e006      	b.n	8002074 <HAL_GPIO_Init+0x204>
 8002066:	2303      	movs	r3, #3
 8002068:	e004      	b.n	8002074 <HAL_GPIO_Init+0x204>
 800206a:	2302      	movs	r3, #2
 800206c:	e002      	b.n	8002074 <HAL_GPIO_Init+0x204>
 800206e:	2301      	movs	r3, #1
 8002070:	e000      	b.n	8002074 <HAL_GPIO_Init+0x204>
 8002072:	2300      	movs	r3, #0
 8002074:	69fa      	ldr	r2, [r7, #28]
 8002076:	f002 0203 	and.w	r2, r2, #3
 800207a:	0092      	lsls	r2, r2, #2
 800207c:	4093      	lsls	r3, r2
 800207e:	69ba      	ldr	r2, [r7, #24]
 8002080:	4313      	orrs	r3, r2
 8002082:	61bb      	str	r3, [r7, #24]
 8002084:	4935      	ldr	r1, [pc, #212]	@ (800215c <HAL_GPIO_Init+0x2ec>)
 8002086:	69fb      	ldr	r3, [r7, #28]
 8002088:	089b      	lsrs	r3, r3, #2
 800208a:	3302      	adds	r3, #2
 800208c:	69ba      	ldr	r2, [r7, #24]
 800208e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002092:	4b38      	ldr	r3, [pc, #224]	@ (8002174 <HAL_GPIO_Init+0x304>)
 8002094:	689b      	ldr	r3, [r3, #8]
 8002096:	61bb      	str	r3, [r7, #24]
 8002098:	693b      	ldr	r3, [r7, #16]
 800209a:	43db      	mvns	r3, r3
 800209c:	69ba      	ldr	r2, [r7, #24]
 800209e:	4013      	ands	r3, r2
 80020a0:	61bb      	str	r3, [r7, #24]
 80020a2:	683b      	ldr	r3, [r7, #0]
 80020a4:	685b      	ldr	r3, [r3, #4]
 80020a6:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80020aa:	2b00      	cmp	r3, #0
 80020ac:	d003      	beq.n	80020b6 <HAL_GPIO_Init+0x246>
 80020ae:	69ba      	ldr	r2, [r7, #24]
 80020b0:	693b      	ldr	r3, [r7, #16]
 80020b2:	4313      	orrs	r3, r2
 80020b4:	61bb      	str	r3, [r7, #24]
 80020b6:	4a2f      	ldr	r2, [pc, #188]	@ (8002174 <HAL_GPIO_Init+0x304>)
 80020b8:	69bb      	ldr	r3, [r7, #24]
 80020ba:	6093      	str	r3, [r2, #8]
 80020bc:	4b2d      	ldr	r3, [pc, #180]	@ (8002174 <HAL_GPIO_Init+0x304>)
 80020be:	68db      	ldr	r3, [r3, #12]
 80020c0:	61bb      	str	r3, [r7, #24]
 80020c2:	693b      	ldr	r3, [r7, #16]
 80020c4:	43db      	mvns	r3, r3
 80020c6:	69ba      	ldr	r2, [r7, #24]
 80020c8:	4013      	ands	r3, r2
 80020ca:	61bb      	str	r3, [r7, #24]
 80020cc:	683b      	ldr	r3, [r7, #0]
 80020ce:	685b      	ldr	r3, [r3, #4]
 80020d0:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80020d4:	2b00      	cmp	r3, #0
 80020d6:	d003      	beq.n	80020e0 <HAL_GPIO_Init+0x270>
 80020d8:	69ba      	ldr	r2, [r7, #24]
 80020da:	693b      	ldr	r3, [r7, #16]
 80020dc:	4313      	orrs	r3, r2
 80020de:	61bb      	str	r3, [r7, #24]
 80020e0:	4a24      	ldr	r2, [pc, #144]	@ (8002174 <HAL_GPIO_Init+0x304>)
 80020e2:	69bb      	ldr	r3, [r7, #24]
 80020e4:	60d3      	str	r3, [r2, #12]
 80020e6:	4b23      	ldr	r3, [pc, #140]	@ (8002174 <HAL_GPIO_Init+0x304>)
 80020e8:	685b      	ldr	r3, [r3, #4]
 80020ea:	61bb      	str	r3, [r7, #24]
 80020ec:	693b      	ldr	r3, [r7, #16]
 80020ee:	43db      	mvns	r3, r3
 80020f0:	69ba      	ldr	r2, [r7, #24]
 80020f2:	4013      	ands	r3, r2
 80020f4:	61bb      	str	r3, [r7, #24]
 80020f6:	683b      	ldr	r3, [r7, #0]
 80020f8:	685b      	ldr	r3, [r3, #4]
 80020fa:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80020fe:	2b00      	cmp	r3, #0
 8002100:	d003      	beq.n	800210a <HAL_GPIO_Init+0x29a>
 8002102:	69ba      	ldr	r2, [r7, #24]
 8002104:	693b      	ldr	r3, [r7, #16]
 8002106:	4313      	orrs	r3, r2
 8002108:	61bb      	str	r3, [r7, #24]
 800210a:	4a1a      	ldr	r2, [pc, #104]	@ (8002174 <HAL_GPIO_Init+0x304>)
 800210c:	69bb      	ldr	r3, [r7, #24]
 800210e:	6053      	str	r3, [r2, #4]
 8002110:	4b18      	ldr	r3, [pc, #96]	@ (8002174 <HAL_GPIO_Init+0x304>)
 8002112:	681b      	ldr	r3, [r3, #0]
 8002114:	61bb      	str	r3, [r7, #24]
 8002116:	693b      	ldr	r3, [r7, #16]
 8002118:	43db      	mvns	r3, r3
 800211a:	69ba      	ldr	r2, [r7, #24]
 800211c:	4013      	ands	r3, r2
 800211e:	61bb      	str	r3, [r7, #24]
 8002120:	683b      	ldr	r3, [r7, #0]
 8002122:	685b      	ldr	r3, [r3, #4]
 8002124:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8002128:	2b00      	cmp	r3, #0
 800212a:	d003      	beq.n	8002134 <HAL_GPIO_Init+0x2c4>
 800212c:	69ba      	ldr	r2, [r7, #24]
 800212e:	693b      	ldr	r3, [r7, #16]
 8002130:	4313      	orrs	r3, r2
 8002132:	61bb      	str	r3, [r7, #24]
 8002134:	4a0f      	ldr	r2, [pc, #60]	@ (8002174 <HAL_GPIO_Init+0x304>)
 8002136:	69bb      	ldr	r3, [r7, #24]
 8002138:	6013      	str	r3, [r2, #0]
 800213a:	69fb      	ldr	r3, [r7, #28]
 800213c:	3301      	adds	r3, #1
 800213e:	61fb      	str	r3, [r7, #28]
 8002140:	69fb      	ldr	r3, [r7, #28]
 8002142:	2b0f      	cmp	r3, #15
 8002144:	f67f aea2 	bls.w	8001e8c <HAL_GPIO_Init+0x1c>
 8002148:	bf00      	nop
 800214a:	bf00      	nop
 800214c:	3724      	adds	r7, #36	@ 0x24
 800214e:	46bd      	mov	sp, r7
 8002150:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002154:	4770      	bx	lr
 8002156:	bf00      	nop
 8002158:	40023800 	.word	0x40023800
 800215c:	40013800 	.word	0x40013800
 8002160:	40020000 	.word	0x40020000
 8002164:	40020400 	.word	0x40020400
 8002168:	40020800 	.word	0x40020800
 800216c:	40020c00 	.word	0x40020c00
 8002170:	40021000 	.word	0x40021000
 8002174:	40013c00 	.word	0x40013c00

08002178 <HAL_GPIO_WritePin>:
 8002178:	b480      	push	{r7}
 800217a:	b083      	sub	sp, #12
 800217c:	af00      	add	r7, sp, #0
 800217e:	6078      	str	r0, [r7, #4]
 8002180:	460b      	mov	r3, r1
 8002182:	807b      	strh	r3, [r7, #2]
 8002184:	4613      	mov	r3, r2
 8002186:	707b      	strb	r3, [r7, #1]
 8002188:	787b      	ldrb	r3, [r7, #1]
 800218a:	2b00      	cmp	r3, #0
 800218c:	d003      	beq.n	8002196 <HAL_GPIO_WritePin+0x1e>
 800218e:	887a      	ldrh	r2, [r7, #2]
 8002190:	687b      	ldr	r3, [r7, #4]
 8002192:	619a      	str	r2, [r3, #24]
 8002194:	e003      	b.n	800219e <HAL_GPIO_WritePin+0x26>
 8002196:	887b      	ldrh	r3, [r7, #2]
 8002198:	041a      	lsls	r2, r3, #16
 800219a:	687b      	ldr	r3, [r7, #4]
 800219c:	619a      	str	r2, [r3, #24]
 800219e:	bf00      	nop
 80021a0:	370c      	adds	r7, #12
 80021a2:	46bd      	mov	sp, r7
 80021a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021a8:	4770      	bx	lr
	...

080021ac <HAL_GPIO_EXTI_IRQHandler>:
 80021ac:	b580      	push	{r7, lr}
 80021ae:	b082      	sub	sp, #8
 80021b0:	af00      	add	r7, sp, #0
 80021b2:	4603      	mov	r3, r0
 80021b4:	80fb      	strh	r3, [r7, #6]
 80021b6:	4b08      	ldr	r3, [pc, #32]	@ (80021d8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80021b8:	695a      	ldr	r2, [r3, #20]
 80021ba:	88fb      	ldrh	r3, [r7, #6]
 80021bc:	4013      	ands	r3, r2
 80021be:	2b00      	cmp	r3, #0
 80021c0:	d006      	beq.n	80021d0 <HAL_GPIO_EXTI_IRQHandler+0x24>
 80021c2:	4a05      	ldr	r2, [pc, #20]	@ (80021d8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80021c4:	88fb      	ldrh	r3, [r7, #6]
 80021c6:	6153      	str	r3, [r2, #20]
 80021c8:	88fb      	ldrh	r3, [r7, #6]
 80021ca:	4618      	mov	r0, r3
 80021cc:	f7fe fea0 	bl	8000f10 <HAL_GPIO_EXTI_Callback>
 80021d0:	bf00      	nop
 80021d2:	3708      	adds	r7, #8
 80021d4:	46bd      	mov	sp, r7
 80021d6:	bd80      	pop	{r7, pc}
 80021d8:	40013c00 	.word	0x40013c00

080021dc <HAL_I2C_Init>:
 80021dc:	b580      	push	{r7, lr}
 80021de:	b084      	sub	sp, #16
 80021e0:	af00      	add	r7, sp, #0
 80021e2:	6078      	str	r0, [r7, #4]
 80021e4:	687b      	ldr	r3, [r7, #4]
 80021e6:	2b00      	cmp	r3, #0
 80021e8:	d101      	bne.n	80021ee <HAL_I2C_Init+0x12>
 80021ea:	2301      	movs	r3, #1
 80021ec:	e12b      	b.n	8002446 <HAL_I2C_Init+0x26a>
 80021ee:	687b      	ldr	r3, [r7, #4]
 80021f0:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80021f4:	b2db      	uxtb	r3, r3
 80021f6:	2b00      	cmp	r3, #0
 80021f8:	d106      	bne.n	8002208 <HAL_I2C_Init+0x2c>
 80021fa:	687b      	ldr	r3, [r7, #4]
 80021fc:	2200      	movs	r2, #0
 80021fe:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002202:	6878      	ldr	r0, [r7, #4]
 8002204:	f7fe fcc0 	bl	8000b88 <HAL_I2C_MspInit>
 8002208:	687b      	ldr	r3, [r7, #4]
 800220a:	2224      	movs	r2, #36	@ 0x24
 800220c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002210:	687b      	ldr	r3, [r7, #4]
 8002212:	681b      	ldr	r3, [r3, #0]
 8002214:	681a      	ldr	r2, [r3, #0]
 8002216:	687b      	ldr	r3, [r7, #4]
 8002218:	681b      	ldr	r3, [r3, #0]
 800221a:	f022 0201 	bic.w	r2, r2, #1
 800221e:	601a      	str	r2, [r3, #0]
 8002220:	687b      	ldr	r3, [r7, #4]
 8002222:	681b      	ldr	r3, [r3, #0]
 8002224:	681a      	ldr	r2, [r3, #0]
 8002226:	687b      	ldr	r3, [r7, #4]
 8002228:	681b      	ldr	r3, [r3, #0]
 800222a:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800222e:	601a      	str	r2, [r3, #0]
 8002230:	687b      	ldr	r3, [r7, #4]
 8002232:	681b      	ldr	r3, [r3, #0]
 8002234:	681a      	ldr	r2, [r3, #0]
 8002236:	687b      	ldr	r3, [r7, #4]
 8002238:	681b      	ldr	r3, [r3, #0]
 800223a:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800223e:	601a      	str	r2, [r3, #0]
 8002240:	f001 fd24 	bl	8003c8c <HAL_RCC_GetPCLK1Freq>
 8002244:	60f8      	str	r0, [r7, #12]
 8002246:	687b      	ldr	r3, [r7, #4]
 8002248:	685b      	ldr	r3, [r3, #4]
 800224a:	4a81      	ldr	r2, [pc, #516]	@ (8002450 <HAL_I2C_Init+0x274>)
 800224c:	4293      	cmp	r3, r2
 800224e:	d807      	bhi.n	8002260 <HAL_I2C_Init+0x84>
 8002250:	68fb      	ldr	r3, [r7, #12]
 8002252:	4a80      	ldr	r2, [pc, #512]	@ (8002454 <HAL_I2C_Init+0x278>)
 8002254:	4293      	cmp	r3, r2
 8002256:	bf94      	ite	ls
 8002258:	2301      	movls	r3, #1
 800225a:	2300      	movhi	r3, #0
 800225c:	b2db      	uxtb	r3, r3
 800225e:	e006      	b.n	800226e <HAL_I2C_Init+0x92>
 8002260:	68fb      	ldr	r3, [r7, #12]
 8002262:	4a7d      	ldr	r2, [pc, #500]	@ (8002458 <HAL_I2C_Init+0x27c>)
 8002264:	4293      	cmp	r3, r2
 8002266:	bf94      	ite	ls
 8002268:	2301      	movls	r3, #1
 800226a:	2300      	movhi	r3, #0
 800226c:	b2db      	uxtb	r3, r3
 800226e:	2b00      	cmp	r3, #0
 8002270:	d001      	beq.n	8002276 <HAL_I2C_Init+0x9a>
 8002272:	2301      	movs	r3, #1
 8002274:	e0e7      	b.n	8002446 <HAL_I2C_Init+0x26a>
 8002276:	68fb      	ldr	r3, [r7, #12]
 8002278:	4a78      	ldr	r2, [pc, #480]	@ (800245c <HAL_I2C_Init+0x280>)
 800227a:	fba2 2303 	umull	r2, r3, r2, r3
 800227e:	0c9b      	lsrs	r3, r3, #18
 8002280:	60bb      	str	r3, [r7, #8]
 8002282:	687b      	ldr	r3, [r7, #4]
 8002284:	681b      	ldr	r3, [r3, #0]
 8002286:	685b      	ldr	r3, [r3, #4]
 8002288:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 800228c:	687b      	ldr	r3, [r7, #4]
 800228e:	681b      	ldr	r3, [r3, #0]
 8002290:	68ba      	ldr	r2, [r7, #8]
 8002292:	430a      	orrs	r2, r1
 8002294:	605a      	str	r2, [r3, #4]
 8002296:	687b      	ldr	r3, [r7, #4]
 8002298:	681b      	ldr	r3, [r3, #0]
 800229a:	6a1b      	ldr	r3, [r3, #32]
 800229c:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 80022a0:	687b      	ldr	r3, [r7, #4]
 80022a2:	685b      	ldr	r3, [r3, #4]
 80022a4:	4a6a      	ldr	r2, [pc, #424]	@ (8002450 <HAL_I2C_Init+0x274>)
 80022a6:	4293      	cmp	r3, r2
 80022a8:	d802      	bhi.n	80022b0 <HAL_I2C_Init+0xd4>
 80022aa:	68bb      	ldr	r3, [r7, #8]
 80022ac:	3301      	adds	r3, #1
 80022ae:	e009      	b.n	80022c4 <HAL_I2C_Init+0xe8>
 80022b0:	68bb      	ldr	r3, [r7, #8]
 80022b2:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 80022b6:	fb02 f303 	mul.w	r3, r2, r3
 80022ba:	4a69      	ldr	r2, [pc, #420]	@ (8002460 <HAL_I2C_Init+0x284>)
 80022bc:	fba2 2303 	umull	r2, r3, r2, r3
 80022c0:	099b      	lsrs	r3, r3, #6
 80022c2:	3301      	adds	r3, #1
 80022c4:	687a      	ldr	r2, [r7, #4]
 80022c6:	6812      	ldr	r2, [r2, #0]
 80022c8:	430b      	orrs	r3, r1
 80022ca:	6213      	str	r3, [r2, #32]
 80022cc:	687b      	ldr	r3, [r7, #4]
 80022ce:	681b      	ldr	r3, [r3, #0]
 80022d0:	69db      	ldr	r3, [r3, #28]
 80022d2:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 80022d6:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 80022da:	687b      	ldr	r3, [r7, #4]
 80022dc:	685b      	ldr	r3, [r3, #4]
 80022de:	495c      	ldr	r1, [pc, #368]	@ (8002450 <HAL_I2C_Init+0x274>)
 80022e0:	428b      	cmp	r3, r1
 80022e2:	d819      	bhi.n	8002318 <HAL_I2C_Init+0x13c>
 80022e4:	68fb      	ldr	r3, [r7, #12]
 80022e6:	1e59      	subs	r1, r3, #1
 80022e8:	687b      	ldr	r3, [r7, #4]
 80022ea:	685b      	ldr	r3, [r3, #4]
 80022ec:	005b      	lsls	r3, r3, #1
 80022ee:	fbb1 f3f3 	udiv	r3, r1, r3
 80022f2:	1c59      	adds	r1, r3, #1
 80022f4:	f640 73fc 	movw	r3, #4092	@ 0xffc
 80022f8:	400b      	ands	r3, r1
 80022fa:	2b00      	cmp	r3, #0
 80022fc:	d00a      	beq.n	8002314 <HAL_I2C_Init+0x138>
 80022fe:	68fb      	ldr	r3, [r7, #12]
 8002300:	1e59      	subs	r1, r3, #1
 8002302:	687b      	ldr	r3, [r7, #4]
 8002304:	685b      	ldr	r3, [r3, #4]
 8002306:	005b      	lsls	r3, r3, #1
 8002308:	fbb1 f3f3 	udiv	r3, r1, r3
 800230c:	3301      	adds	r3, #1
 800230e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002312:	e051      	b.n	80023b8 <HAL_I2C_Init+0x1dc>
 8002314:	2304      	movs	r3, #4
 8002316:	e04f      	b.n	80023b8 <HAL_I2C_Init+0x1dc>
 8002318:	687b      	ldr	r3, [r7, #4]
 800231a:	689b      	ldr	r3, [r3, #8]
 800231c:	2b00      	cmp	r3, #0
 800231e:	d111      	bne.n	8002344 <HAL_I2C_Init+0x168>
 8002320:	68fb      	ldr	r3, [r7, #12]
 8002322:	1e58      	subs	r0, r3, #1
 8002324:	687b      	ldr	r3, [r7, #4]
 8002326:	6859      	ldr	r1, [r3, #4]
 8002328:	460b      	mov	r3, r1
 800232a:	005b      	lsls	r3, r3, #1
 800232c:	440b      	add	r3, r1
 800232e:	fbb0 f3f3 	udiv	r3, r0, r3
 8002332:	3301      	adds	r3, #1
 8002334:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002338:	2b00      	cmp	r3, #0
 800233a:	bf0c      	ite	eq
 800233c:	2301      	moveq	r3, #1
 800233e:	2300      	movne	r3, #0
 8002340:	b2db      	uxtb	r3, r3
 8002342:	e012      	b.n	800236a <HAL_I2C_Init+0x18e>
 8002344:	68fb      	ldr	r3, [r7, #12]
 8002346:	1e58      	subs	r0, r3, #1
 8002348:	687b      	ldr	r3, [r7, #4]
 800234a:	6859      	ldr	r1, [r3, #4]
 800234c:	460b      	mov	r3, r1
 800234e:	009b      	lsls	r3, r3, #2
 8002350:	440b      	add	r3, r1
 8002352:	0099      	lsls	r1, r3, #2
 8002354:	440b      	add	r3, r1
 8002356:	fbb0 f3f3 	udiv	r3, r0, r3
 800235a:	3301      	adds	r3, #1
 800235c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002360:	2b00      	cmp	r3, #0
 8002362:	bf0c      	ite	eq
 8002364:	2301      	moveq	r3, #1
 8002366:	2300      	movne	r3, #0
 8002368:	b2db      	uxtb	r3, r3
 800236a:	2b00      	cmp	r3, #0
 800236c:	d001      	beq.n	8002372 <HAL_I2C_Init+0x196>
 800236e:	2301      	movs	r3, #1
 8002370:	e022      	b.n	80023b8 <HAL_I2C_Init+0x1dc>
 8002372:	687b      	ldr	r3, [r7, #4]
 8002374:	689b      	ldr	r3, [r3, #8]
 8002376:	2b00      	cmp	r3, #0
 8002378:	d10e      	bne.n	8002398 <HAL_I2C_Init+0x1bc>
 800237a:	68fb      	ldr	r3, [r7, #12]
 800237c:	1e58      	subs	r0, r3, #1
 800237e:	687b      	ldr	r3, [r7, #4]
 8002380:	6859      	ldr	r1, [r3, #4]
 8002382:	460b      	mov	r3, r1
 8002384:	005b      	lsls	r3, r3, #1
 8002386:	440b      	add	r3, r1
 8002388:	fbb0 f3f3 	udiv	r3, r0, r3
 800238c:	3301      	adds	r3, #1
 800238e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002392:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8002396:	e00f      	b.n	80023b8 <HAL_I2C_Init+0x1dc>
 8002398:	68fb      	ldr	r3, [r7, #12]
 800239a:	1e58      	subs	r0, r3, #1
 800239c:	687b      	ldr	r3, [r7, #4]
 800239e:	6859      	ldr	r1, [r3, #4]
 80023a0:	460b      	mov	r3, r1
 80023a2:	009b      	lsls	r3, r3, #2
 80023a4:	440b      	add	r3, r1
 80023a6:	0099      	lsls	r1, r3, #2
 80023a8:	440b      	add	r3, r1
 80023aa:	fbb0 f3f3 	udiv	r3, r0, r3
 80023ae:	3301      	adds	r3, #1
 80023b0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80023b4:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80023b8:	6879      	ldr	r1, [r7, #4]
 80023ba:	6809      	ldr	r1, [r1, #0]
 80023bc:	4313      	orrs	r3, r2
 80023be:	61cb      	str	r3, [r1, #28]
 80023c0:	687b      	ldr	r3, [r7, #4]
 80023c2:	681b      	ldr	r3, [r3, #0]
 80023c4:	681b      	ldr	r3, [r3, #0]
 80023c6:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 80023ca:	687b      	ldr	r3, [r7, #4]
 80023cc:	69da      	ldr	r2, [r3, #28]
 80023ce:	687b      	ldr	r3, [r7, #4]
 80023d0:	6a1b      	ldr	r3, [r3, #32]
 80023d2:	431a      	orrs	r2, r3
 80023d4:	687b      	ldr	r3, [r7, #4]
 80023d6:	681b      	ldr	r3, [r3, #0]
 80023d8:	430a      	orrs	r2, r1
 80023da:	601a      	str	r2, [r3, #0]
 80023dc:	687b      	ldr	r3, [r7, #4]
 80023de:	681b      	ldr	r3, [r3, #0]
 80023e0:	689b      	ldr	r3, [r3, #8]
 80023e2:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 80023e6:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 80023ea:	687a      	ldr	r2, [r7, #4]
 80023ec:	6911      	ldr	r1, [r2, #16]
 80023ee:	687a      	ldr	r2, [r7, #4]
 80023f0:	68d2      	ldr	r2, [r2, #12]
 80023f2:	4311      	orrs	r1, r2
 80023f4:	687a      	ldr	r2, [r7, #4]
 80023f6:	6812      	ldr	r2, [r2, #0]
 80023f8:	430b      	orrs	r3, r1
 80023fa:	6093      	str	r3, [r2, #8]
 80023fc:	687b      	ldr	r3, [r7, #4]
 80023fe:	681b      	ldr	r3, [r3, #0]
 8002400:	68db      	ldr	r3, [r3, #12]
 8002402:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 8002406:	687b      	ldr	r3, [r7, #4]
 8002408:	695a      	ldr	r2, [r3, #20]
 800240a:	687b      	ldr	r3, [r7, #4]
 800240c:	699b      	ldr	r3, [r3, #24]
 800240e:	431a      	orrs	r2, r3
 8002410:	687b      	ldr	r3, [r7, #4]
 8002412:	681b      	ldr	r3, [r3, #0]
 8002414:	430a      	orrs	r2, r1
 8002416:	60da      	str	r2, [r3, #12]
 8002418:	687b      	ldr	r3, [r7, #4]
 800241a:	681b      	ldr	r3, [r3, #0]
 800241c:	681a      	ldr	r2, [r3, #0]
 800241e:	687b      	ldr	r3, [r7, #4]
 8002420:	681b      	ldr	r3, [r3, #0]
 8002422:	f042 0201 	orr.w	r2, r2, #1
 8002426:	601a      	str	r2, [r3, #0]
 8002428:	687b      	ldr	r3, [r7, #4]
 800242a:	2200      	movs	r2, #0
 800242c:	641a      	str	r2, [r3, #64]	@ 0x40
 800242e:	687b      	ldr	r3, [r7, #4]
 8002430:	2220      	movs	r2, #32
 8002432:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002436:	687b      	ldr	r3, [r7, #4]
 8002438:	2200      	movs	r2, #0
 800243a:	631a      	str	r2, [r3, #48]	@ 0x30
 800243c:	687b      	ldr	r3, [r7, #4]
 800243e:	2200      	movs	r2, #0
 8002440:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002444:	2300      	movs	r3, #0
 8002446:	4618      	mov	r0, r3
 8002448:	3710      	adds	r7, #16
 800244a:	46bd      	mov	sp, r7
 800244c:	bd80      	pop	{r7, pc}
 800244e:	bf00      	nop
 8002450:	000186a0 	.word	0x000186a0
 8002454:	001e847f 	.word	0x001e847f
 8002458:	003d08ff 	.word	0x003d08ff
 800245c:	431bde83 	.word	0x431bde83
 8002460:	10624dd3 	.word	0x10624dd3

08002464 <HAL_I2C_Master_Transmit>:
 8002464:	b580      	push	{r7, lr}
 8002466:	b088      	sub	sp, #32
 8002468:	af02      	add	r7, sp, #8
 800246a:	60f8      	str	r0, [r7, #12]
 800246c:	607a      	str	r2, [r7, #4]
 800246e:	461a      	mov	r2, r3
 8002470:	460b      	mov	r3, r1
 8002472:	817b      	strh	r3, [r7, #10]
 8002474:	4613      	mov	r3, r2
 8002476:	813b      	strh	r3, [r7, #8]
 8002478:	f7ff fb26 	bl	8001ac8 <HAL_GetTick>
 800247c:	6178      	str	r0, [r7, #20]
 800247e:	68fb      	ldr	r3, [r7, #12]
 8002480:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002484:	b2db      	uxtb	r3, r3
 8002486:	2b20      	cmp	r3, #32
 8002488:	f040 80e0 	bne.w	800264c <HAL_I2C_Master_Transmit+0x1e8>
 800248c:	697b      	ldr	r3, [r7, #20]
 800248e:	9300      	str	r3, [sp, #0]
 8002490:	2319      	movs	r3, #25
 8002492:	2201      	movs	r2, #1
 8002494:	4970      	ldr	r1, [pc, #448]	@ (8002658 <HAL_I2C_Master_Transmit+0x1f4>)
 8002496:	68f8      	ldr	r0, [r7, #12]
 8002498:	f000 fd92 	bl	8002fc0 <I2C_WaitOnFlagUntilTimeout>
 800249c:	4603      	mov	r3, r0
 800249e:	2b00      	cmp	r3, #0
 80024a0:	d001      	beq.n	80024a6 <HAL_I2C_Master_Transmit+0x42>
 80024a2:	2302      	movs	r3, #2
 80024a4:	e0d3      	b.n	800264e <HAL_I2C_Master_Transmit+0x1ea>
 80024a6:	68fb      	ldr	r3, [r7, #12]
 80024a8:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80024ac:	2b01      	cmp	r3, #1
 80024ae:	d101      	bne.n	80024b4 <HAL_I2C_Master_Transmit+0x50>
 80024b0:	2302      	movs	r3, #2
 80024b2:	e0cc      	b.n	800264e <HAL_I2C_Master_Transmit+0x1ea>
 80024b4:	68fb      	ldr	r3, [r7, #12]
 80024b6:	2201      	movs	r2, #1
 80024b8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80024bc:	68fb      	ldr	r3, [r7, #12]
 80024be:	681b      	ldr	r3, [r3, #0]
 80024c0:	681b      	ldr	r3, [r3, #0]
 80024c2:	f003 0301 	and.w	r3, r3, #1
 80024c6:	2b01      	cmp	r3, #1
 80024c8:	d007      	beq.n	80024da <HAL_I2C_Master_Transmit+0x76>
 80024ca:	68fb      	ldr	r3, [r7, #12]
 80024cc:	681b      	ldr	r3, [r3, #0]
 80024ce:	681a      	ldr	r2, [r3, #0]
 80024d0:	68fb      	ldr	r3, [r7, #12]
 80024d2:	681b      	ldr	r3, [r3, #0]
 80024d4:	f042 0201 	orr.w	r2, r2, #1
 80024d8:	601a      	str	r2, [r3, #0]
 80024da:	68fb      	ldr	r3, [r7, #12]
 80024dc:	681b      	ldr	r3, [r3, #0]
 80024de:	681a      	ldr	r2, [r3, #0]
 80024e0:	68fb      	ldr	r3, [r7, #12]
 80024e2:	681b      	ldr	r3, [r3, #0]
 80024e4:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80024e8:	601a      	str	r2, [r3, #0]
 80024ea:	68fb      	ldr	r3, [r7, #12]
 80024ec:	2221      	movs	r2, #33	@ 0x21
 80024ee:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80024f2:	68fb      	ldr	r3, [r7, #12]
 80024f4:	2210      	movs	r2, #16
 80024f6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80024fa:	68fb      	ldr	r3, [r7, #12]
 80024fc:	2200      	movs	r2, #0
 80024fe:	641a      	str	r2, [r3, #64]	@ 0x40
 8002500:	68fb      	ldr	r3, [r7, #12]
 8002502:	687a      	ldr	r2, [r7, #4]
 8002504:	625a      	str	r2, [r3, #36]	@ 0x24
 8002506:	68fb      	ldr	r3, [r7, #12]
 8002508:	893a      	ldrh	r2, [r7, #8]
 800250a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800250c:	68fb      	ldr	r3, [r7, #12]
 800250e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002510:	b29a      	uxth	r2, r3
 8002512:	68fb      	ldr	r3, [r7, #12]
 8002514:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002516:	68fb      	ldr	r3, [r7, #12]
 8002518:	4a50      	ldr	r2, [pc, #320]	@ (800265c <HAL_I2C_Master_Transmit+0x1f8>)
 800251a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800251c:	8979      	ldrh	r1, [r7, #10]
 800251e:	697b      	ldr	r3, [r7, #20]
 8002520:	6a3a      	ldr	r2, [r7, #32]
 8002522:	68f8      	ldr	r0, [r7, #12]
 8002524:	f000 fbfc 	bl	8002d20 <I2C_MasterRequestWrite>
 8002528:	4603      	mov	r3, r0
 800252a:	2b00      	cmp	r3, #0
 800252c:	d001      	beq.n	8002532 <HAL_I2C_Master_Transmit+0xce>
 800252e:	2301      	movs	r3, #1
 8002530:	e08d      	b.n	800264e <HAL_I2C_Master_Transmit+0x1ea>
 8002532:	2300      	movs	r3, #0
 8002534:	613b      	str	r3, [r7, #16]
 8002536:	68fb      	ldr	r3, [r7, #12]
 8002538:	681b      	ldr	r3, [r3, #0]
 800253a:	695b      	ldr	r3, [r3, #20]
 800253c:	613b      	str	r3, [r7, #16]
 800253e:	68fb      	ldr	r3, [r7, #12]
 8002540:	681b      	ldr	r3, [r3, #0]
 8002542:	699b      	ldr	r3, [r3, #24]
 8002544:	613b      	str	r3, [r7, #16]
 8002546:	693b      	ldr	r3, [r7, #16]
 8002548:	e066      	b.n	8002618 <HAL_I2C_Master_Transmit+0x1b4>
 800254a:	697a      	ldr	r2, [r7, #20]
 800254c:	6a39      	ldr	r1, [r7, #32]
 800254e:	68f8      	ldr	r0, [r7, #12]
 8002550:	f000 fe50 	bl	80031f4 <I2C_WaitOnTXEFlagUntilTimeout>
 8002554:	4603      	mov	r3, r0
 8002556:	2b00      	cmp	r3, #0
 8002558:	d00d      	beq.n	8002576 <HAL_I2C_Master_Transmit+0x112>
 800255a:	68fb      	ldr	r3, [r7, #12]
 800255c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800255e:	2b04      	cmp	r3, #4
 8002560:	d107      	bne.n	8002572 <HAL_I2C_Master_Transmit+0x10e>
 8002562:	68fb      	ldr	r3, [r7, #12]
 8002564:	681b      	ldr	r3, [r3, #0]
 8002566:	681a      	ldr	r2, [r3, #0]
 8002568:	68fb      	ldr	r3, [r7, #12]
 800256a:	681b      	ldr	r3, [r3, #0]
 800256c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8002570:	601a      	str	r2, [r3, #0]
 8002572:	2301      	movs	r3, #1
 8002574:	e06b      	b.n	800264e <HAL_I2C_Master_Transmit+0x1ea>
 8002576:	68fb      	ldr	r3, [r7, #12]
 8002578:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800257a:	781a      	ldrb	r2, [r3, #0]
 800257c:	68fb      	ldr	r3, [r7, #12]
 800257e:	681b      	ldr	r3, [r3, #0]
 8002580:	611a      	str	r2, [r3, #16]
 8002582:	68fb      	ldr	r3, [r7, #12]
 8002584:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002586:	1c5a      	adds	r2, r3, #1
 8002588:	68fb      	ldr	r3, [r7, #12]
 800258a:	625a      	str	r2, [r3, #36]	@ 0x24
 800258c:	68fb      	ldr	r3, [r7, #12]
 800258e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002590:	b29b      	uxth	r3, r3
 8002592:	3b01      	subs	r3, #1
 8002594:	b29a      	uxth	r2, r3
 8002596:	68fb      	ldr	r3, [r7, #12]
 8002598:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800259a:	68fb      	ldr	r3, [r7, #12]
 800259c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800259e:	3b01      	subs	r3, #1
 80025a0:	b29a      	uxth	r2, r3
 80025a2:	68fb      	ldr	r3, [r7, #12]
 80025a4:	851a      	strh	r2, [r3, #40]	@ 0x28
 80025a6:	68fb      	ldr	r3, [r7, #12]
 80025a8:	681b      	ldr	r3, [r3, #0]
 80025aa:	695b      	ldr	r3, [r3, #20]
 80025ac:	f003 0304 	and.w	r3, r3, #4
 80025b0:	2b04      	cmp	r3, #4
 80025b2:	d11b      	bne.n	80025ec <HAL_I2C_Master_Transmit+0x188>
 80025b4:	68fb      	ldr	r3, [r7, #12]
 80025b6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80025b8:	2b00      	cmp	r3, #0
 80025ba:	d017      	beq.n	80025ec <HAL_I2C_Master_Transmit+0x188>
 80025bc:	68fb      	ldr	r3, [r7, #12]
 80025be:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80025c0:	781a      	ldrb	r2, [r3, #0]
 80025c2:	68fb      	ldr	r3, [r7, #12]
 80025c4:	681b      	ldr	r3, [r3, #0]
 80025c6:	611a      	str	r2, [r3, #16]
 80025c8:	68fb      	ldr	r3, [r7, #12]
 80025ca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80025cc:	1c5a      	adds	r2, r3, #1
 80025ce:	68fb      	ldr	r3, [r7, #12]
 80025d0:	625a      	str	r2, [r3, #36]	@ 0x24
 80025d2:	68fb      	ldr	r3, [r7, #12]
 80025d4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80025d6:	b29b      	uxth	r3, r3
 80025d8:	3b01      	subs	r3, #1
 80025da:	b29a      	uxth	r2, r3
 80025dc:	68fb      	ldr	r3, [r7, #12]
 80025de:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80025e0:	68fb      	ldr	r3, [r7, #12]
 80025e2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80025e4:	3b01      	subs	r3, #1
 80025e6:	b29a      	uxth	r2, r3
 80025e8:	68fb      	ldr	r3, [r7, #12]
 80025ea:	851a      	strh	r2, [r3, #40]	@ 0x28
 80025ec:	697a      	ldr	r2, [r7, #20]
 80025ee:	6a39      	ldr	r1, [r7, #32]
 80025f0:	68f8      	ldr	r0, [r7, #12]
 80025f2:	f000 fe47 	bl	8003284 <I2C_WaitOnBTFFlagUntilTimeout>
 80025f6:	4603      	mov	r3, r0
 80025f8:	2b00      	cmp	r3, #0
 80025fa:	d00d      	beq.n	8002618 <HAL_I2C_Master_Transmit+0x1b4>
 80025fc:	68fb      	ldr	r3, [r7, #12]
 80025fe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002600:	2b04      	cmp	r3, #4
 8002602:	d107      	bne.n	8002614 <HAL_I2C_Master_Transmit+0x1b0>
 8002604:	68fb      	ldr	r3, [r7, #12]
 8002606:	681b      	ldr	r3, [r3, #0]
 8002608:	681a      	ldr	r2, [r3, #0]
 800260a:	68fb      	ldr	r3, [r7, #12]
 800260c:	681b      	ldr	r3, [r3, #0]
 800260e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8002612:	601a      	str	r2, [r3, #0]
 8002614:	2301      	movs	r3, #1
 8002616:	e01a      	b.n	800264e <HAL_I2C_Master_Transmit+0x1ea>
 8002618:	68fb      	ldr	r3, [r7, #12]
 800261a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800261c:	2b00      	cmp	r3, #0
 800261e:	d194      	bne.n	800254a <HAL_I2C_Master_Transmit+0xe6>
 8002620:	68fb      	ldr	r3, [r7, #12]
 8002622:	681b      	ldr	r3, [r3, #0]
 8002624:	681a      	ldr	r2, [r3, #0]
 8002626:	68fb      	ldr	r3, [r7, #12]
 8002628:	681b      	ldr	r3, [r3, #0]
 800262a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800262e:	601a      	str	r2, [r3, #0]
 8002630:	68fb      	ldr	r3, [r7, #12]
 8002632:	2220      	movs	r2, #32
 8002634:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002638:	68fb      	ldr	r3, [r7, #12]
 800263a:	2200      	movs	r2, #0
 800263c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002640:	68fb      	ldr	r3, [r7, #12]
 8002642:	2200      	movs	r2, #0
 8002644:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002648:	2300      	movs	r3, #0
 800264a:	e000      	b.n	800264e <HAL_I2C_Master_Transmit+0x1ea>
 800264c:	2302      	movs	r3, #2
 800264e:	4618      	mov	r0, r3
 8002650:	3718      	adds	r7, #24
 8002652:	46bd      	mov	sp, r7
 8002654:	bd80      	pop	{r7, pc}
 8002656:	bf00      	nop
 8002658:	00100002 	.word	0x00100002
 800265c:	ffff0000 	.word	0xffff0000

08002660 <HAL_I2C_Master_Receive>:
 8002660:	b580      	push	{r7, lr}
 8002662:	b08c      	sub	sp, #48	@ 0x30
 8002664:	af02      	add	r7, sp, #8
 8002666:	60f8      	str	r0, [r7, #12]
 8002668:	607a      	str	r2, [r7, #4]
 800266a:	461a      	mov	r2, r3
 800266c:	460b      	mov	r3, r1
 800266e:	817b      	strh	r3, [r7, #10]
 8002670:	4613      	mov	r3, r2
 8002672:	813b      	strh	r3, [r7, #8]
 8002674:	f7ff fa28 	bl	8001ac8 <HAL_GetTick>
 8002678:	6278      	str	r0, [r7, #36]	@ 0x24
 800267a:	68fb      	ldr	r3, [r7, #12]
 800267c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002680:	b2db      	uxtb	r3, r3
 8002682:	2b20      	cmp	r3, #32
 8002684:	f040 8217 	bne.w	8002ab6 <HAL_I2C_Master_Receive+0x456>
 8002688:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800268a:	9300      	str	r3, [sp, #0]
 800268c:	2319      	movs	r3, #25
 800268e:	2201      	movs	r2, #1
 8002690:	497c      	ldr	r1, [pc, #496]	@ (8002884 <HAL_I2C_Master_Receive+0x224>)
 8002692:	68f8      	ldr	r0, [r7, #12]
 8002694:	f000 fc94 	bl	8002fc0 <I2C_WaitOnFlagUntilTimeout>
 8002698:	4603      	mov	r3, r0
 800269a:	2b00      	cmp	r3, #0
 800269c:	d001      	beq.n	80026a2 <HAL_I2C_Master_Receive+0x42>
 800269e:	2302      	movs	r3, #2
 80026a0:	e20a      	b.n	8002ab8 <HAL_I2C_Master_Receive+0x458>
 80026a2:	68fb      	ldr	r3, [r7, #12]
 80026a4:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80026a8:	2b01      	cmp	r3, #1
 80026aa:	d101      	bne.n	80026b0 <HAL_I2C_Master_Receive+0x50>
 80026ac:	2302      	movs	r3, #2
 80026ae:	e203      	b.n	8002ab8 <HAL_I2C_Master_Receive+0x458>
 80026b0:	68fb      	ldr	r3, [r7, #12]
 80026b2:	2201      	movs	r2, #1
 80026b4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80026b8:	68fb      	ldr	r3, [r7, #12]
 80026ba:	681b      	ldr	r3, [r3, #0]
 80026bc:	681b      	ldr	r3, [r3, #0]
 80026be:	f003 0301 	and.w	r3, r3, #1
 80026c2:	2b01      	cmp	r3, #1
 80026c4:	d007      	beq.n	80026d6 <HAL_I2C_Master_Receive+0x76>
 80026c6:	68fb      	ldr	r3, [r7, #12]
 80026c8:	681b      	ldr	r3, [r3, #0]
 80026ca:	681a      	ldr	r2, [r3, #0]
 80026cc:	68fb      	ldr	r3, [r7, #12]
 80026ce:	681b      	ldr	r3, [r3, #0]
 80026d0:	f042 0201 	orr.w	r2, r2, #1
 80026d4:	601a      	str	r2, [r3, #0]
 80026d6:	68fb      	ldr	r3, [r7, #12]
 80026d8:	681b      	ldr	r3, [r3, #0]
 80026da:	681a      	ldr	r2, [r3, #0]
 80026dc:	68fb      	ldr	r3, [r7, #12]
 80026de:	681b      	ldr	r3, [r3, #0]
 80026e0:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80026e4:	601a      	str	r2, [r3, #0]
 80026e6:	68fb      	ldr	r3, [r7, #12]
 80026e8:	2222      	movs	r2, #34	@ 0x22
 80026ea:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80026ee:	68fb      	ldr	r3, [r7, #12]
 80026f0:	2210      	movs	r2, #16
 80026f2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80026f6:	68fb      	ldr	r3, [r7, #12]
 80026f8:	2200      	movs	r2, #0
 80026fa:	641a      	str	r2, [r3, #64]	@ 0x40
 80026fc:	68fb      	ldr	r3, [r7, #12]
 80026fe:	687a      	ldr	r2, [r7, #4]
 8002700:	625a      	str	r2, [r3, #36]	@ 0x24
 8002702:	68fb      	ldr	r3, [r7, #12]
 8002704:	893a      	ldrh	r2, [r7, #8]
 8002706:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8002708:	68fb      	ldr	r3, [r7, #12]
 800270a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800270c:	b29a      	uxth	r2, r3
 800270e:	68fb      	ldr	r3, [r7, #12]
 8002710:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002712:	68fb      	ldr	r3, [r7, #12]
 8002714:	4a5c      	ldr	r2, [pc, #368]	@ (8002888 <HAL_I2C_Master_Receive+0x228>)
 8002716:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002718:	8979      	ldrh	r1, [r7, #10]
 800271a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800271c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800271e:	68f8      	ldr	r0, [r7, #12]
 8002720:	f000 fb80 	bl	8002e24 <I2C_MasterRequestRead>
 8002724:	4603      	mov	r3, r0
 8002726:	2b00      	cmp	r3, #0
 8002728:	d001      	beq.n	800272e <HAL_I2C_Master_Receive+0xce>
 800272a:	2301      	movs	r3, #1
 800272c:	e1c4      	b.n	8002ab8 <HAL_I2C_Master_Receive+0x458>
 800272e:	68fb      	ldr	r3, [r7, #12]
 8002730:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002732:	2b00      	cmp	r3, #0
 8002734:	d113      	bne.n	800275e <HAL_I2C_Master_Receive+0xfe>
 8002736:	2300      	movs	r3, #0
 8002738:	623b      	str	r3, [r7, #32]
 800273a:	68fb      	ldr	r3, [r7, #12]
 800273c:	681b      	ldr	r3, [r3, #0]
 800273e:	695b      	ldr	r3, [r3, #20]
 8002740:	623b      	str	r3, [r7, #32]
 8002742:	68fb      	ldr	r3, [r7, #12]
 8002744:	681b      	ldr	r3, [r3, #0]
 8002746:	699b      	ldr	r3, [r3, #24]
 8002748:	623b      	str	r3, [r7, #32]
 800274a:	6a3b      	ldr	r3, [r7, #32]
 800274c:	68fb      	ldr	r3, [r7, #12]
 800274e:	681b      	ldr	r3, [r3, #0]
 8002750:	681a      	ldr	r2, [r3, #0]
 8002752:	68fb      	ldr	r3, [r7, #12]
 8002754:	681b      	ldr	r3, [r3, #0]
 8002756:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800275a:	601a      	str	r2, [r3, #0]
 800275c:	e198      	b.n	8002a90 <HAL_I2C_Master_Receive+0x430>
 800275e:	68fb      	ldr	r3, [r7, #12]
 8002760:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002762:	2b01      	cmp	r3, #1
 8002764:	d11b      	bne.n	800279e <HAL_I2C_Master_Receive+0x13e>
 8002766:	68fb      	ldr	r3, [r7, #12]
 8002768:	681b      	ldr	r3, [r3, #0]
 800276a:	681a      	ldr	r2, [r3, #0]
 800276c:	68fb      	ldr	r3, [r7, #12]
 800276e:	681b      	ldr	r3, [r3, #0]
 8002770:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8002774:	601a      	str	r2, [r3, #0]
 8002776:	2300      	movs	r3, #0
 8002778:	61fb      	str	r3, [r7, #28]
 800277a:	68fb      	ldr	r3, [r7, #12]
 800277c:	681b      	ldr	r3, [r3, #0]
 800277e:	695b      	ldr	r3, [r3, #20]
 8002780:	61fb      	str	r3, [r7, #28]
 8002782:	68fb      	ldr	r3, [r7, #12]
 8002784:	681b      	ldr	r3, [r3, #0]
 8002786:	699b      	ldr	r3, [r3, #24]
 8002788:	61fb      	str	r3, [r7, #28]
 800278a:	69fb      	ldr	r3, [r7, #28]
 800278c:	68fb      	ldr	r3, [r7, #12]
 800278e:	681b      	ldr	r3, [r3, #0]
 8002790:	681a      	ldr	r2, [r3, #0]
 8002792:	68fb      	ldr	r3, [r7, #12]
 8002794:	681b      	ldr	r3, [r3, #0]
 8002796:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800279a:	601a      	str	r2, [r3, #0]
 800279c:	e178      	b.n	8002a90 <HAL_I2C_Master_Receive+0x430>
 800279e:	68fb      	ldr	r3, [r7, #12]
 80027a0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80027a2:	2b02      	cmp	r3, #2
 80027a4:	d11b      	bne.n	80027de <HAL_I2C_Master_Receive+0x17e>
 80027a6:	68fb      	ldr	r3, [r7, #12]
 80027a8:	681b      	ldr	r3, [r3, #0]
 80027aa:	681a      	ldr	r2, [r3, #0]
 80027ac:	68fb      	ldr	r3, [r7, #12]
 80027ae:	681b      	ldr	r3, [r3, #0]
 80027b0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80027b4:	601a      	str	r2, [r3, #0]
 80027b6:	68fb      	ldr	r3, [r7, #12]
 80027b8:	681b      	ldr	r3, [r3, #0]
 80027ba:	681a      	ldr	r2, [r3, #0]
 80027bc:	68fb      	ldr	r3, [r7, #12]
 80027be:	681b      	ldr	r3, [r3, #0]
 80027c0:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80027c4:	601a      	str	r2, [r3, #0]
 80027c6:	2300      	movs	r3, #0
 80027c8:	61bb      	str	r3, [r7, #24]
 80027ca:	68fb      	ldr	r3, [r7, #12]
 80027cc:	681b      	ldr	r3, [r3, #0]
 80027ce:	695b      	ldr	r3, [r3, #20]
 80027d0:	61bb      	str	r3, [r7, #24]
 80027d2:	68fb      	ldr	r3, [r7, #12]
 80027d4:	681b      	ldr	r3, [r3, #0]
 80027d6:	699b      	ldr	r3, [r3, #24]
 80027d8:	61bb      	str	r3, [r7, #24]
 80027da:	69bb      	ldr	r3, [r7, #24]
 80027dc:	e158      	b.n	8002a90 <HAL_I2C_Master_Receive+0x430>
 80027de:	68fb      	ldr	r3, [r7, #12]
 80027e0:	681b      	ldr	r3, [r3, #0]
 80027e2:	681a      	ldr	r2, [r3, #0]
 80027e4:	68fb      	ldr	r3, [r7, #12]
 80027e6:	681b      	ldr	r3, [r3, #0]
 80027e8:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 80027ec:	601a      	str	r2, [r3, #0]
 80027ee:	2300      	movs	r3, #0
 80027f0:	617b      	str	r3, [r7, #20]
 80027f2:	68fb      	ldr	r3, [r7, #12]
 80027f4:	681b      	ldr	r3, [r3, #0]
 80027f6:	695b      	ldr	r3, [r3, #20]
 80027f8:	617b      	str	r3, [r7, #20]
 80027fa:	68fb      	ldr	r3, [r7, #12]
 80027fc:	681b      	ldr	r3, [r3, #0]
 80027fe:	699b      	ldr	r3, [r3, #24]
 8002800:	617b      	str	r3, [r7, #20]
 8002802:	697b      	ldr	r3, [r7, #20]
 8002804:	e144      	b.n	8002a90 <HAL_I2C_Master_Receive+0x430>
 8002806:	68fb      	ldr	r3, [r7, #12]
 8002808:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800280a:	2b03      	cmp	r3, #3
 800280c:	f200 80f1 	bhi.w	80029f2 <HAL_I2C_Master_Receive+0x392>
 8002810:	68fb      	ldr	r3, [r7, #12]
 8002812:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002814:	2b01      	cmp	r3, #1
 8002816:	d123      	bne.n	8002860 <HAL_I2C_Master_Receive+0x200>
 8002818:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800281a:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800281c:	68f8      	ldr	r0, [r7, #12]
 800281e:	f000 fd79 	bl	8003314 <I2C_WaitOnRXNEFlagUntilTimeout>
 8002822:	4603      	mov	r3, r0
 8002824:	2b00      	cmp	r3, #0
 8002826:	d001      	beq.n	800282c <HAL_I2C_Master_Receive+0x1cc>
 8002828:	2301      	movs	r3, #1
 800282a:	e145      	b.n	8002ab8 <HAL_I2C_Master_Receive+0x458>
 800282c:	68fb      	ldr	r3, [r7, #12]
 800282e:	681b      	ldr	r3, [r3, #0]
 8002830:	691a      	ldr	r2, [r3, #16]
 8002832:	68fb      	ldr	r3, [r7, #12]
 8002834:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002836:	b2d2      	uxtb	r2, r2
 8002838:	701a      	strb	r2, [r3, #0]
 800283a:	68fb      	ldr	r3, [r7, #12]
 800283c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800283e:	1c5a      	adds	r2, r3, #1
 8002840:	68fb      	ldr	r3, [r7, #12]
 8002842:	625a      	str	r2, [r3, #36]	@ 0x24
 8002844:	68fb      	ldr	r3, [r7, #12]
 8002846:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002848:	3b01      	subs	r3, #1
 800284a:	b29a      	uxth	r2, r3
 800284c:	68fb      	ldr	r3, [r7, #12]
 800284e:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002850:	68fb      	ldr	r3, [r7, #12]
 8002852:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002854:	b29b      	uxth	r3, r3
 8002856:	3b01      	subs	r3, #1
 8002858:	b29a      	uxth	r2, r3
 800285a:	68fb      	ldr	r3, [r7, #12]
 800285c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800285e:	e117      	b.n	8002a90 <HAL_I2C_Master_Receive+0x430>
 8002860:	68fb      	ldr	r3, [r7, #12]
 8002862:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002864:	2b02      	cmp	r3, #2
 8002866:	d14e      	bne.n	8002906 <HAL_I2C_Master_Receive+0x2a6>
 8002868:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800286a:	9300      	str	r3, [sp, #0]
 800286c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800286e:	2200      	movs	r2, #0
 8002870:	4906      	ldr	r1, [pc, #24]	@ (800288c <HAL_I2C_Master_Receive+0x22c>)
 8002872:	68f8      	ldr	r0, [r7, #12]
 8002874:	f000 fba4 	bl	8002fc0 <I2C_WaitOnFlagUntilTimeout>
 8002878:	4603      	mov	r3, r0
 800287a:	2b00      	cmp	r3, #0
 800287c:	d008      	beq.n	8002890 <HAL_I2C_Master_Receive+0x230>
 800287e:	2301      	movs	r3, #1
 8002880:	e11a      	b.n	8002ab8 <HAL_I2C_Master_Receive+0x458>
 8002882:	bf00      	nop
 8002884:	00100002 	.word	0x00100002
 8002888:	ffff0000 	.word	0xffff0000
 800288c:	00010004 	.word	0x00010004
 8002890:	68fb      	ldr	r3, [r7, #12]
 8002892:	681b      	ldr	r3, [r3, #0]
 8002894:	681a      	ldr	r2, [r3, #0]
 8002896:	68fb      	ldr	r3, [r7, #12]
 8002898:	681b      	ldr	r3, [r3, #0]
 800289a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800289e:	601a      	str	r2, [r3, #0]
 80028a0:	68fb      	ldr	r3, [r7, #12]
 80028a2:	681b      	ldr	r3, [r3, #0]
 80028a4:	691a      	ldr	r2, [r3, #16]
 80028a6:	68fb      	ldr	r3, [r7, #12]
 80028a8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80028aa:	b2d2      	uxtb	r2, r2
 80028ac:	701a      	strb	r2, [r3, #0]
 80028ae:	68fb      	ldr	r3, [r7, #12]
 80028b0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80028b2:	1c5a      	adds	r2, r3, #1
 80028b4:	68fb      	ldr	r3, [r7, #12]
 80028b6:	625a      	str	r2, [r3, #36]	@ 0x24
 80028b8:	68fb      	ldr	r3, [r7, #12]
 80028ba:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80028bc:	3b01      	subs	r3, #1
 80028be:	b29a      	uxth	r2, r3
 80028c0:	68fb      	ldr	r3, [r7, #12]
 80028c2:	851a      	strh	r2, [r3, #40]	@ 0x28
 80028c4:	68fb      	ldr	r3, [r7, #12]
 80028c6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80028c8:	b29b      	uxth	r3, r3
 80028ca:	3b01      	subs	r3, #1
 80028cc:	b29a      	uxth	r2, r3
 80028ce:	68fb      	ldr	r3, [r7, #12]
 80028d0:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80028d2:	68fb      	ldr	r3, [r7, #12]
 80028d4:	681b      	ldr	r3, [r3, #0]
 80028d6:	691a      	ldr	r2, [r3, #16]
 80028d8:	68fb      	ldr	r3, [r7, #12]
 80028da:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80028dc:	b2d2      	uxtb	r2, r2
 80028de:	701a      	strb	r2, [r3, #0]
 80028e0:	68fb      	ldr	r3, [r7, #12]
 80028e2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80028e4:	1c5a      	adds	r2, r3, #1
 80028e6:	68fb      	ldr	r3, [r7, #12]
 80028e8:	625a      	str	r2, [r3, #36]	@ 0x24
 80028ea:	68fb      	ldr	r3, [r7, #12]
 80028ec:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80028ee:	3b01      	subs	r3, #1
 80028f0:	b29a      	uxth	r2, r3
 80028f2:	68fb      	ldr	r3, [r7, #12]
 80028f4:	851a      	strh	r2, [r3, #40]	@ 0x28
 80028f6:	68fb      	ldr	r3, [r7, #12]
 80028f8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80028fa:	b29b      	uxth	r3, r3
 80028fc:	3b01      	subs	r3, #1
 80028fe:	b29a      	uxth	r2, r3
 8002900:	68fb      	ldr	r3, [r7, #12]
 8002902:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8002904:	e0c4      	b.n	8002a90 <HAL_I2C_Master_Receive+0x430>
 8002906:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002908:	9300      	str	r3, [sp, #0]
 800290a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800290c:	2200      	movs	r2, #0
 800290e:	496c      	ldr	r1, [pc, #432]	@ (8002ac0 <HAL_I2C_Master_Receive+0x460>)
 8002910:	68f8      	ldr	r0, [r7, #12]
 8002912:	f000 fb55 	bl	8002fc0 <I2C_WaitOnFlagUntilTimeout>
 8002916:	4603      	mov	r3, r0
 8002918:	2b00      	cmp	r3, #0
 800291a:	d001      	beq.n	8002920 <HAL_I2C_Master_Receive+0x2c0>
 800291c:	2301      	movs	r3, #1
 800291e:	e0cb      	b.n	8002ab8 <HAL_I2C_Master_Receive+0x458>
 8002920:	68fb      	ldr	r3, [r7, #12]
 8002922:	681b      	ldr	r3, [r3, #0]
 8002924:	681a      	ldr	r2, [r3, #0]
 8002926:	68fb      	ldr	r3, [r7, #12]
 8002928:	681b      	ldr	r3, [r3, #0]
 800292a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800292e:	601a      	str	r2, [r3, #0]
 8002930:	68fb      	ldr	r3, [r7, #12]
 8002932:	681b      	ldr	r3, [r3, #0]
 8002934:	691a      	ldr	r2, [r3, #16]
 8002936:	68fb      	ldr	r3, [r7, #12]
 8002938:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800293a:	b2d2      	uxtb	r2, r2
 800293c:	701a      	strb	r2, [r3, #0]
 800293e:	68fb      	ldr	r3, [r7, #12]
 8002940:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002942:	1c5a      	adds	r2, r3, #1
 8002944:	68fb      	ldr	r3, [r7, #12]
 8002946:	625a      	str	r2, [r3, #36]	@ 0x24
 8002948:	68fb      	ldr	r3, [r7, #12]
 800294a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800294c:	3b01      	subs	r3, #1
 800294e:	b29a      	uxth	r2, r3
 8002950:	68fb      	ldr	r3, [r7, #12]
 8002952:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002954:	68fb      	ldr	r3, [r7, #12]
 8002956:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002958:	b29b      	uxth	r3, r3
 800295a:	3b01      	subs	r3, #1
 800295c:	b29a      	uxth	r2, r3
 800295e:	68fb      	ldr	r3, [r7, #12]
 8002960:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8002962:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002964:	9300      	str	r3, [sp, #0]
 8002966:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002968:	2200      	movs	r2, #0
 800296a:	4955      	ldr	r1, [pc, #340]	@ (8002ac0 <HAL_I2C_Master_Receive+0x460>)
 800296c:	68f8      	ldr	r0, [r7, #12]
 800296e:	f000 fb27 	bl	8002fc0 <I2C_WaitOnFlagUntilTimeout>
 8002972:	4603      	mov	r3, r0
 8002974:	2b00      	cmp	r3, #0
 8002976:	d001      	beq.n	800297c <HAL_I2C_Master_Receive+0x31c>
 8002978:	2301      	movs	r3, #1
 800297a:	e09d      	b.n	8002ab8 <HAL_I2C_Master_Receive+0x458>
 800297c:	68fb      	ldr	r3, [r7, #12]
 800297e:	681b      	ldr	r3, [r3, #0]
 8002980:	681a      	ldr	r2, [r3, #0]
 8002982:	68fb      	ldr	r3, [r7, #12]
 8002984:	681b      	ldr	r3, [r3, #0]
 8002986:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800298a:	601a      	str	r2, [r3, #0]
 800298c:	68fb      	ldr	r3, [r7, #12]
 800298e:	681b      	ldr	r3, [r3, #0]
 8002990:	691a      	ldr	r2, [r3, #16]
 8002992:	68fb      	ldr	r3, [r7, #12]
 8002994:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002996:	b2d2      	uxtb	r2, r2
 8002998:	701a      	strb	r2, [r3, #0]
 800299a:	68fb      	ldr	r3, [r7, #12]
 800299c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800299e:	1c5a      	adds	r2, r3, #1
 80029a0:	68fb      	ldr	r3, [r7, #12]
 80029a2:	625a      	str	r2, [r3, #36]	@ 0x24
 80029a4:	68fb      	ldr	r3, [r7, #12]
 80029a6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80029a8:	3b01      	subs	r3, #1
 80029aa:	b29a      	uxth	r2, r3
 80029ac:	68fb      	ldr	r3, [r7, #12]
 80029ae:	851a      	strh	r2, [r3, #40]	@ 0x28
 80029b0:	68fb      	ldr	r3, [r7, #12]
 80029b2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80029b4:	b29b      	uxth	r3, r3
 80029b6:	3b01      	subs	r3, #1
 80029b8:	b29a      	uxth	r2, r3
 80029ba:	68fb      	ldr	r3, [r7, #12]
 80029bc:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80029be:	68fb      	ldr	r3, [r7, #12]
 80029c0:	681b      	ldr	r3, [r3, #0]
 80029c2:	691a      	ldr	r2, [r3, #16]
 80029c4:	68fb      	ldr	r3, [r7, #12]
 80029c6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80029c8:	b2d2      	uxtb	r2, r2
 80029ca:	701a      	strb	r2, [r3, #0]
 80029cc:	68fb      	ldr	r3, [r7, #12]
 80029ce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80029d0:	1c5a      	adds	r2, r3, #1
 80029d2:	68fb      	ldr	r3, [r7, #12]
 80029d4:	625a      	str	r2, [r3, #36]	@ 0x24
 80029d6:	68fb      	ldr	r3, [r7, #12]
 80029d8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80029da:	3b01      	subs	r3, #1
 80029dc:	b29a      	uxth	r2, r3
 80029de:	68fb      	ldr	r3, [r7, #12]
 80029e0:	851a      	strh	r2, [r3, #40]	@ 0x28
 80029e2:	68fb      	ldr	r3, [r7, #12]
 80029e4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80029e6:	b29b      	uxth	r3, r3
 80029e8:	3b01      	subs	r3, #1
 80029ea:	b29a      	uxth	r2, r3
 80029ec:	68fb      	ldr	r3, [r7, #12]
 80029ee:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80029f0:	e04e      	b.n	8002a90 <HAL_I2C_Master_Receive+0x430>
 80029f2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80029f4:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 80029f6:	68f8      	ldr	r0, [r7, #12]
 80029f8:	f000 fc8c 	bl	8003314 <I2C_WaitOnRXNEFlagUntilTimeout>
 80029fc:	4603      	mov	r3, r0
 80029fe:	2b00      	cmp	r3, #0
 8002a00:	d001      	beq.n	8002a06 <HAL_I2C_Master_Receive+0x3a6>
 8002a02:	2301      	movs	r3, #1
 8002a04:	e058      	b.n	8002ab8 <HAL_I2C_Master_Receive+0x458>
 8002a06:	68fb      	ldr	r3, [r7, #12]
 8002a08:	681b      	ldr	r3, [r3, #0]
 8002a0a:	691a      	ldr	r2, [r3, #16]
 8002a0c:	68fb      	ldr	r3, [r7, #12]
 8002a0e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a10:	b2d2      	uxtb	r2, r2
 8002a12:	701a      	strb	r2, [r3, #0]
 8002a14:	68fb      	ldr	r3, [r7, #12]
 8002a16:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a18:	1c5a      	adds	r2, r3, #1
 8002a1a:	68fb      	ldr	r3, [r7, #12]
 8002a1c:	625a      	str	r2, [r3, #36]	@ 0x24
 8002a1e:	68fb      	ldr	r3, [r7, #12]
 8002a20:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002a22:	3b01      	subs	r3, #1
 8002a24:	b29a      	uxth	r2, r3
 8002a26:	68fb      	ldr	r3, [r7, #12]
 8002a28:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002a2a:	68fb      	ldr	r3, [r7, #12]
 8002a2c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002a2e:	b29b      	uxth	r3, r3
 8002a30:	3b01      	subs	r3, #1
 8002a32:	b29a      	uxth	r2, r3
 8002a34:	68fb      	ldr	r3, [r7, #12]
 8002a36:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8002a38:	68fb      	ldr	r3, [r7, #12]
 8002a3a:	681b      	ldr	r3, [r3, #0]
 8002a3c:	695b      	ldr	r3, [r3, #20]
 8002a3e:	f003 0304 	and.w	r3, r3, #4
 8002a42:	2b04      	cmp	r3, #4
 8002a44:	d124      	bne.n	8002a90 <HAL_I2C_Master_Receive+0x430>
 8002a46:	68fb      	ldr	r3, [r7, #12]
 8002a48:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002a4a:	2b03      	cmp	r3, #3
 8002a4c:	d107      	bne.n	8002a5e <HAL_I2C_Master_Receive+0x3fe>
 8002a4e:	68fb      	ldr	r3, [r7, #12]
 8002a50:	681b      	ldr	r3, [r3, #0]
 8002a52:	681a      	ldr	r2, [r3, #0]
 8002a54:	68fb      	ldr	r3, [r7, #12]
 8002a56:	681b      	ldr	r3, [r3, #0]
 8002a58:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8002a5c:	601a      	str	r2, [r3, #0]
 8002a5e:	68fb      	ldr	r3, [r7, #12]
 8002a60:	681b      	ldr	r3, [r3, #0]
 8002a62:	691a      	ldr	r2, [r3, #16]
 8002a64:	68fb      	ldr	r3, [r7, #12]
 8002a66:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a68:	b2d2      	uxtb	r2, r2
 8002a6a:	701a      	strb	r2, [r3, #0]
 8002a6c:	68fb      	ldr	r3, [r7, #12]
 8002a6e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002a70:	1c5a      	adds	r2, r3, #1
 8002a72:	68fb      	ldr	r3, [r7, #12]
 8002a74:	625a      	str	r2, [r3, #36]	@ 0x24
 8002a76:	68fb      	ldr	r3, [r7, #12]
 8002a78:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002a7a:	3b01      	subs	r3, #1
 8002a7c:	b29a      	uxth	r2, r3
 8002a7e:	68fb      	ldr	r3, [r7, #12]
 8002a80:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002a82:	68fb      	ldr	r3, [r7, #12]
 8002a84:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002a86:	b29b      	uxth	r3, r3
 8002a88:	3b01      	subs	r3, #1
 8002a8a:	b29a      	uxth	r2, r3
 8002a8c:	68fb      	ldr	r3, [r7, #12]
 8002a8e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8002a90:	68fb      	ldr	r3, [r7, #12]
 8002a92:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002a94:	2b00      	cmp	r3, #0
 8002a96:	f47f aeb6 	bne.w	8002806 <HAL_I2C_Master_Receive+0x1a6>
 8002a9a:	68fb      	ldr	r3, [r7, #12]
 8002a9c:	2220      	movs	r2, #32
 8002a9e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002aa2:	68fb      	ldr	r3, [r7, #12]
 8002aa4:	2200      	movs	r2, #0
 8002aa6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002aaa:	68fb      	ldr	r3, [r7, #12]
 8002aac:	2200      	movs	r2, #0
 8002aae:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002ab2:	2300      	movs	r3, #0
 8002ab4:	e000      	b.n	8002ab8 <HAL_I2C_Master_Receive+0x458>
 8002ab6:	2302      	movs	r3, #2
 8002ab8:	4618      	mov	r0, r3
 8002aba:	3728      	adds	r7, #40	@ 0x28
 8002abc:	46bd      	mov	sp, r7
 8002abe:	bd80      	pop	{r7, pc}
 8002ac0:	00010004 	.word	0x00010004

08002ac4 <HAL_I2C_IsDeviceReady>:
 8002ac4:	b580      	push	{r7, lr}
 8002ac6:	b08a      	sub	sp, #40	@ 0x28
 8002ac8:	af02      	add	r7, sp, #8
 8002aca:	60f8      	str	r0, [r7, #12]
 8002acc:	607a      	str	r2, [r7, #4]
 8002ace:	603b      	str	r3, [r7, #0]
 8002ad0:	460b      	mov	r3, r1
 8002ad2:	817b      	strh	r3, [r7, #10]
 8002ad4:	f7fe fff8 	bl	8001ac8 <HAL_GetTick>
 8002ad8:	61f8      	str	r0, [r7, #28]
 8002ada:	2300      	movs	r3, #0
 8002adc:	61bb      	str	r3, [r7, #24]
 8002ade:	68fb      	ldr	r3, [r7, #12]
 8002ae0:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002ae4:	b2db      	uxtb	r3, r3
 8002ae6:	2b20      	cmp	r3, #32
 8002ae8:	f040 8111 	bne.w	8002d0e <HAL_I2C_IsDeviceReady+0x24a>
 8002aec:	69fb      	ldr	r3, [r7, #28]
 8002aee:	9300      	str	r3, [sp, #0]
 8002af0:	2319      	movs	r3, #25
 8002af2:	2201      	movs	r2, #1
 8002af4:	4988      	ldr	r1, [pc, #544]	@ (8002d18 <HAL_I2C_IsDeviceReady+0x254>)
 8002af6:	68f8      	ldr	r0, [r7, #12]
 8002af8:	f000 fa62 	bl	8002fc0 <I2C_WaitOnFlagUntilTimeout>
 8002afc:	4603      	mov	r3, r0
 8002afe:	2b00      	cmp	r3, #0
 8002b00:	d001      	beq.n	8002b06 <HAL_I2C_IsDeviceReady+0x42>
 8002b02:	2302      	movs	r3, #2
 8002b04:	e104      	b.n	8002d10 <HAL_I2C_IsDeviceReady+0x24c>
 8002b06:	68fb      	ldr	r3, [r7, #12]
 8002b08:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002b0c:	2b01      	cmp	r3, #1
 8002b0e:	d101      	bne.n	8002b14 <HAL_I2C_IsDeviceReady+0x50>
 8002b10:	2302      	movs	r3, #2
 8002b12:	e0fd      	b.n	8002d10 <HAL_I2C_IsDeviceReady+0x24c>
 8002b14:	68fb      	ldr	r3, [r7, #12]
 8002b16:	2201      	movs	r2, #1
 8002b18:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002b1c:	68fb      	ldr	r3, [r7, #12]
 8002b1e:	681b      	ldr	r3, [r3, #0]
 8002b20:	681b      	ldr	r3, [r3, #0]
 8002b22:	f003 0301 	and.w	r3, r3, #1
 8002b26:	2b01      	cmp	r3, #1
 8002b28:	d007      	beq.n	8002b3a <HAL_I2C_IsDeviceReady+0x76>
 8002b2a:	68fb      	ldr	r3, [r7, #12]
 8002b2c:	681b      	ldr	r3, [r3, #0]
 8002b2e:	681a      	ldr	r2, [r3, #0]
 8002b30:	68fb      	ldr	r3, [r7, #12]
 8002b32:	681b      	ldr	r3, [r3, #0]
 8002b34:	f042 0201 	orr.w	r2, r2, #1
 8002b38:	601a      	str	r2, [r3, #0]
 8002b3a:	68fb      	ldr	r3, [r7, #12]
 8002b3c:	681b      	ldr	r3, [r3, #0]
 8002b3e:	681a      	ldr	r2, [r3, #0]
 8002b40:	68fb      	ldr	r3, [r7, #12]
 8002b42:	681b      	ldr	r3, [r3, #0]
 8002b44:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8002b48:	601a      	str	r2, [r3, #0]
 8002b4a:	68fb      	ldr	r3, [r7, #12]
 8002b4c:	2224      	movs	r2, #36	@ 0x24
 8002b4e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002b52:	68fb      	ldr	r3, [r7, #12]
 8002b54:	2200      	movs	r2, #0
 8002b56:	641a      	str	r2, [r3, #64]	@ 0x40
 8002b58:	68fb      	ldr	r3, [r7, #12]
 8002b5a:	4a70      	ldr	r2, [pc, #448]	@ (8002d1c <HAL_I2C_IsDeviceReady+0x258>)
 8002b5c:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002b5e:	68fb      	ldr	r3, [r7, #12]
 8002b60:	681b      	ldr	r3, [r3, #0]
 8002b62:	681a      	ldr	r2, [r3, #0]
 8002b64:	68fb      	ldr	r3, [r7, #12]
 8002b66:	681b      	ldr	r3, [r3, #0]
 8002b68:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002b6c:	601a      	str	r2, [r3, #0]
 8002b6e:	69fb      	ldr	r3, [r7, #28]
 8002b70:	9300      	str	r3, [sp, #0]
 8002b72:	683b      	ldr	r3, [r7, #0]
 8002b74:	2200      	movs	r2, #0
 8002b76:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8002b7a:	68f8      	ldr	r0, [r7, #12]
 8002b7c:	f000 fa20 	bl	8002fc0 <I2C_WaitOnFlagUntilTimeout>
 8002b80:	4603      	mov	r3, r0
 8002b82:	2b00      	cmp	r3, #0
 8002b84:	d00d      	beq.n	8002ba2 <HAL_I2C_IsDeviceReady+0xde>
 8002b86:	68fb      	ldr	r3, [r7, #12]
 8002b88:	681b      	ldr	r3, [r3, #0]
 8002b8a:	681b      	ldr	r3, [r3, #0]
 8002b8c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002b90:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002b94:	d103      	bne.n	8002b9e <HAL_I2C_IsDeviceReady+0xda>
 8002b96:	68fb      	ldr	r3, [r7, #12]
 8002b98:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002b9c:	641a      	str	r2, [r3, #64]	@ 0x40
 8002b9e:	2303      	movs	r3, #3
 8002ba0:	e0b6      	b.n	8002d10 <HAL_I2C_IsDeviceReady+0x24c>
 8002ba2:	897b      	ldrh	r3, [r7, #10]
 8002ba4:	b2db      	uxtb	r3, r3
 8002ba6:	461a      	mov	r2, r3
 8002ba8:	68fb      	ldr	r3, [r7, #12]
 8002baa:	681b      	ldr	r3, [r3, #0]
 8002bac:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8002bb0:	611a      	str	r2, [r3, #16]
 8002bb2:	f7fe ff89 	bl	8001ac8 <HAL_GetTick>
 8002bb6:	61f8      	str	r0, [r7, #28]
 8002bb8:	68fb      	ldr	r3, [r7, #12]
 8002bba:	681b      	ldr	r3, [r3, #0]
 8002bbc:	695b      	ldr	r3, [r3, #20]
 8002bbe:	f003 0302 	and.w	r3, r3, #2
 8002bc2:	2b02      	cmp	r3, #2
 8002bc4:	bf0c      	ite	eq
 8002bc6:	2301      	moveq	r3, #1
 8002bc8:	2300      	movne	r3, #0
 8002bca:	b2db      	uxtb	r3, r3
 8002bcc:	75fb      	strb	r3, [r7, #23]
 8002bce:	68fb      	ldr	r3, [r7, #12]
 8002bd0:	681b      	ldr	r3, [r3, #0]
 8002bd2:	695b      	ldr	r3, [r3, #20]
 8002bd4:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002bd8:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8002bdc:	bf0c      	ite	eq
 8002bde:	2301      	moveq	r3, #1
 8002be0:	2300      	movne	r3, #0
 8002be2:	b2db      	uxtb	r3, r3
 8002be4:	75bb      	strb	r3, [r7, #22]
 8002be6:	e025      	b.n	8002c34 <HAL_I2C_IsDeviceReady+0x170>
 8002be8:	f7fe ff6e 	bl	8001ac8 <HAL_GetTick>
 8002bec:	4602      	mov	r2, r0
 8002bee:	69fb      	ldr	r3, [r7, #28]
 8002bf0:	1ad3      	subs	r3, r2, r3
 8002bf2:	683a      	ldr	r2, [r7, #0]
 8002bf4:	429a      	cmp	r2, r3
 8002bf6:	d302      	bcc.n	8002bfe <HAL_I2C_IsDeviceReady+0x13a>
 8002bf8:	683b      	ldr	r3, [r7, #0]
 8002bfa:	2b00      	cmp	r3, #0
 8002bfc:	d103      	bne.n	8002c06 <HAL_I2C_IsDeviceReady+0x142>
 8002bfe:	68fb      	ldr	r3, [r7, #12]
 8002c00:	22a0      	movs	r2, #160	@ 0xa0
 8002c02:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002c06:	68fb      	ldr	r3, [r7, #12]
 8002c08:	681b      	ldr	r3, [r3, #0]
 8002c0a:	695b      	ldr	r3, [r3, #20]
 8002c0c:	f003 0302 	and.w	r3, r3, #2
 8002c10:	2b02      	cmp	r3, #2
 8002c12:	bf0c      	ite	eq
 8002c14:	2301      	moveq	r3, #1
 8002c16:	2300      	movne	r3, #0
 8002c18:	b2db      	uxtb	r3, r3
 8002c1a:	75fb      	strb	r3, [r7, #23]
 8002c1c:	68fb      	ldr	r3, [r7, #12]
 8002c1e:	681b      	ldr	r3, [r3, #0]
 8002c20:	695b      	ldr	r3, [r3, #20]
 8002c22:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002c26:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8002c2a:	bf0c      	ite	eq
 8002c2c:	2301      	moveq	r3, #1
 8002c2e:	2300      	movne	r3, #0
 8002c30:	b2db      	uxtb	r3, r3
 8002c32:	75bb      	strb	r3, [r7, #22]
 8002c34:	68fb      	ldr	r3, [r7, #12]
 8002c36:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8002c3a:	b2db      	uxtb	r3, r3
 8002c3c:	2ba0      	cmp	r3, #160	@ 0xa0
 8002c3e:	d005      	beq.n	8002c4c <HAL_I2C_IsDeviceReady+0x188>
 8002c40:	7dfb      	ldrb	r3, [r7, #23]
 8002c42:	2b00      	cmp	r3, #0
 8002c44:	d102      	bne.n	8002c4c <HAL_I2C_IsDeviceReady+0x188>
 8002c46:	7dbb      	ldrb	r3, [r7, #22]
 8002c48:	2b00      	cmp	r3, #0
 8002c4a:	d0cd      	beq.n	8002be8 <HAL_I2C_IsDeviceReady+0x124>
 8002c4c:	68fb      	ldr	r3, [r7, #12]
 8002c4e:	2220      	movs	r2, #32
 8002c50:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002c54:	68fb      	ldr	r3, [r7, #12]
 8002c56:	681b      	ldr	r3, [r3, #0]
 8002c58:	695b      	ldr	r3, [r3, #20]
 8002c5a:	f003 0302 	and.w	r3, r3, #2
 8002c5e:	2b02      	cmp	r3, #2
 8002c60:	d129      	bne.n	8002cb6 <HAL_I2C_IsDeviceReady+0x1f2>
 8002c62:	68fb      	ldr	r3, [r7, #12]
 8002c64:	681b      	ldr	r3, [r3, #0]
 8002c66:	681a      	ldr	r2, [r3, #0]
 8002c68:	68fb      	ldr	r3, [r7, #12]
 8002c6a:	681b      	ldr	r3, [r3, #0]
 8002c6c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8002c70:	601a      	str	r2, [r3, #0]
 8002c72:	2300      	movs	r3, #0
 8002c74:	613b      	str	r3, [r7, #16]
 8002c76:	68fb      	ldr	r3, [r7, #12]
 8002c78:	681b      	ldr	r3, [r3, #0]
 8002c7a:	695b      	ldr	r3, [r3, #20]
 8002c7c:	613b      	str	r3, [r7, #16]
 8002c7e:	68fb      	ldr	r3, [r7, #12]
 8002c80:	681b      	ldr	r3, [r3, #0]
 8002c82:	699b      	ldr	r3, [r3, #24]
 8002c84:	613b      	str	r3, [r7, #16]
 8002c86:	693b      	ldr	r3, [r7, #16]
 8002c88:	69fb      	ldr	r3, [r7, #28]
 8002c8a:	9300      	str	r3, [sp, #0]
 8002c8c:	2319      	movs	r3, #25
 8002c8e:	2201      	movs	r2, #1
 8002c90:	4921      	ldr	r1, [pc, #132]	@ (8002d18 <HAL_I2C_IsDeviceReady+0x254>)
 8002c92:	68f8      	ldr	r0, [r7, #12]
 8002c94:	f000 f994 	bl	8002fc0 <I2C_WaitOnFlagUntilTimeout>
 8002c98:	4603      	mov	r3, r0
 8002c9a:	2b00      	cmp	r3, #0
 8002c9c:	d001      	beq.n	8002ca2 <HAL_I2C_IsDeviceReady+0x1de>
 8002c9e:	2301      	movs	r3, #1
 8002ca0:	e036      	b.n	8002d10 <HAL_I2C_IsDeviceReady+0x24c>
 8002ca2:	68fb      	ldr	r3, [r7, #12]
 8002ca4:	2220      	movs	r2, #32
 8002ca6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002caa:	68fb      	ldr	r3, [r7, #12]
 8002cac:	2200      	movs	r2, #0
 8002cae:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002cb2:	2300      	movs	r3, #0
 8002cb4:	e02c      	b.n	8002d10 <HAL_I2C_IsDeviceReady+0x24c>
 8002cb6:	68fb      	ldr	r3, [r7, #12]
 8002cb8:	681b      	ldr	r3, [r3, #0]
 8002cba:	681a      	ldr	r2, [r3, #0]
 8002cbc:	68fb      	ldr	r3, [r7, #12]
 8002cbe:	681b      	ldr	r3, [r3, #0]
 8002cc0:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8002cc4:	601a      	str	r2, [r3, #0]
 8002cc6:	68fb      	ldr	r3, [r7, #12]
 8002cc8:	681b      	ldr	r3, [r3, #0]
 8002cca:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8002cce:	615a      	str	r2, [r3, #20]
 8002cd0:	69fb      	ldr	r3, [r7, #28]
 8002cd2:	9300      	str	r3, [sp, #0]
 8002cd4:	2319      	movs	r3, #25
 8002cd6:	2201      	movs	r2, #1
 8002cd8:	490f      	ldr	r1, [pc, #60]	@ (8002d18 <HAL_I2C_IsDeviceReady+0x254>)
 8002cda:	68f8      	ldr	r0, [r7, #12]
 8002cdc:	f000 f970 	bl	8002fc0 <I2C_WaitOnFlagUntilTimeout>
 8002ce0:	4603      	mov	r3, r0
 8002ce2:	2b00      	cmp	r3, #0
 8002ce4:	d001      	beq.n	8002cea <HAL_I2C_IsDeviceReady+0x226>
 8002ce6:	2301      	movs	r3, #1
 8002ce8:	e012      	b.n	8002d10 <HAL_I2C_IsDeviceReady+0x24c>
 8002cea:	69bb      	ldr	r3, [r7, #24]
 8002cec:	3301      	adds	r3, #1
 8002cee:	61bb      	str	r3, [r7, #24]
 8002cf0:	69ba      	ldr	r2, [r7, #24]
 8002cf2:	687b      	ldr	r3, [r7, #4]
 8002cf4:	429a      	cmp	r2, r3
 8002cf6:	f4ff af32 	bcc.w	8002b5e <HAL_I2C_IsDeviceReady+0x9a>
 8002cfa:	68fb      	ldr	r3, [r7, #12]
 8002cfc:	2220      	movs	r2, #32
 8002cfe:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002d02:	68fb      	ldr	r3, [r7, #12]
 8002d04:	2200      	movs	r2, #0
 8002d06:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002d0a:	2301      	movs	r3, #1
 8002d0c:	e000      	b.n	8002d10 <HAL_I2C_IsDeviceReady+0x24c>
 8002d0e:	2302      	movs	r3, #2
 8002d10:	4618      	mov	r0, r3
 8002d12:	3720      	adds	r7, #32
 8002d14:	46bd      	mov	sp, r7
 8002d16:	bd80      	pop	{r7, pc}
 8002d18:	00100002 	.word	0x00100002
 8002d1c:	ffff0000 	.word	0xffff0000

08002d20 <I2C_MasterRequestWrite>:
 8002d20:	b580      	push	{r7, lr}
 8002d22:	b088      	sub	sp, #32
 8002d24:	af02      	add	r7, sp, #8
 8002d26:	60f8      	str	r0, [r7, #12]
 8002d28:	607a      	str	r2, [r7, #4]
 8002d2a:	603b      	str	r3, [r7, #0]
 8002d2c:	460b      	mov	r3, r1
 8002d2e:	817b      	strh	r3, [r7, #10]
 8002d30:	68fb      	ldr	r3, [r7, #12]
 8002d32:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002d34:	617b      	str	r3, [r7, #20]
 8002d36:	697b      	ldr	r3, [r7, #20]
 8002d38:	2b08      	cmp	r3, #8
 8002d3a:	d006      	beq.n	8002d4a <I2C_MasterRequestWrite+0x2a>
 8002d3c:	697b      	ldr	r3, [r7, #20]
 8002d3e:	2b01      	cmp	r3, #1
 8002d40:	d003      	beq.n	8002d4a <I2C_MasterRequestWrite+0x2a>
 8002d42:	697b      	ldr	r3, [r7, #20]
 8002d44:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8002d48:	d108      	bne.n	8002d5c <I2C_MasterRequestWrite+0x3c>
 8002d4a:	68fb      	ldr	r3, [r7, #12]
 8002d4c:	681b      	ldr	r3, [r3, #0]
 8002d4e:	681a      	ldr	r2, [r3, #0]
 8002d50:	68fb      	ldr	r3, [r7, #12]
 8002d52:	681b      	ldr	r3, [r3, #0]
 8002d54:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002d58:	601a      	str	r2, [r3, #0]
 8002d5a:	e00b      	b.n	8002d74 <I2C_MasterRequestWrite+0x54>
 8002d5c:	68fb      	ldr	r3, [r7, #12]
 8002d5e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002d60:	2b12      	cmp	r3, #18
 8002d62:	d107      	bne.n	8002d74 <I2C_MasterRequestWrite+0x54>
 8002d64:	68fb      	ldr	r3, [r7, #12]
 8002d66:	681b      	ldr	r3, [r3, #0]
 8002d68:	681a      	ldr	r2, [r3, #0]
 8002d6a:	68fb      	ldr	r3, [r7, #12]
 8002d6c:	681b      	ldr	r3, [r3, #0]
 8002d6e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002d72:	601a      	str	r2, [r3, #0]
 8002d74:	683b      	ldr	r3, [r7, #0]
 8002d76:	9300      	str	r3, [sp, #0]
 8002d78:	687b      	ldr	r3, [r7, #4]
 8002d7a:	2200      	movs	r2, #0
 8002d7c:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8002d80:	68f8      	ldr	r0, [r7, #12]
 8002d82:	f000 f91d 	bl	8002fc0 <I2C_WaitOnFlagUntilTimeout>
 8002d86:	4603      	mov	r3, r0
 8002d88:	2b00      	cmp	r3, #0
 8002d8a:	d00d      	beq.n	8002da8 <I2C_MasterRequestWrite+0x88>
 8002d8c:	68fb      	ldr	r3, [r7, #12]
 8002d8e:	681b      	ldr	r3, [r3, #0]
 8002d90:	681b      	ldr	r3, [r3, #0]
 8002d92:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002d96:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002d9a:	d103      	bne.n	8002da4 <I2C_MasterRequestWrite+0x84>
 8002d9c:	68fb      	ldr	r3, [r7, #12]
 8002d9e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002da2:	641a      	str	r2, [r3, #64]	@ 0x40
 8002da4:	2303      	movs	r3, #3
 8002da6:	e035      	b.n	8002e14 <I2C_MasterRequestWrite+0xf4>
 8002da8:	68fb      	ldr	r3, [r7, #12]
 8002daa:	691b      	ldr	r3, [r3, #16]
 8002dac:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8002db0:	d108      	bne.n	8002dc4 <I2C_MasterRequestWrite+0xa4>
 8002db2:	897b      	ldrh	r3, [r7, #10]
 8002db4:	b2db      	uxtb	r3, r3
 8002db6:	461a      	mov	r2, r3
 8002db8:	68fb      	ldr	r3, [r7, #12]
 8002dba:	681b      	ldr	r3, [r3, #0]
 8002dbc:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8002dc0:	611a      	str	r2, [r3, #16]
 8002dc2:	e01b      	b.n	8002dfc <I2C_MasterRequestWrite+0xdc>
 8002dc4:	897b      	ldrh	r3, [r7, #10]
 8002dc6:	11db      	asrs	r3, r3, #7
 8002dc8:	b2db      	uxtb	r3, r3
 8002dca:	f003 0306 	and.w	r3, r3, #6
 8002dce:	b2db      	uxtb	r3, r3
 8002dd0:	f063 030f 	orn	r3, r3, #15
 8002dd4:	b2da      	uxtb	r2, r3
 8002dd6:	68fb      	ldr	r3, [r7, #12]
 8002dd8:	681b      	ldr	r3, [r3, #0]
 8002dda:	611a      	str	r2, [r3, #16]
 8002ddc:	683b      	ldr	r3, [r7, #0]
 8002dde:	687a      	ldr	r2, [r7, #4]
 8002de0:	490e      	ldr	r1, [pc, #56]	@ (8002e1c <I2C_MasterRequestWrite+0xfc>)
 8002de2:	68f8      	ldr	r0, [r7, #12]
 8002de4:	f000 f966 	bl	80030b4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002de8:	4603      	mov	r3, r0
 8002dea:	2b00      	cmp	r3, #0
 8002dec:	d001      	beq.n	8002df2 <I2C_MasterRequestWrite+0xd2>
 8002dee:	2301      	movs	r3, #1
 8002df0:	e010      	b.n	8002e14 <I2C_MasterRequestWrite+0xf4>
 8002df2:	897b      	ldrh	r3, [r7, #10]
 8002df4:	b2da      	uxtb	r2, r3
 8002df6:	68fb      	ldr	r3, [r7, #12]
 8002df8:	681b      	ldr	r3, [r3, #0]
 8002dfa:	611a      	str	r2, [r3, #16]
 8002dfc:	683b      	ldr	r3, [r7, #0]
 8002dfe:	687a      	ldr	r2, [r7, #4]
 8002e00:	4907      	ldr	r1, [pc, #28]	@ (8002e20 <I2C_MasterRequestWrite+0x100>)
 8002e02:	68f8      	ldr	r0, [r7, #12]
 8002e04:	f000 f956 	bl	80030b4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002e08:	4603      	mov	r3, r0
 8002e0a:	2b00      	cmp	r3, #0
 8002e0c:	d001      	beq.n	8002e12 <I2C_MasterRequestWrite+0xf2>
 8002e0e:	2301      	movs	r3, #1
 8002e10:	e000      	b.n	8002e14 <I2C_MasterRequestWrite+0xf4>
 8002e12:	2300      	movs	r3, #0
 8002e14:	4618      	mov	r0, r3
 8002e16:	3718      	adds	r7, #24
 8002e18:	46bd      	mov	sp, r7
 8002e1a:	bd80      	pop	{r7, pc}
 8002e1c:	00010008 	.word	0x00010008
 8002e20:	00010002 	.word	0x00010002

08002e24 <I2C_MasterRequestRead>:
 8002e24:	b580      	push	{r7, lr}
 8002e26:	b088      	sub	sp, #32
 8002e28:	af02      	add	r7, sp, #8
 8002e2a:	60f8      	str	r0, [r7, #12]
 8002e2c:	607a      	str	r2, [r7, #4]
 8002e2e:	603b      	str	r3, [r7, #0]
 8002e30:	460b      	mov	r3, r1
 8002e32:	817b      	strh	r3, [r7, #10]
 8002e34:	68fb      	ldr	r3, [r7, #12]
 8002e36:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002e38:	617b      	str	r3, [r7, #20]
 8002e3a:	68fb      	ldr	r3, [r7, #12]
 8002e3c:	681b      	ldr	r3, [r3, #0]
 8002e3e:	681a      	ldr	r2, [r3, #0]
 8002e40:	68fb      	ldr	r3, [r7, #12]
 8002e42:	681b      	ldr	r3, [r3, #0]
 8002e44:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8002e48:	601a      	str	r2, [r3, #0]
 8002e4a:	697b      	ldr	r3, [r7, #20]
 8002e4c:	2b08      	cmp	r3, #8
 8002e4e:	d006      	beq.n	8002e5e <I2C_MasterRequestRead+0x3a>
 8002e50:	697b      	ldr	r3, [r7, #20]
 8002e52:	2b01      	cmp	r3, #1
 8002e54:	d003      	beq.n	8002e5e <I2C_MasterRequestRead+0x3a>
 8002e56:	697b      	ldr	r3, [r7, #20]
 8002e58:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8002e5c:	d108      	bne.n	8002e70 <I2C_MasterRequestRead+0x4c>
 8002e5e:	68fb      	ldr	r3, [r7, #12]
 8002e60:	681b      	ldr	r3, [r3, #0]
 8002e62:	681a      	ldr	r2, [r3, #0]
 8002e64:	68fb      	ldr	r3, [r7, #12]
 8002e66:	681b      	ldr	r3, [r3, #0]
 8002e68:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002e6c:	601a      	str	r2, [r3, #0]
 8002e6e:	e00b      	b.n	8002e88 <I2C_MasterRequestRead+0x64>
 8002e70:	68fb      	ldr	r3, [r7, #12]
 8002e72:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002e74:	2b11      	cmp	r3, #17
 8002e76:	d107      	bne.n	8002e88 <I2C_MasterRequestRead+0x64>
 8002e78:	68fb      	ldr	r3, [r7, #12]
 8002e7a:	681b      	ldr	r3, [r3, #0]
 8002e7c:	681a      	ldr	r2, [r3, #0]
 8002e7e:	68fb      	ldr	r3, [r7, #12]
 8002e80:	681b      	ldr	r3, [r3, #0]
 8002e82:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002e86:	601a      	str	r2, [r3, #0]
 8002e88:	683b      	ldr	r3, [r7, #0]
 8002e8a:	9300      	str	r3, [sp, #0]
 8002e8c:	687b      	ldr	r3, [r7, #4]
 8002e8e:	2200      	movs	r2, #0
 8002e90:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8002e94:	68f8      	ldr	r0, [r7, #12]
 8002e96:	f000 f893 	bl	8002fc0 <I2C_WaitOnFlagUntilTimeout>
 8002e9a:	4603      	mov	r3, r0
 8002e9c:	2b00      	cmp	r3, #0
 8002e9e:	d00d      	beq.n	8002ebc <I2C_MasterRequestRead+0x98>
 8002ea0:	68fb      	ldr	r3, [r7, #12]
 8002ea2:	681b      	ldr	r3, [r3, #0]
 8002ea4:	681b      	ldr	r3, [r3, #0]
 8002ea6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002eaa:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002eae:	d103      	bne.n	8002eb8 <I2C_MasterRequestRead+0x94>
 8002eb0:	68fb      	ldr	r3, [r7, #12]
 8002eb2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002eb6:	641a      	str	r2, [r3, #64]	@ 0x40
 8002eb8:	2303      	movs	r3, #3
 8002eba:	e079      	b.n	8002fb0 <I2C_MasterRequestRead+0x18c>
 8002ebc:	68fb      	ldr	r3, [r7, #12]
 8002ebe:	691b      	ldr	r3, [r3, #16]
 8002ec0:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8002ec4:	d108      	bne.n	8002ed8 <I2C_MasterRequestRead+0xb4>
 8002ec6:	897b      	ldrh	r3, [r7, #10]
 8002ec8:	b2db      	uxtb	r3, r3
 8002eca:	f043 0301 	orr.w	r3, r3, #1
 8002ece:	b2da      	uxtb	r2, r3
 8002ed0:	68fb      	ldr	r3, [r7, #12]
 8002ed2:	681b      	ldr	r3, [r3, #0]
 8002ed4:	611a      	str	r2, [r3, #16]
 8002ed6:	e05f      	b.n	8002f98 <I2C_MasterRequestRead+0x174>
 8002ed8:	897b      	ldrh	r3, [r7, #10]
 8002eda:	11db      	asrs	r3, r3, #7
 8002edc:	b2db      	uxtb	r3, r3
 8002ede:	f003 0306 	and.w	r3, r3, #6
 8002ee2:	b2db      	uxtb	r3, r3
 8002ee4:	f063 030f 	orn	r3, r3, #15
 8002ee8:	b2da      	uxtb	r2, r3
 8002eea:	68fb      	ldr	r3, [r7, #12]
 8002eec:	681b      	ldr	r3, [r3, #0]
 8002eee:	611a      	str	r2, [r3, #16]
 8002ef0:	683b      	ldr	r3, [r7, #0]
 8002ef2:	687a      	ldr	r2, [r7, #4]
 8002ef4:	4930      	ldr	r1, [pc, #192]	@ (8002fb8 <I2C_MasterRequestRead+0x194>)
 8002ef6:	68f8      	ldr	r0, [r7, #12]
 8002ef8:	f000 f8dc 	bl	80030b4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002efc:	4603      	mov	r3, r0
 8002efe:	2b00      	cmp	r3, #0
 8002f00:	d001      	beq.n	8002f06 <I2C_MasterRequestRead+0xe2>
 8002f02:	2301      	movs	r3, #1
 8002f04:	e054      	b.n	8002fb0 <I2C_MasterRequestRead+0x18c>
 8002f06:	897b      	ldrh	r3, [r7, #10]
 8002f08:	b2da      	uxtb	r2, r3
 8002f0a:	68fb      	ldr	r3, [r7, #12]
 8002f0c:	681b      	ldr	r3, [r3, #0]
 8002f0e:	611a      	str	r2, [r3, #16]
 8002f10:	683b      	ldr	r3, [r7, #0]
 8002f12:	687a      	ldr	r2, [r7, #4]
 8002f14:	4929      	ldr	r1, [pc, #164]	@ (8002fbc <I2C_MasterRequestRead+0x198>)
 8002f16:	68f8      	ldr	r0, [r7, #12]
 8002f18:	f000 f8cc 	bl	80030b4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002f1c:	4603      	mov	r3, r0
 8002f1e:	2b00      	cmp	r3, #0
 8002f20:	d001      	beq.n	8002f26 <I2C_MasterRequestRead+0x102>
 8002f22:	2301      	movs	r3, #1
 8002f24:	e044      	b.n	8002fb0 <I2C_MasterRequestRead+0x18c>
 8002f26:	2300      	movs	r3, #0
 8002f28:	613b      	str	r3, [r7, #16]
 8002f2a:	68fb      	ldr	r3, [r7, #12]
 8002f2c:	681b      	ldr	r3, [r3, #0]
 8002f2e:	695b      	ldr	r3, [r3, #20]
 8002f30:	613b      	str	r3, [r7, #16]
 8002f32:	68fb      	ldr	r3, [r7, #12]
 8002f34:	681b      	ldr	r3, [r3, #0]
 8002f36:	699b      	ldr	r3, [r3, #24]
 8002f38:	613b      	str	r3, [r7, #16]
 8002f3a:	693b      	ldr	r3, [r7, #16]
 8002f3c:	68fb      	ldr	r3, [r7, #12]
 8002f3e:	681b      	ldr	r3, [r3, #0]
 8002f40:	681a      	ldr	r2, [r3, #0]
 8002f42:	68fb      	ldr	r3, [r7, #12]
 8002f44:	681b      	ldr	r3, [r3, #0]
 8002f46:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002f4a:	601a      	str	r2, [r3, #0]
 8002f4c:	683b      	ldr	r3, [r7, #0]
 8002f4e:	9300      	str	r3, [sp, #0]
 8002f50:	687b      	ldr	r3, [r7, #4]
 8002f52:	2200      	movs	r2, #0
 8002f54:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8002f58:	68f8      	ldr	r0, [r7, #12]
 8002f5a:	f000 f831 	bl	8002fc0 <I2C_WaitOnFlagUntilTimeout>
 8002f5e:	4603      	mov	r3, r0
 8002f60:	2b00      	cmp	r3, #0
 8002f62:	d00d      	beq.n	8002f80 <I2C_MasterRequestRead+0x15c>
 8002f64:	68fb      	ldr	r3, [r7, #12]
 8002f66:	681b      	ldr	r3, [r3, #0]
 8002f68:	681b      	ldr	r3, [r3, #0]
 8002f6a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002f6e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002f72:	d103      	bne.n	8002f7c <I2C_MasterRequestRead+0x158>
 8002f74:	68fb      	ldr	r3, [r7, #12]
 8002f76:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002f7a:	641a      	str	r2, [r3, #64]	@ 0x40
 8002f7c:	2303      	movs	r3, #3
 8002f7e:	e017      	b.n	8002fb0 <I2C_MasterRequestRead+0x18c>
 8002f80:	897b      	ldrh	r3, [r7, #10]
 8002f82:	11db      	asrs	r3, r3, #7
 8002f84:	b2db      	uxtb	r3, r3
 8002f86:	f003 0306 	and.w	r3, r3, #6
 8002f8a:	b2db      	uxtb	r3, r3
 8002f8c:	f063 030e 	orn	r3, r3, #14
 8002f90:	b2da      	uxtb	r2, r3
 8002f92:	68fb      	ldr	r3, [r7, #12]
 8002f94:	681b      	ldr	r3, [r3, #0]
 8002f96:	611a      	str	r2, [r3, #16]
 8002f98:	683b      	ldr	r3, [r7, #0]
 8002f9a:	687a      	ldr	r2, [r7, #4]
 8002f9c:	4907      	ldr	r1, [pc, #28]	@ (8002fbc <I2C_MasterRequestRead+0x198>)
 8002f9e:	68f8      	ldr	r0, [r7, #12]
 8002fa0:	f000 f888 	bl	80030b4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002fa4:	4603      	mov	r3, r0
 8002fa6:	2b00      	cmp	r3, #0
 8002fa8:	d001      	beq.n	8002fae <I2C_MasterRequestRead+0x18a>
 8002faa:	2301      	movs	r3, #1
 8002fac:	e000      	b.n	8002fb0 <I2C_MasterRequestRead+0x18c>
 8002fae:	2300      	movs	r3, #0
 8002fb0:	4618      	mov	r0, r3
 8002fb2:	3718      	adds	r7, #24
 8002fb4:	46bd      	mov	sp, r7
 8002fb6:	bd80      	pop	{r7, pc}
 8002fb8:	00010008 	.word	0x00010008
 8002fbc:	00010002 	.word	0x00010002

08002fc0 <I2C_WaitOnFlagUntilTimeout>:
 8002fc0:	b580      	push	{r7, lr}
 8002fc2:	b084      	sub	sp, #16
 8002fc4:	af00      	add	r7, sp, #0
 8002fc6:	60f8      	str	r0, [r7, #12]
 8002fc8:	60b9      	str	r1, [r7, #8]
 8002fca:	603b      	str	r3, [r7, #0]
 8002fcc:	4613      	mov	r3, r2
 8002fce:	71fb      	strb	r3, [r7, #7]
 8002fd0:	e048      	b.n	8003064 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8002fd2:	683b      	ldr	r3, [r7, #0]
 8002fd4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002fd8:	d044      	beq.n	8003064 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8002fda:	f7fe fd75 	bl	8001ac8 <HAL_GetTick>
 8002fde:	4602      	mov	r2, r0
 8002fe0:	69bb      	ldr	r3, [r7, #24]
 8002fe2:	1ad3      	subs	r3, r2, r3
 8002fe4:	683a      	ldr	r2, [r7, #0]
 8002fe6:	429a      	cmp	r2, r3
 8002fe8:	d302      	bcc.n	8002ff0 <I2C_WaitOnFlagUntilTimeout+0x30>
 8002fea:	683b      	ldr	r3, [r7, #0]
 8002fec:	2b00      	cmp	r3, #0
 8002fee:	d139      	bne.n	8003064 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8002ff0:	68bb      	ldr	r3, [r7, #8]
 8002ff2:	0c1b      	lsrs	r3, r3, #16
 8002ff4:	b2db      	uxtb	r3, r3
 8002ff6:	2b01      	cmp	r3, #1
 8002ff8:	d10d      	bne.n	8003016 <I2C_WaitOnFlagUntilTimeout+0x56>
 8002ffa:	68fb      	ldr	r3, [r7, #12]
 8002ffc:	681b      	ldr	r3, [r3, #0]
 8002ffe:	695b      	ldr	r3, [r3, #20]
 8003000:	43da      	mvns	r2, r3
 8003002:	68bb      	ldr	r3, [r7, #8]
 8003004:	4013      	ands	r3, r2
 8003006:	b29b      	uxth	r3, r3
 8003008:	2b00      	cmp	r3, #0
 800300a:	bf0c      	ite	eq
 800300c:	2301      	moveq	r3, #1
 800300e:	2300      	movne	r3, #0
 8003010:	b2db      	uxtb	r3, r3
 8003012:	461a      	mov	r2, r3
 8003014:	e00c      	b.n	8003030 <I2C_WaitOnFlagUntilTimeout+0x70>
 8003016:	68fb      	ldr	r3, [r7, #12]
 8003018:	681b      	ldr	r3, [r3, #0]
 800301a:	699b      	ldr	r3, [r3, #24]
 800301c:	43da      	mvns	r2, r3
 800301e:	68bb      	ldr	r3, [r7, #8]
 8003020:	4013      	ands	r3, r2
 8003022:	b29b      	uxth	r3, r3
 8003024:	2b00      	cmp	r3, #0
 8003026:	bf0c      	ite	eq
 8003028:	2301      	moveq	r3, #1
 800302a:	2300      	movne	r3, #0
 800302c:	b2db      	uxtb	r3, r3
 800302e:	461a      	mov	r2, r3
 8003030:	79fb      	ldrb	r3, [r7, #7]
 8003032:	429a      	cmp	r2, r3
 8003034:	d116      	bne.n	8003064 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003036:	68fb      	ldr	r3, [r7, #12]
 8003038:	2200      	movs	r2, #0
 800303a:	631a      	str	r2, [r3, #48]	@ 0x30
 800303c:	68fb      	ldr	r3, [r7, #12]
 800303e:	2220      	movs	r2, #32
 8003040:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003044:	68fb      	ldr	r3, [r7, #12]
 8003046:	2200      	movs	r2, #0
 8003048:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800304c:	68fb      	ldr	r3, [r7, #12]
 800304e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003050:	f043 0220 	orr.w	r2, r3, #32
 8003054:	68fb      	ldr	r3, [r7, #12]
 8003056:	641a      	str	r2, [r3, #64]	@ 0x40
 8003058:	68fb      	ldr	r3, [r7, #12]
 800305a:	2200      	movs	r2, #0
 800305c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003060:	2301      	movs	r3, #1
 8003062:	e023      	b.n	80030ac <I2C_WaitOnFlagUntilTimeout+0xec>
 8003064:	68bb      	ldr	r3, [r7, #8]
 8003066:	0c1b      	lsrs	r3, r3, #16
 8003068:	b2db      	uxtb	r3, r3
 800306a:	2b01      	cmp	r3, #1
 800306c:	d10d      	bne.n	800308a <I2C_WaitOnFlagUntilTimeout+0xca>
 800306e:	68fb      	ldr	r3, [r7, #12]
 8003070:	681b      	ldr	r3, [r3, #0]
 8003072:	695b      	ldr	r3, [r3, #20]
 8003074:	43da      	mvns	r2, r3
 8003076:	68bb      	ldr	r3, [r7, #8]
 8003078:	4013      	ands	r3, r2
 800307a:	b29b      	uxth	r3, r3
 800307c:	2b00      	cmp	r3, #0
 800307e:	bf0c      	ite	eq
 8003080:	2301      	moveq	r3, #1
 8003082:	2300      	movne	r3, #0
 8003084:	b2db      	uxtb	r3, r3
 8003086:	461a      	mov	r2, r3
 8003088:	e00c      	b.n	80030a4 <I2C_WaitOnFlagUntilTimeout+0xe4>
 800308a:	68fb      	ldr	r3, [r7, #12]
 800308c:	681b      	ldr	r3, [r3, #0]
 800308e:	699b      	ldr	r3, [r3, #24]
 8003090:	43da      	mvns	r2, r3
 8003092:	68bb      	ldr	r3, [r7, #8]
 8003094:	4013      	ands	r3, r2
 8003096:	b29b      	uxth	r3, r3
 8003098:	2b00      	cmp	r3, #0
 800309a:	bf0c      	ite	eq
 800309c:	2301      	moveq	r3, #1
 800309e:	2300      	movne	r3, #0
 80030a0:	b2db      	uxtb	r3, r3
 80030a2:	461a      	mov	r2, r3
 80030a4:	79fb      	ldrb	r3, [r7, #7]
 80030a6:	429a      	cmp	r2, r3
 80030a8:	d093      	beq.n	8002fd2 <I2C_WaitOnFlagUntilTimeout+0x12>
 80030aa:	2300      	movs	r3, #0
 80030ac:	4618      	mov	r0, r3
 80030ae:	3710      	adds	r7, #16
 80030b0:	46bd      	mov	sp, r7
 80030b2:	bd80      	pop	{r7, pc}

080030b4 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 80030b4:	b580      	push	{r7, lr}
 80030b6:	b084      	sub	sp, #16
 80030b8:	af00      	add	r7, sp, #0
 80030ba:	60f8      	str	r0, [r7, #12]
 80030bc:	60b9      	str	r1, [r7, #8]
 80030be:	607a      	str	r2, [r7, #4]
 80030c0:	603b      	str	r3, [r7, #0]
 80030c2:	e071      	b.n	80031a8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 80030c4:	68fb      	ldr	r3, [r7, #12]
 80030c6:	681b      	ldr	r3, [r3, #0]
 80030c8:	695b      	ldr	r3, [r3, #20]
 80030ca:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80030ce:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80030d2:	d123      	bne.n	800311c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 80030d4:	68fb      	ldr	r3, [r7, #12]
 80030d6:	681b      	ldr	r3, [r3, #0]
 80030d8:	681a      	ldr	r2, [r3, #0]
 80030da:	68fb      	ldr	r3, [r7, #12]
 80030dc:	681b      	ldr	r3, [r3, #0]
 80030de:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80030e2:	601a      	str	r2, [r3, #0]
 80030e4:	68fb      	ldr	r3, [r7, #12]
 80030e6:	681b      	ldr	r3, [r3, #0]
 80030e8:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 80030ec:	615a      	str	r2, [r3, #20]
 80030ee:	68fb      	ldr	r3, [r7, #12]
 80030f0:	2200      	movs	r2, #0
 80030f2:	631a      	str	r2, [r3, #48]	@ 0x30
 80030f4:	68fb      	ldr	r3, [r7, #12]
 80030f6:	2220      	movs	r2, #32
 80030f8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80030fc:	68fb      	ldr	r3, [r7, #12]
 80030fe:	2200      	movs	r2, #0
 8003100:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003104:	68fb      	ldr	r3, [r7, #12]
 8003106:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003108:	f043 0204 	orr.w	r2, r3, #4
 800310c:	68fb      	ldr	r3, [r7, #12]
 800310e:	641a      	str	r2, [r3, #64]	@ 0x40
 8003110:	68fb      	ldr	r3, [r7, #12]
 8003112:	2200      	movs	r2, #0
 8003114:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003118:	2301      	movs	r3, #1
 800311a:	e067      	b.n	80031ec <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 800311c:	687b      	ldr	r3, [r7, #4]
 800311e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003122:	d041      	beq.n	80031a8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003124:	f7fe fcd0 	bl	8001ac8 <HAL_GetTick>
 8003128:	4602      	mov	r2, r0
 800312a:	683b      	ldr	r3, [r7, #0]
 800312c:	1ad3      	subs	r3, r2, r3
 800312e:	687a      	ldr	r2, [r7, #4]
 8003130:	429a      	cmp	r2, r3
 8003132:	d302      	bcc.n	800313a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8003134:	687b      	ldr	r3, [r7, #4]
 8003136:	2b00      	cmp	r3, #0
 8003138:	d136      	bne.n	80031a8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 800313a:	68bb      	ldr	r3, [r7, #8]
 800313c:	0c1b      	lsrs	r3, r3, #16
 800313e:	b2db      	uxtb	r3, r3
 8003140:	2b01      	cmp	r3, #1
 8003142:	d10c      	bne.n	800315e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8003144:	68fb      	ldr	r3, [r7, #12]
 8003146:	681b      	ldr	r3, [r3, #0]
 8003148:	695b      	ldr	r3, [r3, #20]
 800314a:	43da      	mvns	r2, r3
 800314c:	68bb      	ldr	r3, [r7, #8]
 800314e:	4013      	ands	r3, r2
 8003150:	b29b      	uxth	r3, r3
 8003152:	2b00      	cmp	r3, #0
 8003154:	bf14      	ite	ne
 8003156:	2301      	movne	r3, #1
 8003158:	2300      	moveq	r3, #0
 800315a:	b2db      	uxtb	r3, r3
 800315c:	e00b      	b.n	8003176 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 800315e:	68fb      	ldr	r3, [r7, #12]
 8003160:	681b      	ldr	r3, [r3, #0]
 8003162:	699b      	ldr	r3, [r3, #24]
 8003164:	43da      	mvns	r2, r3
 8003166:	68bb      	ldr	r3, [r7, #8]
 8003168:	4013      	ands	r3, r2
 800316a:	b29b      	uxth	r3, r3
 800316c:	2b00      	cmp	r3, #0
 800316e:	bf14      	ite	ne
 8003170:	2301      	movne	r3, #1
 8003172:	2300      	moveq	r3, #0
 8003174:	b2db      	uxtb	r3, r3
 8003176:	2b00      	cmp	r3, #0
 8003178:	d016      	beq.n	80031a8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 800317a:	68fb      	ldr	r3, [r7, #12]
 800317c:	2200      	movs	r2, #0
 800317e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003180:	68fb      	ldr	r3, [r7, #12]
 8003182:	2220      	movs	r2, #32
 8003184:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003188:	68fb      	ldr	r3, [r7, #12]
 800318a:	2200      	movs	r2, #0
 800318c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003190:	68fb      	ldr	r3, [r7, #12]
 8003192:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003194:	f043 0220 	orr.w	r2, r3, #32
 8003198:	68fb      	ldr	r3, [r7, #12]
 800319a:	641a      	str	r2, [r3, #64]	@ 0x40
 800319c:	68fb      	ldr	r3, [r7, #12]
 800319e:	2200      	movs	r2, #0
 80031a0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80031a4:	2301      	movs	r3, #1
 80031a6:	e021      	b.n	80031ec <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 80031a8:	68bb      	ldr	r3, [r7, #8]
 80031aa:	0c1b      	lsrs	r3, r3, #16
 80031ac:	b2db      	uxtb	r3, r3
 80031ae:	2b01      	cmp	r3, #1
 80031b0:	d10c      	bne.n	80031cc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 80031b2:	68fb      	ldr	r3, [r7, #12]
 80031b4:	681b      	ldr	r3, [r3, #0]
 80031b6:	695b      	ldr	r3, [r3, #20]
 80031b8:	43da      	mvns	r2, r3
 80031ba:	68bb      	ldr	r3, [r7, #8]
 80031bc:	4013      	ands	r3, r2
 80031be:	b29b      	uxth	r3, r3
 80031c0:	2b00      	cmp	r3, #0
 80031c2:	bf14      	ite	ne
 80031c4:	2301      	movne	r3, #1
 80031c6:	2300      	moveq	r3, #0
 80031c8:	b2db      	uxtb	r3, r3
 80031ca:	e00b      	b.n	80031e4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 80031cc:	68fb      	ldr	r3, [r7, #12]
 80031ce:	681b      	ldr	r3, [r3, #0]
 80031d0:	699b      	ldr	r3, [r3, #24]
 80031d2:	43da      	mvns	r2, r3
 80031d4:	68bb      	ldr	r3, [r7, #8]
 80031d6:	4013      	ands	r3, r2
 80031d8:	b29b      	uxth	r3, r3
 80031da:	2b00      	cmp	r3, #0
 80031dc:	bf14      	ite	ne
 80031de:	2301      	movne	r3, #1
 80031e0:	2300      	moveq	r3, #0
 80031e2:	b2db      	uxtb	r3, r3
 80031e4:	2b00      	cmp	r3, #0
 80031e6:	f47f af6d 	bne.w	80030c4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 80031ea:	2300      	movs	r3, #0
 80031ec:	4618      	mov	r0, r3
 80031ee:	3710      	adds	r7, #16
 80031f0:	46bd      	mov	sp, r7
 80031f2:	bd80      	pop	{r7, pc}

080031f4 <I2C_WaitOnTXEFlagUntilTimeout>:
 80031f4:	b580      	push	{r7, lr}
 80031f6:	b084      	sub	sp, #16
 80031f8:	af00      	add	r7, sp, #0
 80031fa:	60f8      	str	r0, [r7, #12]
 80031fc:	60b9      	str	r1, [r7, #8]
 80031fe:	607a      	str	r2, [r7, #4]
 8003200:	e034      	b.n	800326c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003202:	68f8      	ldr	r0, [r7, #12]
 8003204:	f000 f8e3 	bl	80033ce <I2C_IsAcknowledgeFailed>
 8003208:	4603      	mov	r3, r0
 800320a:	2b00      	cmp	r3, #0
 800320c:	d001      	beq.n	8003212 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 800320e:	2301      	movs	r3, #1
 8003210:	e034      	b.n	800327c <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8003212:	68bb      	ldr	r3, [r7, #8]
 8003214:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003218:	d028      	beq.n	800326c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 800321a:	f7fe fc55 	bl	8001ac8 <HAL_GetTick>
 800321e:	4602      	mov	r2, r0
 8003220:	687b      	ldr	r3, [r7, #4]
 8003222:	1ad3      	subs	r3, r2, r3
 8003224:	68ba      	ldr	r2, [r7, #8]
 8003226:	429a      	cmp	r2, r3
 8003228:	d302      	bcc.n	8003230 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 800322a:	68bb      	ldr	r3, [r7, #8]
 800322c:	2b00      	cmp	r3, #0
 800322e:	d11d      	bne.n	800326c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003230:	68fb      	ldr	r3, [r7, #12]
 8003232:	681b      	ldr	r3, [r3, #0]
 8003234:	695b      	ldr	r3, [r3, #20]
 8003236:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800323a:	2b80      	cmp	r3, #128	@ 0x80
 800323c:	d016      	beq.n	800326c <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 800323e:	68fb      	ldr	r3, [r7, #12]
 8003240:	2200      	movs	r2, #0
 8003242:	631a      	str	r2, [r3, #48]	@ 0x30
 8003244:	68fb      	ldr	r3, [r7, #12]
 8003246:	2220      	movs	r2, #32
 8003248:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800324c:	68fb      	ldr	r3, [r7, #12]
 800324e:	2200      	movs	r2, #0
 8003250:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003254:	68fb      	ldr	r3, [r7, #12]
 8003256:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003258:	f043 0220 	orr.w	r2, r3, #32
 800325c:	68fb      	ldr	r3, [r7, #12]
 800325e:	641a      	str	r2, [r3, #64]	@ 0x40
 8003260:	68fb      	ldr	r3, [r7, #12]
 8003262:	2200      	movs	r2, #0
 8003264:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003268:	2301      	movs	r3, #1
 800326a:	e007      	b.n	800327c <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 800326c:	68fb      	ldr	r3, [r7, #12]
 800326e:	681b      	ldr	r3, [r3, #0]
 8003270:	695b      	ldr	r3, [r3, #20]
 8003272:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003276:	2b80      	cmp	r3, #128	@ 0x80
 8003278:	d1c3      	bne.n	8003202 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 800327a:	2300      	movs	r3, #0
 800327c:	4618      	mov	r0, r3
 800327e:	3710      	adds	r7, #16
 8003280:	46bd      	mov	sp, r7
 8003282:	bd80      	pop	{r7, pc}

08003284 <I2C_WaitOnBTFFlagUntilTimeout>:
 8003284:	b580      	push	{r7, lr}
 8003286:	b084      	sub	sp, #16
 8003288:	af00      	add	r7, sp, #0
 800328a:	60f8      	str	r0, [r7, #12]
 800328c:	60b9      	str	r1, [r7, #8]
 800328e:	607a      	str	r2, [r7, #4]
 8003290:	e034      	b.n	80032fc <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8003292:	68f8      	ldr	r0, [r7, #12]
 8003294:	f000 f89b 	bl	80033ce <I2C_IsAcknowledgeFailed>
 8003298:	4603      	mov	r3, r0
 800329a:	2b00      	cmp	r3, #0
 800329c:	d001      	beq.n	80032a2 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 800329e:	2301      	movs	r3, #1
 80032a0:	e034      	b.n	800330c <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 80032a2:	68bb      	ldr	r3, [r7, #8]
 80032a4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80032a8:	d028      	beq.n	80032fc <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 80032aa:	f7fe fc0d 	bl	8001ac8 <HAL_GetTick>
 80032ae:	4602      	mov	r2, r0
 80032b0:	687b      	ldr	r3, [r7, #4]
 80032b2:	1ad3      	subs	r3, r2, r3
 80032b4:	68ba      	ldr	r2, [r7, #8]
 80032b6:	429a      	cmp	r2, r3
 80032b8:	d302      	bcc.n	80032c0 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 80032ba:	68bb      	ldr	r3, [r7, #8]
 80032bc:	2b00      	cmp	r3, #0
 80032be:	d11d      	bne.n	80032fc <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 80032c0:	68fb      	ldr	r3, [r7, #12]
 80032c2:	681b      	ldr	r3, [r3, #0]
 80032c4:	695b      	ldr	r3, [r3, #20]
 80032c6:	f003 0304 	and.w	r3, r3, #4
 80032ca:	2b04      	cmp	r3, #4
 80032cc:	d016      	beq.n	80032fc <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 80032ce:	68fb      	ldr	r3, [r7, #12]
 80032d0:	2200      	movs	r2, #0
 80032d2:	631a      	str	r2, [r3, #48]	@ 0x30
 80032d4:	68fb      	ldr	r3, [r7, #12]
 80032d6:	2220      	movs	r2, #32
 80032d8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80032dc:	68fb      	ldr	r3, [r7, #12]
 80032de:	2200      	movs	r2, #0
 80032e0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80032e4:	68fb      	ldr	r3, [r7, #12]
 80032e6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80032e8:	f043 0220 	orr.w	r2, r3, #32
 80032ec:	68fb      	ldr	r3, [r7, #12]
 80032ee:	641a      	str	r2, [r3, #64]	@ 0x40
 80032f0:	68fb      	ldr	r3, [r7, #12]
 80032f2:	2200      	movs	r2, #0
 80032f4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80032f8:	2301      	movs	r3, #1
 80032fa:	e007      	b.n	800330c <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 80032fc:	68fb      	ldr	r3, [r7, #12]
 80032fe:	681b      	ldr	r3, [r3, #0]
 8003300:	695b      	ldr	r3, [r3, #20]
 8003302:	f003 0304 	and.w	r3, r3, #4
 8003306:	2b04      	cmp	r3, #4
 8003308:	d1c3      	bne.n	8003292 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 800330a:	2300      	movs	r3, #0
 800330c:	4618      	mov	r0, r3
 800330e:	3710      	adds	r7, #16
 8003310:	46bd      	mov	sp, r7
 8003312:	bd80      	pop	{r7, pc}

08003314 <I2C_WaitOnRXNEFlagUntilTimeout>:
 8003314:	b580      	push	{r7, lr}
 8003316:	b084      	sub	sp, #16
 8003318:	af00      	add	r7, sp, #0
 800331a:	60f8      	str	r0, [r7, #12]
 800331c:	60b9      	str	r1, [r7, #8]
 800331e:	607a      	str	r2, [r7, #4]
 8003320:	e049      	b.n	80033b6 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8003322:	68fb      	ldr	r3, [r7, #12]
 8003324:	681b      	ldr	r3, [r3, #0]
 8003326:	695b      	ldr	r3, [r3, #20]
 8003328:	f003 0310 	and.w	r3, r3, #16
 800332c:	2b10      	cmp	r3, #16
 800332e:	d119      	bne.n	8003364 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 8003330:	68fb      	ldr	r3, [r7, #12]
 8003332:	681b      	ldr	r3, [r3, #0]
 8003334:	f06f 0210 	mvn.w	r2, #16
 8003338:	615a      	str	r2, [r3, #20]
 800333a:	68fb      	ldr	r3, [r7, #12]
 800333c:	2200      	movs	r2, #0
 800333e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003340:	68fb      	ldr	r3, [r7, #12]
 8003342:	2220      	movs	r2, #32
 8003344:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003348:	68fb      	ldr	r3, [r7, #12]
 800334a:	2200      	movs	r2, #0
 800334c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003350:	68fb      	ldr	r3, [r7, #12]
 8003352:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8003354:	68fb      	ldr	r3, [r7, #12]
 8003356:	641a      	str	r2, [r3, #64]	@ 0x40
 8003358:	68fb      	ldr	r3, [r7, #12]
 800335a:	2200      	movs	r2, #0
 800335c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003360:	2301      	movs	r3, #1
 8003362:	e030      	b.n	80033c6 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8003364:	f7fe fbb0 	bl	8001ac8 <HAL_GetTick>
 8003368:	4602      	mov	r2, r0
 800336a:	687b      	ldr	r3, [r7, #4]
 800336c:	1ad3      	subs	r3, r2, r3
 800336e:	68ba      	ldr	r2, [r7, #8]
 8003370:	429a      	cmp	r2, r3
 8003372:	d302      	bcc.n	800337a <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8003374:	68bb      	ldr	r3, [r7, #8]
 8003376:	2b00      	cmp	r3, #0
 8003378:	d11d      	bne.n	80033b6 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 800337a:	68fb      	ldr	r3, [r7, #12]
 800337c:	681b      	ldr	r3, [r3, #0]
 800337e:	695b      	ldr	r3, [r3, #20]
 8003380:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003384:	2b40      	cmp	r3, #64	@ 0x40
 8003386:	d016      	beq.n	80033b6 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8003388:	68fb      	ldr	r3, [r7, #12]
 800338a:	2200      	movs	r2, #0
 800338c:	631a      	str	r2, [r3, #48]	@ 0x30
 800338e:	68fb      	ldr	r3, [r7, #12]
 8003390:	2220      	movs	r2, #32
 8003392:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003396:	68fb      	ldr	r3, [r7, #12]
 8003398:	2200      	movs	r2, #0
 800339a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800339e:	68fb      	ldr	r3, [r7, #12]
 80033a0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80033a2:	f043 0220 	orr.w	r2, r3, #32
 80033a6:	68fb      	ldr	r3, [r7, #12]
 80033a8:	641a      	str	r2, [r3, #64]	@ 0x40
 80033aa:	68fb      	ldr	r3, [r7, #12]
 80033ac:	2200      	movs	r2, #0
 80033ae:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80033b2:	2301      	movs	r3, #1
 80033b4:	e007      	b.n	80033c6 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 80033b6:	68fb      	ldr	r3, [r7, #12]
 80033b8:	681b      	ldr	r3, [r3, #0]
 80033ba:	695b      	ldr	r3, [r3, #20]
 80033bc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80033c0:	2b40      	cmp	r3, #64	@ 0x40
 80033c2:	d1ae      	bne.n	8003322 <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 80033c4:	2300      	movs	r3, #0
 80033c6:	4618      	mov	r0, r3
 80033c8:	3710      	adds	r7, #16
 80033ca:	46bd      	mov	sp, r7
 80033cc:	bd80      	pop	{r7, pc}

080033ce <I2C_IsAcknowledgeFailed>:
 80033ce:	b480      	push	{r7}
 80033d0:	b083      	sub	sp, #12
 80033d2:	af00      	add	r7, sp, #0
 80033d4:	6078      	str	r0, [r7, #4]
 80033d6:	687b      	ldr	r3, [r7, #4]
 80033d8:	681b      	ldr	r3, [r3, #0]
 80033da:	695b      	ldr	r3, [r3, #20]
 80033dc:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80033e0:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80033e4:	d11b      	bne.n	800341e <I2C_IsAcknowledgeFailed+0x50>
 80033e6:	687b      	ldr	r3, [r7, #4]
 80033e8:	681b      	ldr	r3, [r3, #0]
 80033ea:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 80033ee:	615a      	str	r2, [r3, #20]
 80033f0:	687b      	ldr	r3, [r7, #4]
 80033f2:	2200      	movs	r2, #0
 80033f4:	631a      	str	r2, [r3, #48]	@ 0x30
 80033f6:	687b      	ldr	r3, [r7, #4]
 80033f8:	2220      	movs	r2, #32
 80033fa:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80033fe:	687b      	ldr	r3, [r7, #4]
 8003400:	2200      	movs	r2, #0
 8003402:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003406:	687b      	ldr	r3, [r7, #4]
 8003408:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800340a:	f043 0204 	orr.w	r2, r3, #4
 800340e:	687b      	ldr	r3, [r7, #4]
 8003410:	641a      	str	r2, [r3, #64]	@ 0x40
 8003412:	687b      	ldr	r3, [r7, #4]
 8003414:	2200      	movs	r2, #0
 8003416:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800341a:	2301      	movs	r3, #1
 800341c:	e000      	b.n	8003420 <I2C_IsAcknowledgeFailed+0x52>
 800341e:	2300      	movs	r3, #0
 8003420:	4618      	mov	r0, r3
 8003422:	370c      	adds	r7, #12
 8003424:	46bd      	mov	sp, r7
 8003426:	f85d 7b04 	ldr.w	r7, [sp], #4
 800342a:	4770      	bx	lr

0800342c <HAL_RCC_OscConfig>:
 800342c:	b580      	push	{r7, lr}
 800342e:	b086      	sub	sp, #24
 8003430:	af00      	add	r7, sp, #0
 8003432:	6078      	str	r0, [r7, #4]
 8003434:	687b      	ldr	r3, [r7, #4]
 8003436:	2b00      	cmp	r3, #0
 8003438:	d101      	bne.n	800343e <HAL_RCC_OscConfig+0x12>
 800343a:	2301      	movs	r3, #1
 800343c:	e267      	b.n	800390e <HAL_RCC_OscConfig+0x4e2>
 800343e:	687b      	ldr	r3, [r7, #4]
 8003440:	681b      	ldr	r3, [r3, #0]
 8003442:	f003 0301 	and.w	r3, r3, #1
 8003446:	2b00      	cmp	r3, #0
 8003448:	d075      	beq.n	8003536 <HAL_RCC_OscConfig+0x10a>
 800344a:	4b88      	ldr	r3, [pc, #544]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 800344c:	689b      	ldr	r3, [r3, #8]
 800344e:	f003 030c 	and.w	r3, r3, #12
 8003452:	2b04      	cmp	r3, #4
 8003454:	d00c      	beq.n	8003470 <HAL_RCC_OscConfig+0x44>
 8003456:	4b85      	ldr	r3, [pc, #532]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 8003458:	689b      	ldr	r3, [r3, #8]
 800345a:	f003 030c 	and.w	r3, r3, #12
 800345e:	2b08      	cmp	r3, #8
 8003460:	d112      	bne.n	8003488 <HAL_RCC_OscConfig+0x5c>
 8003462:	4b82      	ldr	r3, [pc, #520]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 8003464:	685b      	ldr	r3, [r3, #4]
 8003466:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800346a:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800346e:	d10b      	bne.n	8003488 <HAL_RCC_OscConfig+0x5c>
 8003470:	4b7e      	ldr	r3, [pc, #504]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 8003472:	681b      	ldr	r3, [r3, #0]
 8003474:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003478:	2b00      	cmp	r3, #0
 800347a:	d05b      	beq.n	8003534 <HAL_RCC_OscConfig+0x108>
 800347c:	687b      	ldr	r3, [r7, #4]
 800347e:	685b      	ldr	r3, [r3, #4]
 8003480:	2b00      	cmp	r3, #0
 8003482:	d157      	bne.n	8003534 <HAL_RCC_OscConfig+0x108>
 8003484:	2301      	movs	r3, #1
 8003486:	e242      	b.n	800390e <HAL_RCC_OscConfig+0x4e2>
 8003488:	687b      	ldr	r3, [r7, #4]
 800348a:	685b      	ldr	r3, [r3, #4]
 800348c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8003490:	d106      	bne.n	80034a0 <HAL_RCC_OscConfig+0x74>
 8003492:	4b76      	ldr	r3, [pc, #472]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 8003494:	681b      	ldr	r3, [r3, #0]
 8003496:	4a75      	ldr	r2, [pc, #468]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 8003498:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800349c:	6013      	str	r3, [r2, #0]
 800349e:	e01d      	b.n	80034dc <HAL_RCC_OscConfig+0xb0>
 80034a0:	687b      	ldr	r3, [r7, #4]
 80034a2:	685b      	ldr	r3, [r3, #4]
 80034a4:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 80034a8:	d10c      	bne.n	80034c4 <HAL_RCC_OscConfig+0x98>
 80034aa:	4b70      	ldr	r3, [pc, #448]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 80034ac:	681b      	ldr	r3, [r3, #0]
 80034ae:	4a6f      	ldr	r2, [pc, #444]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 80034b0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80034b4:	6013      	str	r3, [r2, #0]
 80034b6:	4b6d      	ldr	r3, [pc, #436]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 80034b8:	681b      	ldr	r3, [r3, #0]
 80034ba:	4a6c      	ldr	r2, [pc, #432]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 80034bc:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80034c0:	6013      	str	r3, [r2, #0]
 80034c2:	e00b      	b.n	80034dc <HAL_RCC_OscConfig+0xb0>
 80034c4:	4b69      	ldr	r3, [pc, #420]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 80034c6:	681b      	ldr	r3, [r3, #0]
 80034c8:	4a68      	ldr	r2, [pc, #416]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 80034ca:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80034ce:	6013      	str	r3, [r2, #0]
 80034d0:	4b66      	ldr	r3, [pc, #408]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 80034d2:	681b      	ldr	r3, [r3, #0]
 80034d4:	4a65      	ldr	r2, [pc, #404]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 80034d6:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80034da:	6013      	str	r3, [r2, #0]
 80034dc:	687b      	ldr	r3, [r7, #4]
 80034de:	685b      	ldr	r3, [r3, #4]
 80034e0:	2b00      	cmp	r3, #0
 80034e2:	d013      	beq.n	800350c <HAL_RCC_OscConfig+0xe0>
 80034e4:	f7fe faf0 	bl	8001ac8 <HAL_GetTick>
 80034e8:	6138      	str	r0, [r7, #16]
 80034ea:	e008      	b.n	80034fe <HAL_RCC_OscConfig+0xd2>
 80034ec:	f7fe faec 	bl	8001ac8 <HAL_GetTick>
 80034f0:	4602      	mov	r2, r0
 80034f2:	693b      	ldr	r3, [r7, #16]
 80034f4:	1ad3      	subs	r3, r2, r3
 80034f6:	2b64      	cmp	r3, #100	@ 0x64
 80034f8:	d901      	bls.n	80034fe <HAL_RCC_OscConfig+0xd2>
 80034fa:	2303      	movs	r3, #3
 80034fc:	e207      	b.n	800390e <HAL_RCC_OscConfig+0x4e2>
 80034fe:	4b5b      	ldr	r3, [pc, #364]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 8003500:	681b      	ldr	r3, [r3, #0]
 8003502:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003506:	2b00      	cmp	r3, #0
 8003508:	d0f0      	beq.n	80034ec <HAL_RCC_OscConfig+0xc0>
 800350a:	e014      	b.n	8003536 <HAL_RCC_OscConfig+0x10a>
 800350c:	f7fe fadc 	bl	8001ac8 <HAL_GetTick>
 8003510:	6138      	str	r0, [r7, #16]
 8003512:	e008      	b.n	8003526 <HAL_RCC_OscConfig+0xfa>
 8003514:	f7fe fad8 	bl	8001ac8 <HAL_GetTick>
 8003518:	4602      	mov	r2, r0
 800351a:	693b      	ldr	r3, [r7, #16]
 800351c:	1ad3      	subs	r3, r2, r3
 800351e:	2b64      	cmp	r3, #100	@ 0x64
 8003520:	d901      	bls.n	8003526 <HAL_RCC_OscConfig+0xfa>
 8003522:	2303      	movs	r3, #3
 8003524:	e1f3      	b.n	800390e <HAL_RCC_OscConfig+0x4e2>
 8003526:	4b51      	ldr	r3, [pc, #324]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 8003528:	681b      	ldr	r3, [r3, #0]
 800352a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800352e:	2b00      	cmp	r3, #0
 8003530:	d1f0      	bne.n	8003514 <HAL_RCC_OscConfig+0xe8>
 8003532:	e000      	b.n	8003536 <HAL_RCC_OscConfig+0x10a>
 8003534:	bf00      	nop
 8003536:	687b      	ldr	r3, [r7, #4]
 8003538:	681b      	ldr	r3, [r3, #0]
 800353a:	f003 0302 	and.w	r3, r3, #2
 800353e:	2b00      	cmp	r3, #0
 8003540:	d063      	beq.n	800360a <HAL_RCC_OscConfig+0x1de>
 8003542:	4b4a      	ldr	r3, [pc, #296]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 8003544:	689b      	ldr	r3, [r3, #8]
 8003546:	f003 030c 	and.w	r3, r3, #12
 800354a:	2b00      	cmp	r3, #0
 800354c:	d00b      	beq.n	8003566 <HAL_RCC_OscConfig+0x13a>
 800354e:	4b47      	ldr	r3, [pc, #284]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 8003550:	689b      	ldr	r3, [r3, #8]
 8003552:	f003 030c 	and.w	r3, r3, #12
 8003556:	2b08      	cmp	r3, #8
 8003558:	d11c      	bne.n	8003594 <HAL_RCC_OscConfig+0x168>
 800355a:	4b44      	ldr	r3, [pc, #272]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 800355c:	685b      	ldr	r3, [r3, #4]
 800355e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003562:	2b00      	cmp	r3, #0
 8003564:	d116      	bne.n	8003594 <HAL_RCC_OscConfig+0x168>
 8003566:	4b41      	ldr	r3, [pc, #260]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 8003568:	681b      	ldr	r3, [r3, #0]
 800356a:	f003 0302 	and.w	r3, r3, #2
 800356e:	2b00      	cmp	r3, #0
 8003570:	d005      	beq.n	800357e <HAL_RCC_OscConfig+0x152>
 8003572:	687b      	ldr	r3, [r7, #4]
 8003574:	68db      	ldr	r3, [r3, #12]
 8003576:	2b01      	cmp	r3, #1
 8003578:	d001      	beq.n	800357e <HAL_RCC_OscConfig+0x152>
 800357a:	2301      	movs	r3, #1
 800357c:	e1c7      	b.n	800390e <HAL_RCC_OscConfig+0x4e2>
 800357e:	4b3b      	ldr	r3, [pc, #236]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 8003580:	681b      	ldr	r3, [r3, #0]
 8003582:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8003586:	687b      	ldr	r3, [r7, #4]
 8003588:	691b      	ldr	r3, [r3, #16]
 800358a:	00db      	lsls	r3, r3, #3
 800358c:	4937      	ldr	r1, [pc, #220]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 800358e:	4313      	orrs	r3, r2
 8003590:	600b      	str	r3, [r1, #0]
 8003592:	e03a      	b.n	800360a <HAL_RCC_OscConfig+0x1de>
 8003594:	687b      	ldr	r3, [r7, #4]
 8003596:	68db      	ldr	r3, [r3, #12]
 8003598:	2b00      	cmp	r3, #0
 800359a:	d020      	beq.n	80035de <HAL_RCC_OscConfig+0x1b2>
 800359c:	4b34      	ldr	r3, [pc, #208]	@ (8003670 <HAL_RCC_OscConfig+0x244>)
 800359e:	2201      	movs	r2, #1
 80035a0:	601a      	str	r2, [r3, #0]
 80035a2:	f7fe fa91 	bl	8001ac8 <HAL_GetTick>
 80035a6:	6138      	str	r0, [r7, #16]
 80035a8:	e008      	b.n	80035bc <HAL_RCC_OscConfig+0x190>
 80035aa:	f7fe fa8d 	bl	8001ac8 <HAL_GetTick>
 80035ae:	4602      	mov	r2, r0
 80035b0:	693b      	ldr	r3, [r7, #16]
 80035b2:	1ad3      	subs	r3, r2, r3
 80035b4:	2b02      	cmp	r3, #2
 80035b6:	d901      	bls.n	80035bc <HAL_RCC_OscConfig+0x190>
 80035b8:	2303      	movs	r3, #3
 80035ba:	e1a8      	b.n	800390e <HAL_RCC_OscConfig+0x4e2>
 80035bc:	4b2b      	ldr	r3, [pc, #172]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 80035be:	681b      	ldr	r3, [r3, #0]
 80035c0:	f003 0302 	and.w	r3, r3, #2
 80035c4:	2b00      	cmp	r3, #0
 80035c6:	d0f0      	beq.n	80035aa <HAL_RCC_OscConfig+0x17e>
 80035c8:	4b28      	ldr	r3, [pc, #160]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 80035ca:	681b      	ldr	r3, [r3, #0]
 80035cc:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80035d0:	687b      	ldr	r3, [r7, #4]
 80035d2:	691b      	ldr	r3, [r3, #16]
 80035d4:	00db      	lsls	r3, r3, #3
 80035d6:	4925      	ldr	r1, [pc, #148]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 80035d8:	4313      	orrs	r3, r2
 80035da:	600b      	str	r3, [r1, #0]
 80035dc:	e015      	b.n	800360a <HAL_RCC_OscConfig+0x1de>
 80035de:	4b24      	ldr	r3, [pc, #144]	@ (8003670 <HAL_RCC_OscConfig+0x244>)
 80035e0:	2200      	movs	r2, #0
 80035e2:	601a      	str	r2, [r3, #0]
 80035e4:	f7fe fa70 	bl	8001ac8 <HAL_GetTick>
 80035e8:	6138      	str	r0, [r7, #16]
 80035ea:	e008      	b.n	80035fe <HAL_RCC_OscConfig+0x1d2>
 80035ec:	f7fe fa6c 	bl	8001ac8 <HAL_GetTick>
 80035f0:	4602      	mov	r2, r0
 80035f2:	693b      	ldr	r3, [r7, #16]
 80035f4:	1ad3      	subs	r3, r2, r3
 80035f6:	2b02      	cmp	r3, #2
 80035f8:	d901      	bls.n	80035fe <HAL_RCC_OscConfig+0x1d2>
 80035fa:	2303      	movs	r3, #3
 80035fc:	e187      	b.n	800390e <HAL_RCC_OscConfig+0x4e2>
 80035fe:	4b1b      	ldr	r3, [pc, #108]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 8003600:	681b      	ldr	r3, [r3, #0]
 8003602:	f003 0302 	and.w	r3, r3, #2
 8003606:	2b00      	cmp	r3, #0
 8003608:	d1f0      	bne.n	80035ec <HAL_RCC_OscConfig+0x1c0>
 800360a:	687b      	ldr	r3, [r7, #4]
 800360c:	681b      	ldr	r3, [r3, #0]
 800360e:	f003 0308 	and.w	r3, r3, #8
 8003612:	2b00      	cmp	r3, #0
 8003614:	d036      	beq.n	8003684 <HAL_RCC_OscConfig+0x258>
 8003616:	687b      	ldr	r3, [r7, #4]
 8003618:	695b      	ldr	r3, [r3, #20]
 800361a:	2b00      	cmp	r3, #0
 800361c:	d016      	beq.n	800364c <HAL_RCC_OscConfig+0x220>
 800361e:	4b15      	ldr	r3, [pc, #84]	@ (8003674 <HAL_RCC_OscConfig+0x248>)
 8003620:	2201      	movs	r2, #1
 8003622:	601a      	str	r2, [r3, #0]
 8003624:	f7fe fa50 	bl	8001ac8 <HAL_GetTick>
 8003628:	6138      	str	r0, [r7, #16]
 800362a:	e008      	b.n	800363e <HAL_RCC_OscConfig+0x212>
 800362c:	f7fe fa4c 	bl	8001ac8 <HAL_GetTick>
 8003630:	4602      	mov	r2, r0
 8003632:	693b      	ldr	r3, [r7, #16]
 8003634:	1ad3      	subs	r3, r2, r3
 8003636:	2b02      	cmp	r3, #2
 8003638:	d901      	bls.n	800363e <HAL_RCC_OscConfig+0x212>
 800363a:	2303      	movs	r3, #3
 800363c:	e167      	b.n	800390e <HAL_RCC_OscConfig+0x4e2>
 800363e:	4b0b      	ldr	r3, [pc, #44]	@ (800366c <HAL_RCC_OscConfig+0x240>)
 8003640:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8003642:	f003 0302 	and.w	r3, r3, #2
 8003646:	2b00      	cmp	r3, #0
 8003648:	d0f0      	beq.n	800362c <HAL_RCC_OscConfig+0x200>
 800364a:	e01b      	b.n	8003684 <HAL_RCC_OscConfig+0x258>
 800364c:	4b09      	ldr	r3, [pc, #36]	@ (8003674 <HAL_RCC_OscConfig+0x248>)
 800364e:	2200      	movs	r2, #0
 8003650:	601a      	str	r2, [r3, #0]
 8003652:	f7fe fa39 	bl	8001ac8 <HAL_GetTick>
 8003656:	6138      	str	r0, [r7, #16]
 8003658:	e00e      	b.n	8003678 <HAL_RCC_OscConfig+0x24c>
 800365a:	f7fe fa35 	bl	8001ac8 <HAL_GetTick>
 800365e:	4602      	mov	r2, r0
 8003660:	693b      	ldr	r3, [r7, #16]
 8003662:	1ad3      	subs	r3, r2, r3
 8003664:	2b02      	cmp	r3, #2
 8003666:	d907      	bls.n	8003678 <HAL_RCC_OscConfig+0x24c>
 8003668:	2303      	movs	r3, #3
 800366a:	e150      	b.n	800390e <HAL_RCC_OscConfig+0x4e2>
 800366c:	40023800 	.word	0x40023800
 8003670:	42470000 	.word	0x42470000
 8003674:	42470e80 	.word	0x42470e80
 8003678:	4b88      	ldr	r3, [pc, #544]	@ (800389c <HAL_RCC_OscConfig+0x470>)
 800367a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800367c:	f003 0302 	and.w	r3, r3, #2
 8003680:	2b00      	cmp	r3, #0
 8003682:	d1ea      	bne.n	800365a <HAL_RCC_OscConfig+0x22e>
 8003684:	687b      	ldr	r3, [r7, #4]
 8003686:	681b      	ldr	r3, [r3, #0]
 8003688:	f003 0304 	and.w	r3, r3, #4
 800368c:	2b00      	cmp	r3, #0
 800368e:	f000 8097 	beq.w	80037c0 <HAL_RCC_OscConfig+0x394>
 8003692:	2300      	movs	r3, #0
 8003694:	75fb      	strb	r3, [r7, #23]
 8003696:	4b81      	ldr	r3, [pc, #516]	@ (800389c <HAL_RCC_OscConfig+0x470>)
 8003698:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800369a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800369e:	2b00      	cmp	r3, #0
 80036a0:	d10f      	bne.n	80036c2 <HAL_RCC_OscConfig+0x296>
 80036a2:	2300      	movs	r3, #0
 80036a4:	60bb      	str	r3, [r7, #8]
 80036a6:	4b7d      	ldr	r3, [pc, #500]	@ (800389c <HAL_RCC_OscConfig+0x470>)
 80036a8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80036aa:	4a7c      	ldr	r2, [pc, #496]	@ (800389c <HAL_RCC_OscConfig+0x470>)
 80036ac:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80036b0:	6413      	str	r3, [r2, #64]	@ 0x40
 80036b2:	4b7a      	ldr	r3, [pc, #488]	@ (800389c <HAL_RCC_OscConfig+0x470>)
 80036b4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80036b6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80036ba:	60bb      	str	r3, [r7, #8]
 80036bc:	68bb      	ldr	r3, [r7, #8]
 80036be:	2301      	movs	r3, #1
 80036c0:	75fb      	strb	r3, [r7, #23]
 80036c2:	4b77      	ldr	r3, [pc, #476]	@ (80038a0 <HAL_RCC_OscConfig+0x474>)
 80036c4:	681b      	ldr	r3, [r3, #0]
 80036c6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80036ca:	2b00      	cmp	r3, #0
 80036cc:	d118      	bne.n	8003700 <HAL_RCC_OscConfig+0x2d4>
 80036ce:	4b74      	ldr	r3, [pc, #464]	@ (80038a0 <HAL_RCC_OscConfig+0x474>)
 80036d0:	681b      	ldr	r3, [r3, #0]
 80036d2:	4a73      	ldr	r2, [pc, #460]	@ (80038a0 <HAL_RCC_OscConfig+0x474>)
 80036d4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80036d8:	6013      	str	r3, [r2, #0]
 80036da:	f7fe f9f5 	bl	8001ac8 <HAL_GetTick>
 80036de:	6138      	str	r0, [r7, #16]
 80036e0:	e008      	b.n	80036f4 <HAL_RCC_OscConfig+0x2c8>
 80036e2:	f7fe f9f1 	bl	8001ac8 <HAL_GetTick>
 80036e6:	4602      	mov	r2, r0
 80036e8:	693b      	ldr	r3, [r7, #16]
 80036ea:	1ad3      	subs	r3, r2, r3
 80036ec:	2b02      	cmp	r3, #2
 80036ee:	d901      	bls.n	80036f4 <HAL_RCC_OscConfig+0x2c8>
 80036f0:	2303      	movs	r3, #3
 80036f2:	e10c      	b.n	800390e <HAL_RCC_OscConfig+0x4e2>
 80036f4:	4b6a      	ldr	r3, [pc, #424]	@ (80038a0 <HAL_RCC_OscConfig+0x474>)
 80036f6:	681b      	ldr	r3, [r3, #0]
 80036f8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80036fc:	2b00      	cmp	r3, #0
 80036fe:	d0f0      	beq.n	80036e2 <HAL_RCC_OscConfig+0x2b6>
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	689b      	ldr	r3, [r3, #8]
 8003704:	2b01      	cmp	r3, #1
 8003706:	d106      	bne.n	8003716 <HAL_RCC_OscConfig+0x2ea>
 8003708:	4b64      	ldr	r3, [pc, #400]	@ (800389c <HAL_RCC_OscConfig+0x470>)
 800370a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800370c:	4a63      	ldr	r2, [pc, #396]	@ (800389c <HAL_RCC_OscConfig+0x470>)
 800370e:	f043 0301 	orr.w	r3, r3, #1
 8003712:	6713      	str	r3, [r2, #112]	@ 0x70
 8003714:	e01c      	b.n	8003750 <HAL_RCC_OscConfig+0x324>
 8003716:	687b      	ldr	r3, [r7, #4]
 8003718:	689b      	ldr	r3, [r3, #8]
 800371a:	2b05      	cmp	r3, #5
 800371c:	d10c      	bne.n	8003738 <HAL_RCC_OscConfig+0x30c>
 800371e:	4b5f      	ldr	r3, [pc, #380]	@ (800389c <HAL_RCC_OscConfig+0x470>)
 8003720:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003722:	4a5e      	ldr	r2, [pc, #376]	@ (800389c <HAL_RCC_OscConfig+0x470>)
 8003724:	f043 0304 	orr.w	r3, r3, #4
 8003728:	6713      	str	r3, [r2, #112]	@ 0x70
 800372a:	4b5c      	ldr	r3, [pc, #368]	@ (800389c <HAL_RCC_OscConfig+0x470>)
 800372c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800372e:	4a5b      	ldr	r2, [pc, #364]	@ (800389c <HAL_RCC_OscConfig+0x470>)
 8003730:	f043 0301 	orr.w	r3, r3, #1
 8003734:	6713      	str	r3, [r2, #112]	@ 0x70
 8003736:	e00b      	b.n	8003750 <HAL_RCC_OscConfig+0x324>
 8003738:	4b58      	ldr	r3, [pc, #352]	@ (800389c <HAL_RCC_OscConfig+0x470>)
 800373a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800373c:	4a57      	ldr	r2, [pc, #348]	@ (800389c <HAL_RCC_OscConfig+0x470>)
 800373e:	f023 0301 	bic.w	r3, r3, #1
 8003742:	6713      	str	r3, [r2, #112]	@ 0x70
 8003744:	4b55      	ldr	r3, [pc, #340]	@ (800389c <HAL_RCC_OscConfig+0x470>)
 8003746:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003748:	4a54      	ldr	r2, [pc, #336]	@ (800389c <HAL_RCC_OscConfig+0x470>)
 800374a:	f023 0304 	bic.w	r3, r3, #4
 800374e:	6713      	str	r3, [r2, #112]	@ 0x70
 8003750:	687b      	ldr	r3, [r7, #4]
 8003752:	689b      	ldr	r3, [r3, #8]
 8003754:	2b00      	cmp	r3, #0
 8003756:	d015      	beq.n	8003784 <HAL_RCC_OscConfig+0x358>
 8003758:	f7fe f9b6 	bl	8001ac8 <HAL_GetTick>
 800375c:	6138      	str	r0, [r7, #16]
 800375e:	e00a      	b.n	8003776 <HAL_RCC_OscConfig+0x34a>
 8003760:	f7fe f9b2 	bl	8001ac8 <HAL_GetTick>
 8003764:	4602      	mov	r2, r0
 8003766:	693b      	ldr	r3, [r7, #16]
 8003768:	1ad3      	subs	r3, r2, r3
 800376a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800376e:	4293      	cmp	r3, r2
 8003770:	d901      	bls.n	8003776 <HAL_RCC_OscConfig+0x34a>
 8003772:	2303      	movs	r3, #3
 8003774:	e0cb      	b.n	800390e <HAL_RCC_OscConfig+0x4e2>
 8003776:	4b49      	ldr	r3, [pc, #292]	@ (800389c <HAL_RCC_OscConfig+0x470>)
 8003778:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800377a:	f003 0302 	and.w	r3, r3, #2
 800377e:	2b00      	cmp	r3, #0
 8003780:	d0ee      	beq.n	8003760 <HAL_RCC_OscConfig+0x334>
 8003782:	e014      	b.n	80037ae <HAL_RCC_OscConfig+0x382>
 8003784:	f7fe f9a0 	bl	8001ac8 <HAL_GetTick>
 8003788:	6138      	str	r0, [r7, #16]
 800378a:	e00a      	b.n	80037a2 <HAL_RCC_OscConfig+0x376>
 800378c:	f7fe f99c 	bl	8001ac8 <HAL_GetTick>
 8003790:	4602      	mov	r2, r0
 8003792:	693b      	ldr	r3, [r7, #16]
 8003794:	1ad3      	subs	r3, r2, r3
 8003796:	f241 3288 	movw	r2, #5000	@ 0x1388
 800379a:	4293      	cmp	r3, r2
 800379c:	d901      	bls.n	80037a2 <HAL_RCC_OscConfig+0x376>
 800379e:	2303      	movs	r3, #3
 80037a0:	e0b5      	b.n	800390e <HAL_RCC_OscConfig+0x4e2>
 80037a2:	4b3e      	ldr	r3, [pc, #248]	@ (800389c <HAL_RCC_OscConfig+0x470>)
 80037a4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80037a6:	f003 0302 	and.w	r3, r3, #2
 80037aa:	2b00      	cmp	r3, #0
 80037ac:	d1ee      	bne.n	800378c <HAL_RCC_OscConfig+0x360>
 80037ae:	7dfb      	ldrb	r3, [r7, #23]
 80037b0:	2b01      	cmp	r3, #1
 80037b2:	d105      	bne.n	80037c0 <HAL_RCC_OscConfig+0x394>
 80037b4:	4b39      	ldr	r3, [pc, #228]	@ (800389c <HAL_RCC_OscConfig+0x470>)
 80037b6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80037b8:	4a38      	ldr	r2, [pc, #224]	@ (800389c <HAL_RCC_OscConfig+0x470>)
 80037ba:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80037be:	6413      	str	r3, [r2, #64]	@ 0x40
 80037c0:	687b      	ldr	r3, [r7, #4]
 80037c2:	699b      	ldr	r3, [r3, #24]
 80037c4:	2b00      	cmp	r3, #0
 80037c6:	f000 80a1 	beq.w	800390c <HAL_RCC_OscConfig+0x4e0>
 80037ca:	4b34      	ldr	r3, [pc, #208]	@ (800389c <HAL_RCC_OscConfig+0x470>)
 80037cc:	689b      	ldr	r3, [r3, #8]
 80037ce:	f003 030c 	and.w	r3, r3, #12
 80037d2:	2b08      	cmp	r3, #8
 80037d4:	d05c      	beq.n	8003890 <HAL_RCC_OscConfig+0x464>
 80037d6:	687b      	ldr	r3, [r7, #4]
 80037d8:	699b      	ldr	r3, [r3, #24]
 80037da:	2b02      	cmp	r3, #2
 80037dc:	d141      	bne.n	8003862 <HAL_RCC_OscConfig+0x436>
 80037de:	4b31      	ldr	r3, [pc, #196]	@ (80038a4 <HAL_RCC_OscConfig+0x478>)
 80037e0:	2200      	movs	r2, #0
 80037e2:	601a      	str	r2, [r3, #0]
 80037e4:	f7fe f970 	bl	8001ac8 <HAL_GetTick>
 80037e8:	6138      	str	r0, [r7, #16]
 80037ea:	e008      	b.n	80037fe <HAL_RCC_OscConfig+0x3d2>
 80037ec:	f7fe f96c 	bl	8001ac8 <HAL_GetTick>
 80037f0:	4602      	mov	r2, r0
 80037f2:	693b      	ldr	r3, [r7, #16]
 80037f4:	1ad3      	subs	r3, r2, r3
 80037f6:	2b02      	cmp	r3, #2
 80037f8:	d901      	bls.n	80037fe <HAL_RCC_OscConfig+0x3d2>
 80037fa:	2303      	movs	r3, #3
 80037fc:	e087      	b.n	800390e <HAL_RCC_OscConfig+0x4e2>
 80037fe:	4b27      	ldr	r3, [pc, #156]	@ (800389c <HAL_RCC_OscConfig+0x470>)
 8003800:	681b      	ldr	r3, [r3, #0]
 8003802:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003806:	2b00      	cmp	r3, #0
 8003808:	d1f0      	bne.n	80037ec <HAL_RCC_OscConfig+0x3c0>
 800380a:	687b      	ldr	r3, [r7, #4]
 800380c:	69da      	ldr	r2, [r3, #28]
 800380e:	687b      	ldr	r3, [r7, #4]
 8003810:	6a1b      	ldr	r3, [r3, #32]
 8003812:	431a      	orrs	r2, r3
 8003814:	687b      	ldr	r3, [r7, #4]
 8003816:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003818:	019b      	lsls	r3, r3, #6
 800381a:	431a      	orrs	r2, r3
 800381c:	687b      	ldr	r3, [r7, #4]
 800381e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003820:	085b      	lsrs	r3, r3, #1
 8003822:	3b01      	subs	r3, #1
 8003824:	041b      	lsls	r3, r3, #16
 8003826:	431a      	orrs	r2, r3
 8003828:	687b      	ldr	r3, [r7, #4]
 800382a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800382c:	061b      	lsls	r3, r3, #24
 800382e:	491b      	ldr	r1, [pc, #108]	@ (800389c <HAL_RCC_OscConfig+0x470>)
 8003830:	4313      	orrs	r3, r2
 8003832:	604b      	str	r3, [r1, #4]
 8003834:	4b1b      	ldr	r3, [pc, #108]	@ (80038a4 <HAL_RCC_OscConfig+0x478>)
 8003836:	2201      	movs	r2, #1
 8003838:	601a      	str	r2, [r3, #0]
 800383a:	f7fe f945 	bl	8001ac8 <HAL_GetTick>
 800383e:	6138      	str	r0, [r7, #16]
 8003840:	e008      	b.n	8003854 <HAL_RCC_OscConfig+0x428>
 8003842:	f7fe f941 	bl	8001ac8 <HAL_GetTick>
 8003846:	4602      	mov	r2, r0
 8003848:	693b      	ldr	r3, [r7, #16]
 800384a:	1ad3      	subs	r3, r2, r3
 800384c:	2b02      	cmp	r3, #2
 800384e:	d901      	bls.n	8003854 <HAL_RCC_OscConfig+0x428>
 8003850:	2303      	movs	r3, #3
 8003852:	e05c      	b.n	800390e <HAL_RCC_OscConfig+0x4e2>
 8003854:	4b11      	ldr	r3, [pc, #68]	@ (800389c <HAL_RCC_OscConfig+0x470>)
 8003856:	681b      	ldr	r3, [r3, #0]
 8003858:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800385c:	2b00      	cmp	r3, #0
 800385e:	d0f0      	beq.n	8003842 <HAL_RCC_OscConfig+0x416>
 8003860:	e054      	b.n	800390c <HAL_RCC_OscConfig+0x4e0>
 8003862:	4b10      	ldr	r3, [pc, #64]	@ (80038a4 <HAL_RCC_OscConfig+0x478>)
 8003864:	2200      	movs	r2, #0
 8003866:	601a      	str	r2, [r3, #0]
 8003868:	f7fe f92e 	bl	8001ac8 <HAL_GetTick>
 800386c:	6138      	str	r0, [r7, #16]
 800386e:	e008      	b.n	8003882 <HAL_RCC_OscConfig+0x456>
 8003870:	f7fe f92a 	bl	8001ac8 <HAL_GetTick>
 8003874:	4602      	mov	r2, r0
 8003876:	693b      	ldr	r3, [r7, #16]
 8003878:	1ad3      	subs	r3, r2, r3
 800387a:	2b02      	cmp	r3, #2
 800387c:	d901      	bls.n	8003882 <HAL_RCC_OscConfig+0x456>
 800387e:	2303      	movs	r3, #3
 8003880:	e045      	b.n	800390e <HAL_RCC_OscConfig+0x4e2>
 8003882:	4b06      	ldr	r3, [pc, #24]	@ (800389c <HAL_RCC_OscConfig+0x470>)
 8003884:	681b      	ldr	r3, [r3, #0]
 8003886:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800388a:	2b00      	cmp	r3, #0
 800388c:	d1f0      	bne.n	8003870 <HAL_RCC_OscConfig+0x444>
 800388e:	e03d      	b.n	800390c <HAL_RCC_OscConfig+0x4e0>
 8003890:	687b      	ldr	r3, [r7, #4]
 8003892:	699b      	ldr	r3, [r3, #24]
 8003894:	2b01      	cmp	r3, #1
 8003896:	d107      	bne.n	80038a8 <HAL_RCC_OscConfig+0x47c>
 8003898:	2301      	movs	r3, #1
 800389a:	e038      	b.n	800390e <HAL_RCC_OscConfig+0x4e2>
 800389c:	40023800 	.word	0x40023800
 80038a0:	40007000 	.word	0x40007000
 80038a4:	42470060 	.word	0x42470060
 80038a8:	4b1b      	ldr	r3, [pc, #108]	@ (8003918 <HAL_RCC_OscConfig+0x4ec>)
 80038aa:	685b      	ldr	r3, [r3, #4]
 80038ac:	60fb      	str	r3, [r7, #12]
 80038ae:	687b      	ldr	r3, [r7, #4]
 80038b0:	699b      	ldr	r3, [r3, #24]
 80038b2:	2b01      	cmp	r3, #1
 80038b4:	d028      	beq.n	8003908 <HAL_RCC_OscConfig+0x4dc>
 80038b6:	68fb      	ldr	r3, [r7, #12]
 80038b8:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 80038bc:	687b      	ldr	r3, [r7, #4]
 80038be:	69db      	ldr	r3, [r3, #28]
 80038c0:	429a      	cmp	r2, r3
 80038c2:	d121      	bne.n	8003908 <HAL_RCC_OscConfig+0x4dc>
 80038c4:	68fb      	ldr	r3, [r7, #12]
 80038c6:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 80038ca:	687b      	ldr	r3, [r7, #4]
 80038cc:	6a1b      	ldr	r3, [r3, #32]
 80038ce:	429a      	cmp	r2, r3
 80038d0:	d11a      	bne.n	8003908 <HAL_RCC_OscConfig+0x4dc>
 80038d2:	68fa      	ldr	r2, [r7, #12]
 80038d4:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 80038d8:	4013      	ands	r3, r2
 80038da:	687a      	ldr	r2, [r7, #4]
 80038dc:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80038de:	0192      	lsls	r2, r2, #6
 80038e0:	4293      	cmp	r3, r2
 80038e2:	d111      	bne.n	8003908 <HAL_RCC_OscConfig+0x4dc>
 80038e4:	68fb      	ldr	r3, [r7, #12]
 80038e6:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 80038ea:	687b      	ldr	r3, [r7, #4]
 80038ec:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80038ee:	085b      	lsrs	r3, r3, #1
 80038f0:	3b01      	subs	r3, #1
 80038f2:	041b      	lsls	r3, r3, #16
 80038f4:	429a      	cmp	r2, r3
 80038f6:	d107      	bne.n	8003908 <HAL_RCC_OscConfig+0x4dc>
 80038f8:	68fb      	ldr	r3, [r7, #12]
 80038fa:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 80038fe:	687b      	ldr	r3, [r7, #4]
 8003900:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003902:	061b      	lsls	r3, r3, #24
 8003904:	429a      	cmp	r2, r3
 8003906:	d001      	beq.n	800390c <HAL_RCC_OscConfig+0x4e0>
 8003908:	2301      	movs	r3, #1
 800390a:	e000      	b.n	800390e <HAL_RCC_OscConfig+0x4e2>
 800390c:	2300      	movs	r3, #0
 800390e:	4618      	mov	r0, r3
 8003910:	3718      	adds	r7, #24
 8003912:	46bd      	mov	sp, r7
 8003914:	bd80      	pop	{r7, pc}
 8003916:	bf00      	nop
 8003918:	40023800 	.word	0x40023800

0800391c <HAL_RCC_ClockConfig>:
 800391c:	b580      	push	{r7, lr}
 800391e:	b084      	sub	sp, #16
 8003920:	af00      	add	r7, sp, #0
 8003922:	6078      	str	r0, [r7, #4]
 8003924:	6039      	str	r1, [r7, #0]
 8003926:	687b      	ldr	r3, [r7, #4]
 8003928:	2b00      	cmp	r3, #0
 800392a:	d101      	bne.n	8003930 <HAL_RCC_ClockConfig+0x14>
 800392c:	2301      	movs	r3, #1
 800392e:	e0cc      	b.n	8003aca <HAL_RCC_ClockConfig+0x1ae>
 8003930:	4b68      	ldr	r3, [pc, #416]	@ (8003ad4 <HAL_RCC_ClockConfig+0x1b8>)
 8003932:	681b      	ldr	r3, [r3, #0]
 8003934:	f003 0307 	and.w	r3, r3, #7
 8003938:	683a      	ldr	r2, [r7, #0]
 800393a:	429a      	cmp	r2, r3
 800393c:	d90c      	bls.n	8003958 <HAL_RCC_ClockConfig+0x3c>
 800393e:	4b65      	ldr	r3, [pc, #404]	@ (8003ad4 <HAL_RCC_ClockConfig+0x1b8>)
 8003940:	683a      	ldr	r2, [r7, #0]
 8003942:	b2d2      	uxtb	r2, r2
 8003944:	701a      	strb	r2, [r3, #0]
 8003946:	4b63      	ldr	r3, [pc, #396]	@ (8003ad4 <HAL_RCC_ClockConfig+0x1b8>)
 8003948:	681b      	ldr	r3, [r3, #0]
 800394a:	f003 0307 	and.w	r3, r3, #7
 800394e:	683a      	ldr	r2, [r7, #0]
 8003950:	429a      	cmp	r2, r3
 8003952:	d001      	beq.n	8003958 <HAL_RCC_ClockConfig+0x3c>
 8003954:	2301      	movs	r3, #1
 8003956:	e0b8      	b.n	8003aca <HAL_RCC_ClockConfig+0x1ae>
 8003958:	687b      	ldr	r3, [r7, #4]
 800395a:	681b      	ldr	r3, [r3, #0]
 800395c:	f003 0302 	and.w	r3, r3, #2
 8003960:	2b00      	cmp	r3, #0
 8003962:	d020      	beq.n	80039a6 <HAL_RCC_ClockConfig+0x8a>
 8003964:	687b      	ldr	r3, [r7, #4]
 8003966:	681b      	ldr	r3, [r3, #0]
 8003968:	f003 0304 	and.w	r3, r3, #4
 800396c:	2b00      	cmp	r3, #0
 800396e:	d005      	beq.n	800397c <HAL_RCC_ClockConfig+0x60>
 8003970:	4b59      	ldr	r3, [pc, #356]	@ (8003ad8 <HAL_RCC_ClockConfig+0x1bc>)
 8003972:	689b      	ldr	r3, [r3, #8]
 8003974:	4a58      	ldr	r2, [pc, #352]	@ (8003ad8 <HAL_RCC_ClockConfig+0x1bc>)
 8003976:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 800397a:	6093      	str	r3, [r2, #8]
 800397c:	687b      	ldr	r3, [r7, #4]
 800397e:	681b      	ldr	r3, [r3, #0]
 8003980:	f003 0308 	and.w	r3, r3, #8
 8003984:	2b00      	cmp	r3, #0
 8003986:	d005      	beq.n	8003994 <HAL_RCC_ClockConfig+0x78>
 8003988:	4b53      	ldr	r3, [pc, #332]	@ (8003ad8 <HAL_RCC_ClockConfig+0x1bc>)
 800398a:	689b      	ldr	r3, [r3, #8]
 800398c:	4a52      	ldr	r2, [pc, #328]	@ (8003ad8 <HAL_RCC_ClockConfig+0x1bc>)
 800398e:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8003992:	6093      	str	r3, [r2, #8]
 8003994:	4b50      	ldr	r3, [pc, #320]	@ (8003ad8 <HAL_RCC_ClockConfig+0x1bc>)
 8003996:	689b      	ldr	r3, [r3, #8]
 8003998:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 800399c:	687b      	ldr	r3, [r7, #4]
 800399e:	689b      	ldr	r3, [r3, #8]
 80039a0:	494d      	ldr	r1, [pc, #308]	@ (8003ad8 <HAL_RCC_ClockConfig+0x1bc>)
 80039a2:	4313      	orrs	r3, r2
 80039a4:	608b      	str	r3, [r1, #8]
 80039a6:	687b      	ldr	r3, [r7, #4]
 80039a8:	681b      	ldr	r3, [r3, #0]
 80039aa:	f003 0301 	and.w	r3, r3, #1
 80039ae:	2b00      	cmp	r3, #0
 80039b0:	d044      	beq.n	8003a3c <HAL_RCC_ClockConfig+0x120>
 80039b2:	687b      	ldr	r3, [r7, #4]
 80039b4:	685b      	ldr	r3, [r3, #4]
 80039b6:	2b01      	cmp	r3, #1
 80039b8:	d107      	bne.n	80039ca <HAL_RCC_ClockConfig+0xae>
 80039ba:	4b47      	ldr	r3, [pc, #284]	@ (8003ad8 <HAL_RCC_ClockConfig+0x1bc>)
 80039bc:	681b      	ldr	r3, [r3, #0]
 80039be:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80039c2:	2b00      	cmp	r3, #0
 80039c4:	d119      	bne.n	80039fa <HAL_RCC_ClockConfig+0xde>
 80039c6:	2301      	movs	r3, #1
 80039c8:	e07f      	b.n	8003aca <HAL_RCC_ClockConfig+0x1ae>
 80039ca:	687b      	ldr	r3, [r7, #4]
 80039cc:	685b      	ldr	r3, [r3, #4]
 80039ce:	2b02      	cmp	r3, #2
 80039d0:	d003      	beq.n	80039da <HAL_RCC_ClockConfig+0xbe>
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	685b      	ldr	r3, [r3, #4]
 80039d6:	2b03      	cmp	r3, #3
 80039d8:	d107      	bne.n	80039ea <HAL_RCC_ClockConfig+0xce>
 80039da:	4b3f      	ldr	r3, [pc, #252]	@ (8003ad8 <HAL_RCC_ClockConfig+0x1bc>)
 80039dc:	681b      	ldr	r3, [r3, #0]
 80039de:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80039e2:	2b00      	cmp	r3, #0
 80039e4:	d109      	bne.n	80039fa <HAL_RCC_ClockConfig+0xde>
 80039e6:	2301      	movs	r3, #1
 80039e8:	e06f      	b.n	8003aca <HAL_RCC_ClockConfig+0x1ae>
 80039ea:	4b3b      	ldr	r3, [pc, #236]	@ (8003ad8 <HAL_RCC_ClockConfig+0x1bc>)
 80039ec:	681b      	ldr	r3, [r3, #0]
 80039ee:	f003 0302 	and.w	r3, r3, #2
 80039f2:	2b00      	cmp	r3, #0
 80039f4:	d101      	bne.n	80039fa <HAL_RCC_ClockConfig+0xde>
 80039f6:	2301      	movs	r3, #1
 80039f8:	e067      	b.n	8003aca <HAL_RCC_ClockConfig+0x1ae>
 80039fa:	4b37      	ldr	r3, [pc, #220]	@ (8003ad8 <HAL_RCC_ClockConfig+0x1bc>)
 80039fc:	689b      	ldr	r3, [r3, #8]
 80039fe:	f023 0203 	bic.w	r2, r3, #3
 8003a02:	687b      	ldr	r3, [r7, #4]
 8003a04:	685b      	ldr	r3, [r3, #4]
 8003a06:	4934      	ldr	r1, [pc, #208]	@ (8003ad8 <HAL_RCC_ClockConfig+0x1bc>)
 8003a08:	4313      	orrs	r3, r2
 8003a0a:	608b      	str	r3, [r1, #8]
 8003a0c:	f7fe f85c 	bl	8001ac8 <HAL_GetTick>
 8003a10:	60f8      	str	r0, [r7, #12]
 8003a12:	e00a      	b.n	8003a2a <HAL_RCC_ClockConfig+0x10e>
 8003a14:	f7fe f858 	bl	8001ac8 <HAL_GetTick>
 8003a18:	4602      	mov	r2, r0
 8003a1a:	68fb      	ldr	r3, [r7, #12]
 8003a1c:	1ad3      	subs	r3, r2, r3
 8003a1e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003a22:	4293      	cmp	r3, r2
 8003a24:	d901      	bls.n	8003a2a <HAL_RCC_ClockConfig+0x10e>
 8003a26:	2303      	movs	r3, #3
 8003a28:	e04f      	b.n	8003aca <HAL_RCC_ClockConfig+0x1ae>
 8003a2a:	4b2b      	ldr	r3, [pc, #172]	@ (8003ad8 <HAL_RCC_ClockConfig+0x1bc>)
 8003a2c:	689b      	ldr	r3, [r3, #8]
 8003a2e:	f003 020c 	and.w	r2, r3, #12
 8003a32:	687b      	ldr	r3, [r7, #4]
 8003a34:	685b      	ldr	r3, [r3, #4]
 8003a36:	009b      	lsls	r3, r3, #2
 8003a38:	429a      	cmp	r2, r3
 8003a3a:	d1eb      	bne.n	8003a14 <HAL_RCC_ClockConfig+0xf8>
 8003a3c:	4b25      	ldr	r3, [pc, #148]	@ (8003ad4 <HAL_RCC_ClockConfig+0x1b8>)
 8003a3e:	681b      	ldr	r3, [r3, #0]
 8003a40:	f003 0307 	and.w	r3, r3, #7
 8003a44:	683a      	ldr	r2, [r7, #0]
 8003a46:	429a      	cmp	r2, r3
 8003a48:	d20c      	bcs.n	8003a64 <HAL_RCC_ClockConfig+0x148>
 8003a4a:	4b22      	ldr	r3, [pc, #136]	@ (8003ad4 <HAL_RCC_ClockConfig+0x1b8>)
 8003a4c:	683a      	ldr	r2, [r7, #0]
 8003a4e:	b2d2      	uxtb	r2, r2
 8003a50:	701a      	strb	r2, [r3, #0]
 8003a52:	4b20      	ldr	r3, [pc, #128]	@ (8003ad4 <HAL_RCC_ClockConfig+0x1b8>)
 8003a54:	681b      	ldr	r3, [r3, #0]
 8003a56:	f003 0307 	and.w	r3, r3, #7
 8003a5a:	683a      	ldr	r2, [r7, #0]
 8003a5c:	429a      	cmp	r2, r3
 8003a5e:	d001      	beq.n	8003a64 <HAL_RCC_ClockConfig+0x148>
 8003a60:	2301      	movs	r3, #1
 8003a62:	e032      	b.n	8003aca <HAL_RCC_ClockConfig+0x1ae>
 8003a64:	687b      	ldr	r3, [r7, #4]
 8003a66:	681b      	ldr	r3, [r3, #0]
 8003a68:	f003 0304 	and.w	r3, r3, #4
 8003a6c:	2b00      	cmp	r3, #0
 8003a6e:	d008      	beq.n	8003a82 <HAL_RCC_ClockConfig+0x166>
 8003a70:	4b19      	ldr	r3, [pc, #100]	@ (8003ad8 <HAL_RCC_ClockConfig+0x1bc>)
 8003a72:	689b      	ldr	r3, [r3, #8]
 8003a74:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8003a78:	687b      	ldr	r3, [r7, #4]
 8003a7a:	68db      	ldr	r3, [r3, #12]
 8003a7c:	4916      	ldr	r1, [pc, #88]	@ (8003ad8 <HAL_RCC_ClockConfig+0x1bc>)
 8003a7e:	4313      	orrs	r3, r2
 8003a80:	608b      	str	r3, [r1, #8]
 8003a82:	687b      	ldr	r3, [r7, #4]
 8003a84:	681b      	ldr	r3, [r3, #0]
 8003a86:	f003 0308 	and.w	r3, r3, #8
 8003a8a:	2b00      	cmp	r3, #0
 8003a8c:	d009      	beq.n	8003aa2 <HAL_RCC_ClockConfig+0x186>
 8003a8e:	4b12      	ldr	r3, [pc, #72]	@ (8003ad8 <HAL_RCC_ClockConfig+0x1bc>)
 8003a90:	689b      	ldr	r3, [r3, #8]
 8003a92:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8003a96:	687b      	ldr	r3, [r7, #4]
 8003a98:	691b      	ldr	r3, [r3, #16]
 8003a9a:	00db      	lsls	r3, r3, #3
 8003a9c:	490e      	ldr	r1, [pc, #56]	@ (8003ad8 <HAL_RCC_ClockConfig+0x1bc>)
 8003a9e:	4313      	orrs	r3, r2
 8003aa0:	608b      	str	r3, [r1, #8]
 8003aa2:	f000 f821 	bl	8003ae8 <HAL_RCC_GetSysClockFreq>
 8003aa6:	4602      	mov	r2, r0
 8003aa8:	4b0b      	ldr	r3, [pc, #44]	@ (8003ad8 <HAL_RCC_ClockConfig+0x1bc>)
 8003aaa:	689b      	ldr	r3, [r3, #8]
 8003aac:	091b      	lsrs	r3, r3, #4
 8003aae:	f003 030f 	and.w	r3, r3, #15
 8003ab2:	490a      	ldr	r1, [pc, #40]	@ (8003adc <HAL_RCC_ClockConfig+0x1c0>)
 8003ab4:	5ccb      	ldrb	r3, [r1, r3]
 8003ab6:	fa22 f303 	lsr.w	r3, r2, r3
 8003aba:	4a09      	ldr	r2, [pc, #36]	@ (8003ae0 <HAL_RCC_ClockConfig+0x1c4>)
 8003abc:	6013      	str	r3, [r2, #0]
 8003abe:	4b09      	ldr	r3, [pc, #36]	@ (8003ae4 <HAL_RCC_ClockConfig+0x1c8>)
 8003ac0:	681b      	ldr	r3, [r3, #0]
 8003ac2:	4618      	mov	r0, r3
 8003ac4:	f7fd ffbc 	bl	8001a40 <HAL_InitTick>
 8003ac8:	2300      	movs	r3, #0
 8003aca:	4618      	mov	r0, r3
 8003acc:	3710      	adds	r7, #16
 8003ace:	46bd      	mov	sp, r7
 8003ad0:	bd80      	pop	{r7, pc}
 8003ad2:	bf00      	nop
 8003ad4:	40023c00 	.word	0x40023c00
 8003ad8:	40023800 	.word	0x40023800
 8003adc:	08005764 	.word	0x08005764
 8003ae0:	20000004 	.word	0x20000004
 8003ae4:	20000008 	.word	0x20000008

08003ae8 <HAL_RCC_GetSysClockFreq>:
 8003ae8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003aec:	b090      	sub	sp, #64	@ 0x40
 8003aee:	af00      	add	r7, sp, #0
 8003af0:	2300      	movs	r3, #0
 8003af2:	637b      	str	r3, [r7, #52]	@ 0x34
 8003af4:	2300      	movs	r3, #0
 8003af6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003af8:	2300      	movs	r3, #0
 8003afa:	633b      	str	r3, [r7, #48]	@ 0x30
 8003afc:	2300      	movs	r3, #0
 8003afe:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003b00:	4b59      	ldr	r3, [pc, #356]	@ (8003c68 <HAL_RCC_GetSysClockFreq+0x180>)
 8003b02:	689b      	ldr	r3, [r3, #8]
 8003b04:	f003 030c 	and.w	r3, r3, #12
 8003b08:	2b08      	cmp	r3, #8
 8003b0a:	d00d      	beq.n	8003b28 <HAL_RCC_GetSysClockFreq+0x40>
 8003b0c:	2b08      	cmp	r3, #8
 8003b0e:	f200 80a1 	bhi.w	8003c54 <HAL_RCC_GetSysClockFreq+0x16c>
 8003b12:	2b00      	cmp	r3, #0
 8003b14:	d002      	beq.n	8003b1c <HAL_RCC_GetSysClockFreq+0x34>
 8003b16:	2b04      	cmp	r3, #4
 8003b18:	d003      	beq.n	8003b22 <HAL_RCC_GetSysClockFreq+0x3a>
 8003b1a:	e09b      	b.n	8003c54 <HAL_RCC_GetSysClockFreq+0x16c>
 8003b1c:	4b53      	ldr	r3, [pc, #332]	@ (8003c6c <HAL_RCC_GetSysClockFreq+0x184>)
 8003b1e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003b20:	e09b      	b.n	8003c5a <HAL_RCC_GetSysClockFreq+0x172>
 8003b22:	4b53      	ldr	r3, [pc, #332]	@ (8003c70 <HAL_RCC_GetSysClockFreq+0x188>)
 8003b24:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003b26:	e098      	b.n	8003c5a <HAL_RCC_GetSysClockFreq+0x172>
 8003b28:	4b4f      	ldr	r3, [pc, #316]	@ (8003c68 <HAL_RCC_GetSysClockFreq+0x180>)
 8003b2a:	685b      	ldr	r3, [r3, #4]
 8003b2c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8003b30:	637b      	str	r3, [r7, #52]	@ 0x34
 8003b32:	4b4d      	ldr	r3, [pc, #308]	@ (8003c68 <HAL_RCC_GetSysClockFreq+0x180>)
 8003b34:	685b      	ldr	r3, [r3, #4]
 8003b36:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003b3a:	2b00      	cmp	r3, #0
 8003b3c:	d028      	beq.n	8003b90 <HAL_RCC_GetSysClockFreq+0xa8>
 8003b3e:	4b4a      	ldr	r3, [pc, #296]	@ (8003c68 <HAL_RCC_GetSysClockFreq+0x180>)
 8003b40:	685b      	ldr	r3, [r3, #4]
 8003b42:	099b      	lsrs	r3, r3, #6
 8003b44:	2200      	movs	r2, #0
 8003b46:	623b      	str	r3, [r7, #32]
 8003b48:	627a      	str	r2, [r7, #36]	@ 0x24
 8003b4a:	6a3b      	ldr	r3, [r7, #32]
 8003b4c:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8003b50:	2100      	movs	r1, #0
 8003b52:	4b47      	ldr	r3, [pc, #284]	@ (8003c70 <HAL_RCC_GetSysClockFreq+0x188>)
 8003b54:	fb03 f201 	mul.w	r2, r3, r1
 8003b58:	2300      	movs	r3, #0
 8003b5a:	fb00 f303 	mul.w	r3, r0, r3
 8003b5e:	4413      	add	r3, r2
 8003b60:	4a43      	ldr	r2, [pc, #268]	@ (8003c70 <HAL_RCC_GetSysClockFreq+0x188>)
 8003b62:	fba0 1202 	umull	r1, r2, r0, r2
 8003b66:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8003b68:	460a      	mov	r2, r1
 8003b6a:	62ba      	str	r2, [r7, #40]	@ 0x28
 8003b6c:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8003b6e:	4413      	add	r3, r2
 8003b70:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003b72:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003b74:	2200      	movs	r2, #0
 8003b76:	61bb      	str	r3, [r7, #24]
 8003b78:	61fa      	str	r2, [r7, #28]
 8003b7a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8003b7e:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 8003b82:	f7fc fb7d 	bl	8000280 <__aeabi_uldivmod>
 8003b86:	4602      	mov	r2, r0
 8003b88:	460b      	mov	r3, r1
 8003b8a:	4613      	mov	r3, r2
 8003b8c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003b8e:	e053      	b.n	8003c38 <HAL_RCC_GetSysClockFreq+0x150>
 8003b90:	4b35      	ldr	r3, [pc, #212]	@ (8003c68 <HAL_RCC_GetSysClockFreq+0x180>)
 8003b92:	685b      	ldr	r3, [r3, #4]
 8003b94:	099b      	lsrs	r3, r3, #6
 8003b96:	2200      	movs	r2, #0
 8003b98:	613b      	str	r3, [r7, #16]
 8003b9a:	617a      	str	r2, [r7, #20]
 8003b9c:	693b      	ldr	r3, [r7, #16]
 8003b9e:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8003ba2:	f04f 0b00 	mov.w	fp, #0
 8003ba6:	4652      	mov	r2, sl
 8003ba8:	465b      	mov	r3, fp
 8003baa:	f04f 0000 	mov.w	r0, #0
 8003bae:	f04f 0100 	mov.w	r1, #0
 8003bb2:	0159      	lsls	r1, r3, #5
 8003bb4:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003bb8:	0150      	lsls	r0, r2, #5
 8003bba:	4602      	mov	r2, r0
 8003bbc:	460b      	mov	r3, r1
 8003bbe:	ebb2 080a 	subs.w	r8, r2, sl
 8003bc2:	eb63 090b 	sbc.w	r9, r3, fp
 8003bc6:	f04f 0200 	mov.w	r2, #0
 8003bca:	f04f 0300 	mov.w	r3, #0
 8003bce:	ea4f 1389 	mov.w	r3, r9, lsl #6
 8003bd2:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 8003bd6:	ea4f 1288 	mov.w	r2, r8, lsl #6
 8003bda:	ebb2 0408 	subs.w	r4, r2, r8
 8003bde:	eb63 0509 	sbc.w	r5, r3, r9
 8003be2:	f04f 0200 	mov.w	r2, #0
 8003be6:	f04f 0300 	mov.w	r3, #0
 8003bea:	00eb      	lsls	r3, r5, #3
 8003bec:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8003bf0:	00e2      	lsls	r2, r4, #3
 8003bf2:	4614      	mov	r4, r2
 8003bf4:	461d      	mov	r5, r3
 8003bf6:	eb14 030a 	adds.w	r3, r4, sl
 8003bfa:	603b      	str	r3, [r7, #0]
 8003bfc:	eb45 030b 	adc.w	r3, r5, fp
 8003c00:	607b      	str	r3, [r7, #4]
 8003c02:	f04f 0200 	mov.w	r2, #0
 8003c06:	f04f 0300 	mov.w	r3, #0
 8003c0a:	e9d7 4500 	ldrd	r4, r5, [r7]
 8003c0e:	4629      	mov	r1, r5
 8003c10:	028b      	lsls	r3, r1, #10
 8003c12:	4621      	mov	r1, r4
 8003c14:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8003c18:	4621      	mov	r1, r4
 8003c1a:	028a      	lsls	r2, r1, #10
 8003c1c:	4610      	mov	r0, r2
 8003c1e:	4619      	mov	r1, r3
 8003c20:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003c22:	2200      	movs	r2, #0
 8003c24:	60bb      	str	r3, [r7, #8]
 8003c26:	60fa      	str	r2, [r7, #12]
 8003c28:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8003c2c:	f7fc fb28 	bl	8000280 <__aeabi_uldivmod>
 8003c30:	4602      	mov	r2, r0
 8003c32:	460b      	mov	r3, r1
 8003c34:	4613      	mov	r3, r2
 8003c36:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003c38:	4b0b      	ldr	r3, [pc, #44]	@ (8003c68 <HAL_RCC_GetSysClockFreq+0x180>)
 8003c3a:	685b      	ldr	r3, [r3, #4]
 8003c3c:	0c1b      	lsrs	r3, r3, #16
 8003c3e:	f003 0303 	and.w	r3, r3, #3
 8003c42:	3301      	adds	r3, #1
 8003c44:	005b      	lsls	r3, r3, #1
 8003c46:	633b      	str	r3, [r7, #48]	@ 0x30
 8003c48:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8003c4a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003c4c:	fbb2 f3f3 	udiv	r3, r2, r3
 8003c50:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003c52:	e002      	b.n	8003c5a <HAL_RCC_GetSysClockFreq+0x172>
 8003c54:	4b05      	ldr	r3, [pc, #20]	@ (8003c6c <HAL_RCC_GetSysClockFreq+0x184>)
 8003c56:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003c58:	bf00      	nop
 8003c5a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003c5c:	4618      	mov	r0, r3
 8003c5e:	3740      	adds	r7, #64	@ 0x40
 8003c60:	46bd      	mov	sp, r7
 8003c62:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8003c66:	bf00      	nop
 8003c68:	40023800 	.word	0x40023800
 8003c6c:	00f42400 	.word	0x00f42400
 8003c70:	017d7840 	.word	0x017d7840

08003c74 <HAL_RCC_GetHCLKFreq>:
 8003c74:	b480      	push	{r7}
 8003c76:	af00      	add	r7, sp, #0
 8003c78:	4b03      	ldr	r3, [pc, #12]	@ (8003c88 <HAL_RCC_GetHCLKFreq+0x14>)
 8003c7a:	681b      	ldr	r3, [r3, #0]
 8003c7c:	4618      	mov	r0, r3
 8003c7e:	46bd      	mov	sp, r7
 8003c80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c84:	4770      	bx	lr
 8003c86:	bf00      	nop
 8003c88:	20000004 	.word	0x20000004

08003c8c <HAL_RCC_GetPCLK1Freq>:
 8003c8c:	b580      	push	{r7, lr}
 8003c8e:	af00      	add	r7, sp, #0
 8003c90:	f7ff fff0 	bl	8003c74 <HAL_RCC_GetHCLKFreq>
 8003c94:	4602      	mov	r2, r0
 8003c96:	4b05      	ldr	r3, [pc, #20]	@ (8003cac <HAL_RCC_GetPCLK1Freq+0x20>)
 8003c98:	689b      	ldr	r3, [r3, #8]
 8003c9a:	0a9b      	lsrs	r3, r3, #10
 8003c9c:	f003 0307 	and.w	r3, r3, #7
 8003ca0:	4903      	ldr	r1, [pc, #12]	@ (8003cb0 <HAL_RCC_GetPCLK1Freq+0x24>)
 8003ca2:	5ccb      	ldrb	r3, [r1, r3]
 8003ca4:	fa22 f303 	lsr.w	r3, r2, r3
 8003ca8:	4618      	mov	r0, r3
 8003caa:	bd80      	pop	{r7, pc}
 8003cac:	40023800 	.word	0x40023800
 8003cb0:	08005774 	.word	0x08005774

08003cb4 <HAL_RCC_GetPCLK2Freq>:
 8003cb4:	b580      	push	{r7, lr}
 8003cb6:	af00      	add	r7, sp, #0
 8003cb8:	f7ff ffdc 	bl	8003c74 <HAL_RCC_GetHCLKFreq>
 8003cbc:	4602      	mov	r2, r0
 8003cbe:	4b05      	ldr	r3, [pc, #20]	@ (8003cd4 <HAL_RCC_GetPCLK2Freq+0x20>)
 8003cc0:	689b      	ldr	r3, [r3, #8]
 8003cc2:	0b5b      	lsrs	r3, r3, #13
 8003cc4:	f003 0307 	and.w	r3, r3, #7
 8003cc8:	4903      	ldr	r1, [pc, #12]	@ (8003cd8 <HAL_RCC_GetPCLK2Freq+0x24>)
 8003cca:	5ccb      	ldrb	r3, [r1, r3]
 8003ccc:	fa22 f303 	lsr.w	r3, r2, r3
 8003cd0:	4618      	mov	r0, r3
 8003cd2:	bd80      	pop	{r7, pc}
 8003cd4:	40023800 	.word	0x40023800
 8003cd8:	08005774 	.word	0x08005774

08003cdc <HAL_UART_Init>:
 8003cdc:	b580      	push	{r7, lr}
 8003cde:	b082      	sub	sp, #8
 8003ce0:	af00      	add	r7, sp, #0
 8003ce2:	6078      	str	r0, [r7, #4]
 8003ce4:	687b      	ldr	r3, [r7, #4]
 8003ce6:	2b00      	cmp	r3, #0
 8003ce8:	d101      	bne.n	8003cee <HAL_UART_Init+0x12>
 8003cea:	2301      	movs	r3, #1
 8003cec:	e042      	b.n	8003d74 <HAL_UART_Init+0x98>
 8003cee:	687b      	ldr	r3, [r7, #4]
 8003cf0:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003cf4:	b2db      	uxtb	r3, r3
 8003cf6:	2b00      	cmp	r3, #0
 8003cf8:	d106      	bne.n	8003d08 <HAL_UART_Init+0x2c>
 8003cfa:	687b      	ldr	r3, [r7, #4]
 8003cfc:	2200      	movs	r2, #0
 8003cfe:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003d02:	6878      	ldr	r0, [r7, #4]
 8003d04:	f7fd fdc2 	bl	800188c <HAL_UART_MspInit>
 8003d08:	687b      	ldr	r3, [r7, #4]
 8003d0a:	2224      	movs	r2, #36	@ 0x24
 8003d0c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003d10:	687b      	ldr	r3, [r7, #4]
 8003d12:	681b      	ldr	r3, [r3, #0]
 8003d14:	68da      	ldr	r2, [r3, #12]
 8003d16:	687b      	ldr	r3, [r7, #4]
 8003d18:	681b      	ldr	r3, [r3, #0]
 8003d1a:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8003d1e:	60da      	str	r2, [r3, #12]
 8003d20:	6878      	ldr	r0, [r7, #4]
 8003d22:	f000 fdbd 	bl	80048a0 <UART_SetConfig>
 8003d26:	687b      	ldr	r3, [r7, #4]
 8003d28:	681b      	ldr	r3, [r3, #0]
 8003d2a:	691a      	ldr	r2, [r3, #16]
 8003d2c:	687b      	ldr	r3, [r7, #4]
 8003d2e:	681b      	ldr	r3, [r3, #0]
 8003d30:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8003d34:	611a      	str	r2, [r3, #16]
 8003d36:	687b      	ldr	r3, [r7, #4]
 8003d38:	681b      	ldr	r3, [r3, #0]
 8003d3a:	695a      	ldr	r2, [r3, #20]
 8003d3c:	687b      	ldr	r3, [r7, #4]
 8003d3e:	681b      	ldr	r3, [r3, #0]
 8003d40:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8003d44:	615a      	str	r2, [r3, #20]
 8003d46:	687b      	ldr	r3, [r7, #4]
 8003d48:	681b      	ldr	r3, [r3, #0]
 8003d4a:	68da      	ldr	r2, [r3, #12]
 8003d4c:	687b      	ldr	r3, [r7, #4]
 8003d4e:	681b      	ldr	r3, [r3, #0]
 8003d50:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8003d54:	60da      	str	r2, [r3, #12]
 8003d56:	687b      	ldr	r3, [r7, #4]
 8003d58:	2200      	movs	r2, #0
 8003d5a:	645a      	str	r2, [r3, #68]	@ 0x44
 8003d5c:	687b      	ldr	r3, [r7, #4]
 8003d5e:	2220      	movs	r2, #32
 8003d60:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003d64:	687b      	ldr	r3, [r7, #4]
 8003d66:	2220      	movs	r2, #32
 8003d68:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003d6c:	687b      	ldr	r3, [r7, #4]
 8003d6e:	2200      	movs	r2, #0
 8003d70:	635a      	str	r2, [r3, #52]	@ 0x34
 8003d72:	2300      	movs	r3, #0
 8003d74:	4618      	mov	r0, r3
 8003d76:	3708      	adds	r7, #8
 8003d78:	46bd      	mov	sp, r7
 8003d7a:	bd80      	pop	{r7, pc}

08003d7c <HAL_UART_Transmit>:
 8003d7c:	b580      	push	{r7, lr}
 8003d7e:	b08a      	sub	sp, #40	@ 0x28
 8003d80:	af02      	add	r7, sp, #8
 8003d82:	60f8      	str	r0, [r7, #12]
 8003d84:	60b9      	str	r1, [r7, #8]
 8003d86:	603b      	str	r3, [r7, #0]
 8003d88:	4613      	mov	r3, r2
 8003d8a:	80fb      	strh	r3, [r7, #6]
 8003d8c:	2300      	movs	r3, #0
 8003d8e:	617b      	str	r3, [r7, #20]
 8003d90:	68fb      	ldr	r3, [r7, #12]
 8003d92:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003d96:	b2db      	uxtb	r3, r3
 8003d98:	2b20      	cmp	r3, #32
 8003d9a:	d175      	bne.n	8003e88 <HAL_UART_Transmit+0x10c>
 8003d9c:	68bb      	ldr	r3, [r7, #8]
 8003d9e:	2b00      	cmp	r3, #0
 8003da0:	d002      	beq.n	8003da8 <HAL_UART_Transmit+0x2c>
 8003da2:	88fb      	ldrh	r3, [r7, #6]
 8003da4:	2b00      	cmp	r3, #0
 8003da6:	d101      	bne.n	8003dac <HAL_UART_Transmit+0x30>
 8003da8:	2301      	movs	r3, #1
 8003daa:	e06e      	b.n	8003e8a <HAL_UART_Transmit+0x10e>
 8003dac:	68fb      	ldr	r3, [r7, #12]
 8003dae:	2200      	movs	r2, #0
 8003db0:	645a      	str	r2, [r3, #68]	@ 0x44
 8003db2:	68fb      	ldr	r3, [r7, #12]
 8003db4:	2221      	movs	r2, #33	@ 0x21
 8003db6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003dba:	f7fd fe85 	bl	8001ac8 <HAL_GetTick>
 8003dbe:	6178      	str	r0, [r7, #20]
 8003dc0:	68fb      	ldr	r3, [r7, #12]
 8003dc2:	88fa      	ldrh	r2, [r7, #6]
 8003dc4:	849a      	strh	r2, [r3, #36]	@ 0x24
 8003dc6:	68fb      	ldr	r3, [r7, #12]
 8003dc8:	88fa      	ldrh	r2, [r7, #6]
 8003dca:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003dcc:	68fb      	ldr	r3, [r7, #12]
 8003dce:	689b      	ldr	r3, [r3, #8]
 8003dd0:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003dd4:	d108      	bne.n	8003de8 <HAL_UART_Transmit+0x6c>
 8003dd6:	68fb      	ldr	r3, [r7, #12]
 8003dd8:	691b      	ldr	r3, [r3, #16]
 8003dda:	2b00      	cmp	r3, #0
 8003ddc:	d104      	bne.n	8003de8 <HAL_UART_Transmit+0x6c>
 8003dde:	2300      	movs	r3, #0
 8003de0:	61fb      	str	r3, [r7, #28]
 8003de2:	68bb      	ldr	r3, [r7, #8]
 8003de4:	61bb      	str	r3, [r7, #24]
 8003de6:	e003      	b.n	8003df0 <HAL_UART_Transmit+0x74>
 8003de8:	68bb      	ldr	r3, [r7, #8]
 8003dea:	61fb      	str	r3, [r7, #28]
 8003dec:	2300      	movs	r3, #0
 8003dee:	61bb      	str	r3, [r7, #24]
 8003df0:	e02e      	b.n	8003e50 <HAL_UART_Transmit+0xd4>
 8003df2:	683b      	ldr	r3, [r7, #0]
 8003df4:	9300      	str	r3, [sp, #0]
 8003df6:	697b      	ldr	r3, [r7, #20]
 8003df8:	2200      	movs	r2, #0
 8003dfa:	2180      	movs	r1, #128	@ 0x80
 8003dfc:	68f8      	ldr	r0, [r7, #12]
 8003dfe:	f000 fb1f 	bl	8004440 <UART_WaitOnFlagUntilTimeout>
 8003e02:	4603      	mov	r3, r0
 8003e04:	2b00      	cmp	r3, #0
 8003e06:	d005      	beq.n	8003e14 <HAL_UART_Transmit+0x98>
 8003e08:	68fb      	ldr	r3, [r7, #12]
 8003e0a:	2220      	movs	r2, #32
 8003e0c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003e10:	2303      	movs	r3, #3
 8003e12:	e03a      	b.n	8003e8a <HAL_UART_Transmit+0x10e>
 8003e14:	69fb      	ldr	r3, [r7, #28]
 8003e16:	2b00      	cmp	r3, #0
 8003e18:	d10b      	bne.n	8003e32 <HAL_UART_Transmit+0xb6>
 8003e1a:	69bb      	ldr	r3, [r7, #24]
 8003e1c:	881b      	ldrh	r3, [r3, #0]
 8003e1e:	461a      	mov	r2, r3
 8003e20:	68fb      	ldr	r3, [r7, #12]
 8003e22:	681b      	ldr	r3, [r3, #0]
 8003e24:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003e28:	605a      	str	r2, [r3, #4]
 8003e2a:	69bb      	ldr	r3, [r7, #24]
 8003e2c:	3302      	adds	r3, #2
 8003e2e:	61bb      	str	r3, [r7, #24]
 8003e30:	e007      	b.n	8003e42 <HAL_UART_Transmit+0xc6>
 8003e32:	69fb      	ldr	r3, [r7, #28]
 8003e34:	781a      	ldrb	r2, [r3, #0]
 8003e36:	68fb      	ldr	r3, [r7, #12]
 8003e38:	681b      	ldr	r3, [r3, #0]
 8003e3a:	605a      	str	r2, [r3, #4]
 8003e3c:	69fb      	ldr	r3, [r7, #28]
 8003e3e:	3301      	adds	r3, #1
 8003e40:	61fb      	str	r3, [r7, #28]
 8003e42:	68fb      	ldr	r3, [r7, #12]
 8003e44:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8003e46:	b29b      	uxth	r3, r3
 8003e48:	3b01      	subs	r3, #1
 8003e4a:	b29a      	uxth	r2, r3
 8003e4c:	68fb      	ldr	r3, [r7, #12]
 8003e4e:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003e50:	68fb      	ldr	r3, [r7, #12]
 8003e52:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8003e54:	b29b      	uxth	r3, r3
 8003e56:	2b00      	cmp	r3, #0
 8003e58:	d1cb      	bne.n	8003df2 <HAL_UART_Transmit+0x76>
 8003e5a:	683b      	ldr	r3, [r7, #0]
 8003e5c:	9300      	str	r3, [sp, #0]
 8003e5e:	697b      	ldr	r3, [r7, #20]
 8003e60:	2200      	movs	r2, #0
 8003e62:	2140      	movs	r1, #64	@ 0x40
 8003e64:	68f8      	ldr	r0, [r7, #12]
 8003e66:	f000 faeb 	bl	8004440 <UART_WaitOnFlagUntilTimeout>
 8003e6a:	4603      	mov	r3, r0
 8003e6c:	2b00      	cmp	r3, #0
 8003e6e:	d005      	beq.n	8003e7c <HAL_UART_Transmit+0x100>
 8003e70:	68fb      	ldr	r3, [r7, #12]
 8003e72:	2220      	movs	r2, #32
 8003e74:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003e78:	2303      	movs	r3, #3
 8003e7a:	e006      	b.n	8003e8a <HAL_UART_Transmit+0x10e>
 8003e7c:	68fb      	ldr	r3, [r7, #12]
 8003e7e:	2220      	movs	r2, #32
 8003e80:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003e84:	2300      	movs	r3, #0
 8003e86:	e000      	b.n	8003e8a <HAL_UART_Transmit+0x10e>
 8003e88:	2302      	movs	r3, #2
 8003e8a:	4618      	mov	r0, r3
 8003e8c:	3720      	adds	r7, #32
 8003e8e:	46bd      	mov	sp, r7
 8003e90:	bd80      	pop	{r7, pc}

08003e92 <HAL_UART_Receive_IT>:
 8003e92:	b580      	push	{r7, lr}
 8003e94:	b084      	sub	sp, #16
 8003e96:	af00      	add	r7, sp, #0
 8003e98:	60f8      	str	r0, [r7, #12]
 8003e9a:	60b9      	str	r1, [r7, #8]
 8003e9c:	4613      	mov	r3, r2
 8003e9e:	80fb      	strh	r3, [r7, #6]
 8003ea0:	68fb      	ldr	r3, [r7, #12]
 8003ea2:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8003ea6:	b2db      	uxtb	r3, r3
 8003ea8:	2b20      	cmp	r3, #32
 8003eaa:	d112      	bne.n	8003ed2 <HAL_UART_Receive_IT+0x40>
 8003eac:	68bb      	ldr	r3, [r7, #8]
 8003eae:	2b00      	cmp	r3, #0
 8003eb0:	d002      	beq.n	8003eb8 <HAL_UART_Receive_IT+0x26>
 8003eb2:	88fb      	ldrh	r3, [r7, #6]
 8003eb4:	2b00      	cmp	r3, #0
 8003eb6:	d101      	bne.n	8003ebc <HAL_UART_Receive_IT+0x2a>
 8003eb8:	2301      	movs	r3, #1
 8003eba:	e00b      	b.n	8003ed4 <HAL_UART_Receive_IT+0x42>
 8003ebc:	68fb      	ldr	r3, [r7, #12]
 8003ebe:	2200      	movs	r2, #0
 8003ec0:	631a      	str	r2, [r3, #48]	@ 0x30
 8003ec2:	88fb      	ldrh	r3, [r7, #6]
 8003ec4:	461a      	mov	r2, r3
 8003ec6:	68b9      	ldr	r1, [r7, #8]
 8003ec8:	68f8      	ldr	r0, [r7, #12]
 8003eca:	f000 fb12 	bl	80044f2 <UART_Start_Receive_IT>
 8003ece:	4603      	mov	r3, r0
 8003ed0:	e000      	b.n	8003ed4 <HAL_UART_Receive_IT+0x42>
 8003ed2:	2302      	movs	r3, #2
 8003ed4:	4618      	mov	r0, r3
 8003ed6:	3710      	adds	r7, #16
 8003ed8:	46bd      	mov	sp, r7
 8003eda:	bd80      	pop	{r7, pc}

08003edc <HAL_UART_IRQHandler>:
 8003edc:	b580      	push	{r7, lr}
 8003ede:	b0ba      	sub	sp, #232	@ 0xe8
 8003ee0:	af00      	add	r7, sp, #0
 8003ee2:	6078      	str	r0, [r7, #4]
 8003ee4:	687b      	ldr	r3, [r7, #4]
 8003ee6:	681b      	ldr	r3, [r3, #0]
 8003ee8:	681b      	ldr	r3, [r3, #0]
 8003eea:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8003eee:	687b      	ldr	r3, [r7, #4]
 8003ef0:	681b      	ldr	r3, [r3, #0]
 8003ef2:	68db      	ldr	r3, [r3, #12]
 8003ef4:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8003ef8:	687b      	ldr	r3, [r7, #4]
 8003efa:	681b      	ldr	r3, [r3, #0]
 8003efc:	695b      	ldr	r3, [r3, #20]
 8003efe:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8003f02:	2300      	movs	r3, #0
 8003f04:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8003f08:	2300      	movs	r3, #0
 8003f0a:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8003f0e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003f12:	f003 030f 	and.w	r3, r3, #15
 8003f16:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8003f1a:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8003f1e:	2b00      	cmp	r3, #0
 8003f20:	d10f      	bne.n	8003f42 <HAL_UART_IRQHandler+0x66>
 8003f22:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003f26:	f003 0320 	and.w	r3, r3, #32
 8003f2a:	2b00      	cmp	r3, #0
 8003f2c:	d009      	beq.n	8003f42 <HAL_UART_IRQHandler+0x66>
 8003f2e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003f32:	f003 0320 	and.w	r3, r3, #32
 8003f36:	2b00      	cmp	r3, #0
 8003f38:	d003      	beq.n	8003f42 <HAL_UART_IRQHandler+0x66>
 8003f3a:	6878      	ldr	r0, [r7, #4]
 8003f3c:	f000 fbf2 	bl	8004724 <UART_Receive_IT>
 8003f40:	e25b      	b.n	80043fa <HAL_UART_IRQHandler+0x51e>
 8003f42:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8003f46:	2b00      	cmp	r3, #0
 8003f48:	f000 80de 	beq.w	8004108 <HAL_UART_IRQHandler+0x22c>
 8003f4c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003f50:	f003 0301 	and.w	r3, r3, #1
 8003f54:	2b00      	cmp	r3, #0
 8003f56:	d106      	bne.n	8003f66 <HAL_UART_IRQHandler+0x8a>
 8003f58:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003f5c:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8003f60:	2b00      	cmp	r3, #0
 8003f62:	f000 80d1 	beq.w	8004108 <HAL_UART_IRQHandler+0x22c>
 8003f66:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003f6a:	f003 0301 	and.w	r3, r3, #1
 8003f6e:	2b00      	cmp	r3, #0
 8003f70:	d00b      	beq.n	8003f8a <HAL_UART_IRQHandler+0xae>
 8003f72:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003f76:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003f7a:	2b00      	cmp	r3, #0
 8003f7c:	d005      	beq.n	8003f8a <HAL_UART_IRQHandler+0xae>
 8003f7e:	687b      	ldr	r3, [r7, #4]
 8003f80:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003f82:	f043 0201 	orr.w	r2, r3, #1
 8003f86:	687b      	ldr	r3, [r7, #4]
 8003f88:	645a      	str	r2, [r3, #68]	@ 0x44
 8003f8a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003f8e:	f003 0304 	and.w	r3, r3, #4
 8003f92:	2b00      	cmp	r3, #0
 8003f94:	d00b      	beq.n	8003fae <HAL_UART_IRQHandler+0xd2>
 8003f96:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003f9a:	f003 0301 	and.w	r3, r3, #1
 8003f9e:	2b00      	cmp	r3, #0
 8003fa0:	d005      	beq.n	8003fae <HAL_UART_IRQHandler+0xd2>
 8003fa2:	687b      	ldr	r3, [r7, #4]
 8003fa4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003fa6:	f043 0202 	orr.w	r2, r3, #2
 8003faa:	687b      	ldr	r3, [r7, #4]
 8003fac:	645a      	str	r2, [r3, #68]	@ 0x44
 8003fae:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003fb2:	f003 0302 	and.w	r3, r3, #2
 8003fb6:	2b00      	cmp	r3, #0
 8003fb8:	d00b      	beq.n	8003fd2 <HAL_UART_IRQHandler+0xf6>
 8003fba:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003fbe:	f003 0301 	and.w	r3, r3, #1
 8003fc2:	2b00      	cmp	r3, #0
 8003fc4:	d005      	beq.n	8003fd2 <HAL_UART_IRQHandler+0xf6>
 8003fc6:	687b      	ldr	r3, [r7, #4]
 8003fc8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003fca:	f043 0204 	orr.w	r2, r3, #4
 8003fce:	687b      	ldr	r3, [r7, #4]
 8003fd0:	645a      	str	r2, [r3, #68]	@ 0x44
 8003fd2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003fd6:	f003 0308 	and.w	r3, r3, #8
 8003fda:	2b00      	cmp	r3, #0
 8003fdc:	d011      	beq.n	8004002 <HAL_UART_IRQHandler+0x126>
 8003fde:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003fe2:	f003 0320 	and.w	r3, r3, #32
 8003fe6:	2b00      	cmp	r3, #0
 8003fe8:	d105      	bne.n	8003ff6 <HAL_UART_IRQHandler+0x11a>
 8003fea:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003fee:	f003 0301 	and.w	r3, r3, #1
 8003ff2:	2b00      	cmp	r3, #0
 8003ff4:	d005      	beq.n	8004002 <HAL_UART_IRQHandler+0x126>
 8003ff6:	687b      	ldr	r3, [r7, #4]
 8003ff8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003ffa:	f043 0208 	orr.w	r2, r3, #8
 8003ffe:	687b      	ldr	r3, [r7, #4]
 8004000:	645a      	str	r2, [r3, #68]	@ 0x44
 8004002:	687b      	ldr	r3, [r7, #4]
 8004004:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004006:	2b00      	cmp	r3, #0
 8004008:	f000 81f2 	beq.w	80043f0 <HAL_UART_IRQHandler+0x514>
 800400c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004010:	f003 0320 	and.w	r3, r3, #32
 8004014:	2b00      	cmp	r3, #0
 8004016:	d008      	beq.n	800402a <HAL_UART_IRQHandler+0x14e>
 8004018:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800401c:	f003 0320 	and.w	r3, r3, #32
 8004020:	2b00      	cmp	r3, #0
 8004022:	d002      	beq.n	800402a <HAL_UART_IRQHandler+0x14e>
 8004024:	6878      	ldr	r0, [r7, #4]
 8004026:	f000 fb7d 	bl	8004724 <UART_Receive_IT>
 800402a:	687b      	ldr	r3, [r7, #4]
 800402c:	681b      	ldr	r3, [r3, #0]
 800402e:	695b      	ldr	r3, [r3, #20]
 8004030:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004034:	2b40      	cmp	r3, #64	@ 0x40
 8004036:	bf0c      	ite	eq
 8004038:	2301      	moveq	r3, #1
 800403a:	2300      	movne	r3, #0
 800403c:	b2db      	uxtb	r3, r3
 800403e:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8004042:	687b      	ldr	r3, [r7, #4]
 8004044:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004046:	f003 0308 	and.w	r3, r3, #8
 800404a:	2b00      	cmp	r3, #0
 800404c:	d103      	bne.n	8004056 <HAL_UART_IRQHandler+0x17a>
 800404e:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8004052:	2b00      	cmp	r3, #0
 8004054:	d04f      	beq.n	80040f6 <HAL_UART_IRQHandler+0x21a>
 8004056:	6878      	ldr	r0, [r7, #4]
 8004058:	f000 fa85 	bl	8004566 <UART_EndRxTransfer>
 800405c:	687b      	ldr	r3, [r7, #4]
 800405e:	681b      	ldr	r3, [r3, #0]
 8004060:	695b      	ldr	r3, [r3, #20]
 8004062:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004066:	2b40      	cmp	r3, #64	@ 0x40
 8004068:	d141      	bne.n	80040ee <HAL_UART_IRQHandler+0x212>
 800406a:	687b      	ldr	r3, [r7, #4]
 800406c:	681b      	ldr	r3, [r3, #0]
 800406e:	3314      	adds	r3, #20
 8004070:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8004074:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8004078:	e853 3f00 	ldrex	r3, [r3]
 800407c:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8004080:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8004084:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8004088:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 800408c:	687b      	ldr	r3, [r7, #4]
 800408e:	681b      	ldr	r3, [r3, #0]
 8004090:	3314      	adds	r3, #20
 8004092:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 8004096:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 800409a:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 800409e:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 80040a2:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 80040a6:	e841 2300 	strex	r3, r2, [r1]
 80040aa:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80040ae:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 80040b2:	2b00      	cmp	r3, #0
 80040b4:	d1d9      	bne.n	800406a <HAL_UART_IRQHandler+0x18e>
 80040b6:	687b      	ldr	r3, [r7, #4]
 80040b8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80040ba:	2b00      	cmp	r3, #0
 80040bc:	d013      	beq.n	80040e6 <HAL_UART_IRQHandler+0x20a>
 80040be:	687b      	ldr	r3, [r7, #4]
 80040c0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80040c2:	4a7e      	ldr	r2, [pc, #504]	@ (80042bc <HAL_UART_IRQHandler+0x3e0>)
 80040c4:	651a      	str	r2, [r3, #80]	@ 0x50
 80040c6:	687b      	ldr	r3, [r7, #4]
 80040c8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80040ca:	4618      	mov	r0, r3
 80040cc:	f7fd fead 	bl	8001e2a <HAL_DMA_Abort_IT>
 80040d0:	4603      	mov	r3, r0
 80040d2:	2b00      	cmp	r3, #0
 80040d4:	d016      	beq.n	8004104 <HAL_UART_IRQHandler+0x228>
 80040d6:	687b      	ldr	r3, [r7, #4]
 80040d8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80040da:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80040dc:	687a      	ldr	r2, [r7, #4]
 80040de:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 80040e0:	4610      	mov	r0, r2
 80040e2:	4798      	blx	r3
 80040e4:	e00e      	b.n	8004104 <HAL_UART_IRQHandler+0x228>
 80040e6:	6878      	ldr	r0, [r7, #4]
 80040e8:	f000 f994 	bl	8004414 <HAL_UART_ErrorCallback>
 80040ec:	e00a      	b.n	8004104 <HAL_UART_IRQHandler+0x228>
 80040ee:	6878      	ldr	r0, [r7, #4]
 80040f0:	f000 f990 	bl	8004414 <HAL_UART_ErrorCallback>
 80040f4:	e006      	b.n	8004104 <HAL_UART_IRQHandler+0x228>
 80040f6:	6878      	ldr	r0, [r7, #4]
 80040f8:	f000 f98c 	bl	8004414 <HAL_UART_ErrorCallback>
 80040fc:	687b      	ldr	r3, [r7, #4]
 80040fe:	2200      	movs	r2, #0
 8004100:	645a      	str	r2, [r3, #68]	@ 0x44
 8004102:	e175      	b.n	80043f0 <HAL_UART_IRQHandler+0x514>
 8004104:	bf00      	nop
 8004106:	e173      	b.n	80043f0 <HAL_UART_IRQHandler+0x514>
 8004108:	687b      	ldr	r3, [r7, #4]
 800410a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800410c:	2b01      	cmp	r3, #1
 800410e:	f040 814f 	bne.w	80043b0 <HAL_UART_IRQHandler+0x4d4>
 8004112:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8004116:	f003 0310 	and.w	r3, r3, #16
 800411a:	2b00      	cmp	r3, #0
 800411c:	f000 8148 	beq.w	80043b0 <HAL_UART_IRQHandler+0x4d4>
 8004120:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8004124:	f003 0310 	and.w	r3, r3, #16
 8004128:	2b00      	cmp	r3, #0
 800412a:	f000 8141 	beq.w	80043b0 <HAL_UART_IRQHandler+0x4d4>
 800412e:	2300      	movs	r3, #0
 8004130:	60bb      	str	r3, [r7, #8]
 8004132:	687b      	ldr	r3, [r7, #4]
 8004134:	681b      	ldr	r3, [r3, #0]
 8004136:	681b      	ldr	r3, [r3, #0]
 8004138:	60bb      	str	r3, [r7, #8]
 800413a:	687b      	ldr	r3, [r7, #4]
 800413c:	681b      	ldr	r3, [r3, #0]
 800413e:	685b      	ldr	r3, [r3, #4]
 8004140:	60bb      	str	r3, [r7, #8]
 8004142:	68bb      	ldr	r3, [r7, #8]
 8004144:	687b      	ldr	r3, [r7, #4]
 8004146:	681b      	ldr	r3, [r3, #0]
 8004148:	695b      	ldr	r3, [r3, #20]
 800414a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800414e:	2b40      	cmp	r3, #64	@ 0x40
 8004150:	f040 80b6 	bne.w	80042c0 <HAL_UART_IRQHandler+0x3e4>
 8004154:	687b      	ldr	r3, [r7, #4]
 8004156:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004158:	681b      	ldr	r3, [r3, #0]
 800415a:	685b      	ldr	r3, [r3, #4]
 800415c:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8004160:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8004164:	2b00      	cmp	r3, #0
 8004166:	f000 8145 	beq.w	80043f4 <HAL_UART_IRQHandler+0x518>
 800416a:	687b      	ldr	r3, [r7, #4]
 800416c:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 800416e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8004172:	429a      	cmp	r2, r3
 8004174:	f080 813e 	bcs.w	80043f4 <HAL_UART_IRQHandler+0x518>
 8004178:	687b      	ldr	r3, [r7, #4]
 800417a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 800417e:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8004180:	687b      	ldr	r3, [r7, #4]
 8004182:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004184:	69db      	ldr	r3, [r3, #28]
 8004186:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800418a:	f000 8088 	beq.w	800429e <HAL_UART_IRQHandler+0x3c2>
 800418e:	687b      	ldr	r3, [r7, #4]
 8004190:	681b      	ldr	r3, [r3, #0]
 8004192:	330c      	adds	r3, #12
 8004194:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8004198:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800419c:	e853 3f00 	ldrex	r3, [r3]
 80041a0:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80041a4:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80041a8:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80041ac:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80041b0:	687b      	ldr	r3, [r7, #4]
 80041b2:	681b      	ldr	r3, [r3, #0]
 80041b4:	330c      	adds	r3, #12
 80041b6:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 80041ba:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 80041be:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80041c2:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 80041c6:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 80041ca:	e841 2300 	strex	r3, r2, [r1]
 80041ce:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80041d2:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80041d6:	2b00      	cmp	r3, #0
 80041d8:	d1d9      	bne.n	800418e <HAL_UART_IRQHandler+0x2b2>
 80041da:	687b      	ldr	r3, [r7, #4]
 80041dc:	681b      	ldr	r3, [r3, #0]
 80041de:	3314      	adds	r3, #20
 80041e0:	677b      	str	r3, [r7, #116]	@ 0x74
 80041e2:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80041e4:	e853 3f00 	ldrex	r3, [r3]
 80041e8:	673b      	str	r3, [r7, #112]	@ 0x70
 80041ea:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80041ec:	f023 0301 	bic.w	r3, r3, #1
 80041f0:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80041f4:	687b      	ldr	r3, [r7, #4]
 80041f6:	681b      	ldr	r3, [r3, #0]
 80041f8:	3314      	adds	r3, #20
 80041fa:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 80041fe:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8004202:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8004204:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 8004206:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 800420a:	e841 2300 	strex	r3, r2, [r1]
 800420e:	67bb      	str	r3, [r7, #120]	@ 0x78
 8004210:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8004212:	2b00      	cmp	r3, #0
 8004214:	d1e1      	bne.n	80041da <HAL_UART_IRQHandler+0x2fe>
 8004216:	687b      	ldr	r3, [r7, #4]
 8004218:	681b      	ldr	r3, [r3, #0]
 800421a:	3314      	adds	r3, #20
 800421c:	663b      	str	r3, [r7, #96]	@ 0x60
 800421e:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8004220:	e853 3f00 	ldrex	r3, [r3]
 8004224:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8004226:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8004228:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800422c:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8004230:	687b      	ldr	r3, [r7, #4]
 8004232:	681b      	ldr	r3, [r3, #0]
 8004234:	3314      	adds	r3, #20
 8004236:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 800423a:	66fa      	str	r2, [r7, #108]	@ 0x6c
 800423c:	66bb      	str	r3, [r7, #104]	@ 0x68
 800423e:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8004240:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8004242:	e841 2300 	strex	r3, r2, [r1]
 8004246:	667b      	str	r3, [r7, #100]	@ 0x64
 8004248:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800424a:	2b00      	cmp	r3, #0
 800424c:	d1e3      	bne.n	8004216 <HAL_UART_IRQHandler+0x33a>
 800424e:	687b      	ldr	r3, [r7, #4]
 8004250:	2220      	movs	r2, #32
 8004252:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004256:	687b      	ldr	r3, [r7, #4]
 8004258:	2200      	movs	r2, #0
 800425a:	631a      	str	r2, [r3, #48]	@ 0x30
 800425c:	687b      	ldr	r3, [r7, #4]
 800425e:	681b      	ldr	r3, [r3, #0]
 8004260:	330c      	adds	r3, #12
 8004262:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004264:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8004266:	e853 3f00 	ldrex	r3, [r3]
 800426a:	64bb      	str	r3, [r7, #72]	@ 0x48
 800426c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800426e:	f023 0310 	bic.w	r3, r3, #16
 8004272:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8004276:	687b      	ldr	r3, [r7, #4]
 8004278:	681b      	ldr	r3, [r3, #0]
 800427a:	330c      	adds	r3, #12
 800427c:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8004280:	65ba      	str	r2, [r7, #88]	@ 0x58
 8004282:	657b      	str	r3, [r7, #84]	@ 0x54
 8004284:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8004286:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8004288:	e841 2300 	strex	r3, r2, [r1]
 800428c:	653b      	str	r3, [r7, #80]	@ 0x50
 800428e:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8004290:	2b00      	cmp	r3, #0
 8004292:	d1e3      	bne.n	800425c <HAL_UART_IRQHandler+0x380>
 8004294:	687b      	ldr	r3, [r7, #4]
 8004296:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004298:	4618      	mov	r0, r3
 800429a:	f7fd fd56 	bl	8001d4a <HAL_DMA_Abort>
 800429e:	687b      	ldr	r3, [r7, #4]
 80042a0:	2202      	movs	r2, #2
 80042a2:	635a      	str	r2, [r3, #52]	@ 0x34
 80042a4:	687b      	ldr	r3, [r7, #4]
 80042a6:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 80042a8:	687b      	ldr	r3, [r7, #4]
 80042aa:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80042ac:	b29b      	uxth	r3, r3
 80042ae:	1ad3      	subs	r3, r2, r3
 80042b0:	b29b      	uxth	r3, r3
 80042b2:	4619      	mov	r1, r3
 80042b4:	6878      	ldr	r0, [r7, #4]
 80042b6:	f000 f8b7 	bl	8004428 <HAL_UARTEx_RxEventCallback>
 80042ba:	e09b      	b.n	80043f4 <HAL_UART_IRQHandler+0x518>
 80042bc:	0800462d 	.word	0x0800462d
 80042c0:	687b      	ldr	r3, [r7, #4]
 80042c2:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 80042c4:	687b      	ldr	r3, [r7, #4]
 80042c6:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80042c8:	b29b      	uxth	r3, r3
 80042ca:	1ad3      	subs	r3, r2, r3
 80042cc:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 80042d0:	687b      	ldr	r3, [r7, #4]
 80042d2:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80042d4:	b29b      	uxth	r3, r3
 80042d6:	2b00      	cmp	r3, #0
 80042d8:	f000 808e 	beq.w	80043f8 <HAL_UART_IRQHandler+0x51c>
 80042dc:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 80042e0:	2b00      	cmp	r3, #0
 80042e2:	f000 8089 	beq.w	80043f8 <HAL_UART_IRQHandler+0x51c>
 80042e6:	687b      	ldr	r3, [r7, #4]
 80042e8:	681b      	ldr	r3, [r3, #0]
 80042ea:	330c      	adds	r3, #12
 80042ec:	63bb      	str	r3, [r7, #56]	@ 0x38
 80042ee:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 80042f0:	e853 3f00 	ldrex	r3, [r3]
 80042f4:	637b      	str	r3, [r7, #52]	@ 0x34
 80042f6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80042f8:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 80042fc:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8004300:	687b      	ldr	r3, [r7, #4]
 8004302:	681b      	ldr	r3, [r3, #0]
 8004304:	330c      	adds	r3, #12
 8004306:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 800430a:	647a      	str	r2, [r7, #68]	@ 0x44
 800430c:	643b      	str	r3, [r7, #64]	@ 0x40
 800430e:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8004310:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8004312:	e841 2300 	strex	r3, r2, [r1]
 8004316:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004318:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800431a:	2b00      	cmp	r3, #0
 800431c:	d1e3      	bne.n	80042e6 <HAL_UART_IRQHandler+0x40a>
 800431e:	687b      	ldr	r3, [r7, #4]
 8004320:	681b      	ldr	r3, [r3, #0]
 8004322:	3314      	adds	r3, #20
 8004324:	627b      	str	r3, [r7, #36]	@ 0x24
 8004326:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004328:	e853 3f00 	ldrex	r3, [r3]
 800432c:	623b      	str	r3, [r7, #32]
 800432e:	6a3b      	ldr	r3, [r7, #32]
 8004330:	f023 0301 	bic.w	r3, r3, #1
 8004334:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8004338:	687b      	ldr	r3, [r7, #4]
 800433a:	681b      	ldr	r3, [r3, #0]
 800433c:	3314      	adds	r3, #20
 800433e:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8004342:	633a      	str	r2, [r7, #48]	@ 0x30
 8004344:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004346:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8004348:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800434a:	e841 2300 	strex	r3, r2, [r1]
 800434e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004350:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004352:	2b00      	cmp	r3, #0
 8004354:	d1e3      	bne.n	800431e <HAL_UART_IRQHandler+0x442>
 8004356:	687b      	ldr	r3, [r7, #4]
 8004358:	2220      	movs	r2, #32
 800435a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800435e:	687b      	ldr	r3, [r7, #4]
 8004360:	2200      	movs	r2, #0
 8004362:	631a      	str	r2, [r3, #48]	@ 0x30
 8004364:	687b      	ldr	r3, [r7, #4]
 8004366:	681b      	ldr	r3, [r3, #0]
 8004368:	330c      	adds	r3, #12
 800436a:	613b      	str	r3, [r7, #16]
 800436c:	693b      	ldr	r3, [r7, #16]
 800436e:	e853 3f00 	ldrex	r3, [r3]
 8004372:	60fb      	str	r3, [r7, #12]
 8004374:	68fb      	ldr	r3, [r7, #12]
 8004376:	f023 0310 	bic.w	r3, r3, #16
 800437a:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 800437e:	687b      	ldr	r3, [r7, #4]
 8004380:	681b      	ldr	r3, [r3, #0]
 8004382:	330c      	adds	r3, #12
 8004384:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8004388:	61fa      	str	r2, [r7, #28]
 800438a:	61bb      	str	r3, [r7, #24]
 800438c:	69b9      	ldr	r1, [r7, #24]
 800438e:	69fa      	ldr	r2, [r7, #28]
 8004390:	e841 2300 	strex	r3, r2, [r1]
 8004394:	617b      	str	r3, [r7, #20]
 8004396:	697b      	ldr	r3, [r7, #20]
 8004398:	2b00      	cmp	r3, #0
 800439a:	d1e3      	bne.n	8004364 <HAL_UART_IRQHandler+0x488>
 800439c:	687b      	ldr	r3, [r7, #4]
 800439e:	2202      	movs	r2, #2
 80043a0:	635a      	str	r2, [r3, #52]	@ 0x34
 80043a2:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 80043a6:	4619      	mov	r1, r3
 80043a8:	6878      	ldr	r0, [r7, #4]
 80043aa:	f000 f83d 	bl	8004428 <HAL_UARTEx_RxEventCallback>
 80043ae:	e023      	b.n	80043f8 <HAL_UART_IRQHandler+0x51c>
 80043b0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80043b4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80043b8:	2b00      	cmp	r3, #0
 80043ba:	d009      	beq.n	80043d0 <HAL_UART_IRQHandler+0x4f4>
 80043bc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80043c0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80043c4:	2b00      	cmp	r3, #0
 80043c6:	d003      	beq.n	80043d0 <HAL_UART_IRQHandler+0x4f4>
 80043c8:	6878      	ldr	r0, [r7, #4]
 80043ca:	f000 f943 	bl	8004654 <UART_Transmit_IT>
 80043ce:	e014      	b.n	80043fa <HAL_UART_IRQHandler+0x51e>
 80043d0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80043d4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80043d8:	2b00      	cmp	r3, #0
 80043da:	d00e      	beq.n	80043fa <HAL_UART_IRQHandler+0x51e>
 80043dc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80043e0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80043e4:	2b00      	cmp	r3, #0
 80043e6:	d008      	beq.n	80043fa <HAL_UART_IRQHandler+0x51e>
 80043e8:	6878      	ldr	r0, [r7, #4]
 80043ea:	f000 f983 	bl	80046f4 <UART_EndTransmit_IT>
 80043ee:	e004      	b.n	80043fa <HAL_UART_IRQHandler+0x51e>
 80043f0:	bf00      	nop
 80043f2:	e002      	b.n	80043fa <HAL_UART_IRQHandler+0x51e>
 80043f4:	bf00      	nop
 80043f6:	e000      	b.n	80043fa <HAL_UART_IRQHandler+0x51e>
 80043f8:	bf00      	nop
 80043fa:	37e8      	adds	r7, #232	@ 0xe8
 80043fc:	46bd      	mov	sp, r7
 80043fe:	bd80      	pop	{r7, pc}

08004400 <HAL_UART_TxCpltCallback>:
 8004400:	b480      	push	{r7}
 8004402:	b083      	sub	sp, #12
 8004404:	af00      	add	r7, sp, #0
 8004406:	6078      	str	r0, [r7, #4]
 8004408:	bf00      	nop
 800440a:	370c      	adds	r7, #12
 800440c:	46bd      	mov	sp, r7
 800440e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004412:	4770      	bx	lr

08004414 <HAL_UART_ErrorCallback>:
 8004414:	b480      	push	{r7}
 8004416:	b083      	sub	sp, #12
 8004418:	af00      	add	r7, sp, #0
 800441a:	6078      	str	r0, [r7, #4]
 800441c:	bf00      	nop
 800441e:	370c      	adds	r7, #12
 8004420:	46bd      	mov	sp, r7
 8004422:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004426:	4770      	bx	lr

08004428 <HAL_UARTEx_RxEventCallback>:
 8004428:	b480      	push	{r7}
 800442a:	b083      	sub	sp, #12
 800442c:	af00      	add	r7, sp, #0
 800442e:	6078      	str	r0, [r7, #4]
 8004430:	460b      	mov	r3, r1
 8004432:	807b      	strh	r3, [r7, #2]
 8004434:	bf00      	nop
 8004436:	370c      	adds	r7, #12
 8004438:	46bd      	mov	sp, r7
 800443a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800443e:	4770      	bx	lr

08004440 <UART_WaitOnFlagUntilTimeout>:
 8004440:	b580      	push	{r7, lr}
 8004442:	b086      	sub	sp, #24
 8004444:	af00      	add	r7, sp, #0
 8004446:	60f8      	str	r0, [r7, #12]
 8004448:	60b9      	str	r1, [r7, #8]
 800444a:	603b      	str	r3, [r7, #0]
 800444c:	4613      	mov	r3, r2
 800444e:	71fb      	strb	r3, [r7, #7]
 8004450:	e03b      	b.n	80044ca <UART_WaitOnFlagUntilTimeout+0x8a>
 8004452:	6a3b      	ldr	r3, [r7, #32]
 8004454:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004458:	d037      	beq.n	80044ca <UART_WaitOnFlagUntilTimeout+0x8a>
 800445a:	f7fd fb35 	bl	8001ac8 <HAL_GetTick>
 800445e:	4602      	mov	r2, r0
 8004460:	683b      	ldr	r3, [r7, #0]
 8004462:	1ad3      	subs	r3, r2, r3
 8004464:	6a3a      	ldr	r2, [r7, #32]
 8004466:	429a      	cmp	r2, r3
 8004468:	d302      	bcc.n	8004470 <UART_WaitOnFlagUntilTimeout+0x30>
 800446a:	6a3b      	ldr	r3, [r7, #32]
 800446c:	2b00      	cmp	r3, #0
 800446e:	d101      	bne.n	8004474 <UART_WaitOnFlagUntilTimeout+0x34>
 8004470:	2303      	movs	r3, #3
 8004472:	e03a      	b.n	80044ea <UART_WaitOnFlagUntilTimeout+0xaa>
 8004474:	68fb      	ldr	r3, [r7, #12]
 8004476:	681b      	ldr	r3, [r3, #0]
 8004478:	68db      	ldr	r3, [r3, #12]
 800447a:	f003 0304 	and.w	r3, r3, #4
 800447e:	2b00      	cmp	r3, #0
 8004480:	d023      	beq.n	80044ca <UART_WaitOnFlagUntilTimeout+0x8a>
 8004482:	68bb      	ldr	r3, [r7, #8]
 8004484:	2b80      	cmp	r3, #128	@ 0x80
 8004486:	d020      	beq.n	80044ca <UART_WaitOnFlagUntilTimeout+0x8a>
 8004488:	68bb      	ldr	r3, [r7, #8]
 800448a:	2b40      	cmp	r3, #64	@ 0x40
 800448c:	d01d      	beq.n	80044ca <UART_WaitOnFlagUntilTimeout+0x8a>
 800448e:	68fb      	ldr	r3, [r7, #12]
 8004490:	681b      	ldr	r3, [r3, #0]
 8004492:	681b      	ldr	r3, [r3, #0]
 8004494:	f003 0308 	and.w	r3, r3, #8
 8004498:	2b08      	cmp	r3, #8
 800449a:	d116      	bne.n	80044ca <UART_WaitOnFlagUntilTimeout+0x8a>
 800449c:	2300      	movs	r3, #0
 800449e:	617b      	str	r3, [r7, #20]
 80044a0:	68fb      	ldr	r3, [r7, #12]
 80044a2:	681b      	ldr	r3, [r3, #0]
 80044a4:	681b      	ldr	r3, [r3, #0]
 80044a6:	617b      	str	r3, [r7, #20]
 80044a8:	68fb      	ldr	r3, [r7, #12]
 80044aa:	681b      	ldr	r3, [r3, #0]
 80044ac:	685b      	ldr	r3, [r3, #4]
 80044ae:	617b      	str	r3, [r7, #20]
 80044b0:	697b      	ldr	r3, [r7, #20]
 80044b2:	68f8      	ldr	r0, [r7, #12]
 80044b4:	f000 f857 	bl	8004566 <UART_EndRxTransfer>
 80044b8:	68fb      	ldr	r3, [r7, #12]
 80044ba:	2208      	movs	r2, #8
 80044bc:	645a      	str	r2, [r3, #68]	@ 0x44
 80044be:	68fb      	ldr	r3, [r7, #12]
 80044c0:	2200      	movs	r2, #0
 80044c2:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80044c6:	2301      	movs	r3, #1
 80044c8:	e00f      	b.n	80044ea <UART_WaitOnFlagUntilTimeout+0xaa>
 80044ca:	68fb      	ldr	r3, [r7, #12]
 80044cc:	681b      	ldr	r3, [r3, #0]
 80044ce:	681a      	ldr	r2, [r3, #0]
 80044d0:	68bb      	ldr	r3, [r7, #8]
 80044d2:	4013      	ands	r3, r2
 80044d4:	68ba      	ldr	r2, [r7, #8]
 80044d6:	429a      	cmp	r2, r3
 80044d8:	bf0c      	ite	eq
 80044da:	2301      	moveq	r3, #1
 80044dc:	2300      	movne	r3, #0
 80044de:	b2db      	uxtb	r3, r3
 80044e0:	461a      	mov	r2, r3
 80044e2:	79fb      	ldrb	r3, [r7, #7]
 80044e4:	429a      	cmp	r2, r3
 80044e6:	d0b4      	beq.n	8004452 <UART_WaitOnFlagUntilTimeout+0x12>
 80044e8:	2300      	movs	r3, #0
 80044ea:	4618      	mov	r0, r3
 80044ec:	3718      	adds	r7, #24
 80044ee:	46bd      	mov	sp, r7
 80044f0:	bd80      	pop	{r7, pc}

080044f2 <UART_Start_Receive_IT>:
 80044f2:	b480      	push	{r7}
 80044f4:	b085      	sub	sp, #20
 80044f6:	af00      	add	r7, sp, #0
 80044f8:	60f8      	str	r0, [r7, #12]
 80044fa:	60b9      	str	r1, [r7, #8]
 80044fc:	4613      	mov	r3, r2
 80044fe:	80fb      	strh	r3, [r7, #6]
 8004500:	68fb      	ldr	r3, [r7, #12]
 8004502:	68ba      	ldr	r2, [r7, #8]
 8004504:	629a      	str	r2, [r3, #40]	@ 0x28
 8004506:	68fb      	ldr	r3, [r7, #12]
 8004508:	88fa      	ldrh	r2, [r7, #6]
 800450a:	859a      	strh	r2, [r3, #44]	@ 0x2c
 800450c:	68fb      	ldr	r3, [r7, #12]
 800450e:	88fa      	ldrh	r2, [r7, #6]
 8004510:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8004512:	68fb      	ldr	r3, [r7, #12]
 8004514:	2200      	movs	r2, #0
 8004516:	645a      	str	r2, [r3, #68]	@ 0x44
 8004518:	68fb      	ldr	r3, [r7, #12]
 800451a:	2222      	movs	r2, #34	@ 0x22
 800451c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004520:	68fb      	ldr	r3, [r7, #12]
 8004522:	691b      	ldr	r3, [r3, #16]
 8004524:	2b00      	cmp	r3, #0
 8004526:	d007      	beq.n	8004538 <UART_Start_Receive_IT+0x46>
 8004528:	68fb      	ldr	r3, [r7, #12]
 800452a:	681b      	ldr	r3, [r3, #0]
 800452c:	68da      	ldr	r2, [r3, #12]
 800452e:	68fb      	ldr	r3, [r7, #12]
 8004530:	681b      	ldr	r3, [r3, #0]
 8004532:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004536:	60da      	str	r2, [r3, #12]
 8004538:	68fb      	ldr	r3, [r7, #12]
 800453a:	681b      	ldr	r3, [r3, #0]
 800453c:	695a      	ldr	r2, [r3, #20]
 800453e:	68fb      	ldr	r3, [r7, #12]
 8004540:	681b      	ldr	r3, [r3, #0]
 8004542:	f042 0201 	orr.w	r2, r2, #1
 8004546:	615a      	str	r2, [r3, #20]
 8004548:	68fb      	ldr	r3, [r7, #12]
 800454a:	681b      	ldr	r3, [r3, #0]
 800454c:	68da      	ldr	r2, [r3, #12]
 800454e:	68fb      	ldr	r3, [r7, #12]
 8004550:	681b      	ldr	r3, [r3, #0]
 8004552:	f042 0220 	orr.w	r2, r2, #32
 8004556:	60da      	str	r2, [r3, #12]
 8004558:	2300      	movs	r3, #0
 800455a:	4618      	mov	r0, r3
 800455c:	3714      	adds	r7, #20
 800455e:	46bd      	mov	sp, r7
 8004560:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004564:	4770      	bx	lr

08004566 <UART_EndRxTransfer>:
 8004566:	b480      	push	{r7}
 8004568:	b095      	sub	sp, #84	@ 0x54
 800456a:	af00      	add	r7, sp, #0
 800456c:	6078      	str	r0, [r7, #4]
 800456e:	687b      	ldr	r3, [r7, #4]
 8004570:	681b      	ldr	r3, [r3, #0]
 8004572:	330c      	adds	r3, #12
 8004574:	637b      	str	r3, [r7, #52]	@ 0x34
 8004576:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8004578:	e853 3f00 	ldrex	r3, [r3]
 800457c:	633b      	str	r3, [r7, #48]	@ 0x30
 800457e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004580:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8004584:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004586:	687b      	ldr	r3, [r7, #4]
 8004588:	681b      	ldr	r3, [r3, #0]
 800458a:	330c      	adds	r3, #12
 800458c:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 800458e:	643a      	str	r2, [r7, #64]	@ 0x40
 8004590:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004592:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8004594:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8004596:	e841 2300 	strex	r3, r2, [r1]
 800459a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800459c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800459e:	2b00      	cmp	r3, #0
 80045a0:	d1e5      	bne.n	800456e <UART_EndRxTransfer+0x8>
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	681b      	ldr	r3, [r3, #0]
 80045a6:	3314      	adds	r3, #20
 80045a8:	623b      	str	r3, [r7, #32]
 80045aa:	6a3b      	ldr	r3, [r7, #32]
 80045ac:	e853 3f00 	ldrex	r3, [r3]
 80045b0:	61fb      	str	r3, [r7, #28]
 80045b2:	69fb      	ldr	r3, [r7, #28]
 80045b4:	f023 0301 	bic.w	r3, r3, #1
 80045b8:	64bb      	str	r3, [r7, #72]	@ 0x48
 80045ba:	687b      	ldr	r3, [r7, #4]
 80045bc:	681b      	ldr	r3, [r3, #0]
 80045be:	3314      	adds	r3, #20
 80045c0:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80045c2:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80045c4:	62bb      	str	r3, [r7, #40]	@ 0x28
 80045c6:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80045c8:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80045ca:	e841 2300 	strex	r3, r2, [r1]
 80045ce:	627b      	str	r3, [r7, #36]	@ 0x24
 80045d0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80045d2:	2b00      	cmp	r3, #0
 80045d4:	d1e5      	bne.n	80045a2 <UART_EndRxTransfer+0x3c>
 80045d6:	687b      	ldr	r3, [r7, #4]
 80045d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80045da:	2b01      	cmp	r3, #1
 80045dc:	d119      	bne.n	8004612 <UART_EndRxTransfer+0xac>
 80045de:	687b      	ldr	r3, [r7, #4]
 80045e0:	681b      	ldr	r3, [r3, #0]
 80045e2:	330c      	adds	r3, #12
 80045e4:	60fb      	str	r3, [r7, #12]
 80045e6:	68fb      	ldr	r3, [r7, #12]
 80045e8:	e853 3f00 	ldrex	r3, [r3]
 80045ec:	60bb      	str	r3, [r7, #8]
 80045ee:	68bb      	ldr	r3, [r7, #8]
 80045f0:	f023 0310 	bic.w	r3, r3, #16
 80045f4:	647b      	str	r3, [r7, #68]	@ 0x44
 80045f6:	687b      	ldr	r3, [r7, #4]
 80045f8:	681b      	ldr	r3, [r3, #0]
 80045fa:	330c      	adds	r3, #12
 80045fc:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80045fe:	61ba      	str	r2, [r7, #24]
 8004600:	617b      	str	r3, [r7, #20]
 8004602:	6979      	ldr	r1, [r7, #20]
 8004604:	69ba      	ldr	r2, [r7, #24]
 8004606:	e841 2300 	strex	r3, r2, [r1]
 800460a:	613b      	str	r3, [r7, #16]
 800460c:	693b      	ldr	r3, [r7, #16]
 800460e:	2b00      	cmp	r3, #0
 8004610:	d1e5      	bne.n	80045de <UART_EndRxTransfer+0x78>
 8004612:	687b      	ldr	r3, [r7, #4]
 8004614:	2220      	movs	r2, #32
 8004616:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800461a:	687b      	ldr	r3, [r7, #4]
 800461c:	2200      	movs	r2, #0
 800461e:	631a      	str	r2, [r3, #48]	@ 0x30
 8004620:	bf00      	nop
 8004622:	3754      	adds	r7, #84	@ 0x54
 8004624:	46bd      	mov	sp, r7
 8004626:	f85d 7b04 	ldr.w	r7, [sp], #4
 800462a:	4770      	bx	lr

0800462c <UART_DMAAbortOnError>:
 800462c:	b580      	push	{r7, lr}
 800462e:	b084      	sub	sp, #16
 8004630:	af00      	add	r7, sp, #0
 8004632:	6078      	str	r0, [r7, #4]
 8004634:	687b      	ldr	r3, [r7, #4]
 8004636:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004638:	60fb      	str	r3, [r7, #12]
 800463a:	68fb      	ldr	r3, [r7, #12]
 800463c:	2200      	movs	r2, #0
 800463e:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8004640:	68fb      	ldr	r3, [r7, #12]
 8004642:	2200      	movs	r2, #0
 8004644:	84da      	strh	r2, [r3, #38]	@ 0x26
 8004646:	68f8      	ldr	r0, [r7, #12]
 8004648:	f7ff fee4 	bl	8004414 <HAL_UART_ErrorCallback>
 800464c:	bf00      	nop
 800464e:	3710      	adds	r7, #16
 8004650:	46bd      	mov	sp, r7
 8004652:	bd80      	pop	{r7, pc}

08004654 <UART_Transmit_IT>:
 8004654:	b480      	push	{r7}
 8004656:	b085      	sub	sp, #20
 8004658:	af00      	add	r7, sp, #0
 800465a:	6078      	str	r0, [r7, #4]
 800465c:	687b      	ldr	r3, [r7, #4]
 800465e:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8004662:	b2db      	uxtb	r3, r3
 8004664:	2b21      	cmp	r3, #33	@ 0x21
 8004666:	d13e      	bne.n	80046e6 <UART_Transmit_IT+0x92>
 8004668:	687b      	ldr	r3, [r7, #4]
 800466a:	689b      	ldr	r3, [r3, #8]
 800466c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004670:	d114      	bne.n	800469c <UART_Transmit_IT+0x48>
 8004672:	687b      	ldr	r3, [r7, #4]
 8004674:	691b      	ldr	r3, [r3, #16]
 8004676:	2b00      	cmp	r3, #0
 8004678:	d110      	bne.n	800469c <UART_Transmit_IT+0x48>
 800467a:	687b      	ldr	r3, [r7, #4]
 800467c:	6a1b      	ldr	r3, [r3, #32]
 800467e:	60fb      	str	r3, [r7, #12]
 8004680:	68fb      	ldr	r3, [r7, #12]
 8004682:	881b      	ldrh	r3, [r3, #0]
 8004684:	461a      	mov	r2, r3
 8004686:	687b      	ldr	r3, [r7, #4]
 8004688:	681b      	ldr	r3, [r3, #0]
 800468a:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800468e:	605a      	str	r2, [r3, #4]
 8004690:	687b      	ldr	r3, [r7, #4]
 8004692:	6a1b      	ldr	r3, [r3, #32]
 8004694:	1c9a      	adds	r2, r3, #2
 8004696:	687b      	ldr	r3, [r7, #4]
 8004698:	621a      	str	r2, [r3, #32]
 800469a:	e008      	b.n	80046ae <UART_Transmit_IT+0x5a>
 800469c:	687b      	ldr	r3, [r7, #4]
 800469e:	6a1b      	ldr	r3, [r3, #32]
 80046a0:	1c59      	adds	r1, r3, #1
 80046a2:	687a      	ldr	r2, [r7, #4]
 80046a4:	6211      	str	r1, [r2, #32]
 80046a6:	781a      	ldrb	r2, [r3, #0]
 80046a8:	687b      	ldr	r3, [r7, #4]
 80046aa:	681b      	ldr	r3, [r3, #0]
 80046ac:	605a      	str	r2, [r3, #4]
 80046ae:	687b      	ldr	r3, [r7, #4]
 80046b0:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80046b2:	b29b      	uxth	r3, r3
 80046b4:	3b01      	subs	r3, #1
 80046b6:	b29b      	uxth	r3, r3
 80046b8:	687a      	ldr	r2, [r7, #4]
 80046ba:	4619      	mov	r1, r3
 80046bc:	84d1      	strh	r1, [r2, #38]	@ 0x26
 80046be:	2b00      	cmp	r3, #0
 80046c0:	d10f      	bne.n	80046e2 <UART_Transmit_IT+0x8e>
 80046c2:	687b      	ldr	r3, [r7, #4]
 80046c4:	681b      	ldr	r3, [r3, #0]
 80046c6:	68da      	ldr	r2, [r3, #12]
 80046c8:	687b      	ldr	r3, [r7, #4]
 80046ca:	681b      	ldr	r3, [r3, #0]
 80046cc:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80046d0:	60da      	str	r2, [r3, #12]
 80046d2:	687b      	ldr	r3, [r7, #4]
 80046d4:	681b      	ldr	r3, [r3, #0]
 80046d6:	68da      	ldr	r2, [r3, #12]
 80046d8:	687b      	ldr	r3, [r7, #4]
 80046da:	681b      	ldr	r3, [r3, #0]
 80046dc:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80046e0:	60da      	str	r2, [r3, #12]
 80046e2:	2300      	movs	r3, #0
 80046e4:	e000      	b.n	80046e8 <UART_Transmit_IT+0x94>
 80046e6:	2302      	movs	r3, #2
 80046e8:	4618      	mov	r0, r3
 80046ea:	3714      	adds	r7, #20
 80046ec:	46bd      	mov	sp, r7
 80046ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046f2:	4770      	bx	lr

080046f4 <UART_EndTransmit_IT>:
 80046f4:	b580      	push	{r7, lr}
 80046f6:	b082      	sub	sp, #8
 80046f8:	af00      	add	r7, sp, #0
 80046fa:	6078      	str	r0, [r7, #4]
 80046fc:	687b      	ldr	r3, [r7, #4]
 80046fe:	681b      	ldr	r3, [r3, #0]
 8004700:	68da      	ldr	r2, [r3, #12]
 8004702:	687b      	ldr	r3, [r7, #4]
 8004704:	681b      	ldr	r3, [r3, #0]
 8004706:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800470a:	60da      	str	r2, [r3, #12]
 800470c:	687b      	ldr	r3, [r7, #4]
 800470e:	2220      	movs	r2, #32
 8004710:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004714:	6878      	ldr	r0, [r7, #4]
 8004716:	f7ff fe73 	bl	8004400 <HAL_UART_TxCpltCallback>
 800471a:	2300      	movs	r3, #0
 800471c:	4618      	mov	r0, r3
 800471e:	3708      	adds	r7, #8
 8004720:	46bd      	mov	sp, r7
 8004722:	bd80      	pop	{r7, pc}

08004724 <UART_Receive_IT>:
 8004724:	b580      	push	{r7, lr}
 8004726:	b08c      	sub	sp, #48	@ 0x30
 8004728:	af00      	add	r7, sp, #0
 800472a:	6078      	str	r0, [r7, #4]
 800472c:	687b      	ldr	r3, [r7, #4]
 800472e:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8004732:	b2db      	uxtb	r3, r3
 8004734:	2b22      	cmp	r3, #34	@ 0x22
 8004736:	f040 80ae 	bne.w	8004896 <UART_Receive_IT+0x172>
 800473a:	687b      	ldr	r3, [r7, #4]
 800473c:	689b      	ldr	r3, [r3, #8]
 800473e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004742:	d117      	bne.n	8004774 <UART_Receive_IT+0x50>
 8004744:	687b      	ldr	r3, [r7, #4]
 8004746:	691b      	ldr	r3, [r3, #16]
 8004748:	2b00      	cmp	r3, #0
 800474a:	d113      	bne.n	8004774 <UART_Receive_IT+0x50>
 800474c:	2300      	movs	r3, #0
 800474e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004750:	687b      	ldr	r3, [r7, #4]
 8004752:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004754:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004756:	687b      	ldr	r3, [r7, #4]
 8004758:	681b      	ldr	r3, [r3, #0]
 800475a:	685b      	ldr	r3, [r3, #4]
 800475c:	b29b      	uxth	r3, r3
 800475e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004762:	b29a      	uxth	r2, r3
 8004764:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004766:	801a      	strh	r2, [r3, #0]
 8004768:	687b      	ldr	r3, [r7, #4]
 800476a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800476c:	1c9a      	adds	r2, r3, #2
 800476e:	687b      	ldr	r3, [r7, #4]
 8004770:	629a      	str	r2, [r3, #40]	@ 0x28
 8004772:	e026      	b.n	80047c2 <UART_Receive_IT+0x9e>
 8004774:	687b      	ldr	r3, [r7, #4]
 8004776:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004778:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800477a:	2300      	movs	r3, #0
 800477c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800477e:	687b      	ldr	r3, [r7, #4]
 8004780:	689b      	ldr	r3, [r3, #8]
 8004782:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8004786:	d007      	beq.n	8004798 <UART_Receive_IT+0x74>
 8004788:	687b      	ldr	r3, [r7, #4]
 800478a:	689b      	ldr	r3, [r3, #8]
 800478c:	2b00      	cmp	r3, #0
 800478e:	d10a      	bne.n	80047a6 <UART_Receive_IT+0x82>
 8004790:	687b      	ldr	r3, [r7, #4]
 8004792:	691b      	ldr	r3, [r3, #16]
 8004794:	2b00      	cmp	r3, #0
 8004796:	d106      	bne.n	80047a6 <UART_Receive_IT+0x82>
 8004798:	687b      	ldr	r3, [r7, #4]
 800479a:	681b      	ldr	r3, [r3, #0]
 800479c:	685b      	ldr	r3, [r3, #4]
 800479e:	b2da      	uxtb	r2, r3
 80047a0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80047a2:	701a      	strb	r2, [r3, #0]
 80047a4:	e008      	b.n	80047b8 <UART_Receive_IT+0x94>
 80047a6:	687b      	ldr	r3, [r7, #4]
 80047a8:	681b      	ldr	r3, [r3, #0]
 80047aa:	685b      	ldr	r3, [r3, #4]
 80047ac:	b2db      	uxtb	r3, r3
 80047ae:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80047b2:	b2da      	uxtb	r2, r3
 80047b4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80047b6:	701a      	strb	r2, [r3, #0]
 80047b8:	687b      	ldr	r3, [r7, #4]
 80047ba:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80047bc:	1c5a      	adds	r2, r3, #1
 80047be:	687b      	ldr	r3, [r7, #4]
 80047c0:	629a      	str	r2, [r3, #40]	@ 0x28
 80047c2:	687b      	ldr	r3, [r7, #4]
 80047c4:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 80047c6:	b29b      	uxth	r3, r3
 80047c8:	3b01      	subs	r3, #1
 80047ca:	b29b      	uxth	r3, r3
 80047cc:	687a      	ldr	r2, [r7, #4]
 80047ce:	4619      	mov	r1, r3
 80047d0:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 80047d2:	2b00      	cmp	r3, #0
 80047d4:	d15d      	bne.n	8004892 <UART_Receive_IT+0x16e>
 80047d6:	687b      	ldr	r3, [r7, #4]
 80047d8:	681b      	ldr	r3, [r3, #0]
 80047da:	68da      	ldr	r2, [r3, #12]
 80047dc:	687b      	ldr	r3, [r7, #4]
 80047de:	681b      	ldr	r3, [r3, #0]
 80047e0:	f022 0220 	bic.w	r2, r2, #32
 80047e4:	60da      	str	r2, [r3, #12]
 80047e6:	687b      	ldr	r3, [r7, #4]
 80047e8:	681b      	ldr	r3, [r3, #0]
 80047ea:	68da      	ldr	r2, [r3, #12]
 80047ec:	687b      	ldr	r3, [r7, #4]
 80047ee:	681b      	ldr	r3, [r3, #0]
 80047f0:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80047f4:	60da      	str	r2, [r3, #12]
 80047f6:	687b      	ldr	r3, [r7, #4]
 80047f8:	681b      	ldr	r3, [r3, #0]
 80047fa:	695a      	ldr	r2, [r3, #20]
 80047fc:	687b      	ldr	r3, [r7, #4]
 80047fe:	681b      	ldr	r3, [r3, #0]
 8004800:	f022 0201 	bic.w	r2, r2, #1
 8004804:	615a      	str	r2, [r3, #20]
 8004806:	687b      	ldr	r3, [r7, #4]
 8004808:	2220      	movs	r2, #32
 800480a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800480e:	687b      	ldr	r3, [r7, #4]
 8004810:	2200      	movs	r2, #0
 8004812:	635a      	str	r2, [r3, #52]	@ 0x34
 8004814:	687b      	ldr	r3, [r7, #4]
 8004816:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004818:	2b01      	cmp	r3, #1
 800481a:	d135      	bne.n	8004888 <UART_Receive_IT+0x164>
 800481c:	687b      	ldr	r3, [r7, #4]
 800481e:	2200      	movs	r2, #0
 8004820:	631a      	str	r2, [r3, #48]	@ 0x30
 8004822:	687b      	ldr	r3, [r7, #4]
 8004824:	681b      	ldr	r3, [r3, #0]
 8004826:	330c      	adds	r3, #12
 8004828:	617b      	str	r3, [r7, #20]
 800482a:	697b      	ldr	r3, [r7, #20]
 800482c:	e853 3f00 	ldrex	r3, [r3]
 8004830:	613b      	str	r3, [r7, #16]
 8004832:	693b      	ldr	r3, [r7, #16]
 8004834:	f023 0310 	bic.w	r3, r3, #16
 8004838:	627b      	str	r3, [r7, #36]	@ 0x24
 800483a:	687b      	ldr	r3, [r7, #4]
 800483c:	681b      	ldr	r3, [r3, #0]
 800483e:	330c      	adds	r3, #12
 8004840:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004842:	623a      	str	r2, [r7, #32]
 8004844:	61fb      	str	r3, [r7, #28]
 8004846:	69f9      	ldr	r1, [r7, #28]
 8004848:	6a3a      	ldr	r2, [r7, #32]
 800484a:	e841 2300 	strex	r3, r2, [r1]
 800484e:	61bb      	str	r3, [r7, #24]
 8004850:	69bb      	ldr	r3, [r7, #24]
 8004852:	2b00      	cmp	r3, #0
 8004854:	d1e5      	bne.n	8004822 <UART_Receive_IT+0xfe>
 8004856:	687b      	ldr	r3, [r7, #4]
 8004858:	681b      	ldr	r3, [r3, #0]
 800485a:	681b      	ldr	r3, [r3, #0]
 800485c:	f003 0310 	and.w	r3, r3, #16
 8004860:	2b10      	cmp	r3, #16
 8004862:	d10a      	bne.n	800487a <UART_Receive_IT+0x156>
 8004864:	2300      	movs	r3, #0
 8004866:	60fb      	str	r3, [r7, #12]
 8004868:	687b      	ldr	r3, [r7, #4]
 800486a:	681b      	ldr	r3, [r3, #0]
 800486c:	681b      	ldr	r3, [r3, #0]
 800486e:	60fb      	str	r3, [r7, #12]
 8004870:	687b      	ldr	r3, [r7, #4]
 8004872:	681b      	ldr	r3, [r3, #0]
 8004874:	685b      	ldr	r3, [r3, #4]
 8004876:	60fb      	str	r3, [r7, #12]
 8004878:	68fb      	ldr	r3, [r7, #12]
 800487a:	687b      	ldr	r3, [r7, #4]
 800487c:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 800487e:	4619      	mov	r1, r3
 8004880:	6878      	ldr	r0, [r7, #4]
 8004882:	f7ff fdd1 	bl	8004428 <HAL_UARTEx_RxEventCallback>
 8004886:	e002      	b.n	800488e <UART_Receive_IT+0x16a>
 8004888:	6878      	ldr	r0, [r7, #4]
 800488a:	f7fc fb5f 	bl	8000f4c <HAL_UART_RxCpltCallback>
 800488e:	2300      	movs	r3, #0
 8004890:	e002      	b.n	8004898 <UART_Receive_IT+0x174>
 8004892:	2300      	movs	r3, #0
 8004894:	e000      	b.n	8004898 <UART_Receive_IT+0x174>
 8004896:	2302      	movs	r3, #2
 8004898:	4618      	mov	r0, r3
 800489a:	3730      	adds	r7, #48	@ 0x30
 800489c:	46bd      	mov	sp, r7
 800489e:	bd80      	pop	{r7, pc}

080048a0 <UART_SetConfig>:
 80048a0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80048a4:	b0c0      	sub	sp, #256	@ 0x100
 80048a6:	af00      	add	r7, sp, #0
 80048a8:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 80048ac:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80048b0:	681b      	ldr	r3, [r3, #0]
 80048b2:	691b      	ldr	r3, [r3, #16]
 80048b4:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 80048b8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80048bc:	68d9      	ldr	r1, [r3, #12]
 80048be:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80048c2:	681a      	ldr	r2, [r3, #0]
 80048c4:	ea40 0301 	orr.w	r3, r0, r1
 80048c8:	6113      	str	r3, [r2, #16]
 80048ca:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80048ce:	689a      	ldr	r2, [r3, #8]
 80048d0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80048d4:	691b      	ldr	r3, [r3, #16]
 80048d6:	431a      	orrs	r2, r3
 80048d8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80048dc:	695b      	ldr	r3, [r3, #20]
 80048de:	431a      	orrs	r2, r3
 80048e0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80048e4:	69db      	ldr	r3, [r3, #28]
 80048e6:	4313      	orrs	r3, r2
 80048e8:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 80048ec:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80048f0:	681b      	ldr	r3, [r3, #0]
 80048f2:	68db      	ldr	r3, [r3, #12]
 80048f4:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 80048f8:	f021 010c 	bic.w	r1, r1, #12
 80048fc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004900:	681a      	ldr	r2, [r3, #0]
 8004902:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8004906:	430b      	orrs	r3, r1
 8004908:	60d3      	str	r3, [r2, #12]
 800490a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800490e:	681b      	ldr	r3, [r3, #0]
 8004910:	695b      	ldr	r3, [r3, #20]
 8004912:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 8004916:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800491a:	6999      	ldr	r1, [r3, #24]
 800491c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004920:	681a      	ldr	r2, [r3, #0]
 8004922:	ea40 0301 	orr.w	r3, r0, r1
 8004926:	6153      	str	r3, [r2, #20]
 8004928:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800492c:	681a      	ldr	r2, [r3, #0]
 800492e:	4b8f      	ldr	r3, [pc, #572]	@ (8004b6c <UART_SetConfig+0x2cc>)
 8004930:	429a      	cmp	r2, r3
 8004932:	d005      	beq.n	8004940 <UART_SetConfig+0xa0>
 8004934:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004938:	681a      	ldr	r2, [r3, #0]
 800493a:	4b8d      	ldr	r3, [pc, #564]	@ (8004b70 <UART_SetConfig+0x2d0>)
 800493c:	429a      	cmp	r2, r3
 800493e:	d104      	bne.n	800494a <UART_SetConfig+0xaa>
 8004940:	f7ff f9b8 	bl	8003cb4 <HAL_RCC_GetPCLK2Freq>
 8004944:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8004948:	e003      	b.n	8004952 <UART_SetConfig+0xb2>
 800494a:	f7ff f99f 	bl	8003c8c <HAL_RCC_GetPCLK1Freq>
 800494e:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8004952:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004956:	69db      	ldr	r3, [r3, #28]
 8004958:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800495c:	f040 810c 	bne.w	8004b78 <UART_SetConfig+0x2d8>
 8004960:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8004964:	2200      	movs	r2, #0
 8004966:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 800496a:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 800496e:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8004972:	4622      	mov	r2, r4
 8004974:	462b      	mov	r3, r5
 8004976:	1891      	adds	r1, r2, r2
 8004978:	65b9      	str	r1, [r7, #88]	@ 0x58
 800497a:	415b      	adcs	r3, r3
 800497c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800497e:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8004982:	4621      	mov	r1, r4
 8004984:	eb12 0801 	adds.w	r8, r2, r1
 8004988:	4629      	mov	r1, r5
 800498a:	eb43 0901 	adc.w	r9, r3, r1
 800498e:	f04f 0200 	mov.w	r2, #0
 8004992:	f04f 0300 	mov.w	r3, #0
 8004996:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800499a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800499e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80049a2:	4690      	mov	r8, r2
 80049a4:	4699      	mov	r9, r3
 80049a6:	4623      	mov	r3, r4
 80049a8:	eb18 0303 	adds.w	r3, r8, r3
 80049ac:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 80049b0:	462b      	mov	r3, r5
 80049b2:	eb49 0303 	adc.w	r3, r9, r3
 80049b6:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 80049ba:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80049be:	685b      	ldr	r3, [r3, #4]
 80049c0:	2200      	movs	r2, #0
 80049c2:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80049c6:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 80049ca:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 80049ce:	460b      	mov	r3, r1
 80049d0:	18db      	adds	r3, r3, r3
 80049d2:	653b      	str	r3, [r7, #80]	@ 0x50
 80049d4:	4613      	mov	r3, r2
 80049d6:	eb42 0303 	adc.w	r3, r2, r3
 80049da:	657b      	str	r3, [r7, #84]	@ 0x54
 80049dc:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 80049e0:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 80049e4:	f7fb fc4c 	bl	8000280 <__aeabi_uldivmod>
 80049e8:	4602      	mov	r2, r0
 80049ea:	460b      	mov	r3, r1
 80049ec:	4b61      	ldr	r3, [pc, #388]	@ (8004b74 <UART_SetConfig+0x2d4>)
 80049ee:	fba3 2302 	umull	r2, r3, r3, r2
 80049f2:	095b      	lsrs	r3, r3, #5
 80049f4:	011c      	lsls	r4, r3, #4
 80049f6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80049fa:	2200      	movs	r2, #0
 80049fc:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8004a00:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8004a04:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8004a08:	4642      	mov	r2, r8
 8004a0a:	464b      	mov	r3, r9
 8004a0c:	1891      	adds	r1, r2, r2
 8004a0e:	64b9      	str	r1, [r7, #72]	@ 0x48
 8004a10:	415b      	adcs	r3, r3
 8004a12:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8004a14:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8004a18:	4641      	mov	r1, r8
 8004a1a:	eb12 0a01 	adds.w	sl, r2, r1
 8004a1e:	4649      	mov	r1, r9
 8004a20:	eb43 0b01 	adc.w	fp, r3, r1
 8004a24:	f04f 0200 	mov.w	r2, #0
 8004a28:	f04f 0300 	mov.w	r3, #0
 8004a2c:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8004a30:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8004a34:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8004a38:	4692      	mov	sl, r2
 8004a3a:	469b      	mov	fp, r3
 8004a3c:	4643      	mov	r3, r8
 8004a3e:	eb1a 0303 	adds.w	r3, sl, r3
 8004a42:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8004a46:	464b      	mov	r3, r9
 8004a48:	eb4b 0303 	adc.w	r3, fp, r3
 8004a4c:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8004a50:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004a54:	685b      	ldr	r3, [r3, #4]
 8004a56:	2200      	movs	r2, #0
 8004a58:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8004a5c:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8004a60:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8004a64:	460b      	mov	r3, r1
 8004a66:	18db      	adds	r3, r3, r3
 8004a68:	643b      	str	r3, [r7, #64]	@ 0x40
 8004a6a:	4613      	mov	r3, r2
 8004a6c:	eb42 0303 	adc.w	r3, r2, r3
 8004a70:	647b      	str	r3, [r7, #68]	@ 0x44
 8004a72:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8004a76:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 8004a7a:	f7fb fc01 	bl	8000280 <__aeabi_uldivmod>
 8004a7e:	4602      	mov	r2, r0
 8004a80:	460b      	mov	r3, r1
 8004a82:	4611      	mov	r1, r2
 8004a84:	4b3b      	ldr	r3, [pc, #236]	@ (8004b74 <UART_SetConfig+0x2d4>)
 8004a86:	fba3 2301 	umull	r2, r3, r3, r1
 8004a8a:	095b      	lsrs	r3, r3, #5
 8004a8c:	2264      	movs	r2, #100	@ 0x64
 8004a8e:	fb02 f303 	mul.w	r3, r2, r3
 8004a92:	1acb      	subs	r3, r1, r3
 8004a94:	00db      	lsls	r3, r3, #3
 8004a96:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 8004a9a:	4b36      	ldr	r3, [pc, #216]	@ (8004b74 <UART_SetConfig+0x2d4>)
 8004a9c:	fba3 2302 	umull	r2, r3, r3, r2
 8004aa0:	095b      	lsrs	r3, r3, #5
 8004aa2:	005b      	lsls	r3, r3, #1
 8004aa4:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8004aa8:	441c      	add	r4, r3
 8004aaa:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8004aae:	2200      	movs	r2, #0
 8004ab0:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8004ab4:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8004ab8:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8004abc:	4642      	mov	r2, r8
 8004abe:	464b      	mov	r3, r9
 8004ac0:	1891      	adds	r1, r2, r2
 8004ac2:	63b9      	str	r1, [r7, #56]	@ 0x38
 8004ac4:	415b      	adcs	r3, r3
 8004ac6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8004ac8:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8004acc:	4641      	mov	r1, r8
 8004ace:	1851      	adds	r1, r2, r1
 8004ad0:	6339      	str	r1, [r7, #48]	@ 0x30
 8004ad2:	4649      	mov	r1, r9
 8004ad4:	414b      	adcs	r3, r1
 8004ad6:	637b      	str	r3, [r7, #52]	@ 0x34
 8004ad8:	f04f 0200 	mov.w	r2, #0
 8004adc:	f04f 0300 	mov.w	r3, #0
 8004ae0:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8004ae4:	4659      	mov	r1, fp
 8004ae6:	00cb      	lsls	r3, r1, #3
 8004ae8:	4651      	mov	r1, sl
 8004aea:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8004aee:	4651      	mov	r1, sl
 8004af0:	00ca      	lsls	r2, r1, #3
 8004af2:	4610      	mov	r0, r2
 8004af4:	4619      	mov	r1, r3
 8004af6:	4603      	mov	r3, r0
 8004af8:	4642      	mov	r2, r8
 8004afa:	189b      	adds	r3, r3, r2
 8004afc:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8004b00:	464b      	mov	r3, r9
 8004b02:	460a      	mov	r2, r1
 8004b04:	eb42 0303 	adc.w	r3, r2, r3
 8004b08:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8004b0c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004b10:	685b      	ldr	r3, [r3, #4]
 8004b12:	2200      	movs	r2, #0
 8004b14:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8004b18:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8004b1c:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8004b20:	460b      	mov	r3, r1
 8004b22:	18db      	adds	r3, r3, r3
 8004b24:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004b26:	4613      	mov	r3, r2
 8004b28:	eb42 0303 	adc.w	r3, r2, r3
 8004b2c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004b2e:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8004b32:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8004b36:	f7fb fba3 	bl	8000280 <__aeabi_uldivmod>
 8004b3a:	4602      	mov	r2, r0
 8004b3c:	460b      	mov	r3, r1
 8004b3e:	4b0d      	ldr	r3, [pc, #52]	@ (8004b74 <UART_SetConfig+0x2d4>)
 8004b40:	fba3 1302 	umull	r1, r3, r3, r2
 8004b44:	095b      	lsrs	r3, r3, #5
 8004b46:	2164      	movs	r1, #100	@ 0x64
 8004b48:	fb01 f303 	mul.w	r3, r1, r3
 8004b4c:	1ad3      	subs	r3, r2, r3
 8004b4e:	00db      	lsls	r3, r3, #3
 8004b50:	3332      	adds	r3, #50	@ 0x32
 8004b52:	4a08      	ldr	r2, [pc, #32]	@ (8004b74 <UART_SetConfig+0x2d4>)
 8004b54:	fba2 2303 	umull	r2, r3, r2, r3
 8004b58:	095b      	lsrs	r3, r3, #5
 8004b5a:	f003 0207 	and.w	r2, r3, #7
 8004b5e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004b62:	681b      	ldr	r3, [r3, #0]
 8004b64:	4422      	add	r2, r4
 8004b66:	609a      	str	r2, [r3, #8]
 8004b68:	e106      	b.n	8004d78 <UART_SetConfig+0x4d8>
 8004b6a:	bf00      	nop
 8004b6c:	40011000 	.word	0x40011000
 8004b70:	40011400 	.word	0x40011400
 8004b74:	51eb851f 	.word	0x51eb851f
 8004b78:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8004b7c:	2200      	movs	r2, #0
 8004b7e:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8004b82:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 8004b86:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 8004b8a:	4642      	mov	r2, r8
 8004b8c:	464b      	mov	r3, r9
 8004b8e:	1891      	adds	r1, r2, r2
 8004b90:	6239      	str	r1, [r7, #32]
 8004b92:	415b      	adcs	r3, r3
 8004b94:	627b      	str	r3, [r7, #36]	@ 0x24
 8004b96:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8004b9a:	4641      	mov	r1, r8
 8004b9c:	1854      	adds	r4, r2, r1
 8004b9e:	4649      	mov	r1, r9
 8004ba0:	eb43 0501 	adc.w	r5, r3, r1
 8004ba4:	f04f 0200 	mov.w	r2, #0
 8004ba8:	f04f 0300 	mov.w	r3, #0
 8004bac:	00eb      	lsls	r3, r5, #3
 8004bae:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8004bb2:	00e2      	lsls	r2, r4, #3
 8004bb4:	4614      	mov	r4, r2
 8004bb6:	461d      	mov	r5, r3
 8004bb8:	4643      	mov	r3, r8
 8004bba:	18e3      	adds	r3, r4, r3
 8004bbc:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8004bc0:	464b      	mov	r3, r9
 8004bc2:	eb45 0303 	adc.w	r3, r5, r3
 8004bc6:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8004bca:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004bce:	685b      	ldr	r3, [r3, #4]
 8004bd0:	2200      	movs	r2, #0
 8004bd2:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8004bd6:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8004bda:	f04f 0200 	mov.w	r2, #0
 8004bde:	f04f 0300 	mov.w	r3, #0
 8004be2:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8004be6:	4629      	mov	r1, r5
 8004be8:	008b      	lsls	r3, r1, #2
 8004bea:	4621      	mov	r1, r4
 8004bec:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8004bf0:	4621      	mov	r1, r4
 8004bf2:	008a      	lsls	r2, r1, #2
 8004bf4:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8004bf8:	f7fb fb42 	bl	8000280 <__aeabi_uldivmod>
 8004bfc:	4602      	mov	r2, r0
 8004bfe:	460b      	mov	r3, r1
 8004c00:	4b60      	ldr	r3, [pc, #384]	@ (8004d84 <UART_SetConfig+0x4e4>)
 8004c02:	fba3 2302 	umull	r2, r3, r3, r2
 8004c06:	095b      	lsrs	r3, r3, #5
 8004c08:	011c      	lsls	r4, r3, #4
 8004c0a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8004c0e:	2200      	movs	r2, #0
 8004c10:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8004c14:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8004c18:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8004c1c:	4642      	mov	r2, r8
 8004c1e:	464b      	mov	r3, r9
 8004c20:	1891      	adds	r1, r2, r2
 8004c22:	61b9      	str	r1, [r7, #24]
 8004c24:	415b      	adcs	r3, r3
 8004c26:	61fb      	str	r3, [r7, #28]
 8004c28:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004c2c:	4641      	mov	r1, r8
 8004c2e:	1851      	adds	r1, r2, r1
 8004c30:	6139      	str	r1, [r7, #16]
 8004c32:	4649      	mov	r1, r9
 8004c34:	414b      	adcs	r3, r1
 8004c36:	617b      	str	r3, [r7, #20]
 8004c38:	f04f 0200 	mov.w	r2, #0
 8004c3c:	f04f 0300 	mov.w	r3, #0
 8004c40:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8004c44:	4659      	mov	r1, fp
 8004c46:	00cb      	lsls	r3, r1, #3
 8004c48:	4651      	mov	r1, sl
 8004c4a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8004c4e:	4651      	mov	r1, sl
 8004c50:	00ca      	lsls	r2, r1, #3
 8004c52:	4610      	mov	r0, r2
 8004c54:	4619      	mov	r1, r3
 8004c56:	4603      	mov	r3, r0
 8004c58:	4642      	mov	r2, r8
 8004c5a:	189b      	adds	r3, r3, r2
 8004c5c:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8004c60:	464b      	mov	r3, r9
 8004c62:	460a      	mov	r2, r1
 8004c64:	eb42 0303 	adc.w	r3, r2, r3
 8004c68:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8004c6c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004c70:	685b      	ldr	r3, [r3, #4]
 8004c72:	2200      	movs	r2, #0
 8004c74:	67bb      	str	r3, [r7, #120]	@ 0x78
 8004c76:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8004c78:	f04f 0200 	mov.w	r2, #0
 8004c7c:	f04f 0300 	mov.w	r3, #0
 8004c80:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8004c84:	4649      	mov	r1, r9
 8004c86:	008b      	lsls	r3, r1, #2
 8004c88:	4641      	mov	r1, r8
 8004c8a:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8004c8e:	4641      	mov	r1, r8
 8004c90:	008a      	lsls	r2, r1, #2
 8004c92:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 8004c96:	f7fb faf3 	bl	8000280 <__aeabi_uldivmod>
 8004c9a:	4602      	mov	r2, r0
 8004c9c:	460b      	mov	r3, r1
 8004c9e:	4611      	mov	r1, r2
 8004ca0:	4b38      	ldr	r3, [pc, #224]	@ (8004d84 <UART_SetConfig+0x4e4>)
 8004ca2:	fba3 2301 	umull	r2, r3, r3, r1
 8004ca6:	095b      	lsrs	r3, r3, #5
 8004ca8:	2264      	movs	r2, #100	@ 0x64
 8004caa:	fb02 f303 	mul.w	r3, r2, r3
 8004cae:	1acb      	subs	r3, r1, r3
 8004cb0:	011b      	lsls	r3, r3, #4
 8004cb2:	3332      	adds	r3, #50	@ 0x32
 8004cb4:	4a33      	ldr	r2, [pc, #204]	@ (8004d84 <UART_SetConfig+0x4e4>)
 8004cb6:	fba2 2303 	umull	r2, r3, r2, r3
 8004cba:	095b      	lsrs	r3, r3, #5
 8004cbc:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8004cc0:	441c      	add	r4, r3
 8004cc2:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8004cc6:	2200      	movs	r2, #0
 8004cc8:	673b      	str	r3, [r7, #112]	@ 0x70
 8004cca:	677a      	str	r2, [r7, #116]	@ 0x74
 8004ccc:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8004cd0:	4642      	mov	r2, r8
 8004cd2:	464b      	mov	r3, r9
 8004cd4:	1891      	adds	r1, r2, r2
 8004cd6:	60b9      	str	r1, [r7, #8]
 8004cd8:	415b      	adcs	r3, r3
 8004cda:	60fb      	str	r3, [r7, #12]
 8004cdc:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8004ce0:	4641      	mov	r1, r8
 8004ce2:	1851      	adds	r1, r2, r1
 8004ce4:	6039      	str	r1, [r7, #0]
 8004ce6:	4649      	mov	r1, r9
 8004ce8:	414b      	adcs	r3, r1
 8004cea:	607b      	str	r3, [r7, #4]
 8004cec:	f04f 0200 	mov.w	r2, #0
 8004cf0:	f04f 0300 	mov.w	r3, #0
 8004cf4:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8004cf8:	4659      	mov	r1, fp
 8004cfa:	00cb      	lsls	r3, r1, #3
 8004cfc:	4651      	mov	r1, sl
 8004cfe:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8004d02:	4651      	mov	r1, sl
 8004d04:	00ca      	lsls	r2, r1, #3
 8004d06:	4610      	mov	r0, r2
 8004d08:	4619      	mov	r1, r3
 8004d0a:	4603      	mov	r3, r0
 8004d0c:	4642      	mov	r2, r8
 8004d0e:	189b      	adds	r3, r3, r2
 8004d10:	66bb      	str	r3, [r7, #104]	@ 0x68
 8004d12:	464b      	mov	r3, r9
 8004d14:	460a      	mov	r2, r1
 8004d16:	eb42 0303 	adc.w	r3, r2, r3
 8004d1a:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8004d1c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004d20:	685b      	ldr	r3, [r3, #4]
 8004d22:	2200      	movs	r2, #0
 8004d24:	663b      	str	r3, [r7, #96]	@ 0x60
 8004d26:	667a      	str	r2, [r7, #100]	@ 0x64
 8004d28:	f04f 0200 	mov.w	r2, #0
 8004d2c:	f04f 0300 	mov.w	r3, #0
 8004d30:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8004d34:	4649      	mov	r1, r9
 8004d36:	008b      	lsls	r3, r1, #2
 8004d38:	4641      	mov	r1, r8
 8004d3a:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8004d3e:	4641      	mov	r1, r8
 8004d40:	008a      	lsls	r2, r1, #2
 8004d42:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 8004d46:	f7fb fa9b 	bl	8000280 <__aeabi_uldivmod>
 8004d4a:	4602      	mov	r2, r0
 8004d4c:	460b      	mov	r3, r1
 8004d4e:	4b0d      	ldr	r3, [pc, #52]	@ (8004d84 <UART_SetConfig+0x4e4>)
 8004d50:	fba3 1302 	umull	r1, r3, r3, r2
 8004d54:	095b      	lsrs	r3, r3, #5
 8004d56:	2164      	movs	r1, #100	@ 0x64
 8004d58:	fb01 f303 	mul.w	r3, r1, r3
 8004d5c:	1ad3      	subs	r3, r2, r3
 8004d5e:	011b      	lsls	r3, r3, #4
 8004d60:	3332      	adds	r3, #50	@ 0x32
 8004d62:	4a08      	ldr	r2, [pc, #32]	@ (8004d84 <UART_SetConfig+0x4e4>)
 8004d64:	fba2 2303 	umull	r2, r3, r2, r3
 8004d68:	095b      	lsrs	r3, r3, #5
 8004d6a:	f003 020f 	and.w	r2, r3, #15
 8004d6e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004d72:	681b      	ldr	r3, [r3, #0]
 8004d74:	4422      	add	r2, r4
 8004d76:	609a      	str	r2, [r3, #8]
 8004d78:	bf00      	nop
 8004d7a:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 8004d7e:	46bd      	mov	sp, r7
 8004d80:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8004d84:	51eb851f 	.word	0x51eb851f

08004d88 <siprintf>:
 8004d88:	b40e      	push	{r1, r2, r3}
 8004d8a:	b500      	push	{lr}
 8004d8c:	b09c      	sub	sp, #112	@ 0x70
 8004d8e:	ab1d      	add	r3, sp, #116	@ 0x74
 8004d90:	9002      	str	r0, [sp, #8]
 8004d92:	9006      	str	r0, [sp, #24]
 8004d94:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8004d98:	4809      	ldr	r0, [pc, #36]	@ (8004dc0 <siprintf+0x38>)
 8004d9a:	9107      	str	r1, [sp, #28]
 8004d9c:	9104      	str	r1, [sp, #16]
 8004d9e:	4909      	ldr	r1, [pc, #36]	@ (8004dc4 <siprintf+0x3c>)
 8004da0:	f853 2b04 	ldr.w	r2, [r3], #4
 8004da4:	9105      	str	r1, [sp, #20]
 8004da6:	6800      	ldr	r0, [r0, #0]
 8004da8:	9301      	str	r3, [sp, #4]
 8004daa:	a902      	add	r1, sp, #8
 8004dac:	f000 f994 	bl	80050d8 <_svfiprintf_r>
 8004db0:	9b02      	ldr	r3, [sp, #8]
 8004db2:	2200      	movs	r2, #0
 8004db4:	701a      	strb	r2, [r3, #0]
 8004db6:	b01c      	add	sp, #112	@ 0x70
 8004db8:	f85d eb04 	ldr.w	lr, [sp], #4
 8004dbc:	b003      	add	sp, #12
 8004dbe:	4770      	bx	lr
 8004dc0:	20000010 	.word	0x20000010
 8004dc4:	ffff0208 	.word	0xffff0208

08004dc8 <memset>:
 8004dc8:	4402      	add	r2, r0
 8004dca:	4603      	mov	r3, r0
 8004dcc:	4293      	cmp	r3, r2
 8004dce:	d100      	bne.n	8004dd2 <memset+0xa>
 8004dd0:	4770      	bx	lr
 8004dd2:	f803 1b01 	strb.w	r1, [r3], #1
 8004dd6:	e7f9      	b.n	8004dcc <memset+0x4>

08004dd8 <__errno>:
 8004dd8:	4b01      	ldr	r3, [pc, #4]	@ (8004de0 <__errno+0x8>)
 8004dda:	6818      	ldr	r0, [r3, #0]
 8004ddc:	4770      	bx	lr
 8004dde:	bf00      	nop
 8004de0:	20000010 	.word	0x20000010

08004de4 <__libc_init_array>:
 8004de4:	b570      	push	{r4, r5, r6, lr}
 8004de6:	4d0d      	ldr	r5, [pc, #52]	@ (8004e1c <__libc_init_array+0x38>)
 8004de8:	4c0d      	ldr	r4, [pc, #52]	@ (8004e20 <__libc_init_array+0x3c>)
 8004dea:	1b64      	subs	r4, r4, r5
 8004dec:	10a4      	asrs	r4, r4, #2
 8004dee:	2600      	movs	r6, #0
 8004df0:	42a6      	cmp	r6, r4
 8004df2:	d109      	bne.n	8004e08 <__libc_init_array+0x24>
 8004df4:	4d0b      	ldr	r5, [pc, #44]	@ (8004e24 <__libc_init_array+0x40>)
 8004df6:	4c0c      	ldr	r4, [pc, #48]	@ (8004e28 <__libc_init_array+0x44>)
 8004df8:	f000 fc66 	bl	80056c8 <_init>
 8004dfc:	1b64      	subs	r4, r4, r5
 8004dfe:	10a4      	asrs	r4, r4, #2
 8004e00:	2600      	movs	r6, #0
 8004e02:	42a6      	cmp	r6, r4
 8004e04:	d105      	bne.n	8004e12 <__libc_init_array+0x2e>
 8004e06:	bd70      	pop	{r4, r5, r6, pc}
 8004e08:	f855 3b04 	ldr.w	r3, [r5], #4
 8004e0c:	4798      	blx	r3
 8004e0e:	3601      	adds	r6, #1
 8004e10:	e7ee      	b.n	8004df0 <__libc_init_array+0xc>
 8004e12:	f855 3b04 	ldr.w	r3, [r5], #4
 8004e16:	4798      	blx	r3
 8004e18:	3601      	adds	r6, #1
 8004e1a:	e7f2      	b.n	8004e02 <__libc_init_array+0x1e>
 8004e1c:	080057b8 	.word	0x080057b8
 8004e20:	080057b8 	.word	0x080057b8
 8004e24:	080057b8 	.word	0x080057b8
 8004e28:	080057bc 	.word	0x080057bc

08004e2c <__retarget_lock_acquire_recursive>:
 8004e2c:	4770      	bx	lr

08004e2e <__retarget_lock_release_recursive>:
 8004e2e:	4770      	bx	lr

08004e30 <_free_r>:
 8004e30:	b538      	push	{r3, r4, r5, lr}
 8004e32:	4605      	mov	r5, r0
 8004e34:	2900      	cmp	r1, #0
 8004e36:	d041      	beq.n	8004ebc <_free_r+0x8c>
 8004e38:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004e3c:	1f0c      	subs	r4, r1, #4
 8004e3e:	2b00      	cmp	r3, #0
 8004e40:	bfb8      	it	lt
 8004e42:	18e4      	addlt	r4, r4, r3
 8004e44:	f000 f8e0 	bl	8005008 <__malloc_lock>
 8004e48:	4a1d      	ldr	r2, [pc, #116]	@ (8004ec0 <_free_r+0x90>)
 8004e4a:	6813      	ldr	r3, [r2, #0]
 8004e4c:	b933      	cbnz	r3, 8004e5c <_free_r+0x2c>
 8004e4e:	6063      	str	r3, [r4, #4]
 8004e50:	6014      	str	r4, [r2, #0]
 8004e52:	4628      	mov	r0, r5
 8004e54:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004e58:	f000 b8dc 	b.w	8005014 <__malloc_unlock>
 8004e5c:	42a3      	cmp	r3, r4
 8004e5e:	d908      	bls.n	8004e72 <_free_r+0x42>
 8004e60:	6820      	ldr	r0, [r4, #0]
 8004e62:	1821      	adds	r1, r4, r0
 8004e64:	428b      	cmp	r3, r1
 8004e66:	bf01      	itttt	eq
 8004e68:	6819      	ldreq	r1, [r3, #0]
 8004e6a:	685b      	ldreq	r3, [r3, #4]
 8004e6c:	1809      	addeq	r1, r1, r0
 8004e6e:	6021      	streq	r1, [r4, #0]
 8004e70:	e7ed      	b.n	8004e4e <_free_r+0x1e>
 8004e72:	461a      	mov	r2, r3
 8004e74:	685b      	ldr	r3, [r3, #4]
 8004e76:	b10b      	cbz	r3, 8004e7c <_free_r+0x4c>
 8004e78:	42a3      	cmp	r3, r4
 8004e7a:	d9fa      	bls.n	8004e72 <_free_r+0x42>
 8004e7c:	6811      	ldr	r1, [r2, #0]
 8004e7e:	1850      	adds	r0, r2, r1
 8004e80:	42a0      	cmp	r0, r4
 8004e82:	d10b      	bne.n	8004e9c <_free_r+0x6c>
 8004e84:	6820      	ldr	r0, [r4, #0]
 8004e86:	4401      	add	r1, r0
 8004e88:	1850      	adds	r0, r2, r1
 8004e8a:	4283      	cmp	r3, r0
 8004e8c:	6011      	str	r1, [r2, #0]
 8004e8e:	d1e0      	bne.n	8004e52 <_free_r+0x22>
 8004e90:	6818      	ldr	r0, [r3, #0]
 8004e92:	685b      	ldr	r3, [r3, #4]
 8004e94:	6053      	str	r3, [r2, #4]
 8004e96:	4408      	add	r0, r1
 8004e98:	6010      	str	r0, [r2, #0]
 8004e9a:	e7da      	b.n	8004e52 <_free_r+0x22>
 8004e9c:	d902      	bls.n	8004ea4 <_free_r+0x74>
 8004e9e:	230c      	movs	r3, #12
 8004ea0:	602b      	str	r3, [r5, #0]
 8004ea2:	e7d6      	b.n	8004e52 <_free_r+0x22>
 8004ea4:	6820      	ldr	r0, [r4, #0]
 8004ea6:	1821      	adds	r1, r4, r0
 8004ea8:	428b      	cmp	r3, r1
 8004eaa:	bf04      	itt	eq
 8004eac:	6819      	ldreq	r1, [r3, #0]
 8004eae:	685b      	ldreq	r3, [r3, #4]
 8004eb0:	6063      	str	r3, [r4, #4]
 8004eb2:	bf04      	itt	eq
 8004eb4:	1809      	addeq	r1, r1, r0
 8004eb6:	6021      	streq	r1, [r4, #0]
 8004eb8:	6054      	str	r4, [r2, #4]
 8004eba:	e7ca      	b.n	8004e52 <_free_r+0x22>
 8004ebc:	bd38      	pop	{r3, r4, r5, pc}
 8004ebe:	bf00      	nop
 8004ec0:	200003ac 	.word	0x200003ac

08004ec4 <sbrk_aligned>:
 8004ec4:	b570      	push	{r4, r5, r6, lr}
 8004ec6:	4e0f      	ldr	r6, [pc, #60]	@ (8004f04 <sbrk_aligned+0x40>)
 8004ec8:	460c      	mov	r4, r1
 8004eca:	6831      	ldr	r1, [r6, #0]
 8004ecc:	4605      	mov	r5, r0
 8004ece:	b911      	cbnz	r1, 8004ed6 <sbrk_aligned+0x12>
 8004ed0:	f000 fba6 	bl	8005620 <_sbrk_r>
 8004ed4:	6030      	str	r0, [r6, #0]
 8004ed6:	4621      	mov	r1, r4
 8004ed8:	4628      	mov	r0, r5
 8004eda:	f000 fba1 	bl	8005620 <_sbrk_r>
 8004ede:	1c43      	adds	r3, r0, #1
 8004ee0:	d103      	bne.n	8004eea <sbrk_aligned+0x26>
 8004ee2:	f04f 34ff 	mov.w	r4, #4294967295
 8004ee6:	4620      	mov	r0, r4
 8004ee8:	bd70      	pop	{r4, r5, r6, pc}
 8004eea:	1cc4      	adds	r4, r0, #3
 8004eec:	f024 0403 	bic.w	r4, r4, #3
 8004ef0:	42a0      	cmp	r0, r4
 8004ef2:	d0f8      	beq.n	8004ee6 <sbrk_aligned+0x22>
 8004ef4:	1a21      	subs	r1, r4, r0
 8004ef6:	4628      	mov	r0, r5
 8004ef8:	f000 fb92 	bl	8005620 <_sbrk_r>
 8004efc:	3001      	adds	r0, #1
 8004efe:	d1f2      	bne.n	8004ee6 <sbrk_aligned+0x22>
 8004f00:	e7ef      	b.n	8004ee2 <sbrk_aligned+0x1e>
 8004f02:	bf00      	nop
 8004f04:	200003a8 	.word	0x200003a8

08004f08 <_malloc_r>:
 8004f08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004f0c:	1ccd      	adds	r5, r1, #3
 8004f0e:	f025 0503 	bic.w	r5, r5, #3
 8004f12:	3508      	adds	r5, #8
 8004f14:	2d0c      	cmp	r5, #12
 8004f16:	bf38      	it	cc
 8004f18:	250c      	movcc	r5, #12
 8004f1a:	2d00      	cmp	r5, #0
 8004f1c:	4606      	mov	r6, r0
 8004f1e:	db01      	blt.n	8004f24 <_malloc_r+0x1c>
 8004f20:	42a9      	cmp	r1, r5
 8004f22:	d904      	bls.n	8004f2e <_malloc_r+0x26>
 8004f24:	230c      	movs	r3, #12
 8004f26:	6033      	str	r3, [r6, #0]
 8004f28:	2000      	movs	r0, #0
 8004f2a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004f2e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8005004 <_malloc_r+0xfc>
 8004f32:	f000 f869 	bl	8005008 <__malloc_lock>
 8004f36:	f8d8 3000 	ldr.w	r3, [r8]
 8004f3a:	461c      	mov	r4, r3
 8004f3c:	bb44      	cbnz	r4, 8004f90 <_malloc_r+0x88>
 8004f3e:	4629      	mov	r1, r5
 8004f40:	4630      	mov	r0, r6
 8004f42:	f7ff ffbf 	bl	8004ec4 <sbrk_aligned>
 8004f46:	1c43      	adds	r3, r0, #1
 8004f48:	4604      	mov	r4, r0
 8004f4a:	d158      	bne.n	8004ffe <_malloc_r+0xf6>
 8004f4c:	f8d8 4000 	ldr.w	r4, [r8]
 8004f50:	4627      	mov	r7, r4
 8004f52:	2f00      	cmp	r7, #0
 8004f54:	d143      	bne.n	8004fde <_malloc_r+0xd6>
 8004f56:	2c00      	cmp	r4, #0
 8004f58:	d04b      	beq.n	8004ff2 <_malloc_r+0xea>
 8004f5a:	6823      	ldr	r3, [r4, #0]
 8004f5c:	4639      	mov	r1, r7
 8004f5e:	4630      	mov	r0, r6
 8004f60:	eb04 0903 	add.w	r9, r4, r3
 8004f64:	f000 fb5c 	bl	8005620 <_sbrk_r>
 8004f68:	4581      	cmp	r9, r0
 8004f6a:	d142      	bne.n	8004ff2 <_malloc_r+0xea>
 8004f6c:	6821      	ldr	r1, [r4, #0]
 8004f6e:	1a6d      	subs	r5, r5, r1
 8004f70:	4629      	mov	r1, r5
 8004f72:	4630      	mov	r0, r6
 8004f74:	f7ff ffa6 	bl	8004ec4 <sbrk_aligned>
 8004f78:	3001      	adds	r0, #1
 8004f7a:	d03a      	beq.n	8004ff2 <_malloc_r+0xea>
 8004f7c:	6823      	ldr	r3, [r4, #0]
 8004f7e:	442b      	add	r3, r5
 8004f80:	6023      	str	r3, [r4, #0]
 8004f82:	f8d8 3000 	ldr.w	r3, [r8]
 8004f86:	685a      	ldr	r2, [r3, #4]
 8004f88:	bb62      	cbnz	r2, 8004fe4 <_malloc_r+0xdc>
 8004f8a:	f8c8 7000 	str.w	r7, [r8]
 8004f8e:	e00f      	b.n	8004fb0 <_malloc_r+0xa8>
 8004f90:	6822      	ldr	r2, [r4, #0]
 8004f92:	1b52      	subs	r2, r2, r5
 8004f94:	d420      	bmi.n	8004fd8 <_malloc_r+0xd0>
 8004f96:	2a0b      	cmp	r2, #11
 8004f98:	d917      	bls.n	8004fca <_malloc_r+0xc2>
 8004f9a:	1961      	adds	r1, r4, r5
 8004f9c:	42a3      	cmp	r3, r4
 8004f9e:	6025      	str	r5, [r4, #0]
 8004fa0:	bf18      	it	ne
 8004fa2:	6059      	strne	r1, [r3, #4]
 8004fa4:	6863      	ldr	r3, [r4, #4]
 8004fa6:	bf08      	it	eq
 8004fa8:	f8c8 1000 	streq.w	r1, [r8]
 8004fac:	5162      	str	r2, [r4, r5]
 8004fae:	604b      	str	r3, [r1, #4]
 8004fb0:	4630      	mov	r0, r6
 8004fb2:	f000 f82f 	bl	8005014 <__malloc_unlock>
 8004fb6:	f104 000b 	add.w	r0, r4, #11
 8004fba:	1d23      	adds	r3, r4, #4
 8004fbc:	f020 0007 	bic.w	r0, r0, #7
 8004fc0:	1ac2      	subs	r2, r0, r3
 8004fc2:	bf1c      	itt	ne
 8004fc4:	1a1b      	subne	r3, r3, r0
 8004fc6:	50a3      	strne	r3, [r4, r2]
 8004fc8:	e7af      	b.n	8004f2a <_malloc_r+0x22>
 8004fca:	6862      	ldr	r2, [r4, #4]
 8004fcc:	42a3      	cmp	r3, r4
 8004fce:	bf0c      	ite	eq
 8004fd0:	f8c8 2000 	streq.w	r2, [r8]
 8004fd4:	605a      	strne	r2, [r3, #4]
 8004fd6:	e7eb      	b.n	8004fb0 <_malloc_r+0xa8>
 8004fd8:	4623      	mov	r3, r4
 8004fda:	6864      	ldr	r4, [r4, #4]
 8004fdc:	e7ae      	b.n	8004f3c <_malloc_r+0x34>
 8004fde:	463c      	mov	r4, r7
 8004fe0:	687f      	ldr	r7, [r7, #4]
 8004fe2:	e7b6      	b.n	8004f52 <_malloc_r+0x4a>
 8004fe4:	461a      	mov	r2, r3
 8004fe6:	685b      	ldr	r3, [r3, #4]
 8004fe8:	42a3      	cmp	r3, r4
 8004fea:	d1fb      	bne.n	8004fe4 <_malloc_r+0xdc>
 8004fec:	2300      	movs	r3, #0
 8004fee:	6053      	str	r3, [r2, #4]
 8004ff0:	e7de      	b.n	8004fb0 <_malloc_r+0xa8>
 8004ff2:	230c      	movs	r3, #12
 8004ff4:	6033      	str	r3, [r6, #0]
 8004ff6:	4630      	mov	r0, r6
 8004ff8:	f000 f80c 	bl	8005014 <__malloc_unlock>
 8004ffc:	e794      	b.n	8004f28 <_malloc_r+0x20>
 8004ffe:	6005      	str	r5, [r0, #0]
 8005000:	e7d6      	b.n	8004fb0 <_malloc_r+0xa8>
 8005002:	bf00      	nop
 8005004:	200003ac 	.word	0x200003ac

08005008 <__malloc_lock>:
 8005008:	4801      	ldr	r0, [pc, #4]	@ (8005010 <__malloc_lock+0x8>)
 800500a:	f7ff bf0f 	b.w	8004e2c <__retarget_lock_acquire_recursive>
 800500e:	bf00      	nop
 8005010:	200003a4 	.word	0x200003a4

08005014 <__malloc_unlock>:
 8005014:	4801      	ldr	r0, [pc, #4]	@ (800501c <__malloc_unlock+0x8>)
 8005016:	f7ff bf0a 	b.w	8004e2e <__retarget_lock_release_recursive>
 800501a:	bf00      	nop
 800501c:	200003a4 	.word	0x200003a4

08005020 <__ssputs_r>:
 8005020:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005024:	688e      	ldr	r6, [r1, #8]
 8005026:	461f      	mov	r7, r3
 8005028:	42be      	cmp	r6, r7
 800502a:	680b      	ldr	r3, [r1, #0]
 800502c:	4682      	mov	sl, r0
 800502e:	460c      	mov	r4, r1
 8005030:	4690      	mov	r8, r2
 8005032:	d82d      	bhi.n	8005090 <__ssputs_r+0x70>
 8005034:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8005038:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 800503c:	d026      	beq.n	800508c <__ssputs_r+0x6c>
 800503e:	6965      	ldr	r5, [r4, #20]
 8005040:	6909      	ldr	r1, [r1, #16]
 8005042:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005046:	eba3 0901 	sub.w	r9, r3, r1
 800504a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800504e:	1c7b      	adds	r3, r7, #1
 8005050:	444b      	add	r3, r9
 8005052:	106d      	asrs	r5, r5, #1
 8005054:	429d      	cmp	r5, r3
 8005056:	bf38      	it	cc
 8005058:	461d      	movcc	r5, r3
 800505a:	0553      	lsls	r3, r2, #21
 800505c:	d527      	bpl.n	80050ae <__ssputs_r+0x8e>
 800505e:	4629      	mov	r1, r5
 8005060:	f7ff ff52 	bl	8004f08 <_malloc_r>
 8005064:	4606      	mov	r6, r0
 8005066:	b360      	cbz	r0, 80050c2 <__ssputs_r+0xa2>
 8005068:	6921      	ldr	r1, [r4, #16]
 800506a:	464a      	mov	r2, r9
 800506c:	f000 fae8 	bl	8005640 <memcpy>
 8005070:	89a3      	ldrh	r3, [r4, #12]
 8005072:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8005076:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800507a:	81a3      	strh	r3, [r4, #12]
 800507c:	6126      	str	r6, [r4, #16]
 800507e:	6165      	str	r5, [r4, #20]
 8005080:	444e      	add	r6, r9
 8005082:	eba5 0509 	sub.w	r5, r5, r9
 8005086:	6026      	str	r6, [r4, #0]
 8005088:	60a5      	str	r5, [r4, #8]
 800508a:	463e      	mov	r6, r7
 800508c:	42be      	cmp	r6, r7
 800508e:	d900      	bls.n	8005092 <__ssputs_r+0x72>
 8005090:	463e      	mov	r6, r7
 8005092:	6820      	ldr	r0, [r4, #0]
 8005094:	4632      	mov	r2, r6
 8005096:	4641      	mov	r1, r8
 8005098:	f000 faa8 	bl	80055ec <memmove>
 800509c:	68a3      	ldr	r3, [r4, #8]
 800509e:	1b9b      	subs	r3, r3, r6
 80050a0:	60a3      	str	r3, [r4, #8]
 80050a2:	6823      	ldr	r3, [r4, #0]
 80050a4:	4433      	add	r3, r6
 80050a6:	6023      	str	r3, [r4, #0]
 80050a8:	2000      	movs	r0, #0
 80050aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80050ae:	462a      	mov	r2, r5
 80050b0:	f000 fad4 	bl	800565c <_realloc_r>
 80050b4:	4606      	mov	r6, r0
 80050b6:	2800      	cmp	r0, #0
 80050b8:	d1e0      	bne.n	800507c <__ssputs_r+0x5c>
 80050ba:	6921      	ldr	r1, [r4, #16]
 80050bc:	4650      	mov	r0, sl
 80050be:	f7ff feb7 	bl	8004e30 <_free_r>
 80050c2:	230c      	movs	r3, #12
 80050c4:	f8ca 3000 	str.w	r3, [sl]
 80050c8:	89a3      	ldrh	r3, [r4, #12]
 80050ca:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80050ce:	81a3      	strh	r3, [r4, #12]
 80050d0:	f04f 30ff 	mov.w	r0, #4294967295
 80050d4:	e7e9      	b.n	80050aa <__ssputs_r+0x8a>
	...

080050d8 <_svfiprintf_r>:
 80050d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80050dc:	4698      	mov	r8, r3
 80050de:	898b      	ldrh	r3, [r1, #12]
 80050e0:	061b      	lsls	r3, r3, #24
 80050e2:	b09d      	sub	sp, #116	@ 0x74
 80050e4:	4607      	mov	r7, r0
 80050e6:	460d      	mov	r5, r1
 80050e8:	4614      	mov	r4, r2
 80050ea:	d510      	bpl.n	800510e <_svfiprintf_r+0x36>
 80050ec:	690b      	ldr	r3, [r1, #16]
 80050ee:	b973      	cbnz	r3, 800510e <_svfiprintf_r+0x36>
 80050f0:	2140      	movs	r1, #64	@ 0x40
 80050f2:	f7ff ff09 	bl	8004f08 <_malloc_r>
 80050f6:	6028      	str	r0, [r5, #0]
 80050f8:	6128      	str	r0, [r5, #16]
 80050fa:	b930      	cbnz	r0, 800510a <_svfiprintf_r+0x32>
 80050fc:	230c      	movs	r3, #12
 80050fe:	603b      	str	r3, [r7, #0]
 8005100:	f04f 30ff 	mov.w	r0, #4294967295
 8005104:	b01d      	add	sp, #116	@ 0x74
 8005106:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800510a:	2340      	movs	r3, #64	@ 0x40
 800510c:	616b      	str	r3, [r5, #20]
 800510e:	2300      	movs	r3, #0
 8005110:	9309      	str	r3, [sp, #36]	@ 0x24
 8005112:	2320      	movs	r3, #32
 8005114:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8005118:	f8cd 800c 	str.w	r8, [sp, #12]
 800511c:	2330      	movs	r3, #48	@ 0x30
 800511e:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 80052bc <_svfiprintf_r+0x1e4>
 8005122:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8005126:	f04f 0901 	mov.w	r9, #1
 800512a:	4623      	mov	r3, r4
 800512c:	469a      	mov	sl, r3
 800512e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005132:	b10a      	cbz	r2, 8005138 <_svfiprintf_r+0x60>
 8005134:	2a25      	cmp	r2, #37	@ 0x25
 8005136:	d1f9      	bne.n	800512c <_svfiprintf_r+0x54>
 8005138:	ebba 0b04 	subs.w	fp, sl, r4
 800513c:	d00b      	beq.n	8005156 <_svfiprintf_r+0x7e>
 800513e:	465b      	mov	r3, fp
 8005140:	4622      	mov	r2, r4
 8005142:	4629      	mov	r1, r5
 8005144:	4638      	mov	r0, r7
 8005146:	f7ff ff6b 	bl	8005020 <__ssputs_r>
 800514a:	3001      	adds	r0, #1
 800514c:	f000 80a7 	beq.w	800529e <_svfiprintf_r+0x1c6>
 8005150:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005152:	445a      	add	r2, fp
 8005154:	9209      	str	r2, [sp, #36]	@ 0x24
 8005156:	f89a 3000 	ldrb.w	r3, [sl]
 800515a:	2b00      	cmp	r3, #0
 800515c:	f000 809f 	beq.w	800529e <_svfiprintf_r+0x1c6>
 8005160:	2300      	movs	r3, #0
 8005162:	f04f 32ff 	mov.w	r2, #4294967295
 8005166:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800516a:	f10a 0a01 	add.w	sl, sl, #1
 800516e:	9304      	str	r3, [sp, #16]
 8005170:	9307      	str	r3, [sp, #28]
 8005172:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8005176:	931a      	str	r3, [sp, #104]	@ 0x68
 8005178:	4654      	mov	r4, sl
 800517a:	2205      	movs	r2, #5
 800517c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005180:	484e      	ldr	r0, [pc, #312]	@ (80052bc <_svfiprintf_r+0x1e4>)
 8005182:	f7fb f82d 	bl	80001e0 <memchr>
 8005186:	9a04      	ldr	r2, [sp, #16]
 8005188:	b9d8      	cbnz	r0, 80051c2 <_svfiprintf_r+0xea>
 800518a:	06d0      	lsls	r0, r2, #27
 800518c:	bf44      	itt	mi
 800518e:	2320      	movmi	r3, #32
 8005190:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005194:	0711      	lsls	r1, r2, #28
 8005196:	bf44      	itt	mi
 8005198:	232b      	movmi	r3, #43	@ 0x2b
 800519a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800519e:	f89a 3000 	ldrb.w	r3, [sl]
 80051a2:	2b2a      	cmp	r3, #42	@ 0x2a
 80051a4:	d015      	beq.n	80051d2 <_svfiprintf_r+0xfa>
 80051a6:	9a07      	ldr	r2, [sp, #28]
 80051a8:	4654      	mov	r4, sl
 80051aa:	2000      	movs	r0, #0
 80051ac:	f04f 0c0a 	mov.w	ip, #10
 80051b0:	4621      	mov	r1, r4
 80051b2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80051b6:	3b30      	subs	r3, #48	@ 0x30
 80051b8:	2b09      	cmp	r3, #9
 80051ba:	d94b      	bls.n	8005254 <_svfiprintf_r+0x17c>
 80051bc:	b1b0      	cbz	r0, 80051ec <_svfiprintf_r+0x114>
 80051be:	9207      	str	r2, [sp, #28]
 80051c0:	e014      	b.n	80051ec <_svfiprintf_r+0x114>
 80051c2:	eba0 0308 	sub.w	r3, r0, r8
 80051c6:	fa09 f303 	lsl.w	r3, r9, r3
 80051ca:	4313      	orrs	r3, r2
 80051cc:	9304      	str	r3, [sp, #16]
 80051ce:	46a2      	mov	sl, r4
 80051d0:	e7d2      	b.n	8005178 <_svfiprintf_r+0xa0>
 80051d2:	9b03      	ldr	r3, [sp, #12]
 80051d4:	1d19      	adds	r1, r3, #4
 80051d6:	681b      	ldr	r3, [r3, #0]
 80051d8:	9103      	str	r1, [sp, #12]
 80051da:	2b00      	cmp	r3, #0
 80051dc:	bfbb      	ittet	lt
 80051de:	425b      	neglt	r3, r3
 80051e0:	f042 0202 	orrlt.w	r2, r2, #2
 80051e4:	9307      	strge	r3, [sp, #28]
 80051e6:	9307      	strlt	r3, [sp, #28]
 80051e8:	bfb8      	it	lt
 80051ea:	9204      	strlt	r2, [sp, #16]
 80051ec:	7823      	ldrb	r3, [r4, #0]
 80051ee:	2b2e      	cmp	r3, #46	@ 0x2e
 80051f0:	d10a      	bne.n	8005208 <_svfiprintf_r+0x130>
 80051f2:	7863      	ldrb	r3, [r4, #1]
 80051f4:	2b2a      	cmp	r3, #42	@ 0x2a
 80051f6:	d132      	bne.n	800525e <_svfiprintf_r+0x186>
 80051f8:	9b03      	ldr	r3, [sp, #12]
 80051fa:	1d1a      	adds	r2, r3, #4
 80051fc:	681b      	ldr	r3, [r3, #0]
 80051fe:	9203      	str	r2, [sp, #12]
 8005200:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8005204:	3402      	adds	r4, #2
 8005206:	9305      	str	r3, [sp, #20]
 8005208:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 80052cc <_svfiprintf_r+0x1f4>
 800520c:	7821      	ldrb	r1, [r4, #0]
 800520e:	2203      	movs	r2, #3
 8005210:	4650      	mov	r0, sl
 8005212:	f7fa ffe5 	bl	80001e0 <memchr>
 8005216:	b138      	cbz	r0, 8005228 <_svfiprintf_r+0x150>
 8005218:	9b04      	ldr	r3, [sp, #16]
 800521a:	eba0 000a 	sub.w	r0, r0, sl
 800521e:	2240      	movs	r2, #64	@ 0x40
 8005220:	4082      	lsls	r2, r0
 8005222:	4313      	orrs	r3, r2
 8005224:	3401      	adds	r4, #1
 8005226:	9304      	str	r3, [sp, #16]
 8005228:	f814 1b01 	ldrb.w	r1, [r4], #1
 800522c:	4824      	ldr	r0, [pc, #144]	@ (80052c0 <_svfiprintf_r+0x1e8>)
 800522e:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8005232:	2206      	movs	r2, #6
 8005234:	f7fa ffd4 	bl	80001e0 <memchr>
 8005238:	2800      	cmp	r0, #0
 800523a:	d036      	beq.n	80052aa <_svfiprintf_r+0x1d2>
 800523c:	4b21      	ldr	r3, [pc, #132]	@ (80052c4 <_svfiprintf_r+0x1ec>)
 800523e:	bb1b      	cbnz	r3, 8005288 <_svfiprintf_r+0x1b0>
 8005240:	9b03      	ldr	r3, [sp, #12]
 8005242:	3307      	adds	r3, #7
 8005244:	f023 0307 	bic.w	r3, r3, #7
 8005248:	3308      	adds	r3, #8
 800524a:	9303      	str	r3, [sp, #12]
 800524c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800524e:	4433      	add	r3, r6
 8005250:	9309      	str	r3, [sp, #36]	@ 0x24
 8005252:	e76a      	b.n	800512a <_svfiprintf_r+0x52>
 8005254:	fb0c 3202 	mla	r2, ip, r2, r3
 8005258:	460c      	mov	r4, r1
 800525a:	2001      	movs	r0, #1
 800525c:	e7a8      	b.n	80051b0 <_svfiprintf_r+0xd8>
 800525e:	2300      	movs	r3, #0
 8005260:	3401      	adds	r4, #1
 8005262:	9305      	str	r3, [sp, #20]
 8005264:	4619      	mov	r1, r3
 8005266:	f04f 0c0a 	mov.w	ip, #10
 800526a:	4620      	mov	r0, r4
 800526c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005270:	3a30      	subs	r2, #48	@ 0x30
 8005272:	2a09      	cmp	r2, #9
 8005274:	d903      	bls.n	800527e <_svfiprintf_r+0x1a6>
 8005276:	2b00      	cmp	r3, #0
 8005278:	d0c6      	beq.n	8005208 <_svfiprintf_r+0x130>
 800527a:	9105      	str	r1, [sp, #20]
 800527c:	e7c4      	b.n	8005208 <_svfiprintf_r+0x130>
 800527e:	fb0c 2101 	mla	r1, ip, r1, r2
 8005282:	4604      	mov	r4, r0
 8005284:	2301      	movs	r3, #1
 8005286:	e7f0      	b.n	800526a <_svfiprintf_r+0x192>
 8005288:	ab03      	add	r3, sp, #12
 800528a:	9300      	str	r3, [sp, #0]
 800528c:	462a      	mov	r2, r5
 800528e:	4b0e      	ldr	r3, [pc, #56]	@ (80052c8 <_svfiprintf_r+0x1f0>)
 8005290:	a904      	add	r1, sp, #16
 8005292:	4638      	mov	r0, r7
 8005294:	f3af 8000 	nop.w
 8005298:	1c42      	adds	r2, r0, #1
 800529a:	4606      	mov	r6, r0
 800529c:	d1d6      	bne.n	800524c <_svfiprintf_r+0x174>
 800529e:	89ab      	ldrh	r3, [r5, #12]
 80052a0:	065b      	lsls	r3, r3, #25
 80052a2:	f53f af2d 	bmi.w	8005100 <_svfiprintf_r+0x28>
 80052a6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80052a8:	e72c      	b.n	8005104 <_svfiprintf_r+0x2c>
 80052aa:	ab03      	add	r3, sp, #12
 80052ac:	9300      	str	r3, [sp, #0]
 80052ae:	462a      	mov	r2, r5
 80052b0:	4b05      	ldr	r3, [pc, #20]	@ (80052c8 <_svfiprintf_r+0x1f0>)
 80052b2:	a904      	add	r1, sp, #16
 80052b4:	4638      	mov	r0, r7
 80052b6:	f000 f879 	bl	80053ac <_printf_i>
 80052ba:	e7ed      	b.n	8005298 <_svfiprintf_r+0x1c0>
 80052bc:	0800577c 	.word	0x0800577c
 80052c0:	08005786 	.word	0x08005786
 80052c4:	00000000 	.word	0x00000000
 80052c8:	08005021 	.word	0x08005021
 80052cc:	08005782 	.word	0x08005782

080052d0 <_printf_common>:
 80052d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80052d4:	4616      	mov	r6, r2
 80052d6:	4698      	mov	r8, r3
 80052d8:	688a      	ldr	r2, [r1, #8]
 80052da:	690b      	ldr	r3, [r1, #16]
 80052dc:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80052e0:	4293      	cmp	r3, r2
 80052e2:	bfb8      	it	lt
 80052e4:	4613      	movlt	r3, r2
 80052e6:	6033      	str	r3, [r6, #0]
 80052e8:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80052ec:	4607      	mov	r7, r0
 80052ee:	460c      	mov	r4, r1
 80052f0:	b10a      	cbz	r2, 80052f6 <_printf_common+0x26>
 80052f2:	3301      	adds	r3, #1
 80052f4:	6033      	str	r3, [r6, #0]
 80052f6:	6823      	ldr	r3, [r4, #0]
 80052f8:	0699      	lsls	r1, r3, #26
 80052fa:	bf42      	ittt	mi
 80052fc:	6833      	ldrmi	r3, [r6, #0]
 80052fe:	3302      	addmi	r3, #2
 8005300:	6033      	strmi	r3, [r6, #0]
 8005302:	6825      	ldr	r5, [r4, #0]
 8005304:	f015 0506 	ands.w	r5, r5, #6
 8005308:	d106      	bne.n	8005318 <_printf_common+0x48>
 800530a:	f104 0a19 	add.w	sl, r4, #25
 800530e:	68e3      	ldr	r3, [r4, #12]
 8005310:	6832      	ldr	r2, [r6, #0]
 8005312:	1a9b      	subs	r3, r3, r2
 8005314:	42ab      	cmp	r3, r5
 8005316:	dc26      	bgt.n	8005366 <_printf_common+0x96>
 8005318:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800531c:	6822      	ldr	r2, [r4, #0]
 800531e:	3b00      	subs	r3, #0
 8005320:	bf18      	it	ne
 8005322:	2301      	movne	r3, #1
 8005324:	0692      	lsls	r2, r2, #26
 8005326:	d42b      	bmi.n	8005380 <_printf_common+0xb0>
 8005328:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800532c:	4641      	mov	r1, r8
 800532e:	4638      	mov	r0, r7
 8005330:	47c8      	blx	r9
 8005332:	3001      	adds	r0, #1
 8005334:	d01e      	beq.n	8005374 <_printf_common+0xa4>
 8005336:	6823      	ldr	r3, [r4, #0]
 8005338:	6922      	ldr	r2, [r4, #16]
 800533a:	f003 0306 	and.w	r3, r3, #6
 800533e:	2b04      	cmp	r3, #4
 8005340:	bf02      	ittt	eq
 8005342:	68e5      	ldreq	r5, [r4, #12]
 8005344:	6833      	ldreq	r3, [r6, #0]
 8005346:	1aed      	subeq	r5, r5, r3
 8005348:	68a3      	ldr	r3, [r4, #8]
 800534a:	bf0c      	ite	eq
 800534c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8005350:	2500      	movne	r5, #0
 8005352:	4293      	cmp	r3, r2
 8005354:	bfc4      	itt	gt
 8005356:	1a9b      	subgt	r3, r3, r2
 8005358:	18ed      	addgt	r5, r5, r3
 800535a:	2600      	movs	r6, #0
 800535c:	341a      	adds	r4, #26
 800535e:	42b5      	cmp	r5, r6
 8005360:	d11a      	bne.n	8005398 <_printf_common+0xc8>
 8005362:	2000      	movs	r0, #0
 8005364:	e008      	b.n	8005378 <_printf_common+0xa8>
 8005366:	2301      	movs	r3, #1
 8005368:	4652      	mov	r2, sl
 800536a:	4641      	mov	r1, r8
 800536c:	4638      	mov	r0, r7
 800536e:	47c8      	blx	r9
 8005370:	3001      	adds	r0, #1
 8005372:	d103      	bne.n	800537c <_printf_common+0xac>
 8005374:	f04f 30ff 	mov.w	r0, #4294967295
 8005378:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800537c:	3501      	adds	r5, #1
 800537e:	e7c6      	b.n	800530e <_printf_common+0x3e>
 8005380:	18e1      	adds	r1, r4, r3
 8005382:	1c5a      	adds	r2, r3, #1
 8005384:	2030      	movs	r0, #48	@ 0x30
 8005386:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800538a:	4422      	add	r2, r4
 800538c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8005390:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8005394:	3302      	adds	r3, #2
 8005396:	e7c7      	b.n	8005328 <_printf_common+0x58>
 8005398:	2301      	movs	r3, #1
 800539a:	4622      	mov	r2, r4
 800539c:	4641      	mov	r1, r8
 800539e:	4638      	mov	r0, r7
 80053a0:	47c8      	blx	r9
 80053a2:	3001      	adds	r0, #1
 80053a4:	d0e6      	beq.n	8005374 <_printf_common+0xa4>
 80053a6:	3601      	adds	r6, #1
 80053a8:	e7d9      	b.n	800535e <_printf_common+0x8e>
	...

080053ac <_printf_i>:
 80053ac:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80053b0:	7e0f      	ldrb	r7, [r1, #24]
 80053b2:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80053b4:	2f78      	cmp	r7, #120	@ 0x78
 80053b6:	4691      	mov	r9, r2
 80053b8:	4680      	mov	r8, r0
 80053ba:	460c      	mov	r4, r1
 80053bc:	469a      	mov	sl, r3
 80053be:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80053c2:	d807      	bhi.n	80053d4 <_printf_i+0x28>
 80053c4:	2f62      	cmp	r7, #98	@ 0x62
 80053c6:	d80a      	bhi.n	80053de <_printf_i+0x32>
 80053c8:	2f00      	cmp	r7, #0
 80053ca:	f000 80d2 	beq.w	8005572 <_printf_i+0x1c6>
 80053ce:	2f58      	cmp	r7, #88	@ 0x58
 80053d0:	f000 80b9 	beq.w	8005546 <_printf_i+0x19a>
 80053d4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80053d8:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80053dc:	e03a      	b.n	8005454 <_printf_i+0xa8>
 80053de:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80053e2:	2b15      	cmp	r3, #21
 80053e4:	d8f6      	bhi.n	80053d4 <_printf_i+0x28>
 80053e6:	a101      	add	r1, pc, #4	@ (adr r1, 80053ec <_printf_i+0x40>)
 80053e8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80053ec:	08005445 	.word	0x08005445
 80053f0:	08005459 	.word	0x08005459
 80053f4:	080053d5 	.word	0x080053d5
 80053f8:	080053d5 	.word	0x080053d5
 80053fc:	080053d5 	.word	0x080053d5
 8005400:	080053d5 	.word	0x080053d5
 8005404:	08005459 	.word	0x08005459
 8005408:	080053d5 	.word	0x080053d5
 800540c:	080053d5 	.word	0x080053d5
 8005410:	080053d5 	.word	0x080053d5
 8005414:	080053d5 	.word	0x080053d5
 8005418:	08005559 	.word	0x08005559
 800541c:	08005483 	.word	0x08005483
 8005420:	08005513 	.word	0x08005513
 8005424:	080053d5 	.word	0x080053d5
 8005428:	080053d5 	.word	0x080053d5
 800542c:	0800557b 	.word	0x0800557b
 8005430:	080053d5 	.word	0x080053d5
 8005434:	08005483 	.word	0x08005483
 8005438:	080053d5 	.word	0x080053d5
 800543c:	080053d5 	.word	0x080053d5
 8005440:	0800551b 	.word	0x0800551b
 8005444:	6833      	ldr	r3, [r6, #0]
 8005446:	1d1a      	adds	r2, r3, #4
 8005448:	681b      	ldr	r3, [r3, #0]
 800544a:	6032      	str	r2, [r6, #0]
 800544c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8005450:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8005454:	2301      	movs	r3, #1
 8005456:	e09d      	b.n	8005594 <_printf_i+0x1e8>
 8005458:	6833      	ldr	r3, [r6, #0]
 800545a:	6820      	ldr	r0, [r4, #0]
 800545c:	1d19      	adds	r1, r3, #4
 800545e:	6031      	str	r1, [r6, #0]
 8005460:	0606      	lsls	r6, r0, #24
 8005462:	d501      	bpl.n	8005468 <_printf_i+0xbc>
 8005464:	681d      	ldr	r5, [r3, #0]
 8005466:	e003      	b.n	8005470 <_printf_i+0xc4>
 8005468:	0645      	lsls	r5, r0, #25
 800546a:	d5fb      	bpl.n	8005464 <_printf_i+0xb8>
 800546c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8005470:	2d00      	cmp	r5, #0
 8005472:	da03      	bge.n	800547c <_printf_i+0xd0>
 8005474:	232d      	movs	r3, #45	@ 0x2d
 8005476:	426d      	negs	r5, r5
 8005478:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800547c:	4859      	ldr	r0, [pc, #356]	@ (80055e4 <_printf_i+0x238>)
 800547e:	230a      	movs	r3, #10
 8005480:	e011      	b.n	80054a6 <_printf_i+0xfa>
 8005482:	6821      	ldr	r1, [r4, #0]
 8005484:	6833      	ldr	r3, [r6, #0]
 8005486:	0608      	lsls	r0, r1, #24
 8005488:	f853 5b04 	ldr.w	r5, [r3], #4
 800548c:	d402      	bmi.n	8005494 <_printf_i+0xe8>
 800548e:	0649      	lsls	r1, r1, #25
 8005490:	bf48      	it	mi
 8005492:	b2ad      	uxthmi	r5, r5
 8005494:	2f6f      	cmp	r7, #111	@ 0x6f
 8005496:	4853      	ldr	r0, [pc, #332]	@ (80055e4 <_printf_i+0x238>)
 8005498:	6033      	str	r3, [r6, #0]
 800549a:	bf14      	ite	ne
 800549c:	230a      	movne	r3, #10
 800549e:	2308      	moveq	r3, #8
 80054a0:	2100      	movs	r1, #0
 80054a2:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80054a6:	6866      	ldr	r6, [r4, #4]
 80054a8:	60a6      	str	r6, [r4, #8]
 80054aa:	2e00      	cmp	r6, #0
 80054ac:	bfa2      	ittt	ge
 80054ae:	6821      	ldrge	r1, [r4, #0]
 80054b0:	f021 0104 	bicge.w	r1, r1, #4
 80054b4:	6021      	strge	r1, [r4, #0]
 80054b6:	b90d      	cbnz	r5, 80054bc <_printf_i+0x110>
 80054b8:	2e00      	cmp	r6, #0
 80054ba:	d04b      	beq.n	8005554 <_printf_i+0x1a8>
 80054bc:	4616      	mov	r6, r2
 80054be:	fbb5 f1f3 	udiv	r1, r5, r3
 80054c2:	fb03 5711 	mls	r7, r3, r1, r5
 80054c6:	5dc7      	ldrb	r7, [r0, r7]
 80054c8:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80054cc:	462f      	mov	r7, r5
 80054ce:	42bb      	cmp	r3, r7
 80054d0:	460d      	mov	r5, r1
 80054d2:	d9f4      	bls.n	80054be <_printf_i+0x112>
 80054d4:	2b08      	cmp	r3, #8
 80054d6:	d10b      	bne.n	80054f0 <_printf_i+0x144>
 80054d8:	6823      	ldr	r3, [r4, #0]
 80054da:	07df      	lsls	r7, r3, #31
 80054dc:	d508      	bpl.n	80054f0 <_printf_i+0x144>
 80054de:	6923      	ldr	r3, [r4, #16]
 80054e0:	6861      	ldr	r1, [r4, #4]
 80054e2:	4299      	cmp	r1, r3
 80054e4:	bfde      	ittt	le
 80054e6:	2330      	movle	r3, #48	@ 0x30
 80054e8:	f806 3c01 	strble.w	r3, [r6, #-1]
 80054ec:	f106 36ff 	addle.w	r6, r6, #4294967295
 80054f0:	1b92      	subs	r2, r2, r6
 80054f2:	6122      	str	r2, [r4, #16]
 80054f4:	f8cd a000 	str.w	sl, [sp]
 80054f8:	464b      	mov	r3, r9
 80054fa:	aa03      	add	r2, sp, #12
 80054fc:	4621      	mov	r1, r4
 80054fe:	4640      	mov	r0, r8
 8005500:	f7ff fee6 	bl	80052d0 <_printf_common>
 8005504:	3001      	adds	r0, #1
 8005506:	d14a      	bne.n	800559e <_printf_i+0x1f2>
 8005508:	f04f 30ff 	mov.w	r0, #4294967295
 800550c:	b004      	add	sp, #16
 800550e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005512:	6823      	ldr	r3, [r4, #0]
 8005514:	f043 0320 	orr.w	r3, r3, #32
 8005518:	6023      	str	r3, [r4, #0]
 800551a:	4833      	ldr	r0, [pc, #204]	@ (80055e8 <_printf_i+0x23c>)
 800551c:	2778      	movs	r7, #120	@ 0x78
 800551e:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8005522:	6823      	ldr	r3, [r4, #0]
 8005524:	6831      	ldr	r1, [r6, #0]
 8005526:	061f      	lsls	r7, r3, #24
 8005528:	f851 5b04 	ldr.w	r5, [r1], #4
 800552c:	d402      	bmi.n	8005534 <_printf_i+0x188>
 800552e:	065f      	lsls	r7, r3, #25
 8005530:	bf48      	it	mi
 8005532:	b2ad      	uxthmi	r5, r5
 8005534:	6031      	str	r1, [r6, #0]
 8005536:	07d9      	lsls	r1, r3, #31
 8005538:	bf44      	itt	mi
 800553a:	f043 0320 	orrmi.w	r3, r3, #32
 800553e:	6023      	strmi	r3, [r4, #0]
 8005540:	b11d      	cbz	r5, 800554a <_printf_i+0x19e>
 8005542:	2310      	movs	r3, #16
 8005544:	e7ac      	b.n	80054a0 <_printf_i+0xf4>
 8005546:	4827      	ldr	r0, [pc, #156]	@ (80055e4 <_printf_i+0x238>)
 8005548:	e7e9      	b.n	800551e <_printf_i+0x172>
 800554a:	6823      	ldr	r3, [r4, #0]
 800554c:	f023 0320 	bic.w	r3, r3, #32
 8005550:	6023      	str	r3, [r4, #0]
 8005552:	e7f6      	b.n	8005542 <_printf_i+0x196>
 8005554:	4616      	mov	r6, r2
 8005556:	e7bd      	b.n	80054d4 <_printf_i+0x128>
 8005558:	6833      	ldr	r3, [r6, #0]
 800555a:	6825      	ldr	r5, [r4, #0]
 800555c:	6961      	ldr	r1, [r4, #20]
 800555e:	1d18      	adds	r0, r3, #4
 8005560:	6030      	str	r0, [r6, #0]
 8005562:	062e      	lsls	r6, r5, #24
 8005564:	681b      	ldr	r3, [r3, #0]
 8005566:	d501      	bpl.n	800556c <_printf_i+0x1c0>
 8005568:	6019      	str	r1, [r3, #0]
 800556a:	e002      	b.n	8005572 <_printf_i+0x1c6>
 800556c:	0668      	lsls	r0, r5, #25
 800556e:	d5fb      	bpl.n	8005568 <_printf_i+0x1bc>
 8005570:	8019      	strh	r1, [r3, #0]
 8005572:	2300      	movs	r3, #0
 8005574:	6123      	str	r3, [r4, #16]
 8005576:	4616      	mov	r6, r2
 8005578:	e7bc      	b.n	80054f4 <_printf_i+0x148>
 800557a:	6833      	ldr	r3, [r6, #0]
 800557c:	1d1a      	adds	r2, r3, #4
 800557e:	6032      	str	r2, [r6, #0]
 8005580:	681e      	ldr	r6, [r3, #0]
 8005582:	6862      	ldr	r2, [r4, #4]
 8005584:	2100      	movs	r1, #0
 8005586:	4630      	mov	r0, r6
 8005588:	f7fa fe2a 	bl	80001e0 <memchr>
 800558c:	b108      	cbz	r0, 8005592 <_printf_i+0x1e6>
 800558e:	1b80      	subs	r0, r0, r6
 8005590:	6060      	str	r0, [r4, #4]
 8005592:	6863      	ldr	r3, [r4, #4]
 8005594:	6123      	str	r3, [r4, #16]
 8005596:	2300      	movs	r3, #0
 8005598:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800559c:	e7aa      	b.n	80054f4 <_printf_i+0x148>
 800559e:	6923      	ldr	r3, [r4, #16]
 80055a0:	4632      	mov	r2, r6
 80055a2:	4649      	mov	r1, r9
 80055a4:	4640      	mov	r0, r8
 80055a6:	47d0      	blx	sl
 80055a8:	3001      	adds	r0, #1
 80055aa:	d0ad      	beq.n	8005508 <_printf_i+0x15c>
 80055ac:	6823      	ldr	r3, [r4, #0]
 80055ae:	079b      	lsls	r3, r3, #30
 80055b0:	d413      	bmi.n	80055da <_printf_i+0x22e>
 80055b2:	68e0      	ldr	r0, [r4, #12]
 80055b4:	9b03      	ldr	r3, [sp, #12]
 80055b6:	4298      	cmp	r0, r3
 80055b8:	bfb8      	it	lt
 80055ba:	4618      	movlt	r0, r3
 80055bc:	e7a6      	b.n	800550c <_printf_i+0x160>
 80055be:	2301      	movs	r3, #1
 80055c0:	4632      	mov	r2, r6
 80055c2:	4649      	mov	r1, r9
 80055c4:	4640      	mov	r0, r8
 80055c6:	47d0      	blx	sl
 80055c8:	3001      	adds	r0, #1
 80055ca:	d09d      	beq.n	8005508 <_printf_i+0x15c>
 80055cc:	3501      	adds	r5, #1
 80055ce:	68e3      	ldr	r3, [r4, #12]
 80055d0:	9903      	ldr	r1, [sp, #12]
 80055d2:	1a5b      	subs	r3, r3, r1
 80055d4:	42ab      	cmp	r3, r5
 80055d6:	dcf2      	bgt.n	80055be <_printf_i+0x212>
 80055d8:	e7eb      	b.n	80055b2 <_printf_i+0x206>
 80055da:	2500      	movs	r5, #0
 80055dc:	f104 0619 	add.w	r6, r4, #25
 80055e0:	e7f5      	b.n	80055ce <_printf_i+0x222>
 80055e2:	bf00      	nop
 80055e4:	0800578d 	.word	0x0800578d
 80055e8:	0800579e 	.word	0x0800579e

080055ec <memmove>:
 80055ec:	4288      	cmp	r0, r1
 80055ee:	b510      	push	{r4, lr}
 80055f0:	eb01 0402 	add.w	r4, r1, r2
 80055f4:	d902      	bls.n	80055fc <memmove+0x10>
 80055f6:	4284      	cmp	r4, r0
 80055f8:	4623      	mov	r3, r4
 80055fa:	d807      	bhi.n	800560c <memmove+0x20>
 80055fc:	1e43      	subs	r3, r0, #1
 80055fe:	42a1      	cmp	r1, r4
 8005600:	d008      	beq.n	8005614 <memmove+0x28>
 8005602:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005606:	f803 2f01 	strb.w	r2, [r3, #1]!
 800560a:	e7f8      	b.n	80055fe <memmove+0x12>
 800560c:	4402      	add	r2, r0
 800560e:	4601      	mov	r1, r0
 8005610:	428a      	cmp	r2, r1
 8005612:	d100      	bne.n	8005616 <memmove+0x2a>
 8005614:	bd10      	pop	{r4, pc}
 8005616:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800561a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800561e:	e7f7      	b.n	8005610 <memmove+0x24>

08005620 <_sbrk_r>:
 8005620:	b538      	push	{r3, r4, r5, lr}
 8005622:	4d06      	ldr	r5, [pc, #24]	@ (800563c <_sbrk_r+0x1c>)
 8005624:	2300      	movs	r3, #0
 8005626:	4604      	mov	r4, r0
 8005628:	4608      	mov	r0, r1
 800562a:	602b      	str	r3, [r5, #0]
 800562c:	f7fc f8ba 	bl	80017a4 <_sbrk>
 8005630:	1c43      	adds	r3, r0, #1
 8005632:	d102      	bne.n	800563a <_sbrk_r+0x1a>
 8005634:	682b      	ldr	r3, [r5, #0]
 8005636:	b103      	cbz	r3, 800563a <_sbrk_r+0x1a>
 8005638:	6023      	str	r3, [r4, #0]
 800563a:	bd38      	pop	{r3, r4, r5, pc}
 800563c:	200003a0 	.word	0x200003a0

08005640 <memcpy>:
 8005640:	440a      	add	r2, r1
 8005642:	4291      	cmp	r1, r2
 8005644:	f100 33ff 	add.w	r3, r0, #4294967295
 8005648:	d100      	bne.n	800564c <memcpy+0xc>
 800564a:	4770      	bx	lr
 800564c:	b510      	push	{r4, lr}
 800564e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005652:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005656:	4291      	cmp	r1, r2
 8005658:	d1f9      	bne.n	800564e <memcpy+0xe>
 800565a:	bd10      	pop	{r4, pc}

0800565c <_realloc_r>:
 800565c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005660:	4680      	mov	r8, r0
 8005662:	4615      	mov	r5, r2
 8005664:	460c      	mov	r4, r1
 8005666:	b921      	cbnz	r1, 8005672 <_realloc_r+0x16>
 8005668:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800566c:	4611      	mov	r1, r2
 800566e:	f7ff bc4b 	b.w	8004f08 <_malloc_r>
 8005672:	b92a      	cbnz	r2, 8005680 <_realloc_r+0x24>
 8005674:	f7ff fbdc 	bl	8004e30 <_free_r>
 8005678:	2400      	movs	r4, #0
 800567a:	4620      	mov	r0, r4
 800567c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005680:	f000 f81a 	bl	80056b8 <_malloc_usable_size_r>
 8005684:	4285      	cmp	r5, r0
 8005686:	4606      	mov	r6, r0
 8005688:	d802      	bhi.n	8005690 <_realloc_r+0x34>
 800568a:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 800568e:	d8f4      	bhi.n	800567a <_realloc_r+0x1e>
 8005690:	4629      	mov	r1, r5
 8005692:	4640      	mov	r0, r8
 8005694:	f7ff fc38 	bl	8004f08 <_malloc_r>
 8005698:	4607      	mov	r7, r0
 800569a:	2800      	cmp	r0, #0
 800569c:	d0ec      	beq.n	8005678 <_realloc_r+0x1c>
 800569e:	42b5      	cmp	r5, r6
 80056a0:	462a      	mov	r2, r5
 80056a2:	4621      	mov	r1, r4
 80056a4:	bf28      	it	cs
 80056a6:	4632      	movcs	r2, r6
 80056a8:	f7ff ffca 	bl	8005640 <memcpy>
 80056ac:	4621      	mov	r1, r4
 80056ae:	4640      	mov	r0, r8
 80056b0:	f7ff fbbe 	bl	8004e30 <_free_r>
 80056b4:	463c      	mov	r4, r7
 80056b6:	e7e0      	b.n	800567a <_realloc_r+0x1e>

080056b8 <_malloc_usable_size_r>:
 80056b8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80056bc:	1f18      	subs	r0, r3, #4
 80056be:	2b00      	cmp	r3, #0
 80056c0:	bfbc      	itt	lt
 80056c2:	580b      	ldrlt	r3, [r1, r0]
 80056c4:	18c0      	addlt	r0, r0, r3
 80056c6:	4770      	bx	lr

080056c8 <_init>:
 80056c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80056ca:	bf00      	nop
 80056cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80056ce:	bc08      	pop	{r3}
 80056d0:	469e      	mov	lr, r3
 80056d2:	4770      	bx	lr

080056d4 <_fini>:
 80056d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80056d6:	bf00      	nop
 80056d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80056da:	bc08      	pop	{r3}
 80056dc:	469e      	mov	lr, r3
 80056de:	4770      	bx	lr
