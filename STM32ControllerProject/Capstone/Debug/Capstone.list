
Capstone.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003f7c  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000026c  0800411c  0800411c  0000511c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004388  08004388  0000605c  2**0
                  CONTENTS
  4 .ARM          00000008  08004388  08004388  00005388  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004390  08004390  0000605c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004390  08004390  00005390  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004394  08004394  00005394  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08004398  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000344  2000005c  080043f4  0000605c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200003a0  080043f4  000063a0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000605c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000bc89  00000000  00000000  0000608c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001f43  00000000  00000000  00011d15  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000a88  00000000  00000000  00013c58  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000829  00000000  00000000  000146e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002bb4  00000000  00000000  00014f09  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000fba6  00000000  00000000  00017abd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008898c  00000000  00000000  00027663  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000affef  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002fbc  00000000  00000000  000b0034  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000064  00000000  00000000  000b2ff0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000005c 	.word	0x2000005c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08004104 	.word	0x08004104

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000060 	.word	0x20000060
 80001dc:	08004104 	.word	0x08004104

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_uldivmod>:
 8000280:	b953      	cbnz	r3, 8000298 <__aeabi_uldivmod+0x18>
 8000282:	b94a      	cbnz	r2, 8000298 <__aeabi_uldivmod+0x18>
 8000284:	2900      	cmp	r1, #0
 8000286:	bf08      	it	eq
 8000288:	2800      	cmpeq	r0, #0
 800028a:	bf1c      	itt	ne
 800028c:	f04f 31ff 	movne.w	r1, #4294967295
 8000290:	f04f 30ff 	movne.w	r0, #4294967295
 8000294:	f000 b96a 	b.w	800056c <__aeabi_idiv0>
 8000298:	f1ad 0c08 	sub.w	ip, sp, #8
 800029c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002a0:	f000 f806 	bl	80002b0 <__udivmoddi4>
 80002a4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002a8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ac:	b004      	add	sp, #16
 80002ae:	4770      	bx	lr

080002b0 <__udivmoddi4>:
 80002b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002b4:	9d08      	ldr	r5, [sp, #32]
 80002b6:	460c      	mov	r4, r1
 80002b8:	2b00      	cmp	r3, #0
 80002ba:	d14e      	bne.n	800035a <__udivmoddi4+0xaa>
 80002bc:	4694      	mov	ip, r2
 80002be:	458c      	cmp	ip, r1
 80002c0:	4686      	mov	lr, r0
 80002c2:	fab2 f282 	clz	r2, r2
 80002c6:	d962      	bls.n	800038e <__udivmoddi4+0xde>
 80002c8:	b14a      	cbz	r2, 80002de <__udivmoddi4+0x2e>
 80002ca:	f1c2 0320 	rsb	r3, r2, #32
 80002ce:	4091      	lsls	r1, r2
 80002d0:	fa20 f303 	lsr.w	r3, r0, r3
 80002d4:	fa0c fc02 	lsl.w	ip, ip, r2
 80002d8:	4319      	orrs	r1, r3
 80002da:	fa00 fe02 	lsl.w	lr, r0, r2
 80002de:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80002e2:	fa1f f68c 	uxth.w	r6, ip
 80002e6:	fbb1 f4f7 	udiv	r4, r1, r7
 80002ea:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80002ee:	fb07 1114 	mls	r1, r7, r4, r1
 80002f2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80002f6:	fb04 f106 	mul.w	r1, r4, r6
 80002fa:	4299      	cmp	r1, r3
 80002fc:	d90a      	bls.n	8000314 <__udivmoddi4+0x64>
 80002fe:	eb1c 0303 	adds.w	r3, ip, r3
 8000302:	f104 30ff 	add.w	r0, r4, #4294967295
 8000306:	f080 8112 	bcs.w	800052e <__udivmoddi4+0x27e>
 800030a:	4299      	cmp	r1, r3
 800030c:	f240 810f 	bls.w	800052e <__udivmoddi4+0x27e>
 8000310:	3c02      	subs	r4, #2
 8000312:	4463      	add	r3, ip
 8000314:	1a59      	subs	r1, r3, r1
 8000316:	fa1f f38e 	uxth.w	r3, lr
 800031a:	fbb1 f0f7 	udiv	r0, r1, r7
 800031e:	fb07 1110 	mls	r1, r7, r0, r1
 8000322:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000326:	fb00 f606 	mul.w	r6, r0, r6
 800032a:	429e      	cmp	r6, r3
 800032c:	d90a      	bls.n	8000344 <__udivmoddi4+0x94>
 800032e:	eb1c 0303 	adds.w	r3, ip, r3
 8000332:	f100 31ff 	add.w	r1, r0, #4294967295
 8000336:	f080 80fc 	bcs.w	8000532 <__udivmoddi4+0x282>
 800033a:	429e      	cmp	r6, r3
 800033c:	f240 80f9 	bls.w	8000532 <__udivmoddi4+0x282>
 8000340:	4463      	add	r3, ip
 8000342:	3802      	subs	r0, #2
 8000344:	1b9b      	subs	r3, r3, r6
 8000346:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800034a:	2100      	movs	r1, #0
 800034c:	b11d      	cbz	r5, 8000356 <__udivmoddi4+0xa6>
 800034e:	40d3      	lsrs	r3, r2
 8000350:	2200      	movs	r2, #0
 8000352:	e9c5 3200 	strd	r3, r2, [r5]
 8000356:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800035a:	428b      	cmp	r3, r1
 800035c:	d905      	bls.n	800036a <__udivmoddi4+0xba>
 800035e:	b10d      	cbz	r5, 8000364 <__udivmoddi4+0xb4>
 8000360:	e9c5 0100 	strd	r0, r1, [r5]
 8000364:	2100      	movs	r1, #0
 8000366:	4608      	mov	r0, r1
 8000368:	e7f5      	b.n	8000356 <__udivmoddi4+0xa6>
 800036a:	fab3 f183 	clz	r1, r3
 800036e:	2900      	cmp	r1, #0
 8000370:	d146      	bne.n	8000400 <__udivmoddi4+0x150>
 8000372:	42a3      	cmp	r3, r4
 8000374:	d302      	bcc.n	800037c <__udivmoddi4+0xcc>
 8000376:	4290      	cmp	r0, r2
 8000378:	f0c0 80f0 	bcc.w	800055c <__udivmoddi4+0x2ac>
 800037c:	1a86      	subs	r6, r0, r2
 800037e:	eb64 0303 	sbc.w	r3, r4, r3
 8000382:	2001      	movs	r0, #1
 8000384:	2d00      	cmp	r5, #0
 8000386:	d0e6      	beq.n	8000356 <__udivmoddi4+0xa6>
 8000388:	e9c5 6300 	strd	r6, r3, [r5]
 800038c:	e7e3      	b.n	8000356 <__udivmoddi4+0xa6>
 800038e:	2a00      	cmp	r2, #0
 8000390:	f040 8090 	bne.w	80004b4 <__udivmoddi4+0x204>
 8000394:	eba1 040c 	sub.w	r4, r1, ip
 8000398:	ea4f 481c 	mov.w	r8, ip, lsr #16
 800039c:	fa1f f78c 	uxth.w	r7, ip
 80003a0:	2101      	movs	r1, #1
 80003a2:	fbb4 f6f8 	udiv	r6, r4, r8
 80003a6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003aa:	fb08 4416 	mls	r4, r8, r6, r4
 80003ae:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003b2:	fb07 f006 	mul.w	r0, r7, r6
 80003b6:	4298      	cmp	r0, r3
 80003b8:	d908      	bls.n	80003cc <__udivmoddi4+0x11c>
 80003ba:	eb1c 0303 	adds.w	r3, ip, r3
 80003be:	f106 34ff 	add.w	r4, r6, #4294967295
 80003c2:	d202      	bcs.n	80003ca <__udivmoddi4+0x11a>
 80003c4:	4298      	cmp	r0, r3
 80003c6:	f200 80cd 	bhi.w	8000564 <__udivmoddi4+0x2b4>
 80003ca:	4626      	mov	r6, r4
 80003cc:	1a1c      	subs	r4, r3, r0
 80003ce:	fa1f f38e 	uxth.w	r3, lr
 80003d2:	fbb4 f0f8 	udiv	r0, r4, r8
 80003d6:	fb08 4410 	mls	r4, r8, r0, r4
 80003da:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003de:	fb00 f707 	mul.w	r7, r0, r7
 80003e2:	429f      	cmp	r7, r3
 80003e4:	d908      	bls.n	80003f8 <__udivmoddi4+0x148>
 80003e6:	eb1c 0303 	adds.w	r3, ip, r3
 80003ea:	f100 34ff 	add.w	r4, r0, #4294967295
 80003ee:	d202      	bcs.n	80003f6 <__udivmoddi4+0x146>
 80003f0:	429f      	cmp	r7, r3
 80003f2:	f200 80b0 	bhi.w	8000556 <__udivmoddi4+0x2a6>
 80003f6:	4620      	mov	r0, r4
 80003f8:	1bdb      	subs	r3, r3, r7
 80003fa:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 80003fe:	e7a5      	b.n	800034c <__udivmoddi4+0x9c>
 8000400:	f1c1 0620 	rsb	r6, r1, #32
 8000404:	408b      	lsls	r3, r1
 8000406:	fa22 f706 	lsr.w	r7, r2, r6
 800040a:	431f      	orrs	r7, r3
 800040c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000410:	fa04 f301 	lsl.w	r3, r4, r1
 8000414:	ea43 030c 	orr.w	r3, r3, ip
 8000418:	40f4      	lsrs	r4, r6
 800041a:	fa00 f801 	lsl.w	r8, r0, r1
 800041e:	0c38      	lsrs	r0, r7, #16
 8000420:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000424:	fbb4 fef0 	udiv	lr, r4, r0
 8000428:	fa1f fc87 	uxth.w	ip, r7
 800042c:	fb00 441e 	mls	r4, r0, lr, r4
 8000430:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000434:	fb0e f90c 	mul.w	r9, lr, ip
 8000438:	45a1      	cmp	r9, r4
 800043a:	fa02 f201 	lsl.w	r2, r2, r1
 800043e:	d90a      	bls.n	8000456 <__udivmoddi4+0x1a6>
 8000440:	193c      	adds	r4, r7, r4
 8000442:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000446:	f080 8084 	bcs.w	8000552 <__udivmoddi4+0x2a2>
 800044a:	45a1      	cmp	r9, r4
 800044c:	f240 8081 	bls.w	8000552 <__udivmoddi4+0x2a2>
 8000450:	f1ae 0e02 	sub.w	lr, lr, #2
 8000454:	443c      	add	r4, r7
 8000456:	eba4 0409 	sub.w	r4, r4, r9
 800045a:	fa1f f983 	uxth.w	r9, r3
 800045e:	fbb4 f3f0 	udiv	r3, r4, r0
 8000462:	fb00 4413 	mls	r4, r0, r3, r4
 8000466:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800046a:	fb03 fc0c 	mul.w	ip, r3, ip
 800046e:	45a4      	cmp	ip, r4
 8000470:	d907      	bls.n	8000482 <__udivmoddi4+0x1d2>
 8000472:	193c      	adds	r4, r7, r4
 8000474:	f103 30ff 	add.w	r0, r3, #4294967295
 8000478:	d267      	bcs.n	800054a <__udivmoddi4+0x29a>
 800047a:	45a4      	cmp	ip, r4
 800047c:	d965      	bls.n	800054a <__udivmoddi4+0x29a>
 800047e:	3b02      	subs	r3, #2
 8000480:	443c      	add	r4, r7
 8000482:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000486:	fba0 9302 	umull	r9, r3, r0, r2
 800048a:	eba4 040c 	sub.w	r4, r4, ip
 800048e:	429c      	cmp	r4, r3
 8000490:	46ce      	mov	lr, r9
 8000492:	469c      	mov	ip, r3
 8000494:	d351      	bcc.n	800053a <__udivmoddi4+0x28a>
 8000496:	d04e      	beq.n	8000536 <__udivmoddi4+0x286>
 8000498:	b155      	cbz	r5, 80004b0 <__udivmoddi4+0x200>
 800049a:	ebb8 030e 	subs.w	r3, r8, lr
 800049e:	eb64 040c 	sbc.w	r4, r4, ip
 80004a2:	fa04 f606 	lsl.w	r6, r4, r6
 80004a6:	40cb      	lsrs	r3, r1
 80004a8:	431e      	orrs	r6, r3
 80004aa:	40cc      	lsrs	r4, r1
 80004ac:	e9c5 6400 	strd	r6, r4, [r5]
 80004b0:	2100      	movs	r1, #0
 80004b2:	e750      	b.n	8000356 <__udivmoddi4+0xa6>
 80004b4:	f1c2 0320 	rsb	r3, r2, #32
 80004b8:	fa20 f103 	lsr.w	r1, r0, r3
 80004bc:	fa0c fc02 	lsl.w	ip, ip, r2
 80004c0:	fa24 f303 	lsr.w	r3, r4, r3
 80004c4:	4094      	lsls	r4, r2
 80004c6:	430c      	orrs	r4, r1
 80004c8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80004cc:	fa00 fe02 	lsl.w	lr, r0, r2
 80004d0:	fa1f f78c 	uxth.w	r7, ip
 80004d4:	fbb3 f0f8 	udiv	r0, r3, r8
 80004d8:	fb08 3110 	mls	r1, r8, r0, r3
 80004dc:	0c23      	lsrs	r3, r4, #16
 80004de:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80004e2:	fb00 f107 	mul.w	r1, r0, r7
 80004e6:	4299      	cmp	r1, r3
 80004e8:	d908      	bls.n	80004fc <__udivmoddi4+0x24c>
 80004ea:	eb1c 0303 	adds.w	r3, ip, r3
 80004ee:	f100 36ff 	add.w	r6, r0, #4294967295
 80004f2:	d22c      	bcs.n	800054e <__udivmoddi4+0x29e>
 80004f4:	4299      	cmp	r1, r3
 80004f6:	d92a      	bls.n	800054e <__udivmoddi4+0x29e>
 80004f8:	3802      	subs	r0, #2
 80004fa:	4463      	add	r3, ip
 80004fc:	1a5b      	subs	r3, r3, r1
 80004fe:	b2a4      	uxth	r4, r4
 8000500:	fbb3 f1f8 	udiv	r1, r3, r8
 8000504:	fb08 3311 	mls	r3, r8, r1, r3
 8000508:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800050c:	fb01 f307 	mul.w	r3, r1, r7
 8000510:	42a3      	cmp	r3, r4
 8000512:	d908      	bls.n	8000526 <__udivmoddi4+0x276>
 8000514:	eb1c 0404 	adds.w	r4, ip, r4
 8000518:	f101 36ff 	add.w	r6, r1, #4294967295
 800051c:	d213      	bcs.n	8000546 <__udivmoddi4+0x296>
 800051e:	42a3      	cmp	r3, r4
 8000520:	d911      	bls.n	8000546 <__udivmoddi4+0x296>
 8000522:	3902      	subs	r1, #2
 8000524:	4464      	add	r4, ip
 8000526:	1ae4      	subs	r4, r4, r3
 8000528:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800052c:	e739      	b.n	80003a2 <__udivmoddi4+0xf2>
 800052e:	4604      	mov	r4, r0
 8000530:	e6f0      	b.n	8000314 <__udivmoddi4+0x64>
 8000532:	4608      	mov	r0, r1
 8000534:	e706      	b.n	8000344 <__udivmoddi4+0x94>
 8000536:	45c8      	cmp	r8, r9
 8000538:	d2ae      	bcs.n	8000498 <__udivmoddi4+0x1e8>
 800053a:	ebb9 0e02 	subs.w	lr, r9, r2
 800053e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000542:	3801      	subs	r0, #1
 8000544:	e7a8      	b.n	8000498 <__udivmoddi4+0x1e8>
 8000546:	4631      	mov	r1, r6
 8000548:	e7ed      	b.n	8000526 <__udivmoddi4+0x276>
 800054a:	4603      	mov	r3, r0
 800054c:	e799      	b.n	8000482 <__udivmoddi4+0x1d2>
 800054e:	4630      	mov	r0, r6
 8000550:	e7d4      	b.n	80004fc <__udivmoddi4+0x24c>
 8000552:	46d6      	mov	lr, sl
 8000554:	e77f      	b.n	8000456 <__udivmoddi4+0x1a6>
 8000556:	4463      	add	r3, ip
 8000558:	3802      	subs	r0, #2
 800055a:	e74d      	b.n	80003f8 <__udivmoddi4+0x148>
 800055c:	4606      	mov	r6, r0
 800055e:	4623      	mov	r3, r4
 8000560:	4608      	mov	r0, r1
 8000562:	e70f      	b.n	8000384 <__udivmoddi4+0xd4>
 8000564:	3e02      	subs	r6, #2
 8000566:	4463      	add	r3, ip
 8000568:	e730      	b.n	80003cc <__udivmoddi4+0x11c>
 800056a:	bf00      	nop

0800056c <__aeabi_idiv0>:
 800056c:	4770      	bx	lr
 800056e:	bf00      	nop

08000570 <MX_GPIO_Init>:
/* USER CODE END 1 */

/** Pinout Configuration
*/
void MX_GPIO_Init(void)
{
 8000570:	b480      	push	{r7}
 8000572:	b085      	sub	sp, #20
 8000574:	af00      	add	r7, sp, #0

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000576:	2300      	movs	r3, #0
 8000578:	60fb      	str	r3, [r7, #12]
 800057a:	4b17      	ldr	r3, [pc, #92]	@ (80005d8 <MX_GPIO_Init+0x68>)
 800057c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800057e:	4a16      	ldr	r2, [pc, #88]	@ (80005d8 <MX_GPIO_Init+0x68>)
 8000580:	f043 0301 	orr.w	r3, r3, #1
 8000584:	6313      	str	r3, [r2, #48]	@ 0x30
 8000586:	4b14      	ldr	r3, [pc, #80]	@ (80005d8 <MX_GPIO_Init+0x68>)
 8000588:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800058a:	f003 0301 	and.w	r3, r3, #1
 800058e:	60fb      	str	r3, [r7, #12]
 8000590:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000592:	2300      	movs	r3, #0
 8000594:	60bb      	str	r3, [r7, #8]
 8000596:	4b10      	ldr	r3, [pc, #64]	@ (80005d8 <MX_GPIO_Init+0x68>)
 8000598:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800059a:	4a0f      	ldr	r2, [pc, #60]	@ (80005d8 <MX_GPIO_Init+0x68>)
 800059c:	f043 0302 	orr.w	r3, r3, #2
 80005a0:	6313      	str	r3, [r2, #48]	@ 0x30
 80005a2:	4b0d      	ldr	r3, [pc, #52]	@ (80005d8 <MX_GPIO_Init+0x68>)
 80005a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005a6:	f003 0302 	and.w	r3, r3, #2
 80005aa:	60bb      	str	r3, [r7, #8]
 80005ac:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80005ae:	2300      	movs	r3, #0
 80005b0:	607b      	str	r3, [r7, #4]
 80005b2:	4b09      	ldr	r3, [pc, #36]	@ (80005d8 <MX_GPIO_Init+0x68>)
 80005b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005b6:	4a08      	ldr	r2, [pc, #32]	@ (80005d8 <MX_GPIO_Init+0x68>)
 80005b8:	f043 0304 	orr.w	r3, r3, #4
 80005bc:	6313      	str	r3, [r2, #48]	@ 0x30
 80005be:	4b06      	ldr	r3, [pc, #24]	@ (80005d8 <MX_GPIO_Init+0x68>)
 80005c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005c2:	f003 0304 	and.w	r3, r3, #4
 80005c6:	607b      	str	r3, [r7, #4]
 80005c8:	687b      	ldr	r3, [r7, #4]

}
 80005ca:	bf00      	nop
 80005cc:	3714      	adds	r7, #20
 80005ce:	46bd      	mov	sp, r7
 80005d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005d4:	4770      	bx	lr
 80005d6:	bf00      	nop
 80005d8:	40023800 	.word	0x40023800

080005dc <MX_I2C1_Init>:
I2C_HandleTypeDef hi2c2;
I2C_HandleTypeDef hi2c3;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 80005dc:	b580      	push	{r7, lr}
 80005de:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 80005e0:	4b12      	ldr	r3, [pc, #72]	@ (800062c <MX_I2C1_Init+0x50>)
 80005e2:	4a13      	ldr	r2, [pc, #76]	@ (8000630 <MX_I2C1_Init+0x54>)
 80005e4:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 80005e6:	4b11      	ldr	r3, [pc, #68]	@ (800062c <MX_I2C1_Init+0x50>)
 80005e8:	4a12      	ldr	r2, [pc, #72]	@ (8000634 <MX_I2C1_Init+0x58>)
 80005ea:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 80005ec:	4b0f      	ldr	r3, [pc, #60]	@ (800062c <MX_I2C1_Init+0x50>)
 80005ee:	2200      	movs	r2, #0
 80005f0:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 80005f2:	4b0e      	ldr	r3, [pc, #56]	@ (800062c <MX_I2C1_Init+0x50>)
 80005f4:	2200      	movs	r2, #0
 80005f6:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80005f8:	4b0c      	ldr	r3, [pc, #48]	@ (800062c <MX_I2C1_Init+0x50>)
 80005fa:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80005fe:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000600:	4b0a      	ldr	r3, [pc, #40]	@ (800062c <MX_I2C1_Init+0x50>)
 8000602:	2200      	movs	r2, #0
 8000604:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8000606:	4b09      	ldr	r3, [pc, #36]	@ (800062c <MX_I2C1_Init+0x50>)
 8000608:	2200      	movs	r2, #0
 800060a:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800060c:	4b07      	ldr	r3, [pc, #28]	@ (800062c <MX_I2C1_Init+0x50>)
 800060e:	2200      	movs	r2, #0
 8000610:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000612:	4b06      	ldr	r3, [pc, #24]	@ (800062c <MX_I2C1_Init+0x50>)
 8000614:	2200      	movs	r2, #0
 8000616:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8000618:	4804      	ldr	r0, [pc, #16]	@ (800062c <MX_I2C1_Init+0x50>)
 800061a:	f001 fae1 	bl	8001be0 <HAL_I2C_Init>
 800061e:	4603      	mov	r3, r0
 8000620:	2b00      	cmp	r3, #0
 8000622:	d001      	beq.n	8000628 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8000624:	f000 fb28 	bl	8000c78 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8000628:	bf00      	nop
 800062a:	bd80      	pop	{r7, pc}
 800062c:	20000078 	.word	0x20000078
 8000630:	40005400 	.word	0x40005400
 8000634:	000186a0 	.word	0x000186a0

08000638 <MX_I2C2_Init>:
/* I2C2 init function */
void MX_I2C2_Init(void)
{
 8000638:	b580      	push	{r7, lr}
 800063a:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 800063c:	4b12      	ldr	r3, [pc, #72]	@ (8000688 <MX_I2C2_Init+0x50>)
 800063e:	4a13      	ldr	r2, [pc, #76]	@ (800068c <MX_I2C2_Init+0x54>)
 8000640:	601a      	str	r2, [r3, #0]
  hi2c2.Init.ClockSpeed = 100000;
 8000642:	4b11      	ldr	r3, [pc, #68]	@ (8000688 <MX_I2C2_Init+0x50>)
 8000644:	4a12      	ldr	r2, [pc, #72]	@ (8000690 <MX_I2C2_Init+0x58>)
 8000646:	605a      	str	r2, [r3, #4]
  hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000648:	4b0f      	ldr	r3, [pc, #60]	@ (8000688 <MX_I2C2_Init+0x50>)
 800064a:	2200      	movs	r2, #0
 800064c:	609a      	str	r2, [r3, #8]
  hi2c2.Init.OwnAddress1 = 0;
 800064e:	4b0e      	ldr	r3, [pc, #56]	@ (8000688 <MX_I2C2_Init+0x50>)
 8000650:	2200      	movs	r2, #0
 8000652:	60da      	str	r2, [r3, #12]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000654:	4b0c      	ldr	r3, [pc, #48]	@ (8000688 <MX_I2C2_Init+0x50>)
 8000656:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 800065a:	611a      	str	r2, [r3, #16]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800065c:	4b0a      	ldr	r3, [pc, #40]	@ (8000688 <MX_I2C2_Init+0x50>)
 800065e:	2200      	movs	r2, #0
 8000660:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2 = 0;
 8000662:	4b09      	ldr	r3, [pc, #36]	@ (8000688 <MX_I2C2_Init+0x50>)
 8000664:	2200      	movs	r2, #0
 8000666:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000668:	4b07      	ldr	r3, [pc, #28]	@ (8000688 <MX_I2C2_Init+0x50>)
 800066a:	2200      	movs	r2, #0
 800066c:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800066e:	4b06      	ldr	r3, [pc, #24]	@ (8000688 <MX_I2C2_Init+0x50>)
 8000670:	2200      	movs	r2, #0
 8000672:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8000674:	4804      	ldr	r0, [pc, #16]	@ (8000688 <MX_I2C2_Init+0x50>)
 8000676:	f001 fab3 	bl	8001be0 <HAL_I2C_Init>
 800067a:	4603      	mov	r3, r0
 800067c:	2b00      	cmp	r3, #0
 800067e:	d001      	beq.n	8000684 <MX_I2C2_Init+0x4c>
  {
    Error_Handler();
 8000680:	f000 fafa 	bl	8000c78 <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 8000684:	bf00      	nop
 8000686:	bd80      	pop	{r7, pc}
 8000688:	200000cc 	.word	0x200000cc
 800068c:	40005800 	.word	0x40005800
 8000690:	000186a0 	.word	0x000186a0

08000694 <MX_I2C3_Init>:
/* I2C3 init function */
void MX_I2C3_Init(void)
{
 8000694:	b580      	push	{r7, lr}
 8000696:	af00      	add	r7, sp, #0
  /* USER CODE END I2C3_Init 0 */

  /* USER CODE BEGIN I2C3_Init 1 */

  /* USER CODE END I2C3_Init 1 */
  hi2c3.Instance = I2C3;
 8000698:	4b12      	ldr	r3, [pc, #72]	@ (80006e4 <MX_I2C3_Init+0x50>)
 800069a:	4a13      	ldr	r2, [pc, #76]	@ (80006e8 <MX_I2C3_Init+0x54>)
 800069c:	601a      	str	r2, [r3, #0]
  hi2c3.Init.ClockSpeed = 100000;
 800069e:	4b11      	ldr	r3, [pc, #68]	@ (80006e4 <MX_I2C3_Init+0x50>)
 80006a0:	4a12      	ldr	r2, [pc, #72]	@ (80006ec <MX_I2C3_Init+0x58>)
 80006a2:	605a      	str	r2, [r3, #4]
  hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 80006a4:	4b0f      	ldr	r3, [pc, #60]	@ (80006e4 <MX_I2C3_Init+0x50>)
 80006a6:	2200      	movs	r2, #0
 80006a8:	609a      	str	r2, [r3, #8]
  hi2c3.Init.OwnAddress1 = 0;
 80006aa:	4b0e      	ldr	r3, [pc, #56]	@ (80006e4 <MX_I2C3_Init+0x50>)
 80006ac:	2200      	movs	r2, #0
 80006ae:	60da      	str	r2, [r3, #12]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80006b0:	4b0c      	ldr	r3, [pc, #48]	@ (80006e4 <MX_I2C3_Init+0x50>)
 80006b2:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80006b6:	611a      	str	r2, [r3, #16]
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80006b8:	4b0a      	ldr	r3, [pc, #40]	@ (80006e4 <MX_I2C3_Init+0x50>)
 80006ba:	2200      	movs	r2, #0
 80006bc:	615a      	str	r2, [r3, #20]
  hi2c3.Init.OwnAddress2 = 0;
 80006be:	4b09      	ldr	r3, [pc, #36]	@ (80006e4 <MX_I2C3_Init+0x50>)
 80006c0:	2200      	movs	r2, #0
 80006c2:	619a      	str	r2, [r3, #24]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80006c4:	4b07      	ldr	r3, [pc, #28]	@ (80006e4 <MX_I2C3_Init+0x50>)
 80006c6:	2200      	movs	r2, #0
 80006c8:	61da      	str	r2, [r3, #28]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80006ca:	4b06      	ldr	r3, [pc, #24]	@ (80006e4 <MX_I2C3_Init+0x50>)
 80006cc:	2200      	movs	r2, #0
 80006ce:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80006d0:	4804      	ldr	r0, [pc, #16]	@ (80006e4 <MX_I2C3_Init+0x50>)
 80006d2:	f001 fa85 	bl	8001be0 <HAL_I2C_Init>
 80006d6:	4603      	mov	r3, r0
 80006d8:	2b00      	cmp	r3, #0
 80006da:	d001      	beq.n	80006e0 <MX_I2C3_Init+0x4c>
  {
    Error_Handler();
 80006dc:	f000 facc 	bl	8000c78 <Error_Handler>
  }
  /* USER CODE BEGIN I2C3_Init 2 */

  /* USER CODE END I2C3_Init 2 */

}
 80006e0:	bf00      	nop
 80006e2:	bd80      	pop	{r7, pc}
 80006e4:	20000120 	.word	0x20000120
 80006e8:	40005c00 	.word	0x40005c00
 80006ec:	000186a0 	.word	0x000186a0

080006f0 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 80006f0:	b580      	push	{r7, lr}
 80006f2:	b08e      	sub	sp, #56	@ 0x38
 80006f4:	af00      	add	r7, sp, #0
 80006f6:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80006f8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80006fc:	2200      	movs	r2, #0
 80006fe:	601a      	str	r2, [r3, #0]
 8000700:	605a      	str	r2, [r3, #4]
 8000702:	609a      	str	r2, [r3, #8]
 8000704:	60da      	str	r2, [r3, #12]
 8000706:	611a      	str	r2, [r3, #16]
  if(i2cHandle->Instance==I2C1)
 8000708:	687b      	ldr	r3, [r7, #4]
 800070a:	681b      	ldr	r3, [r3, #0]
 800070c:	4a63      	ldr	r2, [pc, #396]	@ (800089c <HAL_I2C_MspInit+0x1ac>)
 800070e:	4293      	cmp	r3, r2
 8000710:	d12c      	bne.n	800076c <HAL_I2C_MspInit+0x7c>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000712:	2300      	movs	r3, #0
 8000714:	623b      	str	r3, [r7, #32]
 8000716:	4b62      	ldr	r3, [pc, #392]	@ (80008a0 <HAL_I2C_MspInit+0x1b0>)
 8000718:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800071a:	4a61      	ldr	r2, [pc, #388]	@ (80008a0 <HAL_I2C_MspInit+0x1b0>)
 800071c:	f043 0302 	orr.w	r3, r3, #2
 8000720:	6313      	str	r3, [r2, #48]	@ 0x30
 8000722:	4b5f      	ldr	r3, [pc, #380]	@ (80008a0 <HAL_I2C_MspInit+0x1b0>)
 8000724:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000726:	f003 0302 	and.w	r3, r3, #2
 800072a:	623b      	str	r3, [r7, #32]
 800072c:	6a3b      	ldr	r3, [r7, #32]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800072e:	23c0      	movs	r3, #192	@ 0xc0
 8000730:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000732:	2312      	movs	r3, #18
 8000734:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000736:	2300      	movs	r3, #0
 8000738:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800073a:	2303      	movs	r3, #3
 800073c:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 800073e:	2304      	movs	r3, #4
 8000740:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000742:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000746:	4619      	mov	r1, r3
 8000748:	4856      	ldr	r0, [pc, #344]	@ (80008a4 <HAL_I2C_MspInit+0x1b4>)
 800074a:	f001 f8c5 	bl	80018d8 <HAL_GPIO_Init>

    /* I2C1 clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 800074e:	2300      	movs	r3, #0
 8000750:	61fb      	str	r3, [r7, #28]
 8000752:	4b53      	ldr	r3, [pc, #332]	@ (80008a0 <HAL_I2C_MspInit+0x1b0>)
 8000754:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000756:	4a52      	ldr	r2, [pc, #328]	@ (80008a0 <HAL_I2C_MspInit+0x1b0>)
 8000758:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 800075c:	6413      	str	r3, [r2, #64]	@ 0x40
 800075e:	4b50      	ldr	r3, [pc, #320]	@ (80008a0 <HAL_I2C_MspInit+0x1b0>)
 8000760:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000762:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8000766:	61fb      	str	r3, [r7, #28]
 8000768:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_I2C3_CLK_ENABLE();
  /* USER CODE BEGIN I2C3_MspInit 1 */

  /* USER CODE END I2C3_MspInit 1 */
  }
}
 800076a:	e093      	b.n	8000894 <HAL_I2C_MspInit+0x1a4>
  else if(i2cHandle->Instance==I2C2)
 800076c:	687b      	ldr	r3, [r7, #4]
 800076e:	681b      	ldr	r3, [r3, #0]
 8000770:	4a4d      	ldr	r2, [pc, #308]	@ (80008a8 <HAL_I2C_MspInit+0x1b8>)
 8000772:	4293      	cmp	r3, r2
 8000774:	d13d      	bne.n	80007f2 <HAL_I2C_MspInit+0x102>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000776:	2300      	movs	r3, #0
 8000778:	61bb      	str	r3, [r7, #24]
 800077a:	4b49      	ldr	r3, [pc, #292]	@ (80008a0 <HAL_I2C_MspInit+0x1b0>)
 800077c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800077e:	4a48      	ldr	r2, [pc, #288]	@ (80008a0 <HAL_I2C_MspInit+0x1b0>)
 8000780:	f043 0302 	orr.w	r3, r3, #2
 8000784:	6313      	str	r3, [r2, #48]	@ 0x30
 8000786:	4b46      	ldr	r3, [pc, #280]	@ (80008a0 <HAL_I2C_MspInit+0x1b0>)
 8000788:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800078a:	f003 0302 	and.w	r3, r3, #2
 800078e:	61bb      	str	r3, [r7, #24]
 8000790:	69bb      	ldr	r3, [r7, #24]
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8000792:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000796:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000798:	2312      	movs	r3, #18
 800079a:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800079c:	2300      	movs	r3, #0
 800079e:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80007a0:	2303      	movs	r3, #3
 80007a2:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 80007a4:	2304      	movs	r3, #4
 80007a6:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80007a8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80007ac:	4619      	mov	r1, r3
 80007ae:	483d      	ldr	r0, [pc, #244]	@ (80008a4 <HAL_I2C_MspInit+0x1b4>)
 80007b0:	f001 f892 	bl	80018d8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80007b4:	2308      	movs	r3, #8
 80007b6:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80007b8:	2312      	movs	r3, #18
 80007ba:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80007bc:	2300      	movs	r3, #0
 80007be:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80007c0:	2303      	movs	r3, #3
 80007c2:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF9_I2C2;
 80007c4:	2309      	movs	r3, #9
 80007c6:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80007c8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80007cc:	4619      	mov	r1, r3
 80007ce:	4835      	ldr	r0, [pc, #212]	@ (80008a4 <HAL_I2C_MspInit+0x1b4>)
 80007d0:	f001 f882 	bl	80018d8 <HAL_GPIO_Init>
    __HAL_RCC_I2C2_CLK_ENABLE();
 80007d4:	2300      	movs	r3, #0
 80007d6:	617b      	str	r3, [r7, #20]
 80007d8:	4b31      	ldr	r3, [pc, #196]	@ (80008a0 <HAL_I2C_MspInit+0x1b0>)
 80007da:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80007dc:	4a30      	ldr	r2, [pc, #192]	@ (80008a0 <HAL_I2C_MspInit+0x1b0>)
 80007de:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 80007e2:	6413      	str	r3, [r2, #64]	@ 0x40
 80007e4:	4b2e      	ldr	r3, [pc, #184]	@ (80008a0 <HAL_I2C_MspInit+0x1b0>)
 80007e6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80007e8:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80007ec:	617b      	str	r3, [r7, #20]
 80007ee:	697b      	ldr	r3, [r7, #20]
}
 80007f0:	e050      	b.n	8000894 <HAL_I2C_MspInit+0x1a4>
  else if(i2cHandle->Instance==I2C3)
 80007f2:	687b      	ldr	r3, [r7, #4]
 80007f4:	681b      	ldr	r3, [r3, #0]
 80007f6:	4a2d      	ldr	r2, [pc, #180]	@ (80008ac <HAL_I2C_MspInit+0x1bc>)
 80007f8:	4293      	cmp	r3, r2
 80007fa:	d14b      	bne.n	8000894 <HAL_I2C_MspInit+0x1a4>
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80007fc:	2300      	movs	r3, #0
 80007fe:	613b      	str	r3, [r7, #16]
 8000800:	4b27      	ldr	r3, [pc, #156]	@ (80008a0 <HAL_I2C_MspInit+0x1b0>)
 8000802:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000804:	4a26      	ldr	r2, [pc, #152]	@ (80008a0 <HAL_I2C_MspInit+0x1b0>)
 8000806:	f043 0304 	orr.w	r3, r3, #4
 800080a:	6313      	str	r3, [r2, #48]	@ 0x30
 800080c:	4b24      	ldr	r3, [pc, #144]	@ (80008a0 <HAL_I2C_MspInit+0x1b0>)
 800080e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000810:	f003 0304 	and.w	r3, r3, #4
 8000814:	613b      	str	r3, [r7, #16]
 8000816:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000818:	2300      	movs	r3, #0
 800081a:	60fb      	str	r3, [r7, #12]
 800081c:	4b20      	ldr	r3, [pc, #128]	@ (80008a0 <HAL_I2C_MspInit+0x1b0>)
 800081e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000820:	4a1f      	ldr	r2, [pc, #124]	@ (80008a0 <HAL_I2C_MspInit+0x1b0>)
 8000822:	f043 0301 	orr.w	r3, r3, #1
 8000826:	6313      	str	r3, [r2, #48]	@ 0x30
 8000828:	4b1d      	ldr	r3, [pc, #116]	@ (80008a0 <HAL_I2C_MspInit+0x1b0>)
 800082a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800082c:	f003 0301 	and.w	r3, r3, #1
 8000830:	60fb      	str	r3, [r7, #12]
 8000832:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8000834:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8000838:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800083a:	2312      	movs	r3, #18
 800083c:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800083e:	2300      	movs	r3, #0
 8000840:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000842:	2303      	movs	r3, #3
 8000844:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8000846:	2304      	movs	r3, #4
 8000848:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800084a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800084e:	4619      	mov	r1, r3
 8000850:	4817      	ldr	r0, [pc, #92]	@ (80008b0 <HAL_I2C_MspInit+0x1c0>)
 8000852:	f001 f841 	bl	80018d8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8000856:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800085a:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800085c:	2312      	movs	r3, #18
 800085e:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000860:	2300      	movs	r3, #0
 8000862:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000864:	2303      	movs	r3, #3
 8000866:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8000868:	2304      	movs	r3, #4
 800086a:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800086c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000870:	4619      	mov	r1, r3
 8000872:	4810      	ldr	r0, [pc, #64]	@ (80008b4 <HAL_I2C_MspInit+0x1c4>)
 8000874:	f001 f830 	bl	80018d8 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8000878:	2300      	movs	r3, #0
 800087a:	60bb      	str	r3, [r7, #8]
 800087c:	4b08      	ldr	r3, [pc, #32]	@ (80008a0 <HAL_I2C_MspInit+0x1b0>)
 800087e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000880:	4a07      	ldr	r2, [pc, #28]	@ (80008a0 <HAL_I2C_MspInit+0x1b0>)
 8000882:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8000886:	6413      	str	r3, [r2, #64]	@ 0x40
 8000888:	4b05      	ldr	r3, [pc, #20]	@ (80008a0 <HAL_I2C_MspInit+0x1b0>)
 800088a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800088c:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8000890:	60bb      	str	r3, [r7, #8]
 8000892:	68bb      	ldr	r3, [r7, #8]
}
 8000894:	bf00      	nop
 8000896:	3738      	adds	r7, #56	@ 0x38
 8000898:	46bd      	mov	sp, r7
 800089a:	bd80      	pop	{r7, pc}
 800089c:	40005400 	.word	0x40005400
 80008a0:	40023800 	.word	0x40023800
 80008a4:	40020400 	.word	0x40020400
 80008a8:	40005800 	.word	0x40005800
 80008ac:	40005c00 	.word	0x40005c00
 80008b0:	40020800 	.word	0x40020800
 80008b4:	40020000 	.word	0x40020000

080008b8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80008b8:	b590      	push	{r4, r7, lr}
 80008ba:	b091      	sub	sp, #68	@ 0x44
 80008bc:	af02      	add	r7, sp, #8

  /* USER CODE BEGIN 1 */
  uint8_t Single_Converter_Index = 0;
 80008be:	2300      	movs	r3, #0
 80008c0:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80008c4:	f000 fdce 	bl	8001464 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80008c8:	f000 f96c 	bl	8000ba4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80008cc:	f7ff fe50 	bl	8000570 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 80008d0:	f000 fcfc 	bl	80012cc <MX_USART2_UART_Init>
  MX_I2C1_Init();
 80008d4:	f7ff fe82 	bl	80005dc <MX_I2C1_Init>
  MX_I2C2_Init();
 80008d8:	f7ff feae 	bl	8000638 <MX_I2C2_Init>
  MX_I2C3_Init();
 80008dc:	f7ff feda 	bl	8000694 <MX_I2C3_Init>
	  sprintf((char *)OutputBuffer, "Slave Addresses Configured\r\n");
	  PrintOutputBuffer(OutputBuffer);
  }
  else if (TESTING_MODE) {
	  if (TESTING_HC) {
		  sprintf((char *)OutputBuffer, "Starting Tests\r\n");
 80008e0:	49a1      	ldr	r1, [pc, #644]	@ (8000b68 <main+0x2b0>)
 80008e2:	48a2      	ldr	r0, [pc, #648]	@ (8000b6c <main+0x2b4>)
 80008e4:	f002 ff6e 	bl	80037c4 <siprintf>
		  PrintOutputBuffer(OutputBuffer);
 80008e8:	48a0      	ldr	r0, [pc, #640]	@ (8000b6c <main+0x2b4>)
 80008ea:	f000 fd6b 	bl	80013c4 <PrintOutputBuffer>
		  TestSolarPanel_hc TestPanels[2];
		  uint8_t Converter_Index = 0;
 80008ee:	2300      	movs	r3, #0
 80008f0:	f887 3036 	strb.w	r3, [r7, #54]	@ 0x36
		  uint32_t Voltage = 1;
 80008f4:	2301      	movs	r3, #1
 80008f6:	633b      	str	r3, [r7, #48]	@ 0x30
		  uint32_t Current = 1;
 80008f8:	2301      	movs	r3, #1
 80008fa:	62fb      	str	r3, [r7, #44]	@ 0x2c
		  Update_Test_Sensor_Values_hc(Voltage, Current);
 80008fc:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80008fe:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8000900:	f000 fa6a 	bl	8000dd8 <Update_Test_Sensor_Values_hc>
		  TestInitialize_HillClimbing(2, TestPanels);
 8000904:	1d3b      	adds	r3, r7, #4
 8000906:	4619      	mov	r1, r3
 8000908:	2002      	movs	r0, #2
 800090a:	f000 fac5 	bl	8000e98 <TestInitialize_HillClimbing>

		  sprintf((char *)OutputBuffer, "Testing Voltage Increase, Should yield increasing message\r\n");
 800090e:	4998      	ldr	r1, [pc, #608]	@ (8000b70 <main+0x2b8>)
 8000910:	4896      	ldr	r0, [pc, #600]	@ (8000b6c <main+0x2b4>)
 8000912:	f002 ff57 	bl	80037c4 <siprintf>
		  PrintOutputBuffer(OutputBuffer);
 8000916:	4895      	ldr	r0, [pc, #596]	@ (8000b6c <main+0x2b4>)
 8000918:	f000 fd54 	bl	80013c4 <PrintOutputBuffer>
		  Voltage = 2;
 800091c:	2302      	movs	r3, #2
 800091e:	633b      	str	r3, [r7, #48]	@ 0x30
		  Update_Test_Sensor_Values_hc(Voltage, Current);
 8000920:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8000922:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8000924:	f000 fa58 	bl	8000dd8 <Update_Test_Sensor_Values_hc>
		  TestUpdate_Panel_State_hc(Converter_Index, TestPanels);
 8000928:	1d3a      	adds	r2, r7, #4
 800092a:	f897 3036 	ldrb.w	r3, [r7, #54]	@ 0x36
 800092e:	4611      	mov	r1, r2
 8000930:	4618      	mov	r0, r3
 8000932:	f000 fbf3 	bl	800111c <TestUpdate_Panel_State_hc>
		  sprintf((char *)OutputBuffer, "Previous Voltage: %ld, Current_Voltage: %ld\r\n", TestPanels[Converter_Index].Previous_Voltage, TestPanels[Converter_Index].Current_Voltage);
 8000936:	f897 2036 	ldrb.w	r2, [r7, #54]	@ 0x36
 800093a:	4613      	mov	r3, r2
 800093c:	009b      	lsls	r3, r3, #2
 800093e:	4413      	add	r3, r2
 8000940:	009b      	lsls	r3, r3, #2
 8000942:	3338      	adds	r3, #56	@ 0x38
 8000944:	443b      	add	r3, r7
 8000946:	3b34      	subs	r3, #52	@ 0x34
 8000948:	6819      	ldr	r1, [r3, #0]
 800094a:	f897 2036 	ldrb.w	r2, [r7, #54]	@ 0x36
 800094e:	4613      	mov	r3, r2
 8000950:	009b      	lsls	r3, r3, #2
 8000952:	4413      	add	r3, r2
 8000954:	009b      	lsls	r3, r3, #2
 8000956:	3338      	adds	r3, #56	@ 0x38
 8000958:	443b      	add	r3, r7
 800095a:	3b30      	subs	r3, #48	@ 0x30
 800095c:	681b      	ldr	r3, [r3, #0]
 800095e:	460a      	mov	r2, r1
 8000960:	4984      	ldr	r1, [pc, #528]	@ (8000b74 <main+0x2bc>)
 8000962:	4882      	ldr	r0, [pc, #520]	@ (8000b6c <main+0x2b4>)
 8000964:	f002 ff2e 	bl	80037c4 <siprintf>
		  PrintOutputBuffer(OutputBuffer);
 8000968:	4880      	ldr	r0, [pc, #512]	@ (8000b6c <main+0x2b4>)
 800096a:	f000 fd2b 	bl	80013c4 <PrintOutputBuffer>

		  sprintf((char *)OutputBuffer, "Testing Voltage Decrease and Current Increase, Should yield decreasing message\r\n");
 800096e:	4982      	ldr	r1, [pc, #520]	@ (8000b78 <main+0x2c0>)
 8000970:	487e      	ldr	r0, [pc, #504]	@ (8000b6c <main+0x2b4>)
 8000972:	f002 ff27 	bl	80037c4 <siprintf>
		  PrintOutputBuffer(OutputBuffer);
 8000976:	487d      	ldr	r0, [pc, #500]	@ (8000b6c <main+0x2b4>)
 8000978:	f000 fd24 	bl	80013c4 <PrintOutputBuffer>
		  Voltage = 1;
 800097c:	2301      	movs	r3, #1
 800097e:	633b      	str	r3, [r7, #48]	@ 0x30
		  Current = 3;
 8000980:	2303      	movs	r3, #3
 8000982:	62fb      	str	r3, [r7, #44]	@ 0x2c
		  Update_Test_Sensor_Values_hc(Voltage, Current);
 8000984:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8000986:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8000988:	f000 fa26 	bl	8000dd8 <Update_Test_Sensor_Values_hc>
		  TestUpdate_Panel_State_hc(Converter_Index, TestPanels);
 800098c:	1d3a      	adds	r2, r7, #4
 800098e:	f897 3036 	ldrb.w	r3, [r7, #54]	@ 0x36
 8000992:	4611      	mov	r1, r2
 8000994:	4618      	mov	r0, r3
 8000996:	f000 fbc1 	bl	800111c <TestUpdate_Panel_State_hc>
		  sprintf((char *)OutputBuffer, "Previous Voltage: %ld, Current_Voltage: %ld\r\n", TestPanels[Converter_Index].Previous_Voltage, TestPanels[Converter_Index].Current_Voltage);
 800099a:	f897 2036 	ldrb.w	r2, [r7, #54]	@ 0x36
 800099e:	4613      	mov	r3, r2
 80009a0:	009b      	lsls	r3, r3, #2
 80009a2:	4413      	add	r3, r2
 80009a4:	009b      	lsls	r3, r3, #2
 80009a6:	3338      	adds	r3, #56	@ 0x38
 80009a8:	443b      	add	r3, r7
 80009aa:	3b34      	subs	r3, #52	@ 0x34
 80009ac:	6819      	ldr	r1, [r3, #0]
 80009ae:	f897 2036 	ldrb.w	r2, [r7, #54]	@ 0x36
 80009b2:	4613      	mov	r3, r2
 80009b4:	009b      	lsls	r3, r3, #2
 80009b6:	4413      	add	r3, r2
 80009b8:	009b      	lsls	r3, r3, #2
 80009ba:	3338      	adds	r3, #56	@ 0x38
 80009bc:	443b      	add	r3, r7
 80009be:	3b30      	subs	r3, #48	@ 0x30
 80009c0:	681b      	ldr	r3, [r3, #0]
 80009c2:	460a      	mov	r2, r1
 80009c4:	496b      	ldr	r1, [pc, #428]	@ (8000b74 <main+0x2bc>)
 80009c6:	4869      	ldr	r0, [pc, #420]	@ (8000b6c <main+0x2b4>)
 80009c8:	f002 fefc 	bl	80037c4 <siprintf>
		  PrintOutputBuffer(OutputBuffer);
 80009cc:	4867      	ldr	r0, [pc, #412]	@ (8000b6c <main+0x2b4>)
 80009ce:	f000 fcf9 	bl	80013c4 <PrintOutputBuffer>

		  sprintf((char *)OutputBuffer, "Testing Panel Reaching MPP\r\n");
 80009d2:	496a      	ldr	r1, [pc, #424]	@ (8000b7c <main+0x2c4>)
 80009d4:	4865      	ldr	r0, [pc, #404]	@ (8000b6c <main+0x2b4>)
 80009d6:	f002 fef5 	bl	80037c4 <siprintf>
		  PrintOutputBuffer(OutputBuffer);
 80009da:	4864      	ldr	r0, [pc, #400]	@ (8000b6c <main+0x2b4>)
 80009dc:	f000 fcf2 	bl	80013c4 <PrintOutputBuffer>
		  TestUpdate_Panel_State_hc(Converter_Index, TestPanels);
 80009e0:	1d3a      	adds	r2, r7, #4
 80009e2:	f897 3036 	ldrb.w	r3, [r7, #54]	@ 0x36
 80009e6:	4611      	mov	r1, r2
 80009e8:	4618      	mov	r0, r3
 80009ea:	f000 fb97 	bl	800111c <TestUpdate_Panel_State_hc>
		  sprintf((char *)OutputBuffer, "At_Mpp Value: %d\r\n", TestPanels[Converter_Index].At_MPP);
 80009ee:	f897 2036 	ldrb.w	r2, [r7, #54]	@ 0x36
 80009f2:	4613      	mov	r3, r2
 80009f4:	009b      	lsls	r3, r3, #2
 80009f6:	4413      	add	r3, r2
 80009f8:	009b      	lsls	r3, r3, #2
 80009fa:	3338      	adds	r3, #56	@ 0x38
 80009fc:	443b      	add	r3, r7
 80009fe:	3b23      	subs	r3, #35	@ 0x23
 8000a00:	781b      	ldrb	r3, [r3, #0]
 8000a02:	461a      	mov	r2, r3
 8000a04:	495e      	ldr	r1, [pc, #376]	@ (8000b80 <main+0x2c8>)
 8000a06:	4859      	ldr	r0, [pc, #356]	@ (8000b6c <main+0x2b4>)
 8000a08:	f002 fedc 	bl	80037c4 <siprintf>
		  PrintOutputBuffer(OutputBuffer);
 8000a0c:	4857      	ldr	r0, [pc, #348]	@ (8000b6c <main+0x2b4>)
 8000a0e:	f000 fcd9 	bl	80013c4 <PrintOutputBuffer>

		  sprintf((char *)OutputBuffer, "Setting Second panel to have Current 6 and Voltage 4 Reaching MPP\r\n");
 8000a12:	495c      	ldr	r1, [pc, #368]	@ (8000b84 <main+0x2cc>)
 8000a14:	4855      	ldr	r0, [pc, #340]	@ (8000b6c <main+0x2b4>)
 8000a16:	f002 fed5 	bl	80037c4 <siprintf>
		  PrintOutputBuffer(OutputBuffer);
 8000a1a:	4854      	ldr	r0, [pc, #336]	@ (8000b6c <main+0x2b4>)
 8000a1c:	f000 fcd2 	bl	80013c4 <PrintOutputBuffer>
		  Voltage = 4;
 8000a20:	2304      	movs	r3, #4
 8000a22:	633b      	str	r3, [r7, #48]	@ 0x30
		  Current = 6;
 8000a24:	2306      	movs	r3, #6
 8000a26:	62fb      	str	r3, [r7, #44]	@ 0x2c
		  Converter_Index = 1;
 8000a28:	2301      	movs	r3, #1
 8000a2a:	f887 3036 	strb.w	r3, [r7, #54]	@ 0x36
		  Update_Test_Sensor_Values_hc(Voltage, Current);
 8000a2e:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8000a30:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8000a32:	f000 f9d1 	bl	8000dd8 <Update_Test_Sensor_Values_hc>
		  TestUpdate_Panel_State_hc(Converter_Index, TestPanels);
 8000a36:	1d3a      	adds	r2, r7, #4
 8000a38:	f897 3036 	ldrb.w	r3, [r7, #54]	@ 0x36
 8000a3c:	4611      	mov	r1, r2
 8000a3e:	4618      	mov	r0, r3
 8000a40:	f000 fb6c 	bl	800111c <TestUpdate_Panel_State_hc>
		  TestUpdate_Panel_State_hc(Converter_Index, TestPanels);
 8000a44:	1d3a      	adds	r2, r7, #4
 8000a46:	f897 3036 	ldrb.w	r3, [r7, #54]	@ 0x36
 8000a4a:	4611      	mov	r1, r2
 8000a4c:	4618      	mov	r0, r3
 8000a4e:	f000 fb65 	bl	800111c <TestUpdate_Panel_State_hc>
		  sprintf((char *)OutputBuffer, "Voltage: %ld, Current: %ld, At_MPP: %d\r\n", TestPanels[Converter_Index].Current_Voltage, TestPanels[Converter_Index].Current_Current, TestPanels[Converter_Index].At_MPP);
 8000a52:	f897 2036 	ldrb.w	r2, [r7, #54]	@ 0x36
 8000a56:	4613      	mov	r3, r2
 8000a58:	009b      	lsls	r3, r3, #2
 8000a5a:	4413      	add	r3, r2
 8000a5c:	009b      	lsls	r3, r3, #2
 8000a5e:	3338      	adds	r3, #56	@ 0x38
 8000a60:	443b      	add	r3, r7
 8000a62:	3b30      	subs	r3, #48	@ 0x30
 8000a64:	6819      	ldr	r1, [r3, #0]
 8000a66:	f897 2036 	ldrb.w	r2, [r7, #54]	@ 0x36
 8000a6a:	4613      	mov	r3, r2
 8000a6c:	009b      	lsls	r3, r3, #2
 8000a6e:	4413      	add	r3, r2
 8000a70:	009b      	lsls	r3, r3, #2
 8000a72:	3338      	adds	r3, #56	@ 0x38
 8000a74:	443b      	add	r3, r7
 8000a76:	3b28      	subs	r3, #40	@ 0x28
 8000a78:	6818      	ldr	r0, [r3, #0]
 8000a7a:	f897 2036 	ldrb.w	r2, [r7, #54]	@ 0x36
 8000a7e:	4613      	mov	r3, r2
 8000a80:	009b      	lsls	r3, r3, #2
 8000a82:	4413      	add	r3, r2
 8000a84:	009b      	lsls	r3, r3, #2
 8000a86:	3338      	adds	r3, #56	@ 0x38
 8000a88:	443b      	add	r3, r7
 8000a8a:	3b23      	subs	r3, #35	@ 0x23
 8000a8c:	781b      	ldrb	r3, [r3, #0]
 8000a8e:	9300      	str	r3, [sp, #0]
 8000a90:	4603      	mov	r3, r0
 8000a92:	460a      	mov	r2, r1
 8000a94:	493c      	ldr	r1, [pc, #240]	@ (8000b88 <main+0x2d0>)
 8000a96:	4835      	ldr	r0, [pc, #212]	@ (8000b6c <main+0x2b4>)
 8000a98:	f002 fe94 	bl	80037c4 <siprintf>
		  PrintOutputBuffer(OutputBuffer);
 8000a9c:	4833      	ldr	r0, [pc, #204]	@ (8000b6c <main+0x2b4>)
 8000a9e:	f000 fc91 	bl	80013c4 <PrintOutputBuffer>

		  sprintf((char *)OutputBuffer, "Testing First Panel Entering Partial Shading, Should yield increasing message\r\n");
 8000aa2:	493a      	ldr	r1, [pc, #232]	@ (8000b8c <main+0x2d4>)
 8000aa4:	4831      	ldr	r0, [pc, #196]	@ (8000b6c <main+0x2b4>)
 8000aa6:	f002 fe8d 	bl	80037c4 <siprintf>
		  PrintOutputBuffer(OutputBuffer);
 8000aaa:	4830      	ldr	r0, [pc, #192]	@ (8000b6c <main+0x2b4>)
 8000aac:	f000 fc8a 	bl	80013c4 <PrintOutputBuffer>
		  Voltage = 1;
 8000ab0:	2301      	movs	r3, #1
 8000ab2:	633b      	str	r3, [r7, #48]	@ 0x30
		  Current = 3;
 8000ab4:	2303      	movs	r3, #3
 8000ab6:	62fb      	str	r3, [r7, #44]	@ 0x2c
		  Converter_Index = 0;
 8000ab8:	2300      	movs	r3, #0
 8000aba:	f887 3036 	strb.w	r3, [r7, #54]	@ 0x36
		  Update_Test_Sensor_Values_hc(Voltage, Current);
 8000abe:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8000ac0:	6b38      	ldr	r0, [r7, #48]	@ 0x30
 8000ac2:	f000 f989 	bl	8000dd8 <Update_Test_Sensor_Values_hc>
		  TestUpdate_Panel_State_hc(Converter_Index, TestPanels);
 8000ac6:	1d3a      	adds	r2, r7, #4
 8000ac8:	f897 3036 	ldrb.w	r3, [r7, #54]	@ 0x36
 8000acc:	4611      	mov	r1, r2
 8000ace:	4618      	mov	r0, r3
 8000ad0:	f000 fb24 	bl	800111c <TestUpdate_Panel_State_hc>
		  sprintf((char *)OutputBuffer, "Voltage: %ld, Current: %ld, Shading: %d, At_MPP: %d\r\n", TestPanels[Converter_Index].Current_Voltage, TestPanels[Converter_Index].Current_Current, TestPanels[Converter_Index].Shading_Conditions, TestPanels[Converter_Index].At_MPP);
 8000ad4:	f897 2036 	ldrb.w	r2, [r7, #54]	@ 0x36
 8000ad8:	4613      	mov	r3, r2
 8000ada:	009b      	lsls	r3, r3, #2
 8000adc:	4413      	add	r3, r2
 8000ade:	009b      	lsls	r3, r3, #2
 8000ae0:	3338      	adds	r3, #56	@ 0x38
 8000ae2:	443b      	add	r3, r7
 8000ae4:	3b30      	subs	r3, #48	@ 0x30
 8000ae6:	6819      	ldr	r1, [r3, #0]
 8000ae8:	f897 2036 	ldrb.w	r2, [r7, #54]	@ 0x36
 8000aec:	4613      	mov	r3, r2
 8000aee:	009b      	lsls	r3, r3, #2
 8000af0:	4413      	add	r3, r2
 8000af2:	009b      	lsls	r3, r3, #2
 8000af4:	3338      	adds	r3, #56	@ 0x38
 8000af6:	443b      	add	r3, r7
 8000af8:	3b28      	subs	r3, #40	@ 0x28
 8000afa:	6818      	ldr	r0, [r3, #0]
 8000afc:	f897 2036 	ldrb.w	r2, [r7, #54]	@ 0x36
 8000b00:	4613      	mov	r3, r2
 8000b02:	009b      	lsls	r3, r3, #2
 8000b04:	4413      	add	r3, r2
 8000b06:	009b      	lsls	r3, r3, #2
 8000b08:	3338      	adds	r3, #56	@ 0x38
 8000b0a:	443b      	add	r3, r7
 8000b0c:	3b24      	subs	r3, #36	@ 0x24
 8000b0e:	781b      	ldrb	r3, [r3, #0]
 8000b10:	461c      	mov	r4, r3
 8000b12:	f897 2036 	ldrb.w	r2, [r7, #54]	@ 0x36
 8000b16:	4613      	mov	r3, r2
 8000b18:	009b      	lsls	r3, r3, #2
 8000b1a:	4413      	add	r3, r2
 8000b1c:	009b      	lsls	r3, r3, #2
 8000b1e:	3338      	adds	r3, #56	@ 0x38
 8000b20:	443b      	add	r3, r7
 8000b22:	3b23      	subs	r3, #35	@ 0x23
 8000b24:	781b      	ldrb	r3, [r3, #0]
 8000b26:	9301      	str	r3, [sp, #4]
 8000b28:	9400      	str	r4, [sp, #0]
 8000b2a:	4603      	mov	r3, r0
 8000b2c:	460a      	mov	r2, r1
 8000b2e:	4918      	ldr	r1, [pc, #96]	@ (8000b90 <main+0x2d8>)
 8000b30:	480e      	ldr	r0, [pc, #56]	@ (8000b6c <main+0x2b4>)
 8000b32:	f002 fe47 	bl	80037c4 <siprintf>
		  PrintOutputBuffer(OutputBuffer);
 8000b36:	480d      	ldr	r0, [pc, #52]	@ (8000b6c <main+0x2b4>)
 8000b38:	f000 fc44 	bl	80013c4 <PrintOutputBuffer>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  if (Interrupt_Occurred) {
 8000b3c:	4b15      	ldr	r3, [pc, #84]	@ (8000b94 <main+0x2dc>)
 8000b3e:	781b      	ldrb	r3, [r3, #0]
 8000b40:	2b00      	cmp	r3, #0
 8000b42:	d00b      	beq.n	8000b5c <main+0x2a4>
	  	  Interrupt_Occurred = 0;
 8000b44:	4b13      	ldr	r3, [pc, #76]	@ (8000b94 <main+0x2dc>)
 8000b46:	2200      	movs	r2, #0
 8000b48:	701a      	strb	r2, [r3, #0]
	  	  HAL_Status = HAL_UART_Receive_IT(&huart2, &ReceiveCharacter, 1);
 8000b4a:	2201      	movs	r2, #1
 8000b4c:	4912      	ldr	r1, [pc, #72]	@ (8000b98 <main+0x2e0>)
 8000b4e:	4813      	ldr	r0, [pc, #76]	@ (8000b9c <main+0x2e4>)
 8000b50:	f001 febd 	bl	80028ce <HAL_UART_Receive_IT>
 8000b54:	4603      	mov	r3, r0
 8000b56:	461a      	mov	r2, r3
 8000b58:	4b11      	ldr	r3, [pc, #68]	@ (8000ba0 <main+0x2e8>)
 8000b5a:	701a      	strb	r2, [r3, #0]
	  }
	  HAL_Delay(500);
 8000b5c:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8000b60:	f000 fcf2 	bl	8001548 <HAL_Delay>
	  if (Interrupt_Occurred) {
 8000b64:	e7ea      	b.n	8000b3c <main+0x284>
 8000b66:	bf00      	nop
 8000b68:	0800411c 	.word	0x0800411c
 8000b6c:	20000178 	.word	0x20000178
 8000b70:	08004130 	.word	0x08004130
 8000b74:	0800416c 	.word	0x0800416c
 8000b78:	0800419c 	.word	0x0800419c
 8000b7c:	080041f0 	.word	0x080041f0
 8000b80:	08004210 	.word	0x08004210
 8000b84:	08004224 	.word	0x08004224
 8000b88:	08004268 	.word	0x08004268
 8000b8c:	08004294 	.word	0x08004294
 8000b90:	080042e4 	.word	0x080042e4
 8000b94:	200001f8 	.word	0x200001f8
 8000b98:	20000174 	.word	0x20000174
 8000b9c:	2000020c 	.word	0x2000020c
 8000ba0:	200001f9 	.word	0x200001f9

08000ba4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000ba4:	b580      	push	{r7, lr}
 8000ba6:	b094      	sub	sp, #80	@ 0x50
 8000ba8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000baa:	f107 0320 	add.w	r3, r7, #32
 8000bae:	2230      	movs	r2, #48	@ 0x30
 8000bb0:	2100      	movs	r1, #0
 8000bb2:	4618      	mov	r0, r3
 8000bb4:	f002 fe26 	bl	8003804 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000bb8:	f107 030c 	add.w	r3, r7, #12
 8000bbc:	2200      	movs	r2, #0
 8000bbe:	601a      	str	r2, [r3, #0]
 8000bc0:	605a      	str	r2, [r3, #4]
 8000bc2:	609a      	str	r2, [r3, #8]
 8000bc4:	60da      	str	r2, [r3, #12]
 8000bc6:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000bc8:	2300      	movs	r3, #0
 8000bca:	60bb      	str	r3, [r7, #8]
 8000bcc:	4b23      	ldr	r3, [pc, #140]	@ (8000c5c <SystemClock_Config+0xb8>)
 8000bce:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000bd0:	4a22      	ldr	r2, [pc, #136]	@ (8000c5c <SystemClock_Config+0xb8>)
 8000bd2:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000bd6:	6413      	str	r3, [r2, #64]	@ 0x40
 8000bd8:	4b20      	ldr	r3, [pc, #128]	@ (8000c5c <SystemClock_Config+0xb8>)
 8000bda:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000bdc:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000be0:	60bb      	str	r3, [r7, #8]
 8000be2:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 8000be4:	2300      	movs	r3, #0
 8000be6:	607b      	str	r3, [r7, #4]
 8000be8:	4b1d      	ldr	r3, [pc, #116]	@ (8000c60 <SystemClock_Config+0xbc>)
 8000bea:	681b      	ldr	r3, [r3, #0]
 8000bec:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8000bf0:	4a1b      	ldr	r2, [pc, #108]	@ (8000c60 <SystemClock_Config+0xbc>)
 8000bf2:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8000bf6:	6013      	str	r3, [r2, #0]
 8000bf8:	4b19      	ldr	r3, [pc, #100]	@ (8000c60 <SystemClock_Config+0xbc>)
 8000bfa:	681b      	ldr	r3, [r3, #0]
 8000bfc:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8000c00:	607b      	str	r3, [r7, #4]
 8000c02:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000c04:	2302      	movs	r3, #2
 8000c06:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000c08:	2301      	movs	r3, #1
 8000c0a:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000c0c:	2310      	movs	r3, #16
 8000c0e:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8000c10:	2300      	movs	r3, #0
 8000c12:	63bb      	str	r3, [r7, #56]	@ 0x38
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000c14:	f107 0320 	add.w	r3, r7, #32
 8000c18:	4618      	mov	r0, r3
 8000c1a:	f001 f925 	bl	8001e68 <HAL_RCC_OscConfig>
 8000c1e:	4603      	mov	r3, r0
 8000c20:	2b00      	cmp	r3, #0
 8000c22:	d001      	beq.n	8000c28 <SystemClock_Config+0x84>
  {
    Error_Handler();
 8000c24:	f000 f828 	bl	8000c78 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000c28:	230f      	movs	r3, #15
 8000c2a:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8000c2c:	2300      	movs	r3, #0
 8000c2e:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000c30:	2300      	movs	r3, #0
 8000c32:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000c34:	2300      	movs	r3, #0
 8000c36:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000c38:	2300      	movs	r3, #0
 8000c3a:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8000c3c:	f107 030c 	add.w	r3, r7, #12
 8000c40:	2100      	movs	r1, #0
 8000c42:	4618      	mov	r0, r3
 8000c44:	f001 fb88 	bl	8002358 <HAL_RCC_ClockConfig>
 8000c48:	4603      	mov	r3, r0
 8000c4a:	2b00      	cmp	r3, #0
 8000c4c:	d001      	beq.n	8000c52 <SystemClock_Config+0xae>
  {
    Error_Handler();
 8000c4e:	f000 f813 	bl	8000c78 <Error_Handler>
  }
}
 8000c52:	bf00      	nop
 8000c54:	3750      	adds	r7, #80	@ 0x50
 8000c56:	46bd      	mov	sp, r7
 8000c58:	bd80      	pop	{r7, pc}
 8000c5a:	bf00      	nop
 8000c5c:	40023800 	.word	0x40023800
 8000c60:	40007000 	.word	0x40007000

08000c64 <HAL_UART_RxCpltCallback>:

/* USER CODE BEGIN 4 */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8000c64:	b480      	push	{r7}
 8000c66:	b087      	sub	sp, #28
 8000c68:	af00      	add	r7, sp, #0
 8000c6a:	6078      	str	r0, [r7, #4]
  if (TESTING_MODE) return;
 8000c6c:	bf00      	nop
  }
  else if (ReceiveCharacter == '2') {
	  sprintf((char *)OutputBuffer, "HC");
	  PrintOutputBuffer(OutputBuffer);
  }
}
 8000c6e:	371c      	adds	r7, #28
 8000c70:	46bd      	mov	sp, r7
 8000c72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c76:	4770      	bx	lr

08000c78 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000c78:	b480      	push	{r7}
 8000c7a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000c7c:	b672      	cpsid	i
}
 8000c7e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000c80:	bf00      	nop
 8000c82:	e7fd      	b.n	8000c80 <Error_Handler+0x8>

08000c84 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000c84:	b480      	push	{r7}
 8000c86:	b083      	sub	sp, #12
 8000c88:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000c8a:	2300      	movs	r3, #0
 8000c8c:	607b      	str	r3, [r7, #4]
 8000c8e:	4b10      	ldr	r3, [pc, #64]	@ (8000cd0 <HAL_MspInit+0x4c>)
 8000c90:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000c92:	4a0f      	ldr	r2, [pc, #60]	@ (8000cd0 <HAL_MspInit+0x4c>)
 8000c94:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000c98:	6453      	str	r3, [r2, #68]	@ 0x44
 8000c9a:	4b0d      	ldr	r3, [pc, #52]	@ (8000cd0 <HAL_MspInit+0x4c>)
 8000c9c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000c9e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8000ca2:	607b      	str	r3, [r7, #4]
 8000ca4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ca6:	2300      	movs	r3, #0
 8000ca8:	603b      	str	r3, [r7, #0]
 8000caa:	4b09      	ldr	r3, [pc, #36]	@ (8000cd0 <HAL_MspInit+0x4c>)
 8000cac:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000cae:	4a08      	ldr	r2, [pc, #32]	@ (8000cd0 <HAL_MspInit+0x4c>)
 8000cb0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000cb4:	6413      	str	r3, [r2, #64]	@ 0x40
 8000cb6:	4b06      	ldr	r3, [pc, #24]	@ (8000cd0 <HAL_MspInit+0x4c>)
 8000cb8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000cba:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000cbe:	603b      	str	r3, [r7, #0]
 8000cc0:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000cc2:	bf00      	nop
 8000cc4:	370c      	adds	r7, #12
 8000cc6:	46bd      	mov	sp, r7
 8000cc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ccc:	4770      	bx	lr
 8000cce:	bf00      	nop
 8000cd0:	40023800 	.word	0x40023800

08000cd4 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000cd4:	b480      	push	{r7}
 8000cd6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8000cd8:	bf00      	nop
 8000cda:	e7fd      	b.n	8000cd8 <NMI_Handler+0x4>

08000cdc <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000cdc:	b480      	push	{r7}
 8000cde:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000ce0:	bf00      	nop
 8000ce2:	e7fd      	b.n	8000ce0 <HardFault_Handler+0x4>

08000ce4 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000ce4:	b480      	push	{r7}
 8000ce6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000ce8:	bf00      	nop
 8000cea:	e7fd      	b.n	8000ce8 <MemManage_Handler+0x4>

08000cec <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000cec:	b480      	push	{r7}
 8000cee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000cf0:	bf00      	nop
 8000cf2:	e7fd      	b.n	8000cf0 <BusFault_Handler+0x4>

08000cf4 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000cf4:	b480      	push	{r7}
 8000cf6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000cf8:	bf00      	nop
 8000cfa:	e7fd      	b.n	8000cf8 <UsageFault_Handler+0x4>

08000cfc <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000cfc:	b480      	push	{r7}
 8000cfe:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000d00:	bf00      	nop
 8000d02:	46bd      	mov	sp, r7
 8000d04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d08:	4770      	bx	lr

08000d0a <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000d0a:	b480      	push	{r7}
 8000d0c:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000d0e:	bf00      	nop
 8000d10:	46bd      	mov	sp, r7
 8000d12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d16:	4770      	bx	lr

08000d18 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000d18:	b480      	push	{r7}
 8000d1a:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000d1c:	bf00      	nop
 8000d1e:	46bd      	mov	sp, r7
 8000d20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d24:	4770      	bx	lr

08000d26 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000d26:	b580      	push	{r7, lr}
 8000d28:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000d2a:	f000 fbed 	bl	8001508 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000d2e:	bf00      	nop
 8000d30:	bd80      	pop	{r7, pc}
	...

08000d34 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 8000d34:	b580      	push	{r7, lr}
 8000d36:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8000d38:	4802      	ldr	r0, [pc, #8]	@ (8000d44 <USART2_IRQHandler+0x10>)
 8000d3a:	f001 fded 	bl	8002918 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */
//  HAL_UART_RxCpltCallback(&huart2);
  /* USER CODE END USART2_IRQn 1 */
}
 8000d3e:	bf00      	nop
 8000d40:	bd80      	pop	{r7, pc}
 8000d42:	bf00      	nop
 8000d44:	2000020c 	.word	0x2000020c

08000d48 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000d48:	b580      	push	{r7, lr}
 8000d4a:	b086      	sub	sp, #24
 8000d4c:	af00      	add	r7, sp, #0
 8000d4e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000d50:	4a14      	ldr	r2, [pc, #80]	@ (8000da4 <_sbrk+0x5c>)
 8000d52:	4b15      	ldr	r3, [pc, #84]	@ (8000da8 <_sbrk+0x60>)
 8000d54:	1ad3      	subs	r3, r2, r3
 8000d56:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000d58:	697b      	ldr	r3, [r7, #20]
 8000d5a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000d5c:	4b13      	ldr	r3, [pc, #76]	@ (8000dac <_sbrk+0x64>)
 8000d5e:	681b      	ldr	r3, [r3, #0]
 8000d60:	2b00      	cmp	r3, #0
 8000d62:	d102      	bne.n	8000d6a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000d64:	4b11      	ldr	r3, [pc, #68]	@ (8000dac <_sbrk+0x64>)
 8000d66:	4a12      	ldr	r2, [pc, #72]	@ (8000db0 <_sbrk+0x68>)
 8000d68:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000d6a:	4b10      	ldr	r3, [pc, #64]	@ (8000dac <_sbrk+0x64>)
 8000d6c:	681a      	ldr	r2, [r3, #0]
 8000d6e:	687b      	ldr	r3, [r7, #4]
 8000d70:	4413      	add	r3, r2
 8000d72:	693a      	ldr	r2, [r7, #16]
 8000d74:	429a      	cmp	r2, r3
 8000d76:	d207      	bcs.n	8000d88 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000d78:	f002 fd4c 	bl	8003814 <__errno>
 8000d7c:	4603      	mov	r3, r0
 8000d7e:	220c      	movs	r2, #12
 8000d80:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000d82:	f04f 33ff 	mov.w	r3, #4294967295
 8000d86:	e009      	b.n	8000d9c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000d88:	4b08      	ldr	r3, [pc, #32]	@ (8000dac <_sbrk+0x64>)
 8000d8a:	681b      	ldr	r3, [r3, #0]
 8000d8c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000d8e:	4b07      	ldr	r3, [pc, #28]	@ (8000dac <_sbrk+0x64>)
 8000d90:	681a      	ldr	r2, [r3, #0]
 8000d92:	687b      	ldr	r3, [r7, #4]
 8000d94:	4413      	add	r3, r2
 8000d96:	4a05      	ldr	r2, [pc, #20]	@ (8000dac <_sbrk+0x64>)
 8000d98:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000d9a:	68fb      	ldr	r3, [r7, #12]
}
 8000d9c:	4618      	mov	r0, r3
 8000d9e:	3718      	adds	r7, #24
 8000da0:	46bd      	mov	sp, r7
 8000da2:	bd80      	pop	{r7, pc}
 8000da4:	20018000 	.word	0x20018000
 8000da8:	00000400 	.word	0x00000400
 8000dac:	200001fc 	.word	0x200001fc
 8000db0:	200003a0 	.word	0x200003a0

08000db4 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000db4:	b480      	push	{r7}
 8000db6:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000db8:	4b06      	ldr	r3, [pc, #24]	@ (8000dd4 <SystemInit+0x20>)
 8000dba:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8000dbe:	4a05      	ldr	r2, [pc, #20]	@ (8000dd4 <SystemInit+0x20>)
 8000dc0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8000dc4:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000dc8:	bf00      	nop
 8000dca:	46bd      	mov	sp, r7
 8000dcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dd0:	4770      	bx	lr
 8000dd2:	bf00      	nop
 8000dd4:	e000ed00 	.word	0xe000ed00

08000dd8 <Update_Test_Sensor_Values_hc>:
uint32_t TestConverter_Number = 0;
uint32_t Test_Sensor_Voltage = 0;
uint32_t Test_Sensor_Current = 0;

void Update_Test_Sensor_Values_hc(uint32_t Voltage, uint32_t Current)
{
 8000dd8:	b480      	push	{r7}
 8000dda:	b083      	sub	sp, #12
 8000ddc:	af00      	add	r7, sp, #0
 8000dde:	6078      	str	r0, [r7, #4]
 8000de0:	6039      	str	r1, [r7, #0]
	Test_Sensor_Voltage = Voltage;
 8000de2:	4a06      	ldr	r2, [pc, #24]	@ (8000dfc <Update_Test_Sensor_Values_hc+0x24>)
 8000de4:	687b      	ldr	r3, [r7, #4]
 8000de6:	6013      	str	r3, [r2, #0]
	Test_Sensor_Current = Current;
 8000de8:	4a05      	ldr	r2, [pc, #20]	@ (8000e00 <Update_Test_Sensor_Values_hc+0x28>)
 8000dea:	683b      	ldr	r3, [r7, #0]
 8000dec:	6013      	str	r3, [r2, #0]
}
 8000dee:	bf00      	nop
 8000df0:	370c      	adds	r7, #12
 8000df2:	46bd      	mov	sp, r7
 8000df4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000df8:	4770      	bx	lr
 8000dfa:	bf00      	nop
 8000dfc:	20000204 	.word	0x20000204
 8000e00:	20000208 	.word	0x20000208

08000e04 <TestRead_Sensor_ValuesACS37800>:

void TestRead_Sensor_ValuesACS37800(uint8_t Converter_Index, int32_t *Voltage, int32_t *Current)
{
 8000e04:	b480      	push	{r7}
 8000e06:	b085      	sub	sp, #20
 8000e08:	af00      	add	r7, sp, #0
 8000e0a:	4603      	mov	r3, r0
 8000e0c:	60b9      	str	r1, [r7, #8]
 8000e0e:	607a      	str	r2, [r7, #4]
 8000e10:	73fb      	strb	r3, [r7, #15]
	*Voltage = Test_Sensor_Voltage;
 8000e12:	4b08      	ldr	r3, [pc, #32]	@ (8000e34 <TestRead_Sensor_ValuesACS37800+0x30>)
 8000e14:	681b      	ldr	r3, [r3, #0]
 8000e16:	461a      	mov	r2, r3
 8000e18:	68bb      	ldr	r3, [r7, #8]
 8000e1a:	601a      	str	r2, [r3, #0]
	*Current = Test_Sensor_Current;
 8000e1c:	4b06      	ldr	r3, [pc, #24]	@ (8000e38 <TestRead_Sensor_ValuesACS37800+0x34>)
 8000e1e:	681b      	ldr	r3, [r3, #0]
 8000e20:	461a      	mov	r2, r3
 8000e22:	687b      	ldr	r3, [r7, #4]
 8000e24:	601a      	str	r2, [r3, #0]
}
 8000e26:	bf00      	nop
 8000e28:	3714      	adds	r7, #20
 8000e2a:	46bd      	mov	sp, r7
 8000e2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e30:	4770      	bx	lr
 8000e32:	bf00      	nop
 8000e34:	20000204 	.word	0x20000204
 8000e38:	20000208 	.word	0x20000208

08000e3c <TestUpdate_Reference_Voltage_TPS55288>:

void TestUpdate_Reference_Voltage_TPS55288(uint8_t Converter_Index, uint8_t Increase, uint8_t Change_Amount)
{
 8000e3c:	b580      	push	{r7, lr}
 8000e3e:	b086      	sub	sp, #24
 8000e40:	af00      	add	r7, sp, #0
 8000e42:	4603      	mov	r3, r0
 8000e44:	71fb      	strb	r3, [r7, #7]
 8000e46:	460b      	mov	r3, r1
 8000e48:	71bb      	strb	r3, [r7, #6]
 8000e4a:	4613      	mov	r3, r2
 8000e4c:	717b      	strb	r3, [r7, #5]
	uint8_t TestOutputBuffer[13];
	switch (Increase) {
 8000e4e:	79bb      	ldrb	r3, [r7, #6]
 8000e50:	2b00      	cmp	r3, #0
 8000e52:	d00d      	beq.n	8000e70 <TestUpdate_Reference_Voltage_TPS55288+0x34>
 8000e54:	2b01      	cmp	r3, #1
 8000e56:	d117      	bne.n	8000e88 <TestUpdate_Reference_Voltage_TPS55288+0x4c>
	case 1:
		sprintf((char *)TestOutputBuffer, "Increasing\r\n");
 8000e58:	f107 0308 	add.w	r3, r7, #8
 8000e5c:	490c      	ldr	r1, [pc, #48]	@ (8000e90 <TestUpdate_Reference_Voltage_TPS55288+0x54>)
 8000e5e:	4618      	mov	r0, r3
 8000e60:	f002 fcb0 	bl	80037c4 <siprintf>
		PrintOutputBuffer(TestOutputBuffer);
 8000e64:	f107 0308 	add.w	r3, r7, #8
 8000e68:	4618      	mov	r0, r3
 8000e6a:	f000 faab 	bl	80013c4 <PrintOutputBuffer>
		break;
 8000e6e:	e00b      	b.n	8000e88 <TestUpdate_Reference_Voltage_TPS55288+0x4c>
	case 0:
		sprintf((char *)TestOutputBuffer, "Decreasing\r\n");
 8000e70:	f107 0308 	add.w	r3, r7, #8
 8000e74:	4907      	ldr	r1, [pc, #28]	@ (8000e94 <TestUpdate_Reference_Voltage_TPS55288+0x58>)
 8000e76:	4618      	mov	r0, r3
 8000e78:	f002 fca4 	bl	80037c4 <siprintf>
		PrintOutputBuffer(TestOutputBuffer);
 8000e7c:	f107 0308 	add.w	r3, r7, #8
 8000e80:	4618      	mov	r0, r3
 8000e82:	f000 fa9f 	bl	80013c4 <PrintOutputBuffer>
		break;
 8000e86:	bf00      	nop
	}
}
 8000e88:	bf00      	nop
 8000e8a:	3718      	adds	r7, #24
 8000e8c:	46bd      	mov	sp, r7
 8000e8e:	bd80      	pop	{r7, pc}
 8000e90:	0800431c 	.word	0x0800431c
 8000e94:	0800432c 	.word	0x0800432c

08000e98 <TestInitialize_HillClimbing>:

void TestInitialize_HillClimbing(uint32_t Number_of_Converters, TestSolarPanel_hc *Panels)
{
 8000e98:	b580      	push	{r7, lr}
 8000e9a:	b086      	sub	sp, #24
 8000e9c:	af00      	add	r7, sp, #0
 8000e9e:	6078      	str	r0, [r7, #4]
 8000ea0:	6039      	str	r1, [r7, #0]
	TestConverter_Number = Number_of_Converters;
 8000ea2:	4a2c      	ldr	r2, [pc, #176]	@ (8000f54 <TestInitialize_HillClimbing+0xbc>)
 8000ea4:	687b      	ldr	r3, [r7, #4]
 8000ea6:	6013      	str	r3, [r2, #0]
	int32_t Voltage;
	int32_t Current;
	for (int i = 0; i < TestConverter_Number; i++) {
 8000ea8:	2300      	movs	r3, #0
 8000eaa:	617b      	str	r3, [r7, #20]
 8000eac:	e047      	b.n	8000f3e <TestInitialize_HillClimbing+0xa6>
		TestGet_Sensor_Values_for_Panel_hc(i, &Voltage, &Current);
 8000eae:	697b      	ldr	r3, [r7, #20]
 8000eb0:	b2db      	uxtb	r3, r3
 8000eb2:	f107 020c 	add.w	r2, r7, #12
 8000eb6:	f107 0110 	add.w	r1, r7, #16
 8000eba:	4618      	mov	r0, r3
 8000ebc:	f000 f84c 	bl	8000f58 <TestGet_Sensor_Values_for_Panel_hc>
		Panels[i].Current_Current = Current;
 8000ec0:	697a      	ldr	r2, [r7, #20]
 8000ec2:	4613      	mov	r3, r2
 8000ec4:	009b      	lsls	r3, r3, #2
 8000ec6:	4413      	add	r3, r2
 8000ec8:	009b      	lsls	r3, r3, #2
 8000eca:	461a      	mov	r2, r3
 8000ecc:	683b      	ldr	r3, [r7, #0]
 8000ece:	4413      	add	r3, r2
 8000ed0:	68fa      	ldr	r2, [r7, #12]
 8000ed2:	60da      	str	r2, [r3, #12]
		Panels[i].Current_Voltage = Voltage;
 8000ed4:	697a      	ldr	r2, [r7, #20]
 8000ed6:	4613      	mov	r3, r2
 8000ed8:	009b      	lsls	r3, r3, #2
 8000eda:	4413      	add	r3, r2
 8000edc:	009b      	lsls	r3, r3, #2
 8000ede:	461a      	mov	r2, r3
 8000ee0:	683b      	ldr	r3, [r7, #0]
 8000ee2:	4413      	add	r3, r2
 8000ee4:	693a      	ldr	r2, [r7, #16]
 8000ee6:	605a      	str	r2, [r3, #4]
		Panels[i].Previous_Current = Current;
 8000ee8:	697a      	ldr	r2, [r7, #20]
 8000eea:	4613      	mov	r3, r2
 8000eec:	009b      	lsls	r3, r3, #2
 8000eee:	4413      	add	r3, r2
 8000ef0:	009b      	lsls	r3, r3, #2
 8000ef2:	461a      	mov	r2, r3
 8000ef4:	683b      	ldr	r3, [r7, #0]
 8000ef6:	4413      	add	r3, r2
 8000ef8:	68fa      	ldr	r2, [r7, #12]
 8000efa:	609a      	str	r2, [r3, #8]
		Panels[i].Previous_Voltage = Voltage;
 8000efc:	697a      	ldr	r2, [r7, #20]
 8000efe:	4613      	mov	r3, r2
 8000f00:	009b      	lsls	r3, r3, #2
 8000f02:	4413      	add	r3, r2
 8000f04:	009b      	lsls	r3, r3, #2
 8000f06:	461a      	mov	r2, r3
 8000f08:	683b      	ldr	r3, [r7, #0]
 8000f0a:	4413      	add	r3, r2
 8000f0c:	693a      	ldr	r2, [r7, #16]
 8000f0e:	601a      	str	r2, [r3, #0]
		Panels[i].Shading_Conditions = NOT_SHADED;
 8000f10:	697a      	ldr	r2, [r7, #20]
 8000f12:	4613      	mov	r3, r2
 8000f14:	009b      	lsls	r3, r3, #2
 8000f16:	4413      	add	r3, r2
 8000f18:	009b      	lsls	r3, r3, #2
 8000f1a:	461a      	mov	r2, r3
 8000f1c:	683b      	ldr	r3, [r7, #0]
 8000f1e:	4413      	add	r3, r2
 8000f20:	2200      	movs	r2, #0
 8000f22:	741a      	strb	r2, [r3, #16]
		Panels[i].At_MPP = NOT_AT_MPP;
 8000f24:	697a      	ldr	r2, [r7, #20]
 8000f26:	4613      	mov	r3, r2
 8000f28:	009b      	lsls	r3, r3, #2
 8000f2a:	4413      	add	r3, r2
 8000f2c:	009b      	lsls	r3, r3, #2
 8000f2e:	461a      	mov	r2, r3
 8000f30:	683b      	ldr	r3, [r7, #0]
 8000f32:	4413      	add	r3, r2
 8000f34:	2200      	movs	r2, #0
 8000f36:	745a      	strb	r2, [r3, #17]
	for (int i = 0; i < TestConverter_Number; i++) {
 8000f38:	697b      	ldr	r3, [r7, #20]
 8000f3a:	3301      	adds	r3, #1
 8000f3c:	617b      	str	r3, [r7, #20]
 8000f3e:	697a      	ldr	r2, [r7, #20]
 8000f40:	4b04      	ldr	r3, [pc, #16]	@ (8000f54 <TestInitialize_HillClimbing+0xbc>)
 8000f42:	681b      	ldr	r3, [r3, #0]
 8000f44:	429a      	cmp	r2, r3
 8000f46:	d3b2      	bcc.n	8000eae <TestInitialize_HillClimbing+0x16>
	}
}
 8000f48:	bf00      	nop
 8000f4a:	bf00      	nop
 8000f4c:	3718      	adds	r7, #24
 8000f4e:	46bd      	mov	sp, r7
 8000f50:	bd80      	pop	{r7, pc}
 8000f52:	bf00      	nop
 8000f54:	20000200 	.word	0x20000200

08000f58 <TestGet_Sensor_Values_for_Panel_hc>:

void TestGet_Sensor_Values_for_Panel_hc(uint8_t Converter_Index, int32_t *Voltage, int32_t *Current)
{
 8000f58:	b580      	push	{r7, lr}
 8000f5a:	b084      	sub	sp, #16
 8000f5c:	af00      	add	r7, sp, #0
 8000f5e:	4603      	mov	r3, r0
 8000f60:	60b9      	str	r1, [r7, #8]
 8000f62:	607a      	str	r2, [r7, #4]
 8000f64:	73fb      	strb	r3, [r7, #15]
	TestRead_Sensor_ValuesACS37800(Converter_Index, Voltage, Current);
 8000f66:	7bfb      	ldrb	r3, [r7, #15]
 8000f68:	687a      	ldr	r2, [r7, #4]
 8000f6a:	68b9      	ldr	r1, [r7, #8]
 8000f6c:	4618      	mov	r0, r3
 8000f6e:	f7ff ff49 	bl	8000e04 <TestRead_Sensor_ValuesACS37800>
}
 8000f72:	bf00      	nop
 8000f74:	3710      	adds	r7, #16
 8000f76:	46bd      	mov	sp, r7
 8000f78:	bd80      	pop	{r7, pc}

08000f7a <TestCalculate_Power_hc>:

int32_t TestCalculate_Power_hc(int32_t Voltage, int32_t Current)
{
 8000f7a:	b480      	push	{r7}
 8000f7c:	b083      	sub	sp, #12
 8000f7e:	af00      	add	r7, sp, #0
 8000f80:	6078      	str	r0, [r7, #4]
 8000f82:	6039      	str	r1, [r7, #0]
	return Voltage * Current;
 8000f84:	687b      	ldr	r3, [r7, #4]
 8000f86:	683a      	ldr	r2, [r7, #0]
 8000f88:	fb02 f303 	mul.w	r3, r2, r3
}
 8000f8c:	4618      	mov	r0, r3
 8000f8e:	370c      	adds	r7, #12
 8000f90:	46bd      	mov	sp, r7
 8000f92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f96:	4770      	bx	lr

08000f98 <TestCalculate_Average_Current_hc>:

int32_t TestCalculate_Average_Current_hc(TestSolarPanel_hc *Panels)
{
 8000f98:	b480      	push	{r7}
 8000f9a:	b085      	sub	sp, #20
 8000f9c:	af00      	add	r7, sp, #0
 8000f9e:	6078      	str	r0, [r7, #4]
	uint32_t Total_Current = 0;
 8000fa0:	2300      	movs	r3, #0
 8000fa2:	60fb      	str	r3, [r7, #12]
	for (int i = 0; i < TestConverter_Number; i++) {
 8000fa4:	2300      	movs	r3, #0
 8000fa6:	60bb      	str	r3, [r7, #8]
 8000fa8:	e00f      	b.n	8000fca <TestCalculate_Average_Current_hc+0x32>
		Total_Current = Total_Current + Panels[i].Current_Current;
 8000faa:	68ba      	ldr	r2, [r7, #8]
 8000fac:	4613      	mov	r3, r2
 8000fae:	009b      	lsls	r3, r3, #2
 8000fb0:	4413      	add	r3, r2
 8000fb2:	009b      	lsls	r3, r3, #2
 8000fb4:	461a      	mov	r2, r3
 8000fb6:	687b      	ldr	r3, [r7, #4]
 8000fb8:	4413      	add	r3, r2
 8000fba:	68db      	ldr	r3, [r3, #12]
 8000fbc:	461a      	mov	r2, r3
 8000fbe:	68fb      	ldr	r3, [r7, #12]
 8000fc0:	4413      	add	r3, r2
 8000fc2:	60fb      	str	r3, [r7, #12]
	for (int i = 0; i < TestConverter_Number; i++) {
 8000fc4:	68bb      	ldr	r3, [r7, #8]
 8000fc6:	3301      	adds	r3, #1
 8000fc8:	60bb      	str	r3, [r7, #8]
 8000fca:	68ba      	ldr	r2, [r7, #8]
 8000fcc:	4b07      	ldr	r3, [pc, #28]	@ (8000fec <TestCalculate_Average_Current_hc+0x54>)
 8000fce:	681b      	ldr	r3, [r3, #0]
 8000fd0:	429a      	cmp	r2, r3
 8000fd2:	d3ea      	bcc.n	8000faa <TestCalculate_Average_Current_hc+0x12>
	}
	return Total_Current / TestConverter_Number;
 8000fd4:	4b05      	ldr	r3, [pc, #20]	@ (8000fec <TestCalculate_Average_Current_hc+0x54>)
 8000fd6:	681b      	ldr	r3, [r3, #0]
 8000fd8:	68fa      	ldr	r2, [r7, #12]
 8000fda:	fbb2 f3f3 	udiv	r3, r2, r3
}
 8000fde:	4618      	mov	r0, r3
 8000fe0:	3714      	adds	r7, #20
 8000fe2:	46bd      	mov	sp, r7
 8000fe4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fe8:	4770      	bx	lr
 8000fea:	bf00      	nop
 8000fec:	20000200 	.word	0x20000200

08000ff0 <TestChange_Panel_Values_hc>:

void TestChange_Panel_Values_hc(uint8_t Converter_Index, uint8_t Increase, uint8_t Change_Amount)
{
 8000ff0:	b580      	push	{r7, lr}
 8000ff2:	b082      	sub	sp, #8
 8000ff4:	af00      	add	r7, sp, #0
 8000ff6:	4603      	mov	r3, r0
 8000ff8:	71fb      	strb	r3, [r7, #7]
 8000ffa:	460b      	mov	r3, r1
 8000ffc:	71bb      	strb	r3, [r7, #6]
 8000ffe:	4613      	mov	r3, r2
 8001000:	717b      	strb	r3, [r7, #5]
	TestUpdate_Reference_Voltage_TPS55288(Converter_Index, Increase, Change_Amount);
 8001002:	797a      	ldrb	r2, [r7, #5]
 8001004:	79b9      	ldrb	r1, [r7, #6]
 8001006:	79fb      	ldrb	r3, [r7, #7]
 8001008:	4618      	mov	r0, r3
 800100a:	f7ff ff17 	bl	8000e3c <TestUpdate_Reference_Voltage_TPS55288>
}
 800100e:	bf00      	nop
 8001010:	3708      	adds	r7, #8
 8001012:	46bd      	mov	sp, r7
 8001014:	bd80      	pop	{r7, pc}

08001016 <TestUpdate_Panel_Parameters_hc>:

void TestUpdate_Panel_Parameters_hc(uint8_t Converter_Index, uint32_t New_Voltage, uint32_t New_Current, uint8_t At_mpp, uint8_t Partially_shaded, TestSolarPanel_hc *Panels)
{
 8001016:	b480      	push	{r7}
 8001018:	b085      	sub	sp, #20
 800101a:	af00      	add	r7, sp, #0
 800101c:	60b9      	str	r1, [r7, #8]
 800101e:	607a      	str	r2, [r7, #4]
 8001020:	461a      	mov	r2, r3
 8001022:	4603      	mov	r3, r0
 8001024:	73fb      	strb	r3, [r7, #15]
 8001026:	4613      	mov	r3, r2
 8001028:	73bb      	strb	r3, [r7, #14]
	Panels[Converter_Index].Previous_Current = Panels[Converter_Index].Current_Current;
 800102a:	7bfa      	ldrb	r2, [r7, #15]
 800102c:	4613      	mov	r3, r2
 800102e:	009b      	lsls	r3, r3, #2
 8001030:	4413      	add	r3, r2
 8001032:	009b      	lsls	r3, r3, #2
 8001034:	461a      	mov	r2, r3
 8001036:	69fb      	ldr	r3, [r7, #28]
 8001038:	1899      	adds	r1, r3, r2
 800103a:	7bfa      	ldrb	r2, [r7, #15]
 800103c:	4613      	mov	r3, r2
 800103e:	009b      	lsls	r3, r3, #2
 8001040:	4413      	add	r3, r2
 8001042:	009b      	lsls	r3, r3, #2
 8001044:	461a      	mov	r2, r3
 8001046:	69fb      	ldr	r3, [r7, #28]
 8001048:	4413      	add	r3, r2
 800104a:	68ca      	ldr	r2, [r1, #12]
 800104c:	609a      	str	r2, [r3, #8]
	Panels[Converter_Index].Previous_Voltage = Panels[Converter_Index].Current_Voltage;
 800104e:	7bfa      	ldrb	r2, [r7, #15]
 8001050:	4613      	mov	r3, r2
 8001052:	009b      	lsls	r3, r3, #2
 8001054:	4413      	add	r3, r2
 8001056:	009b      	lsls	r3, r3, #2
 8001058:	461a      	mov	r2, r3
 800105a:	69fb      	ldr	r3, [r7, #28]
 800105c:	1899      	adds	r1, r3, r2
 800105e:	7bfa      	ldrb	r2, [r7, #15]
 8001060:	4613      	mov	r3, r2
 8001062:	009b      	lsls	r3, r3, #2
 8001064:	4413      	add	r3, r2
 8001066:	009b      	lsls	r3, r3, #2
 8001068:	461a      	mov	r2, r3
 800106a:	69fb      	ldr	r3, [r7, #28]
 800106c:	4413      	add	r3, r2
 800106e:	684a      	ldr	r2, [r1, #4]
 8001070:	601a      	str	r2, [r3, #0]
	Panels[Converter_Index].Current_Current = New_Current;
 8001072:	7bfa      	ldrb	r2, [r7, #15]
 8001074:	4613      	mov	r3, r2
 8001076:	009b      	lsls	r3, r3, #2
 8001078:	4413      	add	r3, r2
 800107a:	009b      	lsls	r3, r3, #2
 800107c:	461a      	mov	r2, r3
 800107e:	69fb      	ldr	r3, [r7, #28]
 8001080:	4413      	add	r3, r2
 8001082:	687a      	ldr	r2, [r7, #4]
 8001084:	60da      	str	r2, [r3, #12]
	Panels[Converter_Index].Current_Voltage = New_Voltage;
 8001086:	7bfa      	ldrb	r2, [r7, #15]
 8001088:	4613      	mov	r3, r2
 800108a:	009b      	lsls	r3, r3, #2
 800108c:	4413      	add	r3, r2
 800108e:	009b      	lsls	r3, r3, #2
 8001090:	461a      	mov	r2, r3
 8001092:	69fb      	ldr	r3, [r7, #28]
 8001094:	4413      	add	r3, r2
 8001096:	68ba      	ldr	r2, [r7, #8]
 8001098:	605a      	str	r2, [r3, #4]
	Panels[Converter_Index].Shading_Conditions = Partially_shaded;
 800109a:	7bfa      	ldrb	r2, [r7, #15]
 800109c:	4613      	mov	r3, r2
 800109e:	009b      	lsls	r3, r3, #2
 80010a0:	4413      	add	r3, r2
 80010a2:	009b      	lsls	r3, r3, #2
 80010a4:	461a      	mov	r2, r3
 80010a6:	69fb      	ldr	r3, [r7, #28]
 80010a8:	4413      	add	r3, r2
 80010aa:	7e3a      	ldrb	r2, [r7, #24]
 80010ac:	741a      	strb	r2, [r3, #16]
	Panels[Converter_Index].At_MPP = At_mpp;
 80010ae:	7bfa      	ldrb	r2, [r7, #15]
 80010b0:	4613      	mov	r3, r2
 80010b2:	009b      	lsls	r3, r3, #2
 80010b4:	4413      	add	r3, r2
 80010b6:	009b      	lsls	r3, r3, #2
 80010b8:	461a      	mov	r2, r3
 80010ba:	69fb      	ldr	r3, [r7, #28]
 80010bc:	4413      	add	r3, r2
 80010be:	7bba      	ldrb	r2, [r7, #14]
 80010c0:	745a      	strb	r2, [r3, #17]
}
 80010c2:	bf00      	nop
 80010c4:	3714      	adds	r7, #20
 80010c6:	46bd      	mov	sp, r7
 80010c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010cc:	4770      	bx	lr
	...

080010d0 <TestCheck_if_All_are_MPPT_hc>:

uint8_t TestCheck_if_All_are_MPPT_hc(TestSolarPanel_hc *Panels)
{
 80010d0:	b480      	push	{r7}
 80010d2:	b085      	sub	sp, #20
 80010d4:	af00      	add	r7, sp, #0
 80010d6:	6078      	str	r0, [r7, #4]
	for (int i = 0; i < TestConverter_Number; i++) {
 80010d8:	2300      	movs	r3, #0
 80010da:	60fb      	str	r3, [r7, #12]
 80010dc:	e00f      	b.n	80010fe <TestCheck_if_All_are_MPPT_hc+0x2e>
		if (!(Panels[i].At_MPP)) {
 80010de:	68fa      	ldr	r2, [r7, #12]
 80010e0:	4613      	mov	r3, r2
 80010e2:	009b      	lsls	r3, r3, #2
 80010e4:	4413      	add	r3, r2
 80010e6:	009b      	lsls	r3, r3, #2
 80010e8:	461a      	mov	r2, r3
 80010ea:	687b      	ldr	r3, [r7, #4]
 80010ec:	4413      	add	r3, r2
 80010ee:	7c5b      	ldrb	r3, [r3, #17]
 80010f0:	2b00      	cmp	r3, #0
 80010f2:	d101      	bne.n	80010f8 <TestCheck_if_All_are_MPPT_hc+0x28>
			return 0;
 80010f4:	2300      	movs	r3, #0
 80010f6:	e008      	b.n	800110a <TestCheck_if_All_are_MPPT_hc+0x3a>
	for (int i = 0; i < TestConverter_Number; i++) {
 80010f8:	68fb      	ldr	r3, [r7, #12]
 80010fa:	3301      	adds	r3, #1
 80010fc:	60fb      	str	r3, [r7, #12]
 80010fe:	68fa      	ldr	r2, [r7, #12]
 8001100:	4b05      	ldr	r3, [pc, #20]	@ (8001118 <TestCheck_if_All_are_MPPT_hc+0x48>)
 8001102:	681b      	ldr	r3, [r3, #0]
 8001104:	429a      	cmp	r2, r3
 8001106:	d3ea      	bcc.n	80010de <TestCheck_if_All_are_MPPT_hc+0xe>
		}
	}
	return 1;
 8001108:	2301      	movs	r3, #1
}
 800110a:	4618      	mov	r0, r3
 800110c:	3714      	adds	r7, #20
 800110e:	46bd      	mov	sp, r7
 8001110:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001114:	4770      	bx	lr
 8001116:	bf00      	nop
 8001118:	20000200 	.word	0x20000200

0800111c <TestUpdate_Panel_State_hc>:

void TestUpdate_Panel_State_hc(uint8_t Converter_Index, TestSolarPanel_hc *Panels)
{
 800111c:	b590      	push	{r4, r7, lr}
 800111e:	b08d      	sub	sp, #52	@ 0x34
 8001120:	af02      	add	r7, sp, #8
 8001122:	4603      	mov	r3, r0
 8001124:	6039      	str	r1, [r7, #0]
 8001126:	71fb      	strb	r3, [r7, #7]
	int32_t Previous_Voltage = Panels[Converter_Index].Current_Voltage;
 8001128:	79fa      	ldrb	r2, [r7, #7]
 800112a:	4613      	mov	r3, r2
 800112c:	009b      	lsls	r3, r3, #2
 800112e:	4413      	add	r3, r2
 8001130:	009b      	lsls	r3, r3, #2
 8001132:	461a      	mov	r2, r3
 8001134:	683b      	ldr	r3, [r7, #0]
 8001136:	4413      	add	r3, r2
 8001138:	685b      	ldr	r3, [r3, #4]
 800113a:	623b      	str	r3, [r7, #32]
	int32_t Previous_Current = Panels[Converter_Index].Current_Current;
 800113c:	79fa      	ldrb	r2, [r7, #7]
 800113e:	4613      	mov	r3, r2
 8001140:	009b      	lsls	r3, r3, #2
 8001142:	4413      	add	r3, r2
 8001144:	009b      	lsls	r3, r3, #2
 8001146:	461a      	mov	r2, r3
 8001148:	683b      	ldr	r3, [r7, #0]
 800114a:	4413      	add	r3, r2
 800114c:	68db      	ldr	r3, [r3, #12]
 800114e:	61fb      	str	r3, [r7, #28]
	int32_t Voltage;
	int32_t Current;
	TestGet_Sensor_Values_for_Panel_hc(Converter_Index, &Voltage, &Current);
 8001150:	f107 0208 	add.w	r2, r7, #8
 8001154:	f107 010c 	add.w	r1, r7, #12
 8001158:	79fb      	ldrb	r3, [r7, #7]
 800115a:	4618      	mov	r0, r3
 800115c:	f7ff fefc 	bl	8000f58 <TestGet_Sensor_Values_for_Panel_hc>
	int32_t Power = TestCalculate_Power_hc(Voltage, Current);
 8001160:	68fb      	ldr	r3, [r7, #12]
 8001162:	68ba      	ldr	r2, [r7, #8]
 8001164:	4611      	mov	r1, r2
 8001166:	4618      	mov	r0, r3
 8001168:	f7ff ff07 	bl	8000f7a <TestCalculate_Power_hc>
 800116c:	61b8      	str	r0, [r7, #24]
	int32_t Previous_Power = TestCalculate_Power_hc(Previous_Voltage, Previous_Current);
 800116e:	69f9      	ldr	r1, [r7, #28]
 8001170:	6a38      	ldr	r0, [r7, #32]
 8001172:	f7ff ff02 	bl	8000f7a <TestCalculate_Power_hc>
 8001176:	6178      	str	r0, [r7, #20]
	uint8_t Partially_shaded = Panels[Converter_Index].Shading_Conditions;
 8001178:	79fa      	ldrb	r2, [r7, #7]
 800117a:	4613      	mov	r3, r2
 800117c:	009b      	lsls	r3, r3, #2
 800117e:	4413      	add	r3, r2
 8001180:	009b      	lsls	r3, r3, #2
 8001182:	461a      	mov	r2, r3
 8001184:	683b      	ldr	r3, [r7, #0]
 8001186:	4413      	add	r3, r2
 8001188:	7c1b      	ldrb	r3, [r3, #16]
 800118a:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
	uint8_t At_mpp = Panels[Converter_Index].At_MPP;
 800118e:	79fa      	ldrb	r2, [r7, #7]
 8001190:	4613      	mov	r3, r2
 8001192:	009b      	lsls	r3, r3, #2
 8001194:	4413      	add	r3, r2
 8001196:	009b      	lsls	r3, r3, #2
 8001198:	461a      	mov	r2, r3
 800119a:	683b      	ldr	r3, [r7, #0]
 800119c:	4413      	add	r3, r2
 800119e:	7c5b      	ldrb	r3, [r3, #17]
 80011a0:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
	if (Partially_shaded) {
 80011a4:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80011a8:	2b00      	cmp	r3, #0
 80011aa:	d012      	beq.n	80011d2 <TestUpdate_Panel_State_hc+0xb6>
		if (Voltage - Previous_Voltage > Partial_Shade_Threshold) {
 80011ac:	68fa      	ldr	r2, [r7, #12]
 80011ae:	6a3b      	ldr	r3, [r7, #32]
 80011b0:	1ad3      	subs	r3, r2, r3
 80011b2:	2b00      	cmp	r3, #0
 80011b4:	dd06      	ble.n	80011c4 <TestUpdate_Panel_State_hc+0xa8>
			Partially_shaded = NOT_SHADED;
 80011b6:	2300      	movs	r3, #0
 80011b8:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
			At_mpp = NOT_AT_MPP;
 80011bc:	2300      	movs	r3, #0
 80011be:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 80011c2:	e06e      	b.n	80012a2 <TestUpdate_Panel_State_hc+0x186>
		}
		else {
			TestChange_Panel_Values_hc(Converter_Index, INCREASE, 8);
 80011c4:	79fb      	ldrb	r3, [r7, #7]
 80011c6:	2208      	movs	r2, #8
 80011c8:	2101      	movs	r1, #1
 80011ca:	4618      	mov	r0, r3
 80011cc:	f7ff ff10 	bl	8000ff0 <TestChange_Panel_Values_hc>
 80011d0:	e067      	b.n	80012a2 <TestUpdate_Panel_State_hc+0x186>
		}
	}
	else {
		if ((abs(Power - Previous_Power) <= Power_Threshold) && (abs(Voltage - Previous_Voltage) <= Voltage_Threshold)) {
 80011d2:	69ba      	ldr	r2, [r7, #24]
 80011d4:	697b      	ldr	r3, [r7, #20]
 80011d6:	1ad3      	subs	r3, r2, r3
 80011d8:	2b00      	cmp	r3, #0
 80011da:	db25      	blt.n	8001228 <TestUpdate_Panel_State_hc+0x10c>
 80011dc:	69ba      	ldr	r2, [r7, #24]
 80011de:	697b      	ldr	r3, [r7, #20]
 80011e0:	1ad3      	subs	r3, r2, r3
 80011e2:	2b00      	cmp	r3, #0
 80011e4:	dc20      	bgt.n	8001228 <TestUpdate_Panel_State_hc+0x10c>
 80011e6:	68fa      	ldr	r2, [r7, #12]
 80011e8:	6a3b      	ldr	r3, [r7, #32]
 80011ea:	1ad3      	subs	r3, r2, r3
 80011ec:	2b00      	cmp	r3, #0
 80011ee:	db1b      	blt.n	8001228 <TestUpdate_Panel_State_hc+0x10c>
 80011f0:	68fa      	ldr	r2, [r7, #12]
 80011f2:	6a3b      	ldr	r3, [r7, #32]
 80011f4:	1ad3      	subs	r3, r2, r3
 80011f6:	2b00      	cmp	r3, #0
 80011f8:	dc16      	bgt.n	8001228 <TestUpdate_Panel_State_hc+0x10c>
			At_mpp = AT_MPP;
 80011fa:	2301      	movs	r3, #1
 80011fc:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
			if (TestCheck_if_All_are_MPPT_hc(Panels)) {
 8001200:	6838      	ldr	r0, [r7, #0]
 8001202:	f7ff ff65 	bl	80010d0 <TestCheck_if_All_are_MPPT_hc>
 8001206:	4603      	mov	r3, r0
 8001208:	2b00      	cmp	r3, #0
 800120a:	d049      	beq.n	80012a0 <TestUpdate_Panel_State_hc+0x184>
				uint32_t Average_Current = TestCalculate_Average_Current_hc(Panels);
 800120c:	6838      	ldr	r0, [r7, #0]
 800120e:	f7ff fec3 	bl	8000f98 <TestCalculate_Average_Current_hc>
 8001212:	4603      	mov	r3, r0
 8001214:	613b      	str	r3, [r7, #16]
				if ((Average_Current - Current) > Current_Threshold) {
 8001216:	68bb      	ldr	r3, [r7, #8]
 8001218:	461a      	mov	r2, r3
 800121a:	693b      	ldr	r3, [r7, #16]
 800121c:	4293      	cmp	r3, r2
 800121e:	d03f      	beq.n	80012a0 <TestUpdate_Panel_State_hc+0x184>
					Partially_shaded = SHADED;
 8001220:	2301      	movs	r3, #1
 8001222:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
			if (TestCheck_if_All_are_MPPT_hc(Panels)) {
 8001226:	e03b      	b.n	80012a0 <TestUpdate_Panel_State_hc+0x184>
				}
			}
		}
		else if (((Power - Previous_Power > 0) && (Voltage - Previous_Voltage) > 0) || ((Power - Previous_Power < 0) && (Voltage - Previous_Voltage) < 0)) {
 8001228:	69ba      	ldr	r2, [r7, #24]
 800122a:	697b      	ldr	r3, [r7, #20]
 800122c:	1ad3      	subs	r3, r2, r3
 800122e:	2b00      	cmp	r3, #0
 8001230:	dd04      	ble.n	800123c <TestUpdate_Panel_State_hc+0x120>
 8001232:	68fa      	ldr	r2, [r7, #12]
 8001234:	6a3b      	ldr	r3, [r7, #32]
 8001236:	1ad3      	subs	r3, r2, r3
 8001238:	2b00      	cmp	r3, #0
 800123a:	dc09      	bgt.n	8001250 <TestUpdate_Panel_State_hc+0x134>
 800123c:	69ba      	ldr	r2, [r7, #24]
 800123e:	697b      	ldr	r3, [r7, #20]
 8001240:	1ad3      	subs	r3, r2, r3
 8001242:	2b00      	cmp	r3, #0
 8001244:	da0e      	bge.n	8001264 <TestUpdate_Panel_State_hc+0x148>
 8001246:	68fa      	ldr	r2, [r7, #12]
 8001248:	6a3b      	ldr	r3, [r7, #32]
 800124a:	1ad3      	subs	r3, r2, r3
 800124c:	2b00      	cmp	r3, #0
 800124e:	da09      	bge.n	8001264 <TestUpdate_Panel_State_hc+0x148>
			TestChange_Panel_Values_hc(Converter_Index, INCREASE, 8);
 8001250:	79fb      	ldrb	r3, [r7, #7]
 8001252:	2208      	movs	r2, #8
 8001254:	2101      	movs	r1, #1
 8001256:	4618      	mov	r0, r3
 8001258:	f7ff feca 	bl	8000ff0 <TestChange_Panel_Values_hc>
			At_mpp = NOT_AT_MPP;
 800125c:	2300      	movs	r3, #0
 800125e:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 8001262:	e01e      	b.n	80012a2 <TestUpdate_Panel_State_hc+0x186>
		}
		else if (((Power - Previous_Power > 0) && (Voltage - Previous_Voltage) < 0) || ((Power - Previous_Power < 0) && (Voltage - Previous_Voltage) > 0)) {
 8001264:	69ba      	ldr	r2, [r7, #24]
 8001266:	697b      	ldr	r3, [r7, #20]
 8001268:	1ad3      	subs	r3, r2, r3
 800126a:	2b00      	cmp	r3, #0
 800126c:	dd04      	ble.n	8001278 <TestUpdate_Panel_State_hc+0x15c>
 800126e:	68fa      	ldr	r2, [r7, #12]
 8001270:	6a3b      	ldr	r3, [r7, #32]
 8001272:	1ad3      	subs	r3, r2, r3
 8001274:	2b00      	cmp	r3, #0
 8001276:	db09      	blt.n	800128c <TestUpdate_Panel_State_hc+0x170>
 8001278:	69ba      	ldr	r2, [r7, #24]
 800127a:	697b      	ldr	r3, [r7, #20]
 800127c:	1ad3      	subs	r3, r2, r3
 800127e:	2b00      	cmp	r3, #0
 8001280:	da0f      	bge.n	80012a2 <TestUpdate_Panel_State_hc+0x186>
 8001282:	68fa      	ldr	r2, [r7, #12]
 8001284:	6a3b      	ldr	r3, [r7, #32]
 8001286:	1ad3      	subs	r3, r2, r3
 8001288:	2b00      	cmp	r3, #0
 800128a:	dd0a      	ble.n	80012a2 <TestUpdate_Panel_State_hc+0x186>
			TestChange_Panel_Values_hc(Converter_Index, DECREASE, 8);
 800128c:	79fb      	ldrb	r3, [r7, #7]
 800128e:	2208      	movs	r2, #8
 8001290:	2100      	movs	r1, #0
 8001292:	4618      	mov	r0, r3
 8001294:	f7ff feac 	bl	8000ff0 <TestChange_Panel_Values_hc>
			At_mpp = NOT_AT_MPP;
 8001298:	2300      	movs	r3, #0
 800129a:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 800129e:	e000      	b.n	80012a2 <TestUpdate_Panel_State_hc+0x186>
			if (TestCheck_if_All_are_MPPT_hc(Panels)) {
 80012a0:	bf00      	nop
		}
	}
	TestUpdate_Panel_Parameters_hc(Converter_Index, Voltage, Current, At_mpp, Partially_shaded, Panels);
 80012a2:	68fb      	ldr	r3, [r7, #12]
 80012a4:	4619      	mov	r1, r3
 80012a6:	68bb      	ldr	r3, [r7, #8]
 80012a8:	461c      	mov	r4, r3
 80012aa:	f897 2026 	ldrb.w	r2, [r7, #38]	@ 0x26
 80012ae:	79f8      	ldrb	r0, [r7, #7]
 80012b0:	683b      	ldr	r3, [r7, #0]
 80012b2:	9301      	str	r3, [sp, #4]
 80012b4:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80012b8:	9300      	str	r3, [sp, #0]
 80012ba:	4613      	mov	r3, r2
 80012bc:	4622      	mov	r2, r4
 80012be:	f7ff feaa 	bl	8001016 <TestUpdate_Panel_Parameters_hc>
}
 80012c2:	bf00      	nop
 80012c4:	372c      	adds	r7, #44	@ 0x2c
 80012c6:	46bd      	mov	sp, r7
 80012c8:	bd90      	pop	{r4, r7, pc}
	...

080012cc <MX_USART2_UART_Init>:
UART_HandleTypeDef huart2;

/* USART2 init function */

void MX_USART2_UART_Init(void)
{
 80012cc:	b580      	push	{r7, lr}
 80012ce:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80012d0:	4b12      	ldr	r3, [pc, #72]	@ (800131c <MX_USART2_UART_Init+0x50>)
 80012d2:	4a13      	ldr	r2, [pc, #76]	@ (8001320 <MX_USART2_UART_Init+0x54>)
 80012d4:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 80012d6:	4b11      	ldr	r3, [pc, #68]	@ (800131c <MX_USART2_UART_Init+0x50>)
 80012d8:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80012dc:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_9B;
 80012de:	4b0f      	ldr	r3, [pc, #60]	@ (800131c <MX_USART2_UART_Init+0x50>)
 80012e0:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 80012e4:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80012e6:	4b0d      	ldr	r3, [pc, #52]	@ (800131c <MX_USART2_UART_Init+0x50>)
 80012e8:	2200      	movs	r2, #0
 80012ea:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_EVEN;
 80012ec:	4b0b      	ldr	r3, [pc, #44]	@ (800131c <MX_USART2_UART_Init+0x50>)
 80012ee:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80012f2:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80012f4:	4b09      	ldr	r3, [pc, #36]	@ (800131c <MX_USART2_UART_Init+0x50>)
 80012f6:	220c      	movs	r2, #12
 80012f8:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80012fa:	4b08      	ldr	r3, [pc, #32]	@ (800131c <MX_USART2_UART_Init+0x50>)
 80012fc:	2200      	movs	r2, #0
 80012fe:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8001300:	4b06      	ldr	r3, [pc, #24]	@ (800131c <MX_USART2_UART_Init+0x50>)
 8001302:	2200      	movs	r2, #0
 8001304:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8001306:	4805      	ldr	r0, [pc, #20]	@ (800131c <MX_USART2_UART_Init+0x50>)
 8001308:	f001 fa06 	bl	8002718 <HAL_UART_Init>
 800130c:	4603      	mov	r3, r0
 800130e:	2b00      	cmp	r3, #0
 8001310:	d001      	beq.n	8001316 <MX_USART2_UART_Init+0x4a>
  {
    Error_Handler();
 8001312:	f7ff fcb1 	bl	8000c78 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8001316:	bf00      	nop
 8001318:	bd80      	pop	{r7, pc}
 800131a:	bf00      	nop
 800131c:	2000020c 	.word	0x2000020c
 8001320:	40004400 	.word	0x40004400

08001324 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8001324:	b580      	push	{r7, lr}
 8001326:	b08a      	sub	sp, #40	@ 0x28
 8001328:	af00      	add	r7, sp, #0
 800132a:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800132c:	f107 0314 	add.w	r3, r7, #20
 8001330:	2200      	movs	r2, #0
 8001332:	601a      	str	r2, [r3, #0]
 8001334:	605a      	str	r2, [r3, #4]
 8001336:	609a      	str	r2, [r3, #8]
 8001338:	60da      	str	r2, [r3, #12]
 800133a:	611a      	str	r2, [r3, #16]
  if(uartHandle->Instance==USART2)
 800133c:	687b      	ldr	r3, [r7, #4]
 800133e:	681b      	ldr	r3, [r3, #0]
 8001340:	4a1d      	ldr	r2, [pc, #116]	@ (80013b8 <HAL_UART_MspInit+0x94>)
 8001342:	4293      	cmp	r3, r2
 8001344:	d133      	bne.n	80013ae <HAL_UART_MspInit+0x8a>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* USART2 clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8001346:	2300      	movs	r3, #0
 8001348:	613b      	str	r3, [r7, #16]
 800134a:	4b1c      	ldr	r3, [pc, #112]	@ (80013bc <HAL_UART_MspInit+0x98>)
 800134c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800134e:	4a1b      	ldr	r2, [pc, #108]	@ (80013bc <HAL_UART_MspInit+0x98>)
 8001350:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001354:	6413      	str	r3, [r2, #64]	@ 0x40
 8001356:	4b19      	ldr	r3, [pc, #100]	@ (80013bc <HAL_UART_MspInit+0x98>)
 8001358:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800135a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800135e:	613b      	str	r3, [r7, #16]
 8001360:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001362:	2300      	movs	r3, #0
 8001364:	60fb      	str	r3, [r7, #12]
 8001366:	4b15      	ldr	r3, [pc, #84]	@ (80013bc <HAL_UART_MspInit+0x98>)
 8001368:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800136a:	4a14      	ldr	r2, [pc, #80]	@ (80013bc <HAL_UART_MspInit+0x98>)
 800136c:	f043 0301 	orr.w	r3, r3, #1
 8001370:	6313      	str	r3, [r2, #48]	@ 0x30
 8001372:	4b12      	ldr	r3, [pc, #72]	@ (80013bc <HAL_UART_MspInit+0x98>)
 8001374:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001376:	f003 0301 	and.w	r3, r3, #1
 800137a:	60fb      	str	r3, [r7, #12]
 800137c:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 800137e:	230c      	movs	r3, #12
 8001380:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001382:	2302      	movs	r3, #2
 8001384:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001386:	2300      	movs	r3, #0
 8001388:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800138a:	2303      	movs	r3, #3
 800138c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 800138e:	2307      	movs	r3, #7
 8001390:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001392:	f107 0314 	add.w	r3, r7, #20
 8001396:	4619      	mov	r1, r3
 8001398:	4809      	ldr	r0, [pc, #36]	@ (80013c0 <HAL_UART_MspInit+0x9c>)
 800139a:	f000 fa9d 	bl	80018d8 <HAL_GPIO_Init>

    /* USART2 interrupt Init */
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 800139e:	2200      	movs	r2, #0
 80013a0:	2100      	movs	r1, #0
 80013a2:	2026      	movs	r0, #38	@ 0x26
 80013a4:	f000 f9cf 	bl	8001746 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 80013a8:	2026      	movs	r0, #38	@ 0x26
 80013aa:	f000 f9e8 	bl	800177e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }
}
 80013ae:	bf00      	nop
 80013b0:	3728      	adds	r7, #40	@ 0x28
 80013b2:	46bd      	mov	sp, r7
 80013b4:	bd80      	pop	{r7, pc}
 80013b6:	bf00      	nop
 80013b8:	40004400 	.word	0x40004400
 80013bc:	40023800 	.word	0x40023800
 80013c0:	40020000 	.word	0x40020000

080013c4 <PrintOutputBuffer>:
		Error_Handler();
	}
}

void PrintOutputBuffer(uint8_t *OutputBuffer)
{
 80013c4:	b580      	push	{r7, lr}
 80013c6:	b084      	sub	sp, #16
 80013c8:	af00      	add	r7, sp, #0
 80013ca:	6078      	str	r0, [r7, #4]
	uint32_t StringLength;
	HAL_StatusTypeDef HALStatus;

	for (StringLength = 0; *(OutputBuffer + StringLength); StringLength++);
 80013cc:	2300      	movs	r3, #0
 80013ce:	60fb      	str	r3, [r7, #12]
 80013d0:	e002      	b.n	80013d8 <PrintOutputBuffer+0x14>
 80013d2:	68fb      	ldr	r3, [r7, #12]
 80013d4:	3301      	adds	r3, #1
 80013d6:	60fb      	str	r3, [r7, #12]
 80013d8:	687a      	ldr	r2, [r7, #4]
 80013da:	68fb      	ldr	r3, [r7, #12]
 80013dc:	4413      	add	r3, r2
 80013de:	781b      	ldrb	r3, [r3, #0]
 80013e0:	2b00      	cmp	r3, #0
 80013e2:	d1f6      	bne.n	80013d2 <PrintOutputBuffer+0xe>

	HALStatus = HAL_UART_Transmit(&huart2, OutputBuffer, StringLength, HAL_MAX_DELAY);
 80013e4:	68fb      	ldr	r3, [r7, #12]
 80013e6:	b29a      	uxth	r2, r3
 80013e8:	f04f 33ff 	mov.w	r3, #4294967295
 80013ec:	6879      	ldr	r1, [r7, #4]
 80013ee:	4807      	ldr	r0, [pc, #28]	@ (800140c <PrintOutputBuffer+0x48>)
 80013f0:	f001 f9e2 	bl	80027b8 <HAL_UART_Transmit>
 80013f4:	4603      	mov	r3, r0
 80013f6:	72fb      	strb	r3, [r7, #11]

	if (HALStatus != HAL_OK) {
 80013f8:	7afb      	ldrb	r3, [r7, #11]
 80013fa:	2b00      	cmp	r3, #0
 80013fc:	d001      	beq.n	8001402 <PrintOutputBuffer+0x3e>
		Error_Handler();
 80013fe:	f7ff fc3b 	bl	8000c78 <Error_Handler>
	}

}
 8001402:	bf00      	nop
 8001404:	3710      	adds	r7, #16
 8001406:	46bd      	mov	sp, r7
 8001408:	bd80      	pop	{r7, pc}
 800140a:	bf00      	nop
 800140c:	2000020c 	.word	0x2000020c

08001410 <Reset_Handler>:
 8001410:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001448 <LoopFillZerobss+0xe>
 8001414:	f7ff fcce 	bl	8000db4 <SystemInit>
 8001418:	480c      	ldr	r0, [pc, #48]	@ (800144c <LoopFillZerobss+0x12>)
 800141a:	490d      	ldr	r1, [pc, #52]	@ (8001450 <LoopFillZerobss+0x16>)
 800141c:	4a0d      	ldr	r2, [pc, #52]	@ (8001454 <LoopFillZerobss+0x1a>)
 800141e:	2300      	movs	r3, #0
 8001420:	e002      	b.n	8001428 <LoopCopyDataInit>

08001422 <CopyDataInit>:
 8001422:	58d4      	ldr	r4, [r2, r3]
 8001424:	50c4      	str	r4, [r0, r3]
 8001426:	3304      	adds	r3, #4

08001428 <LoopCopyDataInit>:
 8001428:	18c4      	adds	r4, r0, r3
 800142a:	428c      	cmp	r4, r1
 800142c:	d3f9      	bcc.n	8001422 <CopyDataInit>
 800142e:	4a0a      	ldr	r2, [pc, #40]	@ (8001458 <LoopFillZerobss+0x1e>)
 8001430:	4c0a      	ldr	r4, [pc, #40]	@ (800145c <LoopFillZerobss+0x22>)
 8001432:	2300      	movs	r3, #0
 8001434:	e001      	b.n	800143a <LoopFillZerobss>

08001436 <FillZerobss>:
 8001436:	6013      	str	r3, [r2, #0]
 8001438:	3204      	adds	r2, #4

0800143a <LoopFillZerobss>:
 800143a:	42a2      	cmp	r2, r4
 800143c:	d3fb      	bcc.n	8001436 <FillZerobss>
 800143e:	f002 f9ef 	bl	8003820 <__libc_init_array>
 8001442:	f7ff fa39 	bl	80008b8 <main>
 8001446:	4770      	bx	lr
 8001448:	20018000 	.word	0x20018000
 800144c:	20000000 	.word	0x20000000
 8001450:	2000005c 	.word	0x2000005c
 8001454:	08004398 	.word	0x08004398
 8001458:	2000005c 	.word	0x2000005c
 800145c:	200003a0 	.word	0x200003a0

08001460 <ADC_IRQHandler>:
 8001460:	e7fe      	b.n	8001460 <ADC_IRQHandler>
	...

08001464 <HAL_Init>:
 8001464:	b580      	push	{r7, lr}
 8001466:	af00      	add	r7, sp, #0
 8001468:	4b0e      	ldr	r3, [pc, #56]	@ (80014a4 <HAL_Init+0x40>)
 800146a:	681b      	ldr	r3, [r3, #0]
 800146c:	4a0d      	ldr	r2, [pc, #52]	@ (80014a4 <HAL_Init+0x40>)
 800146e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001472:	6013      	str	r3, [r2, #0]
 8001474:	4b0b      	ldr	r3, [pc, #44]	@ (80014a4 <HAL_Init+0x40>)
 8001476:	681b      	ldr	r3, [r3, #0]
 8001478:	4a0a      	ldr	r2, [pc, #40]	@ (80014a4 <HAL_Init+0x40>)
 800147a:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800147e:	6013      	str	r3, [r2, #0]
 8001480:	4b08      	ldr	r3, [pc, #32]	@ (80014a4 <HAL_Init+0x40>)
 8001482:	681b      	ldr	r3, [r3, #0]
 8001484:	4a07      	ldr	r2, [pc, #28]	@ (80014a4 <HAL_Init+0x40>)
 8001486:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800148a:	6013      	str	r3, [r2, #0]
 800148c:	2003      	movs	r0, #3
 800148e:	f000 f94f 	bl	8001730 <HAL_NVIC_SetPriorityGrouping>
 8001492:	200f      	movs	r0, #15
 8001494:	f000 f808 	bl	80014a8 <HAL_InitTick>
 8001498:	f7ff fbf4 	bl	8000c84 <HAL_MspInit>
 800149c:	2300      	movs	r3, #0
 800149e:	4618      	mov	r0, r3
 80014a0:	bd80      	pop	{r7, pc}
 80014a2:	bf00      	nop
 80014a4:	40023c00 	.word	0x40023c00

080014a8 <HAL_InitTick>:
 80014a8:	b580      	push	{r7, lr}
 80014aa:	b082      	sub	sp, #8
 80014ac:	af00      	add	r7, sp, #0
 80014ae:	6078      	str	r0, [r7, #4]
 80014b0:	4b12      	ldr	r3, [pc, #72]	@ (80014fc <HAL_InitTick+0x54>)
 80014b2:	681a      	ldr	r2, [r3, #0]
 80014b4:	4b12      	ldr	r3, [pc, #72]	@ (8001500 <HAL_InitTick+0x58>)
 80014b6:	781b      	ldrb	r3, [r3, #0]
 80014b8:	4619      	mov	r1, r3
 80014ba:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80014be:	fbb3 f3f1 	udiv	r3, r3, r1
 80014c2:	fbb2 f3f3 	udiv	r3, r2, r3
 80014c6:	4618      	mov	r0, r3
 80014c8:	f000 f967 	bl	800179a <HAL_SYSTICK_Config>
 80014cc:	4603      	mov	r3, r0
 80014ce:	2b00      	cmp	r3, #0
 80014d0:	d001      	beq.n	80014d6 <HAL_InitTick+0x2e>
 80014d2:	2301      	movs	r3, #1
 80014d4:	e00e      	b.n	80014f4 <HAL_InitTick+0x4c>
 80014d6:	687b      	ldr	r3, [r7, #4]
 80014d8:	2b0f      	cmp	r3, #15
 80014da:	d80a      	bhi.n	80014f2 <HAL_InitTick+0x4a>
 80014dc:	2200      	movs	r2, #0
 80014de:	6879      	ldr	r1, [r7, #4]
 80014e0:	f04f 30ff 	mov.w	r0, #4294967295
 80014e4:	f000 f92f 	bl	8001746 <HAL_NVIC_SetPriority>
 80014e8:	4a06      	ldr	r2, [pc, #24]	@ (8001504 <HAL_InitTick+0x5c>)
 80014ea:	687b      	ldr	r3, [r7, #4]
 80014ec:	6013      	str	r3, [r2, #0]
 80014ee:	2300      	movs	r3, #0
 80014f0:	e000      	b.n	80014f4 <HAL_InitTick+0x4c>
 80014f2:	2301      	movs	r3, #1
 80014f4:	4618      	mov	r0, r3
 80014f6:	3708      	adds	r7, #8
 80014f8:	46bd      	mov	sp, r7
 80014fa:	bd80      	pop	{r7, pc}
 80014fc:	20000000 	.word	0x20000000
 8001500:	20000008 	.word	0x20000008
 8001504:	20000004 	.word	0x20000004

08001508 <HAL_IncTick>:
 8001508:	b480      	push	{r7}
 800150a:	af00      	add	r7, sp, #0
 800150c:	4b06      	ldr	r3, [pc, #24]	@ (8001528 <HAL_IncTick+0x20>)
 800150e:	781b      	ldrb	r3, [r3, #0]
 8001510:	461a      	mov	r2, r3
 8001512:	4b06      	ldr	r3, [pc, #24]	@ (800152c <HAL_IncTick+0x24>)
 8001514:	681b      	ldr	r3, [r3, #0]
 8001516:	4413      	add	r3, r2
 8001518:	4a04      	ldr	r2, [pc, #16]	@ (800152c <HAL_IncTick+0x24>)
 800151a:	6013      	str	r3, [r2, #0]
 800151c:	bf00      	nop
 800151e:	46bd      	mov	sp, r7
 8001520:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001524:	4770      	bx	lr
 8001526:	bf00      	nop
 8001528:	20000008 	.word	0x20000008
 800152c:	20000254 	.word	0x20000254

08001530 <HAL_GetTick>:
 8001530:	b480      	push	{r7}
 8001532:	af00      	add	r7, sp, #0
 8001534:	4b03      	ldr	r3, [pc, #12]	@ (8001544 <HAL_GetTick+0x14>)
 8001536:	681b      	ldr	r3, [r3, #0]
 8001538:	4618      	mov	r0, r3
 800153a:	46bd      	mov	sp, r7
 800153c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001540:	4770      	bx	lr
 8001542:	bf00      	nop
 8001544:	20000254 	.word	0x20000254

08001548 <HAL_Delay>:
 8001548:	b580      	push	{r7, lr}
 800154a:	b084      	sub	sp, #16
 800154c:	af00      	add	r7, sp, #0
 800154e:	6078      	str	r0, [r7, #4]
 8001550:	f7ff ffee 	bl	8001530 <HAL_GetTick>
 8001554:	60b8      	str	r0, [r7, #8]
 8001556:	687b      	ldr	r3, [r7, #4]
 8001558:	60fb      	str	r3, [r7, #12]
 800155a:	68fb      	ldr	r3, [r7, #12]
 800155c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001560:	d005      	beq.n	800156e <HAL_Delay+0x26>
 8001562:	4b0a      	ldr	r3, [pc, #40]	@ (800158c <HAL_Delay+0x44>)
 8001564:	781b      	ldrb	r3, [r3, #0]
 8001566:	461a      	mov	r2, r3
 8001568:	68fb      	ldr	r3, [r7, #12]
 800156a:	4413      	add	r3, r2
 800156c:	60fb      	str	r3, [r7, #12]
 800156e:	bf00      	nop
 8001570:	f7ff ffde 	bl	8001530 <HAL_GetTick>
 8001574:	4602      	mov	r2, r0
 8001576:	68bb      	ldr	r3, [r7, #8]
 8001578:	1ad3      	subs	r3, r2, r3
 800157a:	68fa      	ldr	r2, [r7, #12]
 800157c:	429a      	cmp	r2, r3
 800157e:	d8f7      	bhi.n	8001570 <HAL_Delay+0x28>
 8001580:	bf00      	nop
 8001582:	bf00      	nop
 8001584:	3710      	adds	r7, #16
 8001586:	46bd      	mov	sp, r7
 8001588:	bd80      	pop	{r7, pc}
 800158a:	bf00      	nop
 800158c:	20000008 	.word	0x20000008

08001590 <__NVIC_SetPriorityGrouping>:
 8001590:	b480      	push	{r7}
 8001592:	b085      	sub	sp, #20
 8001594:	af00      	add	r7, sp, #0
 8001596:	6078      	str	r0, [r7, #4]
 8001598:	687b      	ldr	r3, [r7, #4]
 800159a:	f003 0307 	and.w	r3, r3, #7
 800159e:	60fb      	str	r3, [r7, #12]
 80015a0:	4b0c      	ldr	r3, [pc, #48]	@ (80015d4 <__NVIC_SetPriorityGrouping+0x44>)
 80015a2:	68db      	ldr	r3, [r3, #12]
 80015a4:	60bb      	str	r3, [r7, #8]
 80015a6:	68ba      	ldr	r2, [r7, #8]
 80015a8:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80015ac:	4013      	ands	r3, r2
 80015ae:	60bb      	str	r3, [r7, #8]
 80015b0:	68fb      	ldr	r3, [r7, #12]
 80015b2:	021a      	lsls	r2, r3, #8
 80015b4:	68bb      	ldr	r3, [r7, #8]
 80015b6:	4313      	orrs	r3, r2
 80015b8:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80015bc:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80015c0:	60bb      	str	r3, [r7, #8]
 80015c2:	4a04      	ldr	r2, [pc, #16]	@ (80015d4 <__NVIC_SetPriorityGrouping+0x44>)
 80015c4:	68bb      	ldr	r3, [r7, #8]
 80015c6:	60d3      	str	r3, [r2, #12]
 80015c8:	bf00      	nop
 80015ca:	3714      	adds	r7, #20
 80015cc:	46bd      	mov	sp, r7
 80015ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015d2:	4770      	bx	lr
 80015d4:	e000ed00 	.word	0xe000ed00

080015d8 <__NVIC_GetPriorityGrouping>:
 80015d8:	b480      	push	{r7}
 80015da:	af00      	add	r7, sp, #0
 80015dc:	4b04      	ldr	r3, [pc, #16]	@ (80015f0 <__NVIC_GetPriorityGrouping+0x18>)
 80015de:	68db      	ldr	r3, [r3, #12]
 80015e0:	0a1b      	lsrs	r3, r3, #8
 80015e2:	f003 0307 	and.w	r3, r3, #7
 80015e6:	4618      	mov	r0, r3
 80015e8:	46bd      	mov	sp, r7
 80015ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015ee:	4770      	bx	lr
 80015f0:	e000ed00 	.word	0xe000ed00

080015f4 <__NVIC_EnableIRQ>:
 80015f4:	b480      	push	{r7}
 80015f6:	b083      	sub	sp, #12
 80015f8:	af00      	add	r7, sp, #0
 80015fa:	4603      	mov	r3, r0
 80015fc:	71fb      	strb	r3, [r7, #7]
 80015fe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001602:	2b00      	cmp	r3, #0
 8001604:	db0b      	blt.n	800161e <__NVIC_EnableIRQ+0x2a>
 8001606:	79fb      	ldrb	r3, [r7, #7]
 8001608:	f003 021f 	and.w	r2, r3, #31
 800160c:	4907      	ldr	r1, [pc, #28]	@ (800162c <__NVIC_EnableIRQ+0x38>)
 800160e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001612:	095b      	lsrs	r3, r3, #5
 8001614:	2001      	movs	r0, #1
 8001616:	fa00 f202 	lsl.w	r2, r0, r2
 800161a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800161e:	bf00      	nop
 8001620:	370c      	adds	r7, #12
 8001622:	46bd      	mov	sp, r7
 8001624:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001628:	4770      	bx	lr
 800162a:	bf00      	nop
 800162c:	e000e100 	.word	0xe000e100

08001630 <__NVIC_SetPriority>:
 8001630:	b480      	push	{r7}
 8001632:	b083      	sub	sp, #12
 8001634:	af00      	add	r7, sp, #0
 8001636:	4603      	mov	r3, r0
 8001638:	6039      	str	r1, [r7, #0]
 800163a:	71fb      	strb	r3, [r7, #7]
 800163c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001640:	2b00      	cmp	r3, #0
 8001642:	db0a      	blt.n	800165a <__NVIC_SetPriority+0x2a>
 8001644:	683b      	ldr	r3, [r7, #0]
 8001646:	b2da      	uxtb	r2, r3
 8001648:	490c      	ldr	r1, [pc, #48]	@ (800167c <__NVIC_SetPriority+0x4c>)
 800164a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800164e:	0112      	lsls	r2, r2, #4
 8001650:	b2d2      	uxtb	r2, r2
 8001652:	440b      	add	r3, r1
 8001654:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001658:	e00a      	b.n	8001670 <__NVIC_SetPriority+0x40>
 800165a:	683b      	ldr	r3, [r7, #0]
 800165c:	b2da      	uxtb	r2, r3
 800165e:	4908      	ldr	r1, [pc, #32]	@ (8001680 <__NVIC_SetPriority+0x50>)
 8001660:	79fb      	ldrb	r3, [r7, #7]
 8001662:	f003 030f 	and.w	r3, r3, #15
 8001666:	3b04      	subs	r3, #4
 8001668:	0112      	lsls	r2, r2, #4
 800166a:	b2d2      	uxtb	r2, r2
 800166c:	440b      	add	r3, r1
 800166e:	761a      	strb	r2, [r3, #24]
 8001670:	bf00      	nop
 8001672:	370c      	adds	r7, #12
 8001674:	46bd      	mov	sp, r7
 8001676:	f85d 7b04 	ldr.w	r7, [sp], #4
 800167a:	4770      	bx	lr
 800167c:	e000e100 	.word	0xe000e100
 8001680:	e000ed00 	.word	0xe000ed00

08001684 <NVIC_EncodePriority>:
 8001684:	b480      	push	{r7}
 8001686:	b089      	sub	sp, #36	@ 0x24
 8001688:	af00      	add	r7, sp, #0
 800168a:	60f8      	str	r0, [r7, #12]
 800168c:	60b9      	str	r1, [r7, #8]
 800168e:	607a      	str	r2, [r7, #4]
 8001690:	68fb      	ldr	r3, [r7, #12]
 8001692:	f003 0307 	and.w	r3, r3, #7
 8001696:	61fb      	str	r3, [r7, #28]
 8001698:	69fb      	ldr	r3, [r7, #28]
 800169a:	f1c3 0307 	rsb	r3, r3, #7
 800169e:	2b04      	cmp	r3, #4
 80016a0:	bf28      	it	cs
 80016a2:	2304      	movcs	r3, #4
 80016a4:	61bb      	str	r3, [r7, #24]
 80016a6:	69fb      	ldr	r3, [r7, #28]
 80016a8:	3304      	adds	r3, #4
 80016aa:	2b06      	cmp	r3, #6
 80016ac:	d902      	bls.n	80016b4 <NVIC_EncodePriority+0x30>
 80016ae:	69fb      	ldr	r3, [r7, #28]
 80016b0:	3b03      	subs	r3, #3
 80016b2:	e000      	b.n	80016b6 <NVIC_EncodePriority+0x32>
 80016b4:	2300      	movs	r3, #0
 80016b6:	617b      	str	r3, [r7, #20]
 80016b8:	f04f 32ff 	mov.w	r2, #4294967295
 80016bc:	69bb      	ldr	r3, [r7, #24]
 80016be:	fa02 f303 	lsl.w	r3, r2, r3
 80016c2:	43da      	mvns	r2, r3
 80016c4:	68bb      	ldr	r3, [r7, #8]
 80016c6:	401a      	ands	r2, r3
 80016c8:	697b      	ldr	r3, [r7, #20]
 80016ca:	409a      	lsls	r2, r3
 80016cc:	f04f 31ff 	mov.w	r1, #4294967295
 80016d0:	697b      	ldr	r3, [r7, #20]
 80016d2:	fa01 f303 	lsl.w	r3, r1, r3
 80016d6:	43d9      	mvns	r1, r3
 80016d8:	687b      	ldr	r3, [r7, #4]
 80016da:	400b      	ands	r3, r1
 80016dc:	4313      	orrs	r3, r2
 80016de:	4618      	mov	r0, r3
 80016e0:	3724      	adds	r7, #36	@ 0x24
 80016e2:	46bd      	mov	sp, r7
 80016e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016e8:	4770      	bx	lr
	...

080016ec <SysTick_Config>:
 80016ec:	b580      	push	{r7, lr}
 80016ee:	b082      	sub	sp, #8
 80016f0:	af00      	add	r7, sp, #0
 80016f2:	6078      	str	r0, [r7, #4]
 80016f4:	687b      	ldr	r3, [r7, #4]
 80016f6:	3b01      	subs	r3, #1
 80016f8:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80016fc:	d301      	bcc.n	8001702 <SysTick_Config+0x16>
 80016fe:	2301      	movs	r3, #1
 8001700:	e00f      	b.n	8001722 <SysTick_Config+0x36>
 8001702:	4a0a      	ldr	r2, [pc, #40]	@ (800172c <SysTick_Config+0x40>)
 8001704:	687b      	ldr	r3, [r7, #4]
 8001706:	3b01      	subs	r3, #1
 8001708:	6053      	str	r3, [r2, #4]
 800170a:	210f      	movs	r1, #15
 800170c:	f04f 30ff 	mov.w	r0, #4294967295
 8001710:	f7ff ff8e 	bl	8001630 <__NVIC_SetPriority>
 8001714:	4b05      	ldr	r3, [pc, #20]	@ (800172c <SysTick_Config+0x40>)
 8001716:	2200      	movs	r2, #0
 8001718:	609a      	str	r2, [r3, #8]
 800171a:	4b04      	ldr	r3, [pc, #16]	@ (800172c <SysTick_Config+0x40>)
 800171c:	2207      	movs	r2, #7
 800171e:	601a      	str	r2, [r3, #0]
 8001720:	2300      	movs	r3, #0
 8001722:	4618      	mov	r0, r3
 8001724:	3708      	adds	r7, #8
 8001726:	46bd      	mov	sp, r7
 8001728:	bd80      	pop	{r7, pc}
 800172a:	bf00      	nop
 800172c:	e000e010 	.word	0xe000e010

08001730 <HAL_NVIC_SetPriorityGrouping>:
 8001730:	b580      	push	{r7, lr}
 8001732:	b082      	sub	sp, #8
 8001734:	af00      	add	r7, sp, #0
 8001736:	6078      	str	r0, [r7, #4]
 8001738:	6878      	ldr	r0, [r7, #4]
 800173a:	f7ff ff29 	bl	8001590 <__NVIC_SetPriorityGrouping>
 800173e:	bf00      	nop
 8001740:	3708      	adds	r7, #8
 8001742:	46bd      	mov	sp, r7
 8001744:	bd80      	pop	{r7, pc}

08001746 <HAL_NVIC_SetPriority>:
 8001746:	b580      	push	{r7, lr}
 8001748:	b086      	sub	sp, #24
 800174a:	af00      	add	r7, sp, #0
 800174c:	4603      	mov	r3, r0
 800174e:	60b9      	str	r1, [r7, #8]
 8001750:	607a      	str	r2, [r7, #4]
 8001752:	73fb      	strb	r3, [r7, #15]
 8001754:	2300      	movs	r3, #0
 8001756:	617b      	str	r3, [r7, #20]
 8001758:	f7ff ff3e 	bl	80015d8 <__NVIC_GetPriorityGrouping>
 800175c:	6178      	str	r0, [r7, #20]
 800175e:	687a      	ldr	r2, [r7, #4]
 8001760:	68b9      	ldr	r1, [r7, #8]
 8001762:	6978      	ldr	r0, [r7, #20]
 8001764:	f7ff ff8e 	bl	8001684 <NVIC_EncodePriority>
 8001768:	4602      	mov	r2, r0
 800176a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800176e:	4611      	mov	r1, r2
 8001770:	4618      	mov	r0, r3
 8001772:	f7ff ff5d 	bl	8001630 <__NVIC_SetPriority>
 8001776:	bf00      	nop
 8001778:	3718      	adds	r7, #24
 800177a:	46bd      	mov	sp, r7
 800177c:	bd80      	pop	{r7, pc}

0800177e <HAL_NVIC_EnableIRQ>:
 800177e:	b580      	push	{r7, lr}
 8001780:	b082      	sub	sp, #8
 8001782:	af00      	add	r7, sp, #0
 8001784:	4603      	mov	r3, r0
 8001786:	71fb      	strb	r3, [r7, #7]
 8001788:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800178c:	4618      	mov	r0, r3
 800178e:	f7ff ff31 	bl	80015f4 <__NVIC_EnableIRQ>
 8001792:	bf00      	nop
 8001794:	3708      	adds	r7, #8
 8001796:	46bd      	mov	sp, r7
 8001798:	bd80      	pop	{r7, pc}

0800179a <HAL_SYSTICK_Config>:
 800179a:	b580      	push	{r7, lr}
 800179c:	b082      	sub	sp, #8
 800179e:	af00      	add	r7, sp, #0
 80017a0:	6078      	str	r0, [r7, #4]
 80017a2:	6878      	ldr	r0, [r7, #4]
 80017a4:	f7ff ffa2 	bl	80016ec <SysTick_Config>
 80017a8:	4603      	mov	r3, r0
 80017aa:	4618      	mov	r0, r3
 80017ac:	3708      	adds	r7, #8
 80017ae:	46bd      	mov	sp, r7
 80017b0:	bd80      	pop	{r7, pc}

080017b2 <HAL_DMA_Abort>:
 80017b2:	b580      	push	{r7, lr}
 80017b4:	b084      	sub	sp, #16
 80017b6:	af00      	add	r7, sp, #0
 80017b8:	6078      	str	r0, [r7, #4]
 80017ba:	687b      	ldr	r3, [r7, #4]
 80017bc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80017be:	60fb      	str	r3, [r7, #12]
 80017c0:	f7ff feb6 	bl	8001530 <HAL_GetTick>
 80017c4:	60b8      	str	r0, [r7, #8]
 80017c6:	687b      	ldr	r3, [r7, #4]
 80017c8:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80017cc:	b2db      	uxtb	r3, r3
 80017ce:	2b02      	cmp	r3, #2
 80017d0:	d008      	beq.n	80017e4 <HAL_DMA_Abort+0x32>
 80017d2:	687b      	ldr	r3, [r7, #4]
 80017d4:	2280      	movs	r2, #128	@ 0x80
 80017d6:	655a      	str	r2, [r3, #84]	@ 0x54
 80017d8:	687b      	ldr	r3, [r7, #4]
 80017da:	2200      	movs	r2, #0
 80017dc:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80017e0:	2301      	movs	r3, #1
 80017e2:	e052      	b.n	800188a <HAL_DMA_Abort+0xd8>
 80017e4:	687b      	ldr	r3, [r7, #4]
 80017e6:	681b      	ldr	r3, [r3, #0]
 80017e8:	681a      	ldr	r2, [r3, #0]
 80017ea:	687b      	ldr	r3, [r7, #4]
 80017ec:	681b      	ldr	r3, [r3, #0]
 80017ee:	f022 0216 	bic.w	r2, r2, #22
 80017f2:	601a      	str	r2, [r3, #0]
 80017f4:	687b      	ldr	r3, [r7, #4]
 80017f6:	681b      	ldr	r3, [r3, #0]
 80017f8:	695a      	ldr	r2, [r3, #20]
 80017fa:	687b      	ldr	r3, [r7, #4]
 80017fc:	681b      	ldr	r3, [r3, #0]
 80017fe:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8001802:	615a      	str	r2, [r3, #20]
 8001804:	687b      	ldr	r3, [r7, #4]
 8001806:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001808:	2b00      	cmp	r3, #0
 800180a:	d103      	bne.n	8001814 <HAL_DMA_Abort+0x62>
 800180c:	687b      	ldr	r3, [r7, #4]
 800180e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001810:	2b00      	cmp	r3, #0
 8001812:	d007      	beq.n	8001824 <HAL_DMA_Abort+0x72>
 8001814:	687b      	ldr	r3, [r7, #4]
 8001816:	681b      	ldr	r3, [r3, #0]
 8001818:	681a      	ldr	r2, [r3, #0]
 800181a:	687b      	ldr	r3, [r7, #4]
 800181c:	681b      	ldr	r3, [r3, #0]
 800181e:	f022 0208 	bic.w	r2, r2, #8
 8001822:	601a      	str	r2, [r3, #0]
 8001824:	687b      	ldr	r3, [r7, #4]
 8001826:	681b      	ldr	r3, [r3, #0]
 8001828:	681a      	ldr	r2, [r3, #0]
 800182a:	687b      	ldr	r3, [r7, #4]
 800182c:	681b      	ldr	r3, [r3, #0]
 800182e:	f022 0201 	bic.w	r2, r2, #1
 8001832:	601a      	str	r2, [r3, #0]
 8001834:	e013      	b.n	800185e <HAL_DMA_Abort+0xac>
 8001836:	f7ff fe7b 	bl	8001530 <HAL_GetTick>
 800183a:	4602      	mov	r2, r0
 800183c:	68bb      	ldr	r3, [r7, #8]
 800183e:	1ad3      	subs	r3, r2, r3
 8001840:	2b05      	cmp	r3, #5
 8001842:	d90c      	bls.n	800185e <HAL_DMA_Abort+0xac>
 8001844:	687b      	ldr	r3, [r7, #4]
 8001846:	2220      	movs	r2, #32
 8001848:	655a      	str	r2, [r3, #84]	@ 0x54
 800184a:	687b      	ldr	r3, [r7, #4]
 800184c:	2203      	movs	r2, #3
 800184e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8001852:	687b      	ldr	r3, [r7, #4]
 8001854:	2200      	movs	r2, #0
 8001856:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800185a:	2303      	movs	r3, #3
 800185c:	e015      	b.n	800188a <HAL_DMA_Abort+0xd8>
 800185e:	687b      	ldr	r3, [r7, #4]
 8001860:	681b      	ldr	r3, [r3, #0]
 8001862:	681b      	ldr	r3, [r3, #0]
 8001864:	f003 0301 	and.w	r3, r3, #1
 8001868:	2b00      	cmp	r3, #0
 800186a:	d1e4      	bne.n	8001836 <HAL_DMA_Abort+0x84>
 800186c:	687b      	ldr	r3, [r7, #4]
 800186e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8001870:	223f      	movs	r2, #63	@ 0x3f
 8001872:	409a      	lsls	r2, r3
 8001874:	68fb      	ldr	r3, [r7, #12]
 8001876:	609a      	str	r2, [r3, #8]
 8001878:	687b      	ldr	r3, [r7, #4]
 800187a:	2201      	movs	r2, #1
 800187c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8001880:	687b      	ldr	r3, [r7, #4]
 8001882:	2200      	movs	r2, #0
 8001884:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8001888:	2300      	movs	r3, #0
 800188a:	4618      	mov	r0, r3
 800188c:	3710      	adds	r7, #16
 800188e:	46bd      	mov	sp, r7
 8001890:	bd80      	pop	{r7, pc}

08001892 <HAL_DMA_Abort_IT>:
 8001892:	b480      	push	{r7}
 8001894:	b083      	sub	sp, #12
 8001896:	af00      	add	r7, sp, #0
 8001898:	6078      	str	r0, [r7, #4]
 800189a:	687b      	ldr	r3, [r7, #4]
 800189c:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80018a0:	b2db      	uxtb	r3, r3
 80018a2:	2b02      	cmp	r3, #2
 80018a4:	d004      	beq.n	80018b0 <HAL_DMA_Abort_IT+0x1e>
 80018a6:	687b      	ldr	r3, [r7, #4]
 80018a8:	2280      	movs	r2, #128	@ 0x80
 80018aa:	655a      	str	r2, [r3, #84]	@ 0x54
 80018ac:	2301      	movs	r3, #1
 80018ae:	e00c      	b.n	80018ca <HAL_DMA_Abort_IT+0x38>
 80018b0:	687b      	ldr	r3, [r7, #4]
 80018b2:	2205      	movs	r2, #5
 80018b4:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80018b8:	687b      	ldr	r3, [r7, #4]
 80018ba:	681b      	ldr	r3, [r3, #0]
 80018bc:	681a      	ldr	r2, [r3, #0]
 80018be:	687b      	ldr	r3, [r7, #4]
 80018c0:	681b      	ldr	r3, [r3, #0]
 80018c2:	f022 0201 	bic.w	r2, r2, #1
 80018c6:	601a      	str	r2, [r3, #0]
 80018c8:	2300      	movs	r3, #0
 80018ca:	4618      	mov	r0, r3
 80018cc:	370c      	adds	r7, #12
 80018ce:	46bd      	mov	sp, r7
 80018d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018d4:	4770      	bx	lr
	...

080018d8 <HAL_GPIO_Init>:
 80018d8:	b480      	push	{r7}
 80018da:	b089      	sub	sp, #36	@ 0x24
 80018dc:	af00      	add	r7, sp, #0
 80018de:	6078      	str	r0, [r7, #4]
 80018e0:	6039      	str	r1, [r7, #0]
 80018e2:	2300      	movs	r3, #0
 80018e4:	617b      	str	r3, [r7, #20]
 80018e6:	2300      	movs	r3, #0
 80018e8:	613b      	str	r3, [r7, #16]
 80018ea:	2300      	movs	r3, #0
 80018ec:	61bb      	str	r3, [r7, #24]
 80018ee:	2300      	movs	r3, #0
 80018f0:	61fb      	str	r3, [r7, #28]
 80018f2:	e159      	b.n	8001ba8 <HAL_GPIO_Init+0x2d0>
 80018f4:	2201      	movs	r2, #1
 80018f6:	69fb      	ldr	r3, [r7, #28]
 80018f8:	fa02 f303 	lsl.w	r3, r2, r3
 80018fc:	617b      	str	r3, [r7, #20]
 80018fe:	683b      	ldr	r3, [r7, #0]
 8001900:	681b      	ldr	r3, [r3, #0]
 8001902:	697a      	ldr	r2, [r7, #20]
 8001904:	4013      	ands	r3, r2
 8001906:	613b      	str	r3, [r7, #16]
 8001908:	693a      	ldr	r2, [r7, #16]
 800190a:	697b      	ldr	r3, [r7, #20]
 800190c:	429a      	cmp	r2, r3
 800190e:	f040 8148 	bne.w	8001ba2 <HAL_GPIO_Init+0x2ca>
 8001912:	683b      	ldr	r3, [r7, #0]
 8001914:	685b      	ldr	r3, [r3, #4]
 8001916:	f003 0303 	and.w	r3, r3, #3
 800191a:	2b01      	cmp	r3, #1
 800191c:	d005      	beq.n	800192a <HAL_GPIO_Init+0x52>
 800191e:	683b      	ldr	r3, [r7, #0]
 8001920:	685b      	ldr	r3, [r3, #4]
 8001922:	f003 0303 	and.w	r3, r3, #3
 8001926:	2b02      	cmp	r3, #2
 8001928:	d130      	bne.n	800198c <HAL_GPIO_Init+0xb4>
 800192a:	687b      	ldr	r3, [r7, #4]
 800192c:	689b      	ldr	r3, [r3, #8]
 800192e:	61bb      	str	r3, [r7, #24]
 8001930:	69fb      	ldr	r3, [r7, #28]
 8001932:	005b      	lsls	r3, r3, #1
 8001934:	2203      	movs	r2, #3
 8001936:	fa02 f303 	lsl.w	r3, r2, r3
 800193a:	43db      	mvns	r3, r3
 800193c:	69ba      	ldr	r2, [r7, #24]
 800193e:	4013      	ands	r3, r2
 8001940:	61bb      	str	r3, [r7, #24]
 8001942:	683b      	ldr	r3, [r7, #0]
 8001944:	68da      	ldr	r2, [r3, #12]
 8001946:	69fb      	ldr	r3, [r7, #28]
 8001948:	005b      	lsls	r3, r3, #1
 800194a:	fa02 f303 	lsl.w	r3, r2, r3
 800194e:	69ba      	ldr	r2, [r7, #24]
 8001950:	4313      	orrs	r3, r2
 8001952:	61bb      	str	r3, [r7, #24]
 8001954:	687b      	ldr	r3, [r7, #4]
 8001956:	69ba      	ldr	r2, [r7, #24]
 8001958:	609a      	str	r2, [r3, #8]
 800195a:	687b      	ldr	r3, [r7, #4]
 800195c:	685b      	ldr	r3, [r3, #4]
 800195e:	61bb      	str	r3, [r7, #24]
 8001960:	2201      	movs	r2, #1
 8001962:	69fb      	ldr	r3, [r7, #28]
 8001964:	fa02 f303 	lsl.w	r3, r2, r3
 8001968:	43db      	mvns	r3, r3
 800196a:	69ba      	ldr	r2, [r7, #24]
 800196c:	4013      	ands	r3, r2
 800196e:	61bb      	str	r3, [r7, #24]
 8001970:	683b      	ldr	r3, [r7, #0]
 8001972:	685b      	ldr	r3, [r3, #4]
 8001974:	091b      	lsrs	r3, r3, #4
 8001976:	f003 0201 	and.w	r2, r3, #1
 800197a:	69fb      	ldr	r3, [r7, #28]
 800197c:	fa02 f303 	lsl.w	r3, r2, r3
 8001980:	69ba      	ldr	r2, [r7, #24]
 8001982:	4313      	orrs	r3, r2
 8001984:	61bb      	str	r3, [r7, #24]
 8001986:	687b      	ldr	r3, [r7, #4]
 8001988:	69ba      	ldr	r2, [r7, #24]
 800198a:	605a      	str	r2, [r3, #4]
 800198c:	683b      	ldr	r3, [r7, #0]
 800198e:	685b      	ldr	r3, [r3, #4]
 8001990:	f003 0303 	and.w	r3, r3, #3
 8001994:	2b03      	cmp	r3, #3
 8001996:	d017      	beq.n	80019c8 <HAL_GPIO_Init+0xf0>
 8001998:	687b      	ldr	r3, [r7, #4]
 800199a:	68db      	ldr	r3, [r3, #12]
 800199c:	61bb      	str	r3, [r7, #24]
 800199e:	69fb      	ldr	r3, [r7, #28]
 80019a0:	005b      	lsls	r3, r3, #1
 80019a2:	2203      	movs	r2, #3
 80019a4:	fa02 f303 	lsl.w	r3, r2, r3
 80019a8:	43db      	mvns	r3, r3
 80019aa:	69ba      	ldr	r2, [r7, #24]
 80019ac:	4013      	ands	r3, r2
 80019ae:	61bb      	str	r3, [r7, #24]
 80019b0:	683b      	ldr	r3, [r7, #0]
 80019b2:	689a      	ldr	r2, [r3, #8]
 80019b4:	69fb      	ldr	r3, [r7, #28]
 80019b6:	005b      	lsls	r3, r3, #1
 80019b8:	fa02 f303 	lsl.w	r3, r2, r3
 80019bc:	69ba      	ldr	r2, [r7, #24]
 80019be:	4313      	orrs	r3, r2
 80019c0:	61bb      	str	r3, [r7, #24]
 80019c2:	687b      	ldr	r3, [r7, #4]
 80019c4:	69ba      	ldr	r2, [r7, #24]
 80019c6:	60da      	str	r2, [r3, #12]
 80019c8:	683b      	ldr	r3, [r7, #0]
 80019ca:	685b      	ldr	r3, [r3, #4]
 80019cc:	f003 0303 	and.w	r3, r3, #3
 80019d0:	2b02      	cmp	r3, #2
 80019d2:	d123      	bne.n	8001a1c <HAL_GPIO_Init+0x144>
 80019d4:	69fb      	ldr	r3, [r7, #28]
 80019d6:	08da      	lsrs	r2, r3, #3
 80019d8:	687b      	ldr	r3, [r7, #4]
 80019da:	3208      	adds	r2, #8
 80019dc:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80019e0:	61bb      	str	r3, [r7, #24]
 80019e2:	69fb      	ldr	r3, [r7, #28]
 80019e4:	f003 0307 	and.w	r3, r3, #7
 80019e8:	009b      	lsls	r3, r3, #2
 80019ea:	220f      	movs	r2, #15
 80019ec:	fa02 f303 	lsl.w	r3, r2, r3
 80019f0:	43db      	mvns	r3, r3
 80019f2:	69ba      	ldr	r2, [r7, #24]
 80019f4:	4013      	ands	r3, r2
 80019f6:	61bb      	str	r3, [r7, #24]
 80019f8:	683b      	ldr	r3, [r7, #0]
 80019fa:	691a      	ldr	r2, [r3, #16]
 80019fc:	69fb      	ldr	r3, [r7, #28]
 80019fe:	f003 0307 	and.w	r3, r3, #7
 8001a02:	009b      	lsls	r3, r3, #2
 8001a04:	fa02 f303 	lsl.w	r3, r2, r3
 8001a08:	69ba      	ldr	r2, [r7, #24]
 8001a0a:	4313      	orrs	r3, r2
 8001a0c:	61bb      	str	r3, [r7, #24]
 8001a0e:	69fb      	ldr	r3, [r7, #28]
 8001a10:	08da      	lsrs	r2, r3, #3
 8001a12:	687b      	ldr	r3, [r7, #4]
 8001a14:	3208      	adds	r2, #8
 8001a16:	69b9      	ldr	r1, [r7, #24]
 8001a18:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001a1c:	687b      	ldr	r3, [r7, #4]
 8001a1e:	681b      	ldr	r3, [r3, #0]
 8001a20:	61bb      	str	r3, [r7, #24]
 8001a22:	69fb      	ldr	r3, [r7, #28]
 8001a24:	005b      	lsls	r3, r3, #1
 8001a26:	2203      	movs	r2, #3
 8001a28:	fa02 f303 	lsl.w	r3, r2, r3
 8001a2c:	43db      	mvns	r3, r3
 8001a2e:	69ba      	ldr	r2, [r7, #24]
 8001a30:	4013      	ands	r3, r2
 8001a32:	61bb      	str	r3, [r7, #24]
 8001a34:	683b      	ldr	r3, [r7, #0]
 8001a36:	685b      	ldr	r3, [r3, #4]
 8001a38:	f003 0203 	and.w	r2, r3, #3
 8001a3c:	69fb      	ldr	r3, [r7, #28]
 8001a3e:	005b      	lsls	r3, r3, #1
 8001a40:	fa02 f303 	lsl.w	r3, r2, r3
 8001a44:	69ba      	ldr	r2, [r7, #24]
 8001a46:	4313      	orrs	r3, r2
 8001a48:	61bb      	str	r3, [r7, #24]
 8001a4a:	687b      	ldr	r3, [r7, #4]
 8001a4c:	69ba      	ldr	r2, [r7, #24]
 8001a4e:	601a      	str	r2, [r3, #0]
 8001a50:	683b      	ldr	r3, [r7, #0]
 8001a52:	685b      	ldr	r3, [r3, #4]
 8001a54:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8001a58:	2b00      	cmp	r3, #0
 8001a5a:	f000 80a2 	beq.w	8001ba2 <HAL_GPIO_Init+0x2ca>
 8001a5e:	2300      	movs	r3, #0
 8001a60:	60fb      	str	r3, [r7, #12]
 8001a62:	4b57      	ldr	r3, [pc, #348]	@ (8001bc0 <HAL_GPIO_Init+0x2e8>)
 8001a64:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001a66:	4a56      	ldr	r2, [pc, #344]	@ (8001bc0 <HAL_GPIO_Init+0x2e8>)
 8001a68:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001a6c:	6453      	str	r3, [r2, #68]	@ 0x44
 8001a6e:	4b54      	ldr	r3, [pc, #336]	@ (8001bc0 <HAL_GPIO_Init+0x2e8>)
 8001a70:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001a72:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001a76:	60fb      	str	r3, [r7, #12]
 8001a78:	68fb      	ldr	r3, [r7, #12]
 8001a7a:	4a52      	ldr	r2, [pc, #328]	@ (8001bc4 <HAL_GPIO_Init+0x2ec>)
 8001a7c:	69fb      	ldr	r3, [r7, #28]
 8001a7e:	089b      	lsrs	r3, r3, #2
 8001a80:	3302      	adds	r3, #2
 8001a82:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001a86:	61bb      	str	r3, [r7, #24]
 8001a88:	69fb      	ldr	r3, [r7, #28]
 8001a8a:	f003 0303 	and.w	r3, r3, #3
 8001a8e:	009b      	lsls	r3, r3, #2
 8001a90:	220f      	movs	r2, #15
 8001a92:	fa02 f303 	lsl.w	r3, r2, r3
 8001a96:	43db      	mvns	r3, r3
 8001a98:	69ba      	ldr	r2, [r7, #24]
 8001a9a:	4013      	ands	r3, r2
 8001a9c:	61bb      	str	r3, [r7, #24]
 8001a9e:	687b      	ldr	r3, [r7, #4]
 8001aa0:	4a49      	ldr	r2, [pc, #292]	@ (8001bc8 <HAL_GPIO_Init+0x2f0>)
 8001aa2:	4293      	cmp	r3, r2
 8001aa4:	d019      	beq.n	8001ada <HAL_GPIO_Init+0x202>
 8001aa6:	687b      	ldr	r3, [r7, #4]
 8001aa8:	4a48      	ldr	r2, [pc, #288]	@ (8001bcc <HAL_GPIO_Init+0x2f4>)
 8001aaa:	4293      	cmp	r3, r2
 8001aac:	d013      	beq.n	8001ad6 <HAL_GPIO_Init+0x1fe>
 8001aae:	687b      	ldr	r3, [r7, #4]
 8001ab0:	4a47      	ldr	r2, [pc, #284]	@ (8001bd0 <HAL_GPIO_Init+0x2f8>)
 8001ab2:	4293      	cmp	r3, r2
 8001ab4:	d00d      	beq.n	8001ad2 <HAL_GPIO_Init+0x1fa>
 8001ab6:	687b      	ldr	r3, [r7, #4]
 8001ab8:	4a46      	ldr	r2, [pc, #280]	@ (8001bd4 <HAL_GPIO_Init+0x2fc>)
 8001aba:	4293      	cmp	r3, r2
 8001abc:	d007      	beq.n	8001ace <HAL_GPIO_Init+0x1f6>
 8001abe:	687b      	ldr	r3, [r7, #4]
 8001ac0:	4a45      	ldr	r2, [pc, #276]	@ (8001bd8 <HAL_GPIO_Init+0x300>)
 8001ac2:	4293      	cmp	r3, r2
 8001ac4:	d101      	bne.n	8001aca <HAL_GPIO_Init+0x1f2>
 8001ac6:	2304      	movs	r3, #4
 8001ac8:	e008      	b.n	8001adc <HAL_GPIO_Init+0x204>
 8001aca:	2307      	movs	r3, #7
 8001acc:	e006      	b.n	8001adc <HAL_GPIO_Init+0x204>
 8001ace:	2303      	movs	r3, #3
 8001ad0:	e004      	b.n	8001adc <HAL_GPIO_Init+0x204>
 8001ad2:	2302      	movs	r3, #2
 8001ad4:	e002      	b.n	8001adc <HAL_GPIO_Init+0x204>
 8001ad6:	2301      	movs	r3, #1
 8001ad8:	e000      	b.n	8001adc <HAL_GPIO_Init+0x204>
 8001ada:	2300      	movs	r3, #0
 8001adc:	69fa      	ldr	r2, [r7, #28]
 8001ade:	f002 0203 	and.w	r2, r2, #3
 8001ae2:	0092      	lsls	r2, r2, #2
 8001ae4:	4093      	lsls	r3, r2
 8001ae6:	69ba      	ldr	r2, [r7, #24]
 8001ae8:	4313      	orrs	r3, r2
 8001aea:	61bb      	str	r3, [r7, #24]
 8001aec:	4935      	ldr	r1, [pc, #212]	@ (8001bc4 <HAL_GPIO_Init+0x2ec>)
 8001aee:	69fb      	ldr	r3, [r7, #28]
 8001af0:	089b      	lsrs	r3, r3, #2
 8001af2:	3302      	adds	r3, #2
 8001af4:	69ba      	ldr	r2, [r7, #24]
 8001af6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001afa:	4b38      	ldr	r3, [pc, #224]	@ (8001bdc <HAL_GPIO_Init+0x304>)
 8001afc:	689b      	ldr	r3, [r3, #8]
 8001afe:	61bb      	str	r3, [r7, #24]
 8001b00:	693b      	ldr	r3, [r7, #16]
 8001b02:	43db      	mvns	r3, r3
 8001b04:	69ba      	ldr	r2, [r7, #24]
 8001b06:	4013      	ands	r3, r2
 8001b08:	61bb      	str	r3, [r7, #24]
 8001b0a:	683b      	ldr	r3, [r7, #0]
 8001b0c:	685b      	ldr	r3, [r3, #4]
 8001b0e:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8001b12:	2b00      	cmp	r3, #0
 8001b14:	d003      	beq.n	8001b1e <HAL_GPIO_Init+0x246>
 8001b16:	69ba      	ldr	r2, [r7, #24]
 8001b18:	693b      	ldr	r3, [r7, #16]
 8001b1a:	4313      	orrs	r3, r2
 8001b1c:	61bb      	str	r3, [r7, #24]
 8001b1e:	4a2f      	ldr	r2, [pc, #188]	@ (8001bdc <HAL_GPIO_Init+0x304>)
 8001b20:	69bb      	ldr	r3, [r7, #24]
 8001b22:	6093      	str	r3, [r2, #8]
 8001b24:	4b2d      	ldr	r3, [pc, #180]	@ (8001bdc <HAL_GPIO_Init+0x304>)
 8001b26:	68db      	ldr	r3, [r3, #12]
 8001b28:	61bb      	str	r3, [r7, #24]
 8001b2a:	693b      	ldr	r3, [r7, #16]
 8001b2c:	43db      	mvns	r3, r3
 8001b2e:	69ba      	ldr	r2, [r7, #24]
 8001b30:	4013      	ands	r3, r2
 8001b32:	61bb      	str	r3, [r7, #24]
 8001b34:	683b      	ldr	r3, [r7, #0]
 8001b36:	685b      	ldr	r3, [r3, #4]
 8001b38:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001b3c:	2b00      	cmp	r3, #0
 8001b3e:	d003      	beq.n	8001b48 <HAL_GPIO_Init+0x270>
 8001b40:	69ba      	ldr	r2, [r7, #24]
 8001b42:	693b      	ldr	r3, [r7, #16]
 8001b44:	4313      	orrs	r3, r2
 8001b46:	61bb      	str	r3, [r7, #24]
 8001b48:	4a24      	ldr	r2, [pc, #144]	@ (8001bdc <HAL_GPIO_Init+0x304>)
 8001b4a:	69bb      	ldr	r3, [r7, #24]
 8001b4c:	60d3      	str	r3, [r2, #12]
 8001b4e:	4b23      	ldr	r3, [pc, #140]	@ (8001bdc <HAL_GPIO_Init+0x304>)
 8001b50:	685b      	ldr	r3, [r3, #4]
 8001b52:	61bb      	str	r3, [r7, #24]
 8001b54:	693b      	ldr	r3, [r7, #16]
 8001b56:	43db      	mvns	r3, r3
 8001b58:	69ba      	ldr	r2, [r7, #24]
 8001b5a:	4013      	ands	r3, r2
 8001b5c:	61bb      	str	r3, [r7, #24]
 8001b5e:	683b      	ldr	r3, [r7, #0]
 8001b60:	685b      	ldr	r3, [r3, #4]
 8001b62:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001b66:	2b00      	cmp	r3, #0
 8001b68:	d003      	beq.n	8001b72 <HAL_GPIO_Init+0x29a>
 8001b6a:	69ba      	ldr	r2, [r7, #24]
 8001b6c:	693b      	ldr	r3, [r7, #16]
 8001b6e:	4313      	orrs	r3, r2
 8001b70:	61bb      	str	r3, [r7, #24]
 8001b72:	4a1a      	ldr	r2, [pc, #104]	@ (8001bdc <HAL_GPIO_Init+0x304>)
 8001b74:	69bb      	ldr	r3, [r7, #24]
 8001b76:	6053      	str	r3, [r2, #4]
 8001b78:	4b18      	ldr	r3, [pc, #96]	@ (8001bdc <HAL_GPIO_Init+0x304>)
 8001b7a:	681b      	ldr	r3, [r3, #0]
 8001b7c:	61bb      	str	r3, [r7, #24]
 8001b7e:	693b      	ldr	r3, [r7, #16]
 8001b80:	43db      	mvns	r3, r3
 8001b82:	69ba      	ldr	r2, [r7, #24]
 8001b84:	4013      	ands	r3, r2
 8001b86:	61bb      	str	r3, [r7, #24]
 8001b88:	683b      	ldr	r3, [r7, #0]
 8001b8a:	685b      	ldr	r3, [r3, #4]
 8001b8c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001b90:	2b00      	cmp	r3, #0
 8001b92:	d003      	beq.n	8001b9c <HAL_GPIO_Init+0x2c4>
 8001b94:	69ba      	ldr	r2, [r7, #24]
 8001b96:	693b      	ldr	r3, [r7, #16]
 8001b98:	4313      	orrs	r3, r2
 8001b9a:	61bb      	str	r3, [r7, #24]
 8001b9c:	4a0f      	ldr	r2, [pc, #60]	@ (8001bdc <HAL_GPIO_Init+0x304>)
 8001b9e:	69bb      	ldr	r3, [r7, #24]
 8001ba0:	6013      	str	r3, [r2, #0]
 8001ba2:	69fb      	ldr	r3, [r7, #28]
 8001ba4:	3301      	adds	r3, #1
 8001ba6:	61fb      	str	r3, [r7, #28]
 8001ba8:	69fb      	ldr	r3, [r7, #28]
 8001baa:	2b0f      	cmp	r3, #15
 8001bac:	f67f aea2 	bls.w	80018f4 <HAL_GPIO_Init+0x1c>
 8001bb0:	bf00      	nop
 8001bb2:	bf00      	nop
 8001bb4:	3724      	adds	r7, #36	@ 0x24
 8001bb6:	46bd      	mov	sp, r7
 8001bb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bbc:	4770      	bx	lr
 8001bbe:	bf00      	nop
 8001bc0:	40023800 	.word	0x40023800
 8001bc4:	40013800 	.word	0x40013800
 8001bc8:	40020000 	.word	0x40020000
 8001bcc:	40020400 	.word	0x40020400
 8001bd0:	40020800 	.word	0x40020800
 8001bd4:	40020c00 	.word	0x40020c00
 8001bd8:	40021000 	.word	0x40021000
 8001bdc:	40013c00 	.word	0x40013c00

08001be0 <HAL_I2C_Init>:
 8001be0:	b580      	push	{r7, lr}
 8001be2:	b084      	sub	sp, #16
 8001be4:	af00      	add	r7, sp, #0
 8001be6:	6078      	str	r0, [r7, #4]
 8001be8:	687b      	ldr	r3, [r7, #4]
 8001bea:	2b00      	cmp	r3, #0
 8001bec:	d101      	bne.n	8001bf2 <HAL_I2C_Init+0x12>
 8001bee:	2301      	movs	r3, #1
 8001bf0:	e12b      	b.n	8001e4a <HAL_I2C_Init+0x26a>
 8001bf2:	687b      	ldr	r3, [r7, #4]
 8001bf4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8001bf8:	b2db      	uxtb	r3, r3
 8001bfa:	2b00      	cmp	r3, #0
 8001bfc:	d106      	bne.n	8001c0c <HAL_I2C_Init+0x2c>
 8001bfe:	687b      	ldr	r3, [r7, #4]
 8001c00:	2200      	movs	r2, #0
 8001c02:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001c06:	6878      	ldr	r0, [r7, #4]
 8001c08:	f7fe fd72 	bl	80006f0 <HAL_I2C_MspInit>
 8001c0c:	687b      	ldr	r3, [r7, #4]
 8001c0e:	2224      	movs	r2, #36	@ 0x24
 8001c10:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001c14:	687b      	ldr	r3, [r7, #4]
 8001c16:	681b      	ldr	r3, [r3, #0]
 8001c18:	681a      	ldr	r2, [r3, #0]
 8001c1a:	687b      	ldr	r3, [r7, #4]
 8001c1c:	681b      	ldr	r3, [r3, #0]
 8001c1e:	f022 0201 	bic.w	r2, r2, #1
 8001c22:	601a      	str	r2, [r3, #0]
 8001c24:	687b      	ldr	r3, [r7, #4]
 8001c26:	681b      	ldr	r3, [r3, #0]
 8001c28:	681a      	ldr	r2, [r3, #0]
 8001c2a:	687b      	ldr	r3, [r7, #4]
 8001c2c:	681b      	ldr	r3, [r3, #0]
 8001c2e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8001c32:	601a      	str	r2, [r3, #0]
 8001c34:	687b      	ldr	r3, [r7, #4]
 8001c36:	681b      	ldr	r3, [r3, #0]
 8001c38:	681a      	ldr	r2, [r3, #0]
 8001c3a:	687b      	ldr	r3, [r7, #4]
 8001c3c:	681b      	ldr	r3, [r3, #0]
 8001c3e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8001c42:	601a      	str	r2, [r3, #0]
 8001c44:	f000 fd40 	bl	80026c8 <HAL_RCC_GetPCLK1Freq>
 8001c48:	60f8      	str	r0, [r7, #12]
 8001c4a:	687b      	ldr	r3, [r7, #4]
 8001c4c:	685b      	ldr	r3, [r3, #4]
 8001c4e:	4a81      	ldr	r2, [pc, #516]	@ (8001e54 <HAL_I2C_Init+0x274>)
 8001c50:	4293      	cmp	r3, r2
 8001c52:	d807      	bhi.n	8001c64 <HAL_I2C_Init+0x84>
 8001c54:	68fb      	ldr	r3, [r7, #12]
 8001c56:	4a80      	ldr	r2, [pc, #512]	@ (8001e58 <HAL_I2C_Init+0x278>)
 8001c58:	4293      	cmp	r3, r2
 8001c5a:	bf94      	ite	ls
 8001c5c:	2301      	movls	r3, #1
 8001c5e:	2300      	movhi	r3, #0
 8001c60:	b2db      	uxtb	r3, r3
 8001c62:	e006      	b.n	8001c72 <HAL_I2C_Init+0x92>
 8001c64:	68fb      	ldr	r3, [r7, #12]
 8001c66:	4a7d      	ldr	r2, [pc, #500]	@ (8001e5c <HAL_I2C_Init+0x27c>)
 8001c68:	4293      	cmp	r3, r2
 8001c6a:	bf94      	ite	ls
 8001c6c:	2301      	movls	r3, #1
 8001c6e:	2300      	movhi	r3, #0
 8001c70:	b2db      	uxtb	r3, r3
 8001c72:	2b00      	cmp	r3, #0
 8001c74:	d001      	beq.n	8001c7a <HAL_I2C_Init+0x9a>
 8001c76:	2301      	movs	r3, #1
 8001c78:	e0e7      	b.n	8001e4a <HAL_I2C_Init+0x26a>
 8001c7a:	68fb      	ldr	r3, [r7, #12]
 8001c7c:	4a78      	ldr	r2, [pc, #480]	@ (8001e60 <HAL_I2C_Init+0x280>)
 8001c7e:	fba2 2303 	umull	r2, r3, r2, r3
 8001c82:	0c9b      	lsrs	r3, r3, #18
 8001c84:	60bb      	str	r3, [r7, #8]
 8001c86:	687b      	ldr	r3, [r7, #4]
 8001c88:	681b      	ldr	r3, [r3, #0]
 8001c8a:	685b      	ldr	r3, [r3, #4]
 8001c8c:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8001c90:	687b      	ldr	r3, [r7, #4]
 8001c92:	681b      	ldr	r3, [r3, #0]
 8001c94:	68ba      	ldr	r2, [r7, #8]
 8001c96:	430a      	orrs	r2, r1
 8001c98:	605a      	str	r2, [r3, #4]
 8001c9a:	687b      	ldr	r3, [r7, #4]
 8001c9c:	681b      	ldr	r3, [r3, #0]
 8001c9e:	6a1b      	ldr	r3, [r3, #32]
 8001ca0:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8001ca4:	687b      	ldr	r3, [r7, #4]
 8001ca6:	685b      	ldr	r3, [r3, #4]
 8001ca8:	4a6a      	ldr	r2, [pc, #424]	@ (8001e54 <HAL_I2C_Init+0x274>)
 8001caa:	4293      	cmp	r3, r2
 8001cac:	d802      	bhi.n	8001cb4 <HAL_I2C_Init+0xd4>
 8001cae:	68bb      	ldr	r3, [r7, #8]
 8001cb0:	3301      	adds	r3, #1
 8001cb2:	e009      	b.n	8001cc8 <HAL_I2C_Init+0xe8>
 8001cb4:	68bb      	ldr	r3, [r7, #8]
 8001cb6:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8001cba:	fb02 f303 	mul.w	r3, r2, r3
 8001cbe:	4a69      	ldr	r2, [pc, #420]	@ (8001e64 <HAL_I2C_Init+0x284>)
 8001cc0:	fba2 2303 	umull	r2, r3, r2, r3
 8001cc4:	099b      	lsrs	r3, r3, #6
 8001cc6:	3301      	adds	r3, #1
 8001cc8:	687a      	ldr	r2, [r7, #4]
 8001cca:	6812      	ldr	r2, [r2, #0]
 8001ccc:	430b      	orrs	r3, r1
 8001cce:	6213      	str	r3, [r2, #32]
 8001cd0:	687b      	ldr	r3, [r7, #4]
 8001cd2:	681b      	ldr	r3, [r3, #0]
 8001cd4:	69db      	ldr	r3, [r3, #28]
 8001cd6:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 8001cda:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 8001cde:	687b      	ldr	r3, [r7, #4]
 8001ce0:	685b      	ldr	r3, [r3, #4]
 8001ce2:	495c      	ldr	r1, [pc, #368]	@ (8001e54 <HAL_I2C_Init+0x274>)
 8001ce4:	428b      	cmp	r3, r1
 8001ce6:	d819      	bhi.n	8001d1c <HAL_I2C_Init+0x13c>
 8001ce8:	68fb      	ldr	r3, [r7, #12]
 8001cea:	1e59      	subs	r1, r3, #1
 8001cec:	687b      	ldr	r3, [r7, #4]
 8001cee:	685b      	ldr	r3, [r3, #4]
 8001cf0:	005b      	lsls	r3, r3, #1
 8001cf2:	fbb1 f3f3 	udiv	r3, r1, r3
 8001cf6:	1c59      	adds	r1, r3, #1
 8001cf8:	f640 73fc 	movw	r3, #4092	@ 0xffc
 8001cfc:	400b      	ands	r3, r1
 8001cfe:	2b00      	cmp	r3, #0
 8001d00:	d00a      	beq.n	8001d18 <HAL_I2C_Init+0x138>
 8001d02:	68fb      	ldr	r3, [r7, #12]
 8001d04:	1e59      	subs	r1, r3, #1
 8001d06:	687b      	ldr	r3, [r7, #4]
 8001d08:	685b      	ldr	r3, [r3, #4]
 8001d0a:	005b      	lsls	r3, r3, #1
 8001d0c:	fbb1 f3f3 	udiv	r3, r1, r3
 8001d10:	3301      	adds	r3, #1
 8001d12:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001d16:	e051      	b.n	8001dbc <HAL_I2C_Init+0x1dc>
 8001d18:	2304      	movs	r3, #4
 8001d1a:	e04f      	b.n	8001dbc <HAL_I2C_Init+0x1dc>
 8001d1c:	687b      	ldr	r3, [r7, #4]
 8001d1e:	689b      	ldr	r3, [r3, #8]
 8001d20:	2b00      	cmp	r3, #0
 8001d22:	d111      	bne.n	8001d48 <HAL_I2C_Init+0x168>
 8001d24:	68fb      	ldr	r3, [r7, #12]
 8001d26:	1e58      	subs	r0, r3, #1
 8001d28:	687b      	ldr	r3, [r7, #4]
 8001d2a:	6859      	ldr	r1, [r3, #4]
 8001d2c:	460b      	mov	r3, r1
 8001d2e:	005b      	lsls	r3, r3, #1
 8001d30:	440b      	add	r3, r1
 8001d32:	fbb0 f3f3 	udiv	r3, r0, r3
 8001d36:	3301      	adds	r3, #1
 8001d38:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001d3c:	2b00      	cmp	r3, #0
 8001d3e:	bf0c      	ite	eq
 8001d40:	2301      	moveq	r3, #1
 8001d42:	2300      	movne	r3, #0
 8001d44:	b2db      	uxtb	r3, r3
 8001d46:	e012      	b.n	8001d6e <HAL_I2C_Init+0x18e>
 8001d48:	68fb      	ldr	r3, [r7, #12]
 8001d4a:	1e58      	subs	r0, r3, #1
 8001d4c:	687b      	ldr	r3, [r7, #4]
 8001d4e:	6859      	ldr	r1, [r3, #4]
 8001d50:	460b      	mov	r3, r1
 8001d52:	009b      	lsls	r3, r3, #2
 8001d54:	440b      	add	r3, r1
 8001d56:	0099      	lsls	r1, r3, #2
 8001d58:	440b      	add	r3, r1
 8001d5a:	fbb0 f3f3 	udiv	r3, r0, r3
 8001d5e:	3301      	adds	r3, #1
 8001d60:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001d64:	2b00      	cmp	r3, #0
 8001d66:	bf0c      	ite	eq
 8001d68:	2301      	moveq	r3, #1
 8001d6a:	2300      	movne	r3, #0
 8001d6c:	b2db      	uxtb	r3, r3
 8001d6e:	2b00      	cmp	r3, #0
 8001d70:	d001      	beq.n	8001d76 <HAL_I2C_Init+0x196>
 8001d72:	2301      	movs	r3, #1
 8001d74:	e022      	b.n	8001dbc <HAL_I2C_Init+0x1dc>
 8001d76:	687b      	ldr	r3, [r7, #4]
 8001d78:	689b      	ldr	r3, [r3, #8]
 8001d7a:	2b00      	cmp	r3, #0
 8001d7c:	d10e      	bne.n	8001d9c <HAL_I2C_Init+0x1bc>
 8001d7e:	68fb      	ldr	r3, [r7, #12]
 8001d80:	1e58      	subs	r0, r3, #1
 8001d82:	687b      	ldr	r3, [r7, #4]
 8001d84:	6859      	ldr	r1, [r3, #4]
 8001d86:	460b      	mov	r3, r1
 8001d88:	005b      	lsls	r3, r3, #1
 8001d8a:	440b      	add	r3, r1
 8001d8c:	fbb0 f3f3 	udiv	r3, r0, r3
 8001d90:	3301      	adds	r3, #1
 8001d92:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001d96:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8001d9a:	e00f      	b.n	8001dbc <HAL_I2C_Init+0x1dc>
 8001d9c:	68fb      	ldr	r3, [r7, #12]
 8001d9e:	1e58      	subs	r0, r3, #1
 8001da0:	687b      	ldr	r3, [r7, #4]
 8001da2:	6859      	ldr	r1, [r3, #4]
 8001da4:	460b      	mov	r3, r1
 8001da6:	009b      	lsls	r3, r3, #2
 8001da8:	440b      	add	r3, r1
 8001daa:	0099      	lsls	r1, r3, #2
 8001dac:	440b      	add	r3, r1
 8001dae:	fbb0 f3f3 	udiv	r3, r0, r3
 8001db2:	3301      	adds	r3, #1
 8001db4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001db8:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8001dbc:	6879      	ldr	r1, [r7, #4]
 8001dbe:	6809      	ldr	r1, [r1, #0]
 8001dc0:	4313      	orrs	r3, r2
 8001dc2:	61cb      	str	r3, [r1, #28]
 8001dc4:	687b      	ldr	r3, [r7, #4]
 8001dc6:	681b      	ldr	r3, [r3, #0]
 8001dc8:	681b      	ldr	r3, [r3, #0]
 8001dca:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 8001dce:	687b      	ldr	r3, [r7, #4]
 8001dd0:	69da      	ldr	r2, [r3, #28]
 8001dd2:	687b      	ldr	r3, [r7, #4]
 8001dd4:	6a1b      	ldr	r3, [r3, #32]
 8001dd6:	431a      	orrs	r2, r3
 8001dd8:	687b      	ldr	r3, [r7, #4]
 8001dda:	681b      	ldr	r3, [r3, #0]
 8001ddc:	430a      	orrs	r2, r1
 8001dde:	601a      	str	r2, [r3, #0]
 8001de0:	687b      	ldr	r3, [r7, #4]
 8001de2:	681b      	ldr	r3, [r3, #0]
 8001de4:	689b      	ldr	r3, [r3, #8]
 8001de6:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 8001dea:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8001dee:	687a      	ldr	r2, [r7, #4]
 8001df0:	6911      	ldr	r1, [r2, #16]
 8001df2:	687a      	ldr	r2, [r7, #4]
 8001df4:	68d2      	ldr	r2, [r2, #12]
 8001df6:	4311      	orrs	r1, r2
 8001df8:	687a      	ldr	r2, [r7, #4]
 8001dfa:	6812      	ldr	r2, [r2, #0]
 8001dfc:	430b      	orrs	r3, r1
 8001dfe:	6093      	str	r3, [r2, #8]
 8001e00:	687b      	ldr	r3, [r7, #4]
 8001e02:	681b      	ldr	r3, [r3, #0]
 8001e04:	68db      	ldr	r3, [r3, #12]
 8001e06:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 8001e0a:	687b      	ldr	r3, [r7, #4]
 8001e0c:	695a      	ldr	r2, [r3, #20]
 8001e0e:	687b      	ldr	r3, [r7, #4]
 8001e10:	699b      	ldr	r3, [r3, #24]
 8001e12:	431a      	orrs	r2, r3
 8001e14:	687b      	ldr	r3, [r7, #4]
 8001e16:	681b      	ldr	r3, [r3, #0]
 8001e18:	430a      	orrs	r2, r1
 8001e1a:	60da      	str	r2, [r3, #12]
 8001e1c:	687b      	ldr	r3, [r7, #4]
 8001e1e:	681b      	ldr	r3, [r3, #0]
 8001e20:	681a      	ldr	r2, [r3, #0]
 8001e22:	687b      	ldr	r3, [r7, #4]
 8001e24:	681b      	ldr	r3, [r3, #0]
 8001e26:	f042 0201 	orr.w	r2, r2, #1
 8001e2a:	601a      	str	r2, [r3, #0]
 8001e2c:	687b      	ldr	r3, [r7, #4]
 8001e2e:	2200      	movs	r2, #0
 8001e30:	641a      	str	r2, [r3, #64]	@ 0x40
 8001e32:	687b      	ldr	r3, [r7, #4]
 8001e34:	2220      	movs	r2, #32
 8001e36:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001e3a:	687b      	ldr	r3, [r7, #4]
 8001e3c:	2200      	movs	r2, #0
 8001e3e:	631a      	str	r2, [r3, #48]	@ 0x30
 8001e40:	687b      	ldr	r3, [r7, #4]
 8001e42:	2200      	movs	r2, #0
 8001e44:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8001e48:	2300      	movs	r3, #0
 8001e4a:	4618      	mov	r0, r3
 8001e4c:	3710      	adds	r7, #16
 8001e4e:	46bd      	mov	sp, r7
 8001e50:	bd80      	pop	{r7, pc}
 8001e52:	bf00      	nop
 8001e54:	000186a0 	.word	0x000186a0
 8001e58:	001e847f 	.word	0x001e847f
 8001e5c:	003d08ff 	.word	0x003d08ff
 8001e60:	431bde83 	.word	0x431bde83
 8001e64:	10624dd3 	.word	0x10624dd3

08001e68 <HAL_RCC_OscConfig>:
 8001e68:	b580      	push	{r7, lr}
 8001e6a:	b086      	sub	sp, #24
 8001e6c:	af00      	add	r7, sp, #0
 8001e6e:	6078      	str	r0, [r7, #4]
 8001e70:	687b      	ldr	r3, [r7, #4]
 8001e72:	2b00      	cmp	r3, #0
 8001e74:	d101      	bne.n	8001e7a <HAL_RCC_OscConfig+0x12>
 8001e76:	2301      	movs	r3, #1
 8001e78:	e267      	b.n	800234a <HAL_RCC_OscConfig+0x4e2>
 8001e7a:	687b      	ldr	r3, [r7, #4]
 8001e7c:	681b      	ldr	r3, [r3, #0]
 8001e7e:	f003 0301 	and.w	r3, r3, #1
 8001e82:	2b00      	cmp	r3, #0
 8001e84:	d075      	beq.n	8001f72 <HAL_RCC_OscConfig+0x10a>
 8001e86:	4b88      	ldr	r3, [pc, #544]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 8001e88:	689b      	ldr	r3, [r3, #8]
 8001e8a:	f003 030c 	and.w	r3, r3, #12
 8001e8e:	2b04      	cmp	r3, #4
 8001e90:	d00c      	beq.n	8001eac <HAL_RCC_OscConfig+0x44>
 8001e92:	4b85      	ldr	r3, [pc, #532]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 8001e94:	689b      	ldr	r3, [r3, #8]
 8001e96:	f003 030c 	and.w	r3, r3, #12
 8001e9a:	2b08      	cmp	r3, #8
 8001e9c:	d112      	bne.n	8001ec4 <HAL_RCC_OscConfig+0x5c>
 8001e9e:	4b82      	ldr	r3, [pc, #520]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 8001ea0:	685b      	ldr	r3, [r3, #4]
 8001ea2:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8001ea6:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8001eaa:	d10b      	bne.n	8001ec4 <HAL_RCC_OscConfig+0x5c>
 8001eac:	4b7e      	ldr	r3, [pc, #504]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 8001eae:	681b      	ldr	r3, [r3, #0]
 8001eb0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001eb4:	2b00      	cmp	r3, #0
 8001eb6:	d05b      	beq.n	8001f70 <HAL_RCC_OscConfig+0x108>
 8001eb8:	687b      	ldr	r3, [r7, #4]
 8001eba:	685b      	ldr	r3, [r3, #4]
 8001ebc:	2b00      	cmp	r3, #0
 8001ebe:	d157      	bne.n	8001f70 <HAL_RCC_OscConfig+0x108>
 8001ec0:	2301      	movs	r3, #1
 8001ec2:	e242      	b.n	800234a <HAL_RCC_OscConfig+0x4e2>
 8001ec4:	687b      	ldr	r3, [r7, #4]
 8001ec6:	685b      	ldr	r3, [r3, #4]
 8001ec8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001ecc:	d106      	bne.n	8001edc <HAL_RCC_OscConfig+0x74>
 8001ece:	4b76      	ldr	r3, [pc, #472]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 8001ed0:	681b      	ldr	r3, [r3, #0]
 8001ed2:	4a75      	ldr	r2, [pc, #468]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 8001ed4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001ed8:	6013      	str	r3, [r2, #0]
 8001eda:	e01d      	b.n	8001f18 <HAL_RCC_OscConfig+0xb0>
 8001edc:	687b      	ldr	r3, [r7, #4]
 8001ede:	685b      	ldr	r3, [r3, #4]
 8001ee0:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8001ee4:	d10c      	bne.n	8001f00 <HAL_RCC_OscConfig+0x98>
 8001ee6:	4b70      	ldr	r3, [pc, #448]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 8001ee8:	681b      	ldr	r3, [r3, #0]
 8001eea:	4a6f      	ldr	r2, [pc, #444]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 8001eec:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001ef0:	6013      	str	r3, [r2, #0]
 8001ef2:	4b6d      	ldr	r3, [pc, #436]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 8001ef4:	681b      	ldr	r3, [r3, #0]
 8001ef6:	4a6c      	ldr	r2, [pc, #432]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 8001ef8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001efc:	6013      	str	r3, [r2, #0]
 8001efe:	e00b      	b.n	8001f18 <HAL_RCC_OscConfig+0xb0>
 8001f00:	4b69      	ldr	r3, [pc, #420]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 8001f02:	681b      	ldr	r3, [r3, #0]
 8001f04:	4a68      	ldr	r2, [pc, #416]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 8001f06:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001f0a:	6013      	str	r3, [r2, #0]
 8001f0c:	4b66      	ldr	r3, [pc, #408]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 8001f0e:	681b      	ldr	r3, [r3, #0]
 8001f10:	4a65      	ldr	r2, [pc, #404]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 8001f12:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001f16:	6013      	str	r3, [r2, #0]
 8001f18:	687b      	ldr	r3, [r7, #4]
 8001f1a:	685b      	ldr	r3, [r3, #4]
 8001f1c:	2b00      	cmp	r3, #0
 8001f1e:	d013      	beq.n	8001f48 <HAL_RCC_OscConfig+0xe0>
 8001f20:	f7ff fb06 	bl	8001530 <HAL_GetTick>
 8001f24:	6138      	str	r0, [r7, #16]
 8001f26:	e008      	b.n	8001f3a <HAL_RCC_OscConfig+0xd2>
 8001f28:	f7ff fb02 	bl	8001530 <HAL_GetTick>
 8001f2c:	4602      	mov	r2, r0
 8001f2e:	693b      	ldr	r3, [r7, #16]
 8001f30:	1ad3      	subs	r3, r2, r3
 8001f32:	2b64      	cmp	r3, #100	@ 0x64
 8001f34:	d901      	bls.n	8001f3a <HAL_RCC_OscConfig+0xd2>
 8001f36:	2303      	movs	r3, #3
 8001f38:	e207      	b.n	800234a <HAL_RCC_OscConfig+0x4e2>
 8001f3a:	4b5b      	ldr	r3, [pc, #364]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 8001f3c:	681b      	ldr	r3, [r3, #0]
 8001f3e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001f42:	2b00      	cmp	r3, #0
 8001f44:	d0f0      	beq.n	8001f28 <HAL_RCC_OscConfig+0xc0>
 8001f46:	e014      	b.n	8001f72 <HAL_RCC_OscConfig+0x10a>
 8001f48:	f7ff faf2 	bl	8001530 <HAL_GetTick>
 8001f4c:	6138      	str	r0, [r7, #16]
 8001f4e:	e008      	b.n	8001f62 <HAL_RCC_OscConfig+0xfa>
 8001f50:	f7ff faee 	bl	8001530 <HAL_GetTick>
 8001f54:	4602      	mov	r2, r0
 8001f56:	693b      	ldr	r3, [r7, #16]
 8001f58:	1ad3      	subs	r3, r2, r3
 8001f5a:	2b64      	cmp	r3, #100	@ 0x64
 8001f5c:	d901      	bls.n	8001f62 <HAL_RCC_OscConfig+0xfa>
 8001f5e:	2303      	movs	r3, #3
 8001f60:	e1f3      	b.n	800234a <HAL_RCC_OscConfig+0x4e2>
 8001f62:	4b51      	ldr	r3, [pc, #324]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 8001f64:	681b      	ldr	r3, [r3, #0]
 8001f66:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001f6a:	2b00      	cmp	r3, #0
 8001f6c:	d1f0      	bne.n	8001f50 <HAL_RCC_OscConfig+0xe8>
 8001f6e:	e000      	b.n	8001f72 <HAL_RCC_OscConfig+0x10a>
 8001f70:	bf00      	nop
 8001f72:	687b      	ldr	r3, [r7, #4]
 8001f74:	681b      	ldr	r3, [r3, #0]
 8001f76:	f003 0302 	and.w	r3, r3, #2
 8001f7a:	2b00      	cmp	r3, #0
 8001f7c:	d063      	beq.n	8002046 <HAL_RCC_OscConfig+0x1de>
 8001f7e:	4b4a      	ldr	r3, [pc, #296]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 8001f80:	689b      	ldr	r3, [r3, #8]
 8001f82:	f003 030c 	and.w	r3, r3, #12
 8001f86:	2b00      	cmp	r3, #0
 8001f88:	d00b      	beq.n	8001fa2 <HAL_RCC_OscConfig+0x13a>
 8001f8a:	4b47      	ldr	r3, [pc, #284]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 8001f8c:	689b      	ldr	r3, [r3, #8]
 8001f8e:	f003 030c 	and.w	r3, r3, #12
 8001f92:	2b08      	cmp	r3, #8
 8001f94:	d11c      	bne.n	8001fd0 <HAL_RCC_OscConfig+0x168>
 8001f96:	4b44      	ldr	r3, [pc, #272]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 8001f98:	685b      	ldr	r3, [r3, #4]
 8001f9a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8001f9e:	2b00      	cmp	r3, #0
 8001fa0:	d116      	bne.n	8001fd0 <HAL_RCC_OscConfig+0x168>
 8001fa2:	4b41      	ldr	r3, [pc, #260]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 8001fa4:	681b      	ldr	r3, [r3, #0]
 8001fa6:	f003 0302 	and.w	r3, r3, #2
 8001faa:	2b00      	cmp	r3, #0
 8001fac:	d005      	beq.n	8001fba <HAL_RCC_OscConfig+0x152>
 8001fae:	687b      	ldr	r3, [r7, #4]
 8001fb0:	68db      	ldr	r3, [r3, #12]
 8001fb2:	2b01      	cmp	r3, #1
 8001fb4:	d001      	beq.n	8001fba <HAL_RCC_OscConfig+0x152>
 8001fb6:	2301      	movs	r3, #1
 8001fb8:	e1c7      	b.n	800234a <HAL_RCC_OscConfig+0x4e2>
 8001fba:	4b3b      	ldr	r3, [pc, #236]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 8001fbc:	681b      	ldr	r3, [r3, #0]
 8001fbe:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8001fc2:	687b      	ldr	r3, [r7, #4]
 8001fc4:	691b      	ldr	r3, [r3, #16]
 8001fc6:	00db      	lsls	r3, r3, #3
 8001fc8:	4937      	ldr	r1, [pc, #220]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 8001fca:	4313      	orrs	r3, r2
 8001fcc:	600b      	str	r3, [r1, #0]
 8001fce:	e03a      	b.n	8002046 <HAL_RCC_OscConfig+0x1de>
 8001fd0:	687b      	ldr	r3, [r7, #4]
 8001fd2:	68db      	ldr	r3, [r3, #12]
 8001fd4:	2b00      	cmp	r3, #0
 8001fd6:	d020      	beq.n	800201a <HAL_RCC_OscConfig+0x1b2>
 8001fd8:	4b34      	ldr	r3, [pc, #208]	@ (80020ac <HAL_RCC_OscConfig+0x244>)
 8001fda:	2201      	movs	r2, #1
 8001fdc:	601a      	str	r2, [r3, #0]
 8001fde:	f7ff faa7 	bl	8001530 <HAL_GetTick>
 8001fe2:	6138      	str	r0, [r7, #16]
 8001fe4:	e008      	b.n	8001ff8 <HAL_RCC_OscConfig+0x190>
 8001fe6:	f7ff faa3 	bl	8001530 <HAL_GetTick>
 8001fea:	4602      	mov	r2, r0
 8001fec:	693b      	ldr	r3, [r7, #16]
 8001fee:	1ad3      	subs	r3, r2, r3
 8001ff0:	2b02      	cmp	r3, #2
 8001ff2:	d901      	bls.n	8001ff8 <HAL_RCC_OscConfig+0x190>
 8001ff4:	2303      	movs	r3, #3
 8001ff6:	e1a8      	b.n	800234a <HAL_RCC_OscConfig+0x4e2>
 8001ff8:	4b2b      	ldr	r3, [pc, #172]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 8001ffa:	681b      	ldr	r3, [r3, #0]
 8001ffc:	f003 0302 	and.w	r3, r3, #2
 8002000:	2b00      	cmp	r3, #0
 8002002:	d0f0      	beq.n	8001fe6 <HAL_RCC_OscConfig+0x17e>
 8002004:	4b28      	ldr	r3, [pc, #160]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 8002006:	681b      	ldr	r3, [r3, #0]
 8002008:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800200c:	687b      	ldr	r3, [r7, #4]
 800200e:	691b      	ldr	r3, [r3, #16]
 8002010:	00db      	lsls	r3, r3, #3
 8002012:	4925      	ldr	r1, [pc, #148]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 8002014:	4313      	orrs	r3, r2
 8002016:	600b      	str	r3, [r1, #0]
 8002018:	e015      	b.n	8002046 <HAL_RCC_OscConfig+0x1de>
 800201a:	4b24      	ldr	r3, [pc, #144]	@ (80020ac <HAL_RCC_OscConfig+0x244>)
 800201c:	2200      	movs	r2, #0
 800201e:	601a      	str	r2, [r3, #0]
 8002020:	f7ff fa86 	bl	8001530 <HAL_GetTick>
 8002024:	6138      	str	r0, [r7, #16]
 8002026:	e008      	b.n	800203a <HAL_RCC_OscConfig+0x1d2>
 8002028:	f7ff fa82 	bl	8001530 <HAL_GetTick>
 800202c:	4602      	mov	r2, r0
 800202e:	693b      	ldr	r3, [r7, #16]
 8002030:	1ad3      	subs	r3, r2, r3
 8002032:	2b02      	cmp	r3, #2
 8002034:	d901      	bls.n	800203a <HAL_RCC_OscConfig+0x1d2>
 8002036:	2303      	movs	r3, #3
 8002038:	e187      	b.n	800234a <HAL_RCC_OscConfig+0x4e2>
 800203a:	4b1b      	ldr	r3, [pc, #108]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 800203c:	681b      	ldr	r3, [r3, #0]
 800203e:	f003 0302 	and.w	r3, r3, #2
 8002042:	2b00      	cmp	r3, #0
 8002044:	d1f0      	bne.n	8002028 <HAL_RCC_OscConfig+0x1c0>
 8002046:	687b      	ldr	r3, [r7, #4]
 8002048:	681b      	ldr	r3, [r3, #0]
 800204a:	f003 0308 	and.w	r3, r3, #8
 800204e:	2b00      	cmp	r3, #0
 8002050:	d036      	beq.n	80020c0 <HAL_RCC_OscConfig+0x258>
 8002052:	687b      	ldr	r3, [r7, #4]
 8002054:	695b      	ldr	r3, [r3, #20]
 8002056:	2b00      	cmp	r3, #0
 8002058:	d016      	beq.n	8002088 <HAL_RCC_OscConfig+0x220>
 800205a:	4b15      	ldr	r3, [pc, #84]	@ (80020b0 <HAL_RCC_OscConfig+0x248>)
 800205c:	2201      	movs	r2, #1
 800205e:	601a      	str	r2, [r3, #0]
 8002060:	f7ff fa66 	bl	8001530 <HAL_GetTick>
 8002064:	6138      	str	r0, [r7, #16]
 8002066:	e008      	b.n	800207a <HAL_RCC_OscConfig+0x212>
 8002068:	f7ff fa62 	bl	8001530 <HAL_GetTick>
 800206c:	4602      	mov	r2, r0
 800206e:	693b      	ldr	r3, [r7, #16]
 8002070:	1ad3      	subs	r3, r2, r3
 8002072:	2b02      	cmp	r3, #2
 8002074:	d901      	bls.n	800207a <HAL_RCC_OscConfig+0x212>
 8002076:	2303      	movs	r3, #3
 8002078:	e167      	b.n	800234a <HAL_RCC_OscConfig+0x4e2>
 800207a:	4b0b      	ldr	r3, [pc, #44]	@ (80020a8 <HAL_RCC_OscConfig+0x240>)
 800207c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800207e:	f003 0302 	and.w	r3, r3, #2
 8002082:	2b00      	cmp	r3, #0
 8002084:	d0f0      	beq.n	8002068 <HAL_RCC_OscConfig+0x200>
 8002086:	e01b      	b.n	80020c0 <HAL_RCC_OscConfig+0x258>
 8002088:	4b09      	ldr	r3, [pc, #36]	@ (80020b0 <HAL_RCC_OscConfig+0x248>)
 800208a:	2200      	movs	r2, #0
 800208c:	601a      	str	r2, [r3, #0]
 800208e:	f7ff fa4f 	bl	8001530 <HAL_GetTick>
 8002092:	6138      	str	r0, [r7, #16]
 8002094:	e00e      	b.n	80020b4 <HAL_RCC_OscConfig+0x24c>
 8002096:	f7ff fa4b 	bl	8001530 <HAL_GetTick>
 800209a:	4602      	mov	r2, r0
 800209c:	693b      	ldr	r3, [r7, #16]
 800209e:	1ad3      	subs	r3, r2, r3
 80020a0:	2b02      	cmp	r3, #2
 80020a2:	d907      	bls.n	80020b4 <HAL_RCC_OscConfig+0x24c>
 80020a4:	2303      	movs	r3, #3
 80020a6:	e150      	b.n	800234a <HAL_RCC_OscConfig+0x4e2>
 80020a8:	40023800 	.word	0x40023800
 80020ac:	42470000 	.word	0x42470000
 80020b0:	42470e80 	.word	0x42470e80
 80020b4:	4b88      	ldr	r3, [pc, #544]	@ (80022d8 <HAL_RCC_OscConfig+0x470>)
 80020b6:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80020b8:	f003 0302 	and.w	r3, r3, #2
 80020bc:	2b00      	cmp	r3, #0
 80020be:	d1ea      	bne.n	8002096 <HAL_RCC_OscConfig+0x22e>
 80020c0:	687b      	ldr	r3, [r7, #4]
 80020c2:	681b      	ldr	r3, [r3, #0]
 80020c4:	f003 0304 	and.w	r3, r3, #4
 80020c8:	2b00      	cmp	r3, #0
 80020ca:	f000 8097 	beq.w	80021fc <HAL_RCC_OscConfig+0x394>
 80020ce:	2300      	movs	r3, #0
 80020d0:	75fb      	strb	r3, [r7, #23]
 80020d2:	4b81      	ldr	r3, [pc, #516]	@ (80022d8 <HAL_RCC_OscConfig+0x470>)
 80020d4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80020d6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80020da:	2b00      	cmp	r3, #0
 80020dc:	d10f      	bne.n	80020fe <HAL_RCC_OscConfig+0x296>
 80020de:	2300      	movs	r3, #0
 80020e0:	60bb      	str	r3, [r7, #8]
 80020e2:	4b7d      	ldr	r3, [pc, #500]	@ (80022d8 <HAL_RCC_OscConfig+0x470>)
 80020e4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80020e6:	4a7c      	ldr	r2, [pc, #496]	@ (80022d8 <HAL_RCC_OscConfig+0x470>)
 80020e8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80020ec:	6413      	str	r3, [r2, #64]	@ 0x40
 80020ee:	4b7a      	ldr	r3, [pc, #488]	@ (80022d8 <HAL_RCC_OscConfig+0x470>)
 80020f0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80020f2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80020f6:	60bb      	str	r3, [r7, #8]
 80020f8:	68bb      	ldr	r3, [r7, #8]
 80020fa:	2301      	movs	r3, #1
 80020fc:	75fb      	strb	r3, [r7, #23]
 80020fe:	4b77      	ldr	r3, [pc, #476]	@ (80022dc <HAL_RCC_OscConfig+0x474>)
 8002100:	681b      	ldr	r3, [r3, #0]
 8002102:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002106:	2b00      	cmp	r3, #0
 8002108:	d118      	bne.n	800213c <HAL_RCC_OscConfig+0x2d4>
 800210a:	4b74      	ldr	r3, [pc, #464]	@ (80022dc <HAL_RCC_OscConfig+0x474>)
 800210c:	681b      	ldr	r3, [r3, #0]
 800210e:	4a73      	ldr	r2, [pc, #460]	@ (80022dc <HAL_RCC_OscConfig+0x474>)
 8002110:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002114:	6013      	str	r3, [r2, #0]
 8002116:	f7ff fa0b 	bl	8001530 <HAL_GetTick>
 800211a:	6138      	str	r0, [r7, #16]
 800211c:	e008      	b.n	8002130 <HAL_RCC_OscConfig+0x2c8>
 800211e:	f7ff fa07 	bl	8001530 <HAL_GetTick>
 8002122:	4602      	mov	r2, r0
 8002124:	693b      	ldr	r3, [r7, #16]
 8002126:	1ad3      	subs	r3, r2, r3
 8002128:	2b02      	cmp	r3, #2
 800212a:	d901      	bls.n	8002130 <HAL_RCC_OscConfig+0x2c8>
 800212c:	2303      	movs	r3, #3
 800212e:	e10c      	b.n	800234a <HAL_RCC_OscConfig+0x4e2>
 8002130:	4b6a      	ldr	r3, [pc, #424]	@ (80022dc <HAL_RCC_OscConfig+0x474>)
 8002132:	681b      	ldr	r3, [r3, #0]
 8002134:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002138:	2b00      	cmp	r3, #0
 800213a:	d0f0      	beq.n	800211e <HAL_RCC_OscConfig+0x2b6>
 800213c:	687b      	ldr	r3, [r7, #4]
 800213e:	689b      	ldr	r3, [r3, #8]
 8002140:	2b01      	cmp	r3, #1
 8002142:	d106      	bne.n	8002152 <HAL_RCC_OscConfig+0x2ea>
 8002144:	4b64      	ldr	r3, [pc, #400]	@ (80022d8 <HAL_RCC_OscConfig+0x470>)
 8002146:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002148:	4a63      	ldr	r2, [pc, #396]	@ (80022d8 <HAL_RCC_OscConfig+0x470>)
 800214a:	f043 0301 	orr.w	r3, r3, #1
 800214e:	6713      	str	r3, [r2, #112]	@ 0x70
 8002150:	e01c      	b.n	800218c <HAL_RCC_OscConfig+0x324>
 8002152:	687b      	ldr	r3, [r7, #4]
 8002154:	689b      	ldr	r3, [r3, #8]
 8002156:	2b05      	cmp	r3, #5
 8002158:	d10c      	bne.n	8002174 <HAL_RCC_OscConfig+0x30c>
 800215a:	4b5f      	ldr	r3, [pc, #380]	@ (80022d8 <HAL_RCC_OscConfig+0x470>)
 800215c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800215e:	4a5e      	ldr	r2, [pc, #376]	@ (80022d8 <HAL_RCC_OscConfig+0x470>)
 8002160:	f043 0304 	orr.w	r3, r3, #4
 8002164:	6713      	str	r3, [r2, #112]	@ 0x70
 8002166:	4b5c      	ldr	r3, [pc, #368]	@ (80022d8 <HAL_RCC_OscConfig+0x470>)
 8002168:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800216a:	4a5b      	ldr	r2, [pc, #364]	@ (80022d8 <HAL_RCC_OscConfig+0x470>)
 800216c:	f043 0301 	orr.w	r3, r3, #1
 8002170:	6713      	str	r3, [r2, #112]	@ 0x70
 8002172:	e00b      	b.n	800218c <HAL_RCC_OscConfig+0x324>
 8002174:	4b58      	ldr	r3, [pc, #352]	@ (80022d8 <HAL_RCC_OscConfig+0x470>)
 8002176:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002178:	4a57      	ldr	r2, [pc, #348]	@ (80022d8 <HAL_RCC_OscConfig+0x470>)
 800217a:	f023 0301 	bic.w	r3, r3, #1
 800217e:	6713      	str	r3, [r2, #112]	@ 0x70
 8002180:	4b55      	ldr	r3, [pc, #340]	@ (80022d8 <HAL_RCC_OscConfig+0x470>)
 8002182:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002184:	4a54      	ldr	r2, [pc, #336]	@ (80022d8 <HAL_RCC_OscConfig+0x470>)
 8002186:	f023 0304 	bic.w	r3, r3, #4
 800218a:	6713      	str	r3, [r2, #112]	@ 0x70
 800218c:	687b      	ldr	r3, [r7, #4]
 800218e:	689b      	ldr	r3, [r3, #8]
 8002190:	2b00      	cmp	r3, #0
 8002192:	d015      	beq.n	80021c0 <HAL_RCC_OscConfig+0x358>
 8002194:	f7ff f9cc 	bl	8001530 <HAL_GetTick>
 8002198:	6138      	str	r0, [r7, #16]
 800219a:	e00a      	b.n	80021b2 <HAL_RCC_OscConfig+0x34a>
 800219c:	f7ff f9c8 	bl	8001530 <HAL_GetTick>
 80021a0:	4602      	mov	r2, r0
 80021a2:	693b      	ldr	r3, [r7, #16]
 80021a4:	1ad3      	subs	r3, r2, r3
 80021a6:	f241 3288 	movw	r2, #5000	@ 0x1388
 80021aa:	4293      	cmp	r3, r2
 80021ac:	d901      	bls.n	80021b2 <HAL_RCC_OscConfig+0x34a>
 80021ae:	2303      	movs	r3, #3
 80021b0:	e0cb      	b.n	800234a <HAL_RCC_OscConfig+0x4e2>
 80021b2:	4b49      	ldr	r3, [pc, #292]	@ (80022d8 <HAL_RCC_OscConfig+0x470>)
 80021b4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80021b6:	f003 0302 	and.w	r3, r3, #2
 80021ba:	2b00      	cmp	r3, #0
 80021bc:	d0ee      	beq.n	800219c <HAL_RCC_OscConfig+0x334>
 80021be:	e014      	b.n	80021ea <HAL_RCC_OscConfig+0x382>
 80021c0:	f7ff f9b6 	bl	8001530 <HAL_GetTick>
 80021c4:	6138      	str	r0, [r7, #16]
 80021c6:	e00a      	b.n	80021de <HAL_RCC_OscConfig+0x376>
 80021c8:	f7ff f9b2 	bl	8001530 <HAL_GetTick>
 80021cc:	4602      	mov	r2, r0
 80021ce:	693b      	ldr	r3, [r7, #16]
 80021d0:	1ad3      	subs	r3, r2, r3
 80021d2:	f241 3288 	movw	r2, #5000	@ 0x1388
 80021d6:	4293      	cmp	r3, r2
 80021d8:	d901      	bls.n	80021de <HAL_RCC_OscConfig+0x376>
 80021da:	2303      	movs	r3, #3
 80021dc:	e0b5      	b.n	800234a <HAL_RCC_OscConfig+0x4e2>
 80021de:	4b3e      	ldr	r3, [pc, #248]	@ (80022d8 <HAL_RCC_OscConfig+0x470>)
 80021e0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80021e2:	f003 0302 	and.w	r3, r3, #2
 80021e6:	2b00      	cmp	r3, #0
 80021e8:	d1ee      	bne.n	80021c8 <HAL_RCC_OscConfig+0x360>
 80021ea:	7dfb      	ldrb	r3, [r7, #23]
 80021ec:	2b01      	cmp	r3, #1
 80021ee:	d105      	bne.n	80021fc <HAL_RCC_OscConfig+0x394>
 80021f0:	4b39      	ldr	r3, [pc, #228]	@ (80022d8 <HAL_RCC_OscConfig+0x470>)
 80021f2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80021f4:	4a38      	ldr	r2, [pc, #224]	@ (80022d8 <HAL_RCC_OscConfig+0x470>)
 80021f6:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80021fa:	6413      	str	r3, [r2, #64]	@ 0x40
 80021fc:	687b      	ldr	r3, [r7, #4]
 80021fe:	699b      	ldr	r3, [r3, #24]
 8002200:	2b00      	cmp	r3, #0
 8002202:	f000 80a1 	beq.w	8002348 <HAL_RCC_OscConfig+0x4e0>
 8002206:	4b34      	ldr	r3, [pc, #208]	@ (80022d8 <HAL_RCC_OscConfig+0x470>)
 8002208:	689b      	ldr	r3, [r3, #8]
 800220a:	f003 030c 	and.w	r3, r3, #12
 800220e:	2b08      	cmp	r3, #8
 8002210:	d05c      	beq.n	80022cc <HAL_RCC_OscConfig+0x464>
 8002212:	687b      	ldr	r3, [r7, #4]
 8002214:	699b      	ldr	r3, [r3, #24]
 8002216:	2b02      	cmp	r3, #2
 8002218:	d141      	bne.n	800229e <HAL_RCC_OscConfig+0x436>
 800221a:	4b31      	ldr	r3, [pc, #196]	@ (80022e0 <HAL_RCC_OscConfig+0x478>)
 800221c:	2200      	movs	r2, #0
 800221e:	601a      	str	r2, [r3, #0]
 8002220:	f7ff f986 	bl	8001530 <HAL_GetTick>
 8002224:	6138      	str	r0, [r7, #16]
 8002226:	e008      	b.n	800223a <HAL_RCC_OscConfig+0x3d2>
 8002228:	f7ff f982 	bl	8001530 <HAL_GetTick>
 800222c:	4602      	mov	r2, r0
 800222e:	693b      	ldr	r3, [r7, #16]
 8002230:	1ad3      	subs	r3, r2, r3
 8002232:	2b02      	cmp	r3, #2
 8002234:	d901      	bls.n	800223a <HAL_RCC_OscConfig+0x3d2>
 8002236:	2303      	movs	r3, #3
 8002238:	e087      	b.n	800234a <HAL_RCC_OscConfig+0x4e2>
 800223a:	4b27      	ldr	r3, [pc, #156]	@ (80022d8 <HAL_RCC_OscConfig+0x470>)
 800223c:	681b      	ldr	r3, [r3, #0]
 800223e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002242:	2b00      	cmp	r3, #0
 8002244:	d1f0      	bne.n	8002228 <HAL_RCC_OscConfig+0x3c0>
 8002246:	687b      	ldr	r3, [r7, #4]
 8002248:	69da      	ldr	r2, [r3, #28]
 800224a:	687b      	ldr	r3, [r7, #4]
 800224c:	6a1b      	ldr	r3, [r3, #32]
 800224e:	431a      	orrs	r2, r3
 8002250:	687b      	ldr	r3, [r7, #4]
 8002252:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002254:	019b      	lsls	r3, r3, #6
 8002256:	431a      	orrs	r2, r3
 8002258:	687b      	ldr	r3, [r7, #4]
 800225a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800225c:	085b      	lsrs	r3, r3, #1
 800225e:	3b01      	subs	r3, #1
 8002260:	041b      	lsls	r3, r3, #16
 8002262:	431a      	orrs	r2, r3
 8002264:	687b      	ldr	r3, [r7, #4]
 8002266:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002268:	061b      	lsls	r3, r3, #24
 800226a:	491b      	ldr	r1, [pc, #108]	@ (80022d8 <HAL_RCC_OscConfig+0x470>)
 800226c:	4313      	orrs	r3, r2
 800226e:	604b      	str	r3, [r1, #4]
 8002270:	4b1b      	ldr	r3, [pc, #108]	@ (80022e0 <HAL_RCC_OscConfig+0x478>)
 8002272:	2201      	movs	r2, #1
 8002274:	601a      	str	r2, [r3, #0]
 8002276:	f7ff f95b 	bl	8001530 <HAL_GetTick>
 800227a:	6138      	str	r0, [r7, #16]
 800227c:	e008      	b.n	8002290 <HAL_RCC_OscConfig+0x428>
 800227e:	f7ff f957 	bl	8001530 <HAL_GetTick>
 8002282:	4602      	mov	r2, r0
 8002284:	693b      	ldr	r3, [r7, #16]
 8002286:	1ad3      	subs	r3, r2, r3
 8002288:	2b02      	cmp	r3, #2
 800228a:	d901      	bls.n	8002290 <HAL_RCC_OscConfig+0x428>
 800228c:	2303      	movs	r3, #3
 800228e:	e05c      	b.n	800234a <HAL_RCC_OscConfig+0x4e2>
 8002290:	4b11      	ldr	r3, [pc, #68]	@ (80022d8 <HAL_RCC_OscConfig+0x470>)
 8002292:	681b      	ldr	r3, [r3, #0]
 8002294:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002298:	2b00      	cmp	r3, #0
 800229a:	d0f0      	beq.n	800227e <HAL_RCC_OscConfig+0x416>
 800229c:	e054      	b.n	8002348 <HAL_RCC_OscConfig+0x4e0>
 800229e:	4b10      	ldr	r3, [pc, #64]	@ (80022e0 <HAL_RCC_OscConfig+0x478>)
 80022a0:	2200      	movs	r2, #0
 80022a2:	601a      	str	r2, [r3, #0]
 80022a4:	f7ff f944 	bl	8001530 <HAL_GetTick>
 80022a8:	6138      	str	r0, [r7, #16]
 80022aa:	e008      	b.n	80022be <HAL_RCC_OscConfig+0x456>
 80022ac:	f7ff f940 	bl	8001530 <HAL_GetTick>
 80022b0:	4602      	mov	r2, r0
 80022b2:	693b      	ldr	r3, [r7, #16]
 80022b4:	1ad3      	subs	r3, r2, r3
 80022b6:	2b02      	cmp	r3, #2
 80022b8:	d901      	bls.n	80022be <HAL_RCC_OscConfig+0x456>
 80022ba:	2303      	movs	r3, #3
 80022bc:	e045      	b.n	800234a <HAL_RCC_OscConfig+0x4e2>
 80022be:	4b06      	ldr	r3, [pc, #24]	@ (80022d8 <HAL_RCC_OscConfig+0x470>)
 80022c0:	681b      	ldr	r3, [r3, #0]
 80022c2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80022c6:	2b00      	cmp	r3, #0
 80022c8:	d1f0      	bne.n	80022ac <HAL_RCC_OscConfig+0x444>
 80022ca:	e03d      	b.n	8002348 <HAL_RCC_OscConfig+0x4e0>
 80022cc:	687b      	ldr	r3, [r7, #4]
 80022ce:	699b      	ldr	r3, [r3, #24]
 80022d0:	2b01      	cmp	r3, #1
 80022d2:	d107      	bne.n	80022e4 <HAL_RCC_OscConfig+0x47c>
 80022d4:	2301      	movs	r3, #1
 80022d6:	e038      	b.n	800234a <HAL_RCC_OscConfig+0x4e2>
 80022d8:	40023800 	.word	0x40023800
 80022dc:	40007000 	.word	0x40007000
 80022e0:	42470060 	.word	0x42470060
 80022e4:	4b1b      	ldr	r3, [pc, #108]	@ (8002354 <HAL_RCC_OscConfig+0x4ec>)
 80022e6:	685b      	ldr	r3, [r3, #4]
 80022e8:	60fb      	str	r3, [r7, #12]
 80022ea:	687b      	ldr	r3, [r7, #4]
 80022ec:	699b      	ldr	r3, [r3, #24]
 80022ee:	2b01      	cmp	r3, #1
 80022f0:	d028      	beq.n	8002344 <HAL_RCC_OscConfig+0x4dc>
 80022f2:	68fb      	ldr	r3, [r7, #12]
 80022f4:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 80022f8:	687b      	ldr	r3, [r7, #4]
 80022fa:	69db      	ldr	r3, [r3, #28]
 80022fc:	429a      	cmp	r2, r3
 80022fe:	d121      	bne.n	8002344 <HAL_RCC_OscConfig+0x4dc>
 8002300:	68fb      	ldr	r3, [r7, #12]
 8002302:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8002306:	687b      	ldr	r3, [r7, #4]
 8002308:	6a1b      	ldr	r3, [r3, #32]
 800230a:	429a      	cmp	r2, r3
 800230c:	d11a      	bne.n	8002344 <HAL_RCC_OscConfig+0x4dc>
 800230e:	68fa      	ldr	r2, [r7, #12]
 8002310:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8002314:	4013      	ands	r3, r2
 8002316:	687a      	ldr	r2, [r7, #4]
 8002318:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800231a:	0192      	lsls	r2, r2, #6
 800231c:	4293      	cmp	r3, r2
 800231e:	d111      	bne.n	8002344 <HAL_RCC_OscConfig+0x4dc>
 8002320:	68fb      	ldr	r3, [r7, #12]
 8002322:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8002326:	687b      	ldr	r3, [r7, #4]
 8002328:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800232a:	085b      	lsrs	r3, r3, #1
 800232c:	3b01      	subs	r3, #1
 800232e:	041b      	lsls	r3, r3, #16
 8002330:	429a      	cmp	r2, r3
 8002332:	d107      	bne.n	8002344 <HAL_RCC_OscConfig+0x4dc>
 8002334:	68fb      	ldr	r3, [r7, #12]
 8002336:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 800233a:	687b      	ldr	r3, [r7, #4]
 800233c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800233e:	061b      	lsls	r3, r3, #24
 8002340:	429a      	cmp	r2, r3
 8002342:	d001      	beq.n	8002348 <HAL_RCC_OscConfig+0x4e0>
 8002344:	2301      	movs	r3, #1
 8002346:	e000      	b.n	800234a <HAL_RCC_OscConfig+0x4e2>
 8002348:	2300      	movs	r3, #0
 800234a:	4618      	mov	r0, r3
 800234c:	3718      	adds	r7, #24
 800234e:	46bd      	mov	sp, r7
 8002350:	bd80      	pop	{r7, pc}
 8002352:	bf00      	nop
 8002354:	40023800 	.word	0x40023800

08002358 <HAL_RCC_ClockConfig>:
 8002358:	b580      	push	{r7, lr}
 800235a:	b084      	sub	sp, #16
 800235c:	af00      	add	r7, sp, #0
 800235e:	6078      	str	r0, [r7, #4]
 8002360:	6039      	str	r1, [r7, #0]
 8002362:	687b      	ldr	r3, [r7, #4]
 8002364:	2b00      	cmp	r3, #0
 8002366:	d101      	bne.n	800236c <HAL_RCC_ClockConfig+0x14>
 8002368:	2301      	movs	r3, #1
 800236a:	e0cc      	b.n	8002506 <HAL_RCC_ClockConfig+0x1ae>
 800236c:	4b68      	ldr	r3, [pc, #416]	@ (8002510 <HAL_RCC_ClockConfig+0x1b8>)
 800236e:	681b      	ldr	r3, [r3, #0]
 8002370:	f003 0307 	and.w	r3, r3, #7
 8002374:	683a      	ldr	r2, [r7, #0]
 8002376:	429a      	cmp	r2, r3
 8002378:	d90c      	bls.n	8002394 <HAL_RCC_ClockConfig+0x3c>
 800237a:	4b65      	ldr	r3, [pc, #404]	@ (8002510 <HAL_RCC_ClockConfig+0x1b8>)
 800237c:	683a      	ldr	r2, [r7, #0]
 800237e:	b2d2      	uxtb	r2, r2
 8002380:	701a      	strb	r2, [r3, #0]
 8002382:	4b63      	ldr	r3, [pc, #396]	@ (8002510 <HAL_RCC_ClockConfig+0x1b8>)
 8002384:	681b      	ldr	r3, [r3, #0]
 8002386:	f003 0307 	and.w	r3, r3, #7
 800238a:	683a      	ldr	r2, [r7, #0]
 800238c:	429a      	cmp	r2, r3
 800238e:	d001      	beq.n	8002394 <HAL_RCC_ClockConfig+0x3c>
 8002390:	2301      	movs	r3, #1
 8002392:	e0b8      	b.n	8002506 <HAL_RCC_ClockConfig+0x1ae>
 8002394:	687b      	ldr	r3, [r7, #4]
 8002396:	681b      	ldr	r3, [r3, #0]
 8002398:	f003 0302 	and.w	r3, r3, #2
 800239c:	2b00      	cmp	r3, #0
 800239e:	d020      	beq.n	80023e2 <HAL_RCC_ClockConfig+0x8a>
 80023a0:	687b      	ldr	r3, [r7, #4]
 80023a2:	681b      	ldr	r3, [r3, #0]
 80023a4:	f003 0304 	and.w	r3, r3, #4
 80023a8:	2b00      	cmp	r3, #0
 80023aa:	d005      	beq.n	80023b8 <HAL_RCC_ClockConfig+0x60>
 80023ac:	4b59      	ldr	r3, [pc, #356]	@ (8002514 <HAL_RCC_ClockConfig+0x1bc>)
 80023ae:	689b      	ldr	r3, [r3, #8]
 80023b0:	4a58      	ldr	r2, [pc, #352]	@ (8002514 <HAL_RCC_ClockConfig+0x1bc>)
 80023b2:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 80023b6:	6093      	str	r3, [r2, #8]
 80023b8:	687b      	ldr	r3, [r7, #4]
 80023ba:	681b      	ldr	r3, [r3, #0]
 80023bc:	f003 0308 	and.w	r3, r3, #8
 80023c0:	2b00      	cmp	r3, #0
 80023c2:	d005      	beq.n	80023d0 <HAL_RCC_ClockConfig+0x78>
 80023c4:	4b53      	ldr	r3, [pc, #332]	@ (8002514 <HAL_RCC_ClockConfig+0x1bc>)
 80023c6:	689b      	ldr	r3, [r3, #8]
 80023c8:	4a52      	ldr	r2, [pc, #328]	@ (8002514 <HAL_RCC_ClockConfig+0x1bc>)
 80023ca:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 80023ce:	6093      	str	r3, [r2, #8]
 80023d0:	4b50      	ldr	r3, [pc, #320]	@ (8002514 <HAL_RCC_ClockConfig+0x1bc>)
 80023d2:	689b      	ldr	r3, [r3, #8]
 80023d4:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80023d8:	687b      	ldr	r3, [r7, #4]
 80023da:	689b      	ldr	r3, [r3, #8]
 80023dc:	494d      	ldr	r1, [pc, #308]	@ (8002514 <HAL_RCC_ClockConfig+0x1bc>)
 80023de:	4313      	orrs	r3, r2
 80023e0:	608b      	str	r3, [r1, #8]
 80023e2:	687b      	ldr	r3, [r7, #4]
 80023e4:	681b      	ldr	r3, [r3, #0]
 80023e6:	f003 0301 	and.w	r3, r3, #1
 80023ea:	2b00      	cmp	r3, #0
 80023ec:	d044      	beq.n	8002478 <HAL_RCC_ClockConfig+0x120>
 80023ee:	687b      	ldr	r3, [r7, #4]
 80023f0:	685b      	ldr	r3, [r3, #4]
 80023f2:	2b01      	cmp	r3, #1
 80023f4:	d107      	bne.n	8002406 <HAL_RCC_ClockConfig+0xae>
 80023f6:	4b47      	ldr	r3, [pc, #284]	@ (8002514 <HAL_RCC_ClockConfig+0x1bc>)
 80023f8:	681b      	ldr	r3, [r3, #0]
 80023fa:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80023fe:	2b00      	cmp	r3, #0
 8002400:	d119      	bne.n	8002436 <HAL_RCC_ClockConfig+0xde>
 8002402:	2301      	movs	r3, #1
 8002404:	e07f      	b.n	8002506 <HAL_RCC_ClockConfig+0x1ae>
 8002406:	687b      	ldr	r3, [r7, #4]
 8002408:	685b      	ldr	r3, [r3, #4]
 800240a:	2b02      	cmp	r3, #2
 800240c:	d003      	beq.n	8002416 <HAL_RCC_ClockConfig+0xbe>
 800240e:	687b      	ldr	r3, [r7, #4]
 8002410:	685b      	ldr	r3, [r3, #4]
 8002412:	2b03      	cmp	r3, #3
 8002414:	d107      	bne.n	8002426 <HAL_RCC_ClockConfig+0xce>
 8002416:	4b3f      	ldr	r3, [pc, #252]	@ (8002514 <HAL_RCC_ClockConfig+0x1bc>)
 8002418:	681b      	ldr	r3, [r3, #0]
 800241a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800241e:	2b00      	cmp	r3, #0
 8002420:	d109      	bne.n	8002436 <HAL_RCC_ClockConfig+0xde>
 8002422:	2301      	movs	r3, #1
 8002424:	e06f      	b.n	8002506 <HAL_RCC_ClockConfig+0x1ae>
 8002426:	4b3b      	ldr	r3, [pc, #236]	@ (8002514 <HAL_RCC_ClockConfig+0x1bc>)
 8002428:	681b      	ldr	r3, [r3, #0]
 800242a:	f003 0302 	and.w	r3, r3, #2
 800242e:	2b00      	cmp	r3, #0
 8002430:	d101      	bne.n	8002436 <HAL_RCC_ClockConfig+0xde>
 8002432:	2301      	movs	r3, #1
 8002434:	e067      	b.n	8002506 <HAL_RCC_ClockConfig+0x1ae>
 8002436:	4b37      	ldr	r3, [pc, #220]	@ (8002514 <HAL_RCC_ClockConfig+0x1bc>)
 8002438:	689b      	ldr	r3, [r3, #8]
 800243a:	f023 0203 	bic.w	r2, r3, #3
 800243e:	687b      	ldr	r3, [r7, #4]
 8002440:	685b      	ldr	r3, [r3, #4]
 8002442:	4934      	ldr	r1, [pc, #208]	@ (8002514 <HAL_RCC_ClockConfig+0x1bc>)
 8002444:	4313      	orrs	r3, r2
 8002446:	608b      	str	r3, [r1, #8]
 8002448:	f7ff f872 	bl	8001530 <HAL_GetTick>
 800244c:	60f8      	str	r0, [r7, #12]
 800244e:	e00a      	b.n	8002466 <HAL_RCC_ClockConfig+0x10e>
 8002450:	f7ff f86e 	bl	8001530 <HAL_GetTick>
 8002454:	4602      	mov	r2, r0
 8002456:	68fb      	ldr	r3, [r7, #12]
 8002458:	1ad3      	subs	r3, r2, r3
 800245a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800245e:	4293      	cmp	r3, r2
 8002460:	d901      	bls.n	8002466 <HAL_RCC_ClockConfig+0x10e>
 8002462:	2303      	movs	r3, #3
 8002464:	e04f      	b.n	8002506 <HAL_RCC_ClockConfig+0x1ae>
 8002466:	4b2b      	ldr	r3, [pc, #172]	@ (8002514 <HAL_RCC_ClockConfig+0x1bc>)
 8002468:	689b      	ldr	r3, [r3, #8]
 800246a:	f003 020c 	and.w	r2, r3, #12
 800246e:	687b      	ldr	r3, [r7, #4]
 8002470:	685b      	ldr	r3, [r3, #4]
 8002472:	009b      	lsls	r3, r3, #2
 8002474:	429a      	cmp	r2, r3
 8002476:	d1eb      	bne.n	8002450 <HAL_RCC_ClockConfig+0xf8>
 8002478:	4b25      	ldr	r3, [pc, #148]	@ (8002510 <HAL_RCC_ClockConfig+0x1b8>)
 800247a:	681b      	ldr	r3, [r3, #0]
 800247c:	f003 0307 	and.w	r3, r3, #7
 8002480:	683a      	ldr	r2, [r7, #0]
 8002482:	429a      	cmp	r2, r3
 8002484:	d20c      	bcs.n	80024a0 <HAL_RCC_ClockConfig+0x148>
 8002486:	4b22      	ldr	r3, [pc, #136]	@ (8002510 <HAL_RCC_ClockConfig+0x1b8>)
 8002488:	683a      	ldr	r2, [r7, #0]
 800248a:	b2d2      	uxtb	r2, r2
 800248c:	701a      	strb	r2, [r3, #0]
 800248e:	4b20      	ldr	r3, [pc, #128]	@ (8002510 <HAL_RCC_ClockConfig+0x1b8>)
 8002490:	681b      	ldr	r3, [r3, #0]
 8002492:	f003 0307 	and.w	r3, r3, #7
 8002496:	683a      	ldr	r2, [r7, #0]
 8002498:	429a      	cmp	r2, r3
 800249a:	d001      	beq.n	80024a0 <HAL_RCC_ClockConfig+0x148>
 800249c:	2301      	movs	r3, #1
 800249e:	e032      	b.n	8002506 <HAL_RCC_ClockConfig+0x1ae>
 80024a0:	687b      	ldr	r3, [r7, #4]
 80024a2:	681b      	ldr	r3, [r3, #0]
 80024a4:	f003 0304 	and.w	r3, r3, #4
 80024a8:	2b00      	cmp	r3, #0
 80024aa:	d008      	beq.n	80024be <HAL_RCC_ClockConfig+0x166>
 80024ac:	4b19      	ldr	r3, [pc, #100]	@ (8002514 <HAL_RCC_ClockConfig+0x1bc>)
 80024ae:	689b      	ldr	r3, [r3, #8]
 80024b0:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	68db      	ldr	r3, [r3, #12]
 80024b8:	4916      	ldr	r1, [pc, #88]	@ (8002514 <HAL_RCC_ClockConfig+0x1bc>)
 80024ba:	4313      	orrs	r3, r2
 80024bc:	608b      	str	r3, [r1, #8]
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	681b      	ldr	r3, [r3, #0]
 80024c2:	f003 0308 	and.w	r3, r3, #8
 80024c6:	2b00      	cmp	r3, #0
 80024c8:	d009      	beq.n	80024de <HAL_RCC_ClockConfig+0x186>
 80024ca:	4b12      	ldr	r3, [pc, #72]	@ (8002514 <HAL_RCC_ClockConfig+0x1bc>)
 80024cc:	689b      	ldr	r3, [r3, #8]
 80024ce:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 80024d2:	687b      	ldr	r3, [r7, #4]
 80024d4:	691b      	ldr	r3, [r3, #16]
 80024d6:	00db      	lsls	r3, r3, #3
 80024d8:	490e      	ldr	r1, [pc, #56]	@ (8002514 <HAL_RCC_ClockConfig+0x1bc>)
 80024da:	4313      	orrs	r3, r2
 80024dc:	608b      	str	r3, [r1, #8]
 80024de:	f000 f821 	bl	8002524 <HAL_RCC_GetSysClockFreq>
 80024e2:	4602      	mov	r2, r0
 80024e4:	4b0b      	ldr	r3, [pc, #44]	@ (8002514 <HAL_RCC_ClockConfig+0x1bc>)
 80024e6:	689b      	ldr	r3, [r3, #8]
 80024e8:	091b      	lsrs	r3, r3, #4
 80024ea:	f003 030f 	and.w	r3, r3, #15
 80024ee:	490a      	ldr	r1, [pc, #40]	@ (8002518 <HAL_RCC_ClockConfig+0x1c0>)
 80024f0:	5ccb      	ldrb	r3, [r1, r3]
 80024f2:	fa22 f303 	lsr.w	r3, r2, r3
 80024f6:	4a09      	ldr	r2, [pc, #36]	@ (800251c <HAL_RCC_ClockConfig+0x1c4>)
 80024f8:	6013      	str	r3, [r2, #0]
 80024fa:	4b09      	ldr	r3, [pc, #36]	@ (8002520 <HAL_RCC_ClockConfig+0x1c8>)
 80024fc:	681b      	ldr	r3, [r3, #0]
 80024fe:	4618      	mov	r0, r3
 8002500:	f7fe ffd2 	bl	80014a8 <HAL_InitTick>
 8002504:	2300      	movs	r3, #0
 8002506:	4618      	mov	r0, r3
 8002508:	3710      	adds	r7, #16
 800250a:	46bd      	mov	sp, r7
 800250c:	bd80      	pop	{r7, pc}
 800250e:	bf00      	nop
 8002510:	40023c00 	.word	0x40023c00
 8002514:	40023800 	.word	0x40023800
 8002518:	0800433c 	.word	0x0800433c
 800251c:	20000000 	.word	0x20000000
 8002520:	20000004 	.word	0x20000004

08002524 <HAL_RCC_GetSysClockFreq>:
 8002524:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8002528:	b090      	sub	sp, #64	@ 0x40
 800252a:	af00      	add	r7, sp, #0
 800252c:	2300      	movs	r3, #0
 800252e:	637b      	str	r3, [r7, #52]	@ 0x34
 8002530:	2300      	movs	r3, #0
 8002532:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8002534:	2300      	movs	r3, #0
 8002536:	633b      	str	r3, [r7, #48]	@ 0x30
 8002538:	2300      	movs	r3, #0
 800253a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800253c:	4b59      	ldr	r3, [pc, #356]	@ (80026a4 <HAL_RCC_GetSysClockFreq+0x180>)
 800253e:	689b      	ldr	r3, [r3, #8]
 8002540:	f003 030c 	and.w	r3, r3, #12
 8002544:	2b08      	cmp	r3, #8
 8002546:	d00d      	beq.n	8002564 <HAL_RCC_GetSysClockFreq+0x40>
 8002548:	2b08      	cmp	r3, #8
 800254a:	f200 80a1 	bhi.w	8002690 <HAL_RCC_GetSysClockFreq+0x16c>
 800254e:	2b00      	cmp	r3, #0
 8002550:	d002      	beq.n	8002558 <HAL_RCC_GetSysClockFreq+0x34>
 8002552:	2b04      	cmp	r3, #4
 8002554:	d003      	beq.n	800255e <HAL_RCC_GetSysClockFreq+0x3a>
 8002556:	e09b      	b.n	8002690 <HAL_RCC_GetSysClockFreq+0x16c>
 8002558:	4b53      	ldr	r3, [pc, #332]	@ (80026a8 <HAL_RCC_GetSysClockFreq+0x184>)
 800255a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800255c:	e09b      	b.n	8002696 <HAL_RCC_GetSysClockFreq+0x172>
 800255e:	4b53      	ldr	r3, [pc, #332]	@ (80026ac <HAL_RCC_GetSysClockFreq+0x188>)
 8002560:	63bb      	str	r3, [r7, #56]	@ 0x38
 8002562:	e098      	b.n	8002696 <HAL_RCC_GetSysClockFreq+0x172>
 8002564:	4b4f      	ldr	r3, [pc, #316]	@ (80026a4 <HAL_RCC_GetSysClockFreq+0x180>)
 8002566:	685b      	ldr	r3, [r3, #4]
 8002568:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 800256c:	637b      	str	r3, [r7, #52]	@ 0x34
 800256e:	4b4d      	ldr	r3, [pc, #308]	@ (80026a4 <HAL_RCC_GetSysClockFreq+0x180>)
 8002570:	685b      	ldr	r3, [r3, #4]
 8002572:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002576:	2b00      	cmp	r3, #0
 8002578:	d028      	beq.n	80025cc <HAL_RCC_GetSysClockFreq+0xa8>
 800257a:	4b4a      	ldr	r3, [pc, #296]	@ (80026a4 <HAL_RCC_GetSysClockFreq+0x180>)
 800257c:	685b      	ldr	r3, [r3, #4]
 800257e:	099b      	lsrs	r3, r3, #6
 8002580:	2200      	movs	r2, #0
 8002582:	623b      	str	r3, [r7, #32]
 8002584:	627a      	str	r2, [r7, #36]	@ 0x24
 8002586:	6a3b      	ldr	r3, [r7, #32]
 8002588:	f3c3 0008 	ubfx	r0, r3, #0, #9
 800258c:	2100      	movs	r1, #0
 800258e:	4b47      	ldr	r3, [pc, #284]	@ (80026ac <HAL_RCC_GetSysClockFreq+0x188>)
 8002590:	fb03 f201 	mul.w	r2, r3, r1
 8002594:	2300      	movs	r3, #0
 8002596:	fb00 f303 	mul.w	r3, r0, r3
 800259a:	4413      	add	r3, r2
 800259c:	4a43      	ldr	r2, [pc, #268]	@ (80026ac <HAL_RCC_GetSysClockFreq+0x188>)
 800259e:	fba0 1202 	umull	r1, r2, r0, r2
 80025a2:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80025a4:	460a      	mov	r2, r1
 80025a6:	62ba      	str	r2, [r7, #40]	@ 0x28
 80025a8:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80025aa:	4413      	add	r3, r2
 80025ac:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80025ae:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80025b0:	2200      	movs	r2, #0
 80025b2:	61bb      	str	r3, [r7, #24]
 80025b4:	61fa      	str	r2, [r7, #28]
 80025b6:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80025ba:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 80025be:	f7fd fe5f 	bl	8000280 <__aeabi_uldivmod>
 80025c2:	4602      	mov	r2, r0
 80025c4:	460b      	mov	r3, r1
 80025c6:	4613      	mov	r3, r2
 80025c8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80025ca:	e053      	b.n	8002674 <HAL_RCC_GetSysClockFreq+0x150>
 80025cc:	4b35      	ldr	r3, [pc, #212]	@ (80026a4 <HAL_RCC_GetSysClockFreq+0x180>)
 80025ce:	685b      	ldr	r3, [r3, #4]
 80025d0:	099b      	lsrs	r3, r3, #6
 80025d2:	2200      	movs	r2, #0
 80025d4:	613b      	str	r3, [r7, #16]
 80025d6:	617a      	str	r2, [r7, #20]
 80025d8:	693b      	ldr	r3, [r7, #16]
 80025da:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 80025de:	f04f 0b00 	mov.w	fp, #0
 80025e2:	4652      	mov	r2, sl
 80025e4:	465b      	mov	r3, fp
 80025e6:	f04f 0000 	mov.w	r0, #0
 80025ea:	f04f 0100 	mov.w	r1, #0
 80025ee:	0159      	lsls	r1, r3, #5
 80025f0:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80025f4:	0150      	lsls	r0, r2, #5
 80025f6:	4602      	mov	r2, r0
 80025f8:	460b      	mov	r3, r1
 80025fa:	ebb2 080a 	subs.w	r8, r2, sl
 80025fe:	eb63 090b 	sbc.w	r9, r3, fp
 8002602:	f04f 0200 	mov.w	r2, #0
 8002606:	f04f 0300 	mov.w	r3, #0
 800260a:	ea4f 1389 	mov.w	r3, r9, lsl #6
 800260e:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 8002612:	ea4f 1288 	mov.w	r2, r8, lsl #6
 8002616:	ebb2 0408 	subs.w	r4, r2, r8
 800261a:	eb63 0509 	sbc.w	r5, r3, r9
 800261e:	f04f 0200 	mov.w	r2, #0
 8002622:	f04f 0300 	mov.w	r3, #0
 8002626:	00eb      	lsls	r3, r5, #3
 8002628:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800262c:	00e2      	lsls	r2, r4, #3
 800262e:	4614      	mov	r4, r2
 8002630:	461d      	mov	r5, r3
 8002632:	eb14 030a 	adds.w	r3, r4, sl
 8002636:	603b      	str	r3, [r7, #0]
 8002638:	eb45 030b 	adc.w	r3, r5, fp
 800263c:	607b      	str	r3, [r7, #4]
 800263e:	f04f 0200 	mov.w	r2, #0
 8002642:	f04f 0300 	mov.w	r3, #0
 8002646:	e9d7 4500 	ldrd	r4, r5, [r7]
 800264a:	4629      	mov	r1, r5
 800264c:	028b      	lsls	r3, r1, #10
 800264e:	4621      	mov	r1, r4
 8002650:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8002654:	4621      	mov	r1, r4
 8002656:	028a      	lsls	r2, r1, #10
 8002658:	4610      	mov	r0, r2
 800265a:	4619      	mov	r1, r3
 800265c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800265e:	2200      	movs	r2, #0
 8002660:	60bb      	str	r3, [r7, #8]
 8002662:	60fa      	str	r2, [r7, #12]
 8002664:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8002668:	f7fd fe0a 	bl	8000280 <__aeabi_uldivmod>
 800266c:	4602      	mov	r2, r0
 800266e:	460b      	mov	r3, r1
 8002670:	4613      	mov	r3, r2
 8002672:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8002674:	4b0b      	ldr	r3, [pc, #44]	@ (80026a4 <HAL_RCC_GetSysClockFreq+0x180>)
 8002676:	685b      	ldr	r3, [r3, #4]
 8002678:	0c1b      	lsrs	r3, r3, #16
 800267a:	f003 0303 	and.w	r3, r3, #3
 800267e:	3301      	adds	r3, #1
 8002680:	005b      	lsls	r3, r3, #1
 8002682:	633b      	str	r3, [r7, #48]	@ 0x30
 8002684:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8002686:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002688:	fbb2 f3f3 	udiv	r3, r2, r3
 800268c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800268e:	e002      	b.n	8002696 <HAL_RCC_GetSysClockFreq+0x172>
 8002690:	4b05      	ldr	r3, [pc, #20]	@ (80026a8 <HAL_RCC_GetSysClockFreq+0x184>)
 8002692:	63bb      	str	r3, [r7, #56]	@ 0x38
 8002694:	bf00      	nop
 8002696:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8002698:	4618      	mov	r0, r3
 800269a:	3740      	adds	r7, #64	@ 0x40
 800269c:	46bd      	mov	sp, r7
 800269e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80026a2:	bf00      	nop
 80026a4:	40023800 	.word	0x40023800
 80026a8:	00f42400 	.word	0x00f42400
 80026ac:	017d7840 	.word	0x017d7840

080026b0 <HAL_RCC_GetHCLKFreq>:
 80026b0:	b480      	push	{r7}
 80026b2:	af00      	add	r7, sp, #0
 80026b4:	4b03      	ldr	r3, [pc, #12]	@ (80026c4 <HAL_RCC_GetHCLKFreq+0x14>)
 80026b6:	681b      	ldr	r3, [r3, #0]
 80026b8:	4618      	mov	r0, r3
 80026ba:	46bd      	mov	sp, r7
 80026bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026c0:	4770      	bx	lr
 80026c2:	bf00      	nop
 80026c4:	20000000 	.word	0x20000000

080026c8 <HAL_RCC_GetPCLK1Freq>:
 80026c8:	b580      	push	{r7, lr}
 80026ca:	af00      	add	r7, sp, #0
 80026cc:	f7ff fff0 	bl	80026b0 <HAL_RCC_GetHCLKFreq>
 80026d0:	4602      	mov	r2, r0
 80026d2:	4b05      	ldr	r3, [pc, #20]	@ (80026e8 <HAL_RCC_GetPCLK1Freq+0x20>)
 80026d4:	689b      	ldr	r3, [r3, #8]
 80026d6:	0a9b      	lsrs	r3, r3, #10
 80026d8:	f003 0307 	and.w	r3, r3, #7
 80026dc:	4903      	ldr	r1, [pc, #12]	@ (80026ec <HAL_RCC_GetPCLK1Freq+0x24>)
 80026de:	5ccb      	ldrb	r3, [r1, r3]
 80026e0:	fa22 f303 	lsr.w	r3, r2, r3
 80026e4:	4618      	mov	r0, r3
 80026e6:	bd80      	pop	{r7, pc}
 80026e8:	40023800 	.word	0x40023800
 80026ec:	0800434c 	.word	0x0800434c

080026f0 <HAL_RCC_GetPCLK2Freq>:
 80026f0:	b580      	push	{r7, lr}
 80026f2:	af00      	add	r7, sp, #0
 80026f4:	f7ff ffdc 	bl	80026b0 <HAL_RCC_GetHCLKFreq>
 80026f8:	4602      	mov	r2, r0
 80026fa:	4b05      	ldr	r3, [pc, #20]	@ (8002710 <HAL_RCC_GetPCLK2Freq+0x20>)
 80026fc:	689b      	ldr	r3, [r3, #8]
 80026fe:	0b5b      	lsrs	r3, r3, #13
 8002700:	f003 0307 	and.w	r3, r3, #7
 8002704:	4903      	ldr	r1, [pc, #12]	@ (8002714 <HAL_RCC_GetPCLK2Freq+0x24>)
 8002706:	5ccb      	ldrb	r3, [r1, r3]
 8002708:	fa22 f303 	lsr.w	r3, r2, r3
 800270c:	4618      	mov	r0, r3
 800270e:	bd80      	pop	{r7, pc}
 8002710:	40023800 	.word	0x40023800
 8002714:	0800434c 	.word	0x0800434c

08002718 <HAL_UART_Init>:
 8002718:	b580      	push	{r7, lr}
 800271a:	b082      	sub	sp, #8
 800271c:	af00      	add	r7, sp, #0
 800271e:	6078      	str	r0, [r7, #4]
 8002720:	687b      	ldr	r3, [r7, #4]
 8002722:	2b00      	cmp	r3, #0
 8002724:	d101      	bne.n	800272a <HAL_UART_Init+0x12>
 8002726:	2301      	movs	r3, #1
 8002728:	e042      	b.n	80027b0 <HAL_UART_Init+0x98>
 800272a:	687b      	ldr	r3, [r7, #4]
 800272c:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8002730:	b2db      	uxtb	r3, r3
 8002732:	2b00      	cmp	r3, #0
 8002734:	d106      	bne.n	8002744 <HAL_UART_Init+0x2c>
 8002736:	687b      	ldr	r3, [r7, #4]
 8002738:	2200      	movs	r2, #0
 800273a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800273e:	6878      	ldr	r0, [r7, #4]
 8002740:	f7fe fdf0 	bl	8001324 <HAL_UART_MspInit>
 8002744:	687b      	ldr	r3, [r7, #4]
 8002746:	2224      	movs	r2, #36	@ 0x24
 8002748:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800274c:	687b      	ldr	r3, [r7, #4]
 800274e:	681b      	ldr	r3, [r3, #0]
 8002750:	68da      	ldr	r2, [r3, #12]
 8002752:	687b      	ldr	r3, [r7, #4]
 8002754:	681b      	ldr	r3, [r3, #0]
 8002756:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800275a:	60da      	str	r2, [r3, #12]
 800275c:	6878      	ldr	r0, [r7, #4]
 800275e:	f000 fdbd 	bl	80032dc <UART_SetConfig>
 8002762:	687b      	ldr	r3, [r7, #4]
 8002764:	681b      	ldr	r3, [r3, #0]
 8002766:	691a      	ldr	r2, [r3, #16]
 8002768:	687b      	ldr	r3, [r7, #4]
 800276a:	681b      	ldr	r3, [r3, #0]
 800276c:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8002770:	611a      	str	r2, [r3, #16]
 8002772:	687b      	ldr	r3, [r7, #4]
 8002774:	681b      	ldr	r3, [r3, #0]
 8002776:	695a      	ldr	r2, [r3, #20]
 8002778:	687b      	ldr	r3, [r7, #4]
 800277a:	681b      	ldr	r3, [r3, #0]
 800277c:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8002780:	615a      	str	r2, [r3, #20]
 8002782:	687b      	ldr	r3, [r7, #4]
 8002784:	681b      	ldr	r3, [r3, #0]
 8002786:	68da      	ldr	r2, [r3, #12]
 8002788:	687b      	ldr	r3, [r7, #4]
 800278a:	681b      	ldr	r3, [r3, #0]
 800278c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8002790:	60da      	str	r2, [r3, #12]
 8002792:	687b      	ldr	r3, [r7, #4]
 8002794:	2200      	movs	r2, #0
 8002796:	645a      	str	r2, [r3, #68]	@ 0x44
 8002798:	687b      	ldr	r3, [r7, #4]
 800279a:	2220      	movs	r2, #32
 800279c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80027a0:	687b      	ldr	r3, [r7, #4]
 80027a2:	2220      	movs	r2, #32
 80027a4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80027a8:	687b      	ldr	r3, [r7, #4]
 80027aa:	2200      	movs	r2, #0
 80027ac:	635a      	str	r2, [r3, #52]	@ 0x34
 80027ae:	2300      	movs	r3, #0
 80027b0:	4618      	mov	r0, r3
 80027b2:	3708      	adds	r7, #8
 80027b4:	46bd      	mov	sp, r7
 80027b6:	bd80      	pop	{r7, pc}

080027b8 <HAL_UART_Transmit>:
 80027b8:	b580      	push	{r7, lr}
 80027ba:	b08a      	sub	sp, #40	@ 0x28
 80027bc:	af02      	add	r7, sp, #8
 80027be:	60f8      	str	r0, [r7, #12]
 80027c0:	60b9      	str	r1, [r7, #8]
 80027c2:	603b      	str	r3, [r7, #0]
 80027c4:	4613      	mov	r3, r2
 80027c6:	80fb      	strh	r3, [r7, #6]
 80027c8:	2300      	movs	r3, #0
 80027ca:	617b      	str	r3, [r7, #20]
 80027cc:	68fb      	ldr	r3, [r7, #12]
 80027ce:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80027d2:	b2db      	uxtb	r3, r3
 80027d4:	2b20      	cmp	r3, #32
 80027d6:	d175      	bne.n	80028c4 <HAL_UART_Transmit+0x10c>
 80027d8:	68bb      	ldr	r3, [r7, #8]
 80027da:	2b00      	cmp	r3, #0
 80027dc:	d002      	beq.n	80027e4 <HAL_UART_Transmit+0x2c>
 80027de:	88fb      	ldrh	r3, [r7, #6]
 80027e0:	2b00      	cmp	r3, #0
 80027e2:	d101      	bne.n	80027e8 <HAL_UART_Transmit+0x30>
 80027e4:	2301      	movs	r3, #1
 80027e6:	e06e      	b.n	80028c6 <HAL_UART_Transmit+0x10e>
 80027e8:	68fb      	ldr	r3, [r7, #12]
 80027ea:	2200      	movs	r2, #0
 80027ec:	645a      	str	r2, [r3, #68]	@ 0x44
 80027ee:	68fb      	ldr	r3, [r7, #12]
 80027f0:	2221      	movs	r2, #33	@ 0x21
 80027f2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80027f6:	f7fe fe9b 	bl	8001530 <HAL_GetTick>
 80027fa:	6178      	str	r0, [r7, #20]
 80027fc:	68fb      	ldr	r3, [r7, #12]
 80027fe:	88fa      	ldrh	r2, [r7, #6]
 8002800:	849a      	strh	r2, [r3, #36]	@ 0x24
 8002802:	68fb      	ldr	r3, [r7, #12]
 8002804:	88fa      	ldrh	r2, [r7, #6]
 8002806:	84da      	strh	r2, [r3, #38]	@ 0x26
 8002808:	68fb      	ldr	r3, [r7, #12]
 800280a:	689b      	ldr	r3, [r3, #8]
 800280c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002810:	d108      	bne.n	8002824 <HAL_UART_Transmit+0x6c>
 8002812:	68fb      	ldr	r3, [r7, #12]
 8002814:	691b      	ldr	r3, [r3, #16]
 8002816:	2b00      	cmp	r3, #0
 8002818:	d104      	bne.n	8002824 <HAL_UART_Transmit+0x6c>
 800281a:	2300      	movs	r3, #0
 800281c:	61fb      	str	r3, [r7, #28]
 800281e:	68bb      	ldr	r3, [r7, #8]
 8002820:	61bb      	str	r3, [r7, #24]
 8002822:	e003      	b.n	800282c <HAL_UART_Transmit+0x74>
 8002824:	68bb      	ldr	r3, [r7, #8]
 8002826:	61fb      	str	r3, [r7, #28]
 8002828:	2300      	movs	r3, #0
 800282a:	61bb      	str	r3, [r7, #24]
 800282c:	e02e      	b.n	800288c <HAL_UART_Transmit+0xd4>
 800282e:	683b      	ldr	r3, [r7, #0]
 8002830:	9300      	str	r3, [sp, #0]
 8002832:	697b      	ldr	r3, [r7, #20]
 8002834:	2200      	movs	r2, #0
 8002836:	2180      	movs	r1, #128	@ 0x80
 8002838:	68f8      	ldr	r0, [r7, #12]
 800283a:	f000 fb1f 	bl	8002e7c <UART_WaitOnFlagUntilTimeout>
 800283e:	4603      	mov	r3, r0
 8002840:	2b00      	cmp	r3, #0
 8002842:	d005      	beq.n	8002850 <HAL_UART_Transmit+0x98>
 8002844:	68fb      	ldr	r3, [r7, #12]
 8002846:	2220      	movs	r2, #32
 8002848:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800284c:	2303      	movs	r3, #3
 800284e:	e03a      	b.n	80028c6 <HAL_UART_Transmit+0x10e>
 8002850:	69fb      	ldr	r3, [r7, #28]
 8002852:	2b00      	cmp	r3, #0
 8002854:	d10b      	bne.n	800286e <HAL_UART_Transmit+0xb6>
 8002856:	69bb      	ldr	r3, [r7, #24]
 8002858:	881b      	ldrh	r3, [r3, #0]
 800285a:	461a      	mov	r2, r3
 800285c:	68fb      	ldr	r3, [r7, #12]
 800285e:	681b      	ldr	r3, [r3, #0]
 8002860:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002864:	605a      	str	r2, [r3, #4]
 8002866:	69bb      	ldr	r3, [r7, #24]
 8002868:	3302      	adds	r3, #2
 800286a:	61bb      	str	r3, [r7, #24]
 800286c:	e007      	b.n	800287e <HAL_UART_Transmit+0xc6>
 800286e:	69fb      	ldr	r3, [r7, #28]
 8002870:	781a      	ldrb	r2, [r3, #0]
 8002872:	68fb      	ldr	r3, [r7, #12]
 8002874:	681b      	ldr	r3, [r3, #0]
 8002876:	605a      	str	r2, [r3, #4]
 8002878:	69fb      	ldr	r3, [r7, #28]
 800287a:	3301      	adds	r3, #1
 800287c:	61fb      	str	r3, [r7, #28]
 800287e:	68fb      	ldr	r3, [r7, #12]
 8002880:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8002882:	b29b      	uxth	r3, r3
 8002884:	3b01      	subs	r3, #1
 8002886:	b29a      	uxth	r2, r3
 8002888:	68fb      	ldr	r3, [r7, #12]
 800288a:	84da      	strh	r2, [r3, #38]	@ 0x26
 800288c:	68fb      	ldr	r3, [r7, #12]
 800288e:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8002890:	b29b      	uxth	r3, r3
 8002892:	2b00      	cmp	r3, #0
 8002894:	d1cb      	bne.n	800282e <HAL_UART_Transmit+0x76>
 8002896:	683b      	ldr	r3, [r7, #0]
 8002898:	9300      	str	r3, [sp, #0]
 800289a:	697b      	ldr	r3, [r7, #20]
 800289c:	2200      	movs	r2, #0
 800289e:	2140      	movs	r1, #64	@ 0x40
 80028a0:	68f8      	ldr	r0, [r7, #12]
 80028a2:	f000 faeb 	bl	8002e7c <UART_WaitOnFlagUntilTimeout>
 80028a6:	4603      	mov	r3, r0
 80028a8:	2b00      	cmp	r3, #0
 80028aa:	d005      	beq.n	80028b8 <HAL_UART_Transmit+0x100>
 80028ac:	68fb      	ldr	r3, [r7, #12]
 80028ae:	2220      	movs	r2, #32
 80028b0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80028b4:	2303      	movs	r3, #3
 80028b6:	e006      	b.n	80028c6 <HAL_UART_Transmit+0x10e>
 80028b8:	68fb      	ldr	r3, [r7, #12]
 80028ba:	2220      	movs	r2, #32
 80028bc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80028c0:	2300      	movs	r3, #0
 80028c2:	e000      	b.n	80028c6 <HAL_UART_Transmit+0x10e>
 80028c4:	2302      	movs	r3, #2
 80028c6:	4618      	mov	r0, r3
 80028c8:	3720      	adds	r7, #32
 80028ca:	46bd      	mov	sp, r7
 80028cc:	bd80      	pop	{r7, pc}

080028ce <HAL_UART_Receive_IT>:
 80028ce:	b580      	push	{r7, lr}
 80028d0:	b084      	sub	sp, #16
 80028d2:	af00      	add	r7, sp, #0
 80028d4:	60f8      	str	r0, [r7, #12]
 80028d6:	60b9      	str	r1, [r7, #8]
 80028d8:	4613      	mov	r3, r2
 80028da:	80fb      	strh	r3, [r7, #6]
 80028dc:	68fb      	ldr	r3, [r7, #12]
 80028de:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80028e2:	b2db      	uxtb	r3, r3
 80028e4:	2b20      	cmp	r3, #32
 80028e6:	d112      	bne.n	800290e <HAL_UART_Receive_IT+0x40>
 80028e8:	68bb      	ldr	r3, [r7, #8]
 80028ea:	2b00      	cmp	r3, #0
 80028ec:	d002      	beq.n	80028f4 <HAL_UART_Receive_IT+0x26>
 80028ee:	88fb      	ldrh	r3, [r7, #6]
 80028f0:	2b00      	cmp	r3, #0
 80028f2:	d101      	bne.n	80028f8 <HAL_UART_Receive_IT+0x2a>
 80028f4:	2301      	movs	r3, #1
 80028f6:	e00b      	b.n	8002910 <HAL_UART_Receive_IT+0x42>
 80028f8:	68fb      	ldr	r3, [r7, #12]
 80028fa:	2200      	movs	r2, #0
 80028fc:	631a      	str	r2, [r3, #48]	@ 0x30
 80028fe:	88fb      	ldrh	r3, [r7, #6]
 8002900:	461a      	mov	r2, r3
 8002902:	68b9      	ldr	r1, [r7, #8]
 8002904:	68f8      	ldr	r0, [r7, #12]
 8002906:	f000 fb12 	bl	8002f2e <UART_Start_Receive_IT>
 800290a:	4603      	mov	r3, r0
 800290c:	e000      	b.n	8002910 <HAL_UART_Receive_IT+0x42>
 800290e:	2302      	movs	r3, #2
 8002910:	4618      	mov	r0, r3
 8002912:	3710      	adds	r7, #16
 8002914:	46bd      	mov	sp, r7
 8002916:	bd80      	pop	{r7, pc}

08002918 <HAL_UART_IRQHandler>:
 8002918:	b580      	push	{r7, lr}
 800291a:	b0ba      	sub	sp, #232	@ 0xe8
 800291c:	af00      	add	r7, sp, #0
 800291e:	6078      	str	r0, [r7, #4]
 8002920:	687b      	ldr	r3, [r7, #4]
 8002922:	681b      	ldr	r3, [r3, #0]
 8002924:	681b      	ldr	r3, [r3, #0]
 8002926:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 800292a:	687b      	ldr	r3, [r7, #4]
 800292c:	681b      	ldr	r3, [r3, #0]
 800292e:	68db      	ldr	r3, [r3, #12]
 8002930:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8002934:	687b      	ldr	r3, [r7, #4]
 8002936:	681b      	ldr	r3, [r3, #0]
 8002938:	695b      	ldr	r3, [r3, #20]
 800293a:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 800293e:	2300      	movs	r3, #0
 8002940:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8002944:	2300      	movs	r3, #0
 8002946:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 800294a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800294e:	f003 030f 	and.w	r3, r3, #15
 8002952:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8002956:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800295a:	2b00      	cmp	r3, #0
 800295c:	d10f      	bne.n	800297e <HAL_UART_IRQHandler+0x66>
 800295e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002962:	f003 0320 	and.w	r3, r3, #32
 8002966:	2b00      	cmp	r3, #0
 8002968:	d009      	beq.n	800297e <HAL_UART_IRQHandler+0x66>
 800296a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800296e:	f003 0320 	and.w	r3, r3, #32
 8002972:	2b00      	cmp	r3, #0
 8002974:	d003      	beq.n	800297e <HAL_UART_IRQHandler+0x66>
 8002976:	6878      	ldr	r0, [r7, #4]
 8002978:	f000 fbf2 	bl	8003160 <UART_Receive_IT>
 800297c:	e25b      	b.n	8002e36 <HAL_UART_IRQHandler+0x51e>
 800297e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8002982:	2b00      	cmp	r3, #0
 8002984:	f000 80de 	beq.w	8002b44 <HAL_UART_IRQHandler+0x22c>
 8002988:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800298c:	f003 0301 	and.w	r3, r3, #1
 8002990:	2b00      	cmp	r3, #0
 8002992:	d106      	bne.n	80029a2 <HAL_UART_IRQHandler+0x8a>
 8002994:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8002998:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 800299c:	2b00      	cmp	r3, #0
 800299e:	f000 80d1 	beq.w	8002b44 <HAL_UART_IRQHandler+0x22c>
 80029a2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80029a6:	f003 0301 	and.w	r3, r3, #1
 80029aa:	2b00      	cmp	r3, #0
 80029ac:	d00b      	beq.n	80029c6 <HAL_UART_IRQHandler+0xae>
 80029ae:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80029b2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80029b6:	2b00      	cmp	r3, #0
 80029b8:	d005      	beq.n	80029c6 <HAL_UART_IRQHandler+0xae>
 80029ba:	687b      	ldr	r3, [r7, #4]
 80029bc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80029be:	f043 0201 	orr.w	r2, r3, #1
 80029c2:	687b      	ldr	r3, [r7, #4]
 80029c4:	645a      	str	r2, [r3, #68]	@ 0x44
 80029c6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80029ca:	f003 0304 	and.w	r3, r3, #4
 80029ce:	2b00      	cmp	r3, #0
 80029d0:	d00b      	beq.n	80029ea <HAL_UART_IRQHandler+0xd2>
 80029d2:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80029d6:	f003 0301 	and.w	r3, r3, #1
 80029da:	2b00      	cmp	r3, #0
 80029dc:	d005      	beq.n	80029ea <HAL_UART_IRQHandler+0xd2>
 80029de:	687b      	ldr	r3, [r7, #4]
 80029e0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80029e2:	f043 0202 	orr.w	r2, r3, #2
 80029e6:	687b      	ldr	r3, [r7, #4]
 80029e8:	645a      	str	r2, [r3, #68]	@ 0x44
 80029ea:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80029ee:	f003 0302 	and.w	r3, r3, #2
 80029f2:	2b00      	cmp	r3, #0
 80029f4:	d00b      	beq.n	8002a0e <HAL_UART_IRQHandler+0xf6>
 80029f6:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80029fa:	f003 0301 	and.w	r3, r3, #1
 80029fe:	2b00      	cmp	r3, #0
 8002a00:	d005      	beq.n	8002a0e <HAL_UART_IRQHandler+0xf6>
 8002a02:	687b      	ldr	r3, [r7, #4]
 8002a04:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002a06:	f043 0204 	orr.w	r2, r3, #4
 8002a0a:	687b      	ldr	r3, [r7, #4]
 8002a0c:	645a      	str	r2, [r3, #68]	@ 0x44
 8002a0e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002a12:	f003 0308 	and.w	r3, r3, #8
 8002a16:	2b00      	cmp	r3, #0
 8002a18:	d011      	beq.n	8002a3e <HAL_UART_IRQHandler+0x126>
 8002a1a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8002a1e:	f003 0320 	and.w	r3, r3, #32
 8002a22:	2b00      	cmp	r3, #0
 8002a24:	d105      	bne.n	8002a32 <HAL_UART_IRQHandler+0x11a>
 8002a26:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8002a2a:	f003 0301 	and.w	r3, r3, #1
 8002a2e:	2b00      	cmp	r3, #0
 8002a30:	d005      	beq.n	8002a3e <HAL_UART_IRQHandler+0x126>
 8002a32:	687b      	ldr	r3, [r7, #4]
 8002a34:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002a36:	f043 0208 	orr.w	r2, r3, #8
 8002a3a:	687b      	ldr	r3, [r7, #4]
 8002a3c:	645a      	str	r2, [r3, #68]	@ 0x44
 8002a3e:	687b      	ldr	r3, [r7, #4]
 8002a40:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002a42:	2b00      	cmp	r3, #0
 8002a44:	f000 81f2 	beq.w	8002e2c <HAL_UART_IRQHandler+0x514>
 8002a48:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002a4c:	f003 0320 	and.w	r3, r3, #32
 8002a50:	2b00      	cmp	r3, #0
 8002a52:	d008      	beq.n	8002a66 <HAL_UART_IRQHandler+0x14e>
 8002a54:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8002a58:	f003 0320 	and.w	r3, r3, #32
 8002a5c:	2b00      	cmp	r3, #0
 8002a5e:	d002      	beq.n	8002a66 <HAL_UART_IRQHandler+0x14e>
 8002a60:	6878      	ldr	r0, [r7, #4]
 8002a62:	f000 fb7d 	bl	8003160 <UART_Receive_IT>
 8002a66:	687b      	ldr	r3, [r7, #4]
 8002a68:	681b      	ldr	r3, [r3, #0]
 8002a6a:	695b      	ldr	r3, [r3, #20]
 8002a6c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002a70:	2b40      	cmp	r3, #64	@ 0x40
 8002a72:	bf0c      	ite	eq
 8002a74:	2301      	moveq	r3, #1
 8002a76:	2300      	movne	r3, #0
 8002a78:	b2db      	uxtb	r3, r3
 8002a7a:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8002a7e:	687b      	ldr	r3, [r7, #4]
 8002a80:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002a82:	f003 0308 	and.w	r3, r3, #8
 8002a86:	2b00      	cmp	r3, #0
 8002a88:	d103      	bne.n	8002a92 <HAL_UART_IRQHandler+0x17a>
 8002a8a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8002a8e:	2b00      	cmp	r3, #0
 8002a90:	d04f      	beq.n	8002b32 <HAL_UART_IRQHandler+0x21a>
 8002a92:	6878      	ldr	r0, [r7, #4]
 8002a94:	f000 fa85 	bl	8002fa2 <UART_EndRxTransfer>
 8002a98:	687b      	ldr	r3, [r7, #4]
 8002a9a:	681b      	ldr	r3, [r3, #0]
 8002a9c:	695b      	ldr	r3, [r3, #20]
 8002a9e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002aa2:	2b40      	cmp	r3, #64	@ 0x40
 8002aa4:	d141      	bne.n	8002b2a <HAL_UART_IRQHandler+0x212>
 8002aa6:	687b      	ldr	r3, [r7, #4]
 8002aa8:	681b      	ldr	r3, [r3, #0]
 8002aaa:	3314      	adds	r3, #20
 8002aac:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8002ab0:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8002ab4:	e853 3f00 	ldrex	r3, [r3]
 8002ab8:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8002abc:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8002ac0:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8002ac4:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8002ac8:	687b      	ldr	r3, [r7, #4]
 8002aca:	681b      	ldr	r3, [r3, #0]
 8002acc:	3314      	adds	r3, #20
 8002ace:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 8002ad2:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 8002ad6:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8002ada:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8002ade:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 8002ae2:	e841 2300 	strex	r3, r2, [r1]
 8002ae6:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8002aea:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8002aee:	2b00      	cmp	r3, #0
 8002af0:	d1d9      	bne.n	8002aa6 <HAL_UART_IRQHandler+0x18e>
 8002af2:	687b      	ldr	r3, [r7, #4]
 8002af4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002af6:	2b00      	cmp	r3, #0
 8002af8:	d013      	beq.n	8002b22 <HAL_UART_IRQHandler+0x20a>
 8002afa:	687b      	ldr	r3, [r7, #4]
 8002afc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002afe:	4a7e      	ldr	r2, [pc, #504]	@ (8002cf8 <HAL_UART_IRQHandler+0x3e0>)
 8002b00:	651a      	str	r2, [r3, #80]	@ 0x50
 8002b02:	687b      	ldr	r3, [r7, #4]
 8002b04:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002b06:	4618      	mov	r0, r3
 8002b08:	f7fe fec3 	bl	8001892 <HAL_DMA_Abort_IT>
 8002b0c:	4603      	mov	r3, r0
 8002b0e:	2b00      	cmp	r3, #0
 8002b10:	d016      	beq.n	8002b40 <HAL_UART_IRQHandler+0x228>
 8002b12:	687b      	ldr	r3, [r7, #4]
 8002b14:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002b16:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8002b18:	687a      	ldr	r2, [r7, #4]
 8002b1a:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8002b1c:	4610      	mov	r0, r2
 8002b1e:	4798      	blx	r3
 8002b20:	e00e      	b.n	8002b40 <HAL_UART_IRQHandler+0x228>
 8002b22:	6878      	ldr	r0, [r7, #4]
 8002b24:	f000 f994 	bl	8002e50 <HAL_UART_ErrorCallback>
 8002b28:	e00a      	b.n	8002b40 <HAL_UART_IRQHandler+0x228>
 8002b2a:	6878      	ldr	r0, [r7, #4]
 8002b2c:	f000 f990 	bl	8002e50 <HAL_UART_ErrorCallback>
 8002b30:	e006      	b.n	8002b40 <HAL_UART_IRQHandler+0x228>
 8002b32:	6878      	ldr	r0, [r7, #4]
 8002b34:	f000 f98c 	bl	8002e50 <HAL_UART_ErrorCallback>
 8002b38:	687b      	ldr	r3, [r7, #4]
 8002b3a:	2200      	movs	r2, #0
 8002b3c:	645a      	str	r2, [r3, #68]	@ 0x44
 8002b3e:	e175      	b.n	8002e2c <HAL_UART_IRQHandler+0x514>
 8002b40:	bf00      	nop
 8002b42:	e173      	b.n	8002e2c <HAL_UART_IRQHandler+0x514>
 8002b44:	687b      	ldr	r3, [r7, #4]
 8002b46:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002b48:	2b01      	cmp	r3, #1
 8002b4a:	f040 814f 	bne.w	8002dec <HAL_UART_IRQHandler+0x4d4>
 8002b4e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002b52:	f003 0310 	and.w	r3, r3, #16
 8002b56:	2b00      	cmp	r3, #0
 8002b58:	f000 8148 	beq.w	8002dec <HAL_UART_IRQHandler+0x4d4>
 8002b5c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8002b60:	f003 0310 	and.w	r3, r3, #16
 8002b64:	2b00      	cmp	r3, #0
 8002b66:	f000 8141 	beq.w	8002dec <HAL_UART_IRQHandler+0x4d4>
 8002b6a:	2300      	movs	r3, #0
 8002b6c:	60bb      	str	r3, [r7, #8]
 8002b6e:	687b      	ldr	r3, [r7, #4]
 8002b70:	681b      	ldr	r3, [r3, #0]
 8002b72:	681b      	ldr	r3, [r3, #0]
 8002b74:	60bb      	str	r3, [r7, #8]
 8002b76:	687b      	ldr	r3, [r7, #4]
 8002b78:	681b      	ldr	r3, [r3, #0]
 8002b7a:	685b      	ldr	r3, [r3, #4]
 8002b7c:	60bb      	str	r3, [r7, #8]
 8002b7e:	68bb      	ldr	r3, [r7, #8]
 8002b80:	687b      	ldr	r3, [r7, #4]
 8002b82:	681b      	ldr	r3, [r3, #0]
 8002b84:	695b      	ldr	r3, [r3, #20]
 8002b86:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002b8a:	2b40      	cmp	r3, #64	@ 0x40
 8002b8c:	f040 80b6 	bne.w	8002cfc <HAL_UART_IRQHandler+0x3e4>
 8002b90:	687b      	ldr	r3, [r7, #4]
 8002b92:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002b94:	681b      	ldr	r3, [r3, #0]
 8002b96:	685b      	ldr	r3, [r3, #4]
 8002b98:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8002b9c:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8002ba0:	2b00      	cmp	r3, #0
 8002ba2:	f000 8145 	beq.w	8002e30 <HAL_UART_IRQHandler+0x518>
 8002ba6:	687b      	ldr	r3, [r7, #4]
 8002ba8:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8002baa:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8002bae:	429a      	cmp	r2, r3
 8002bb0:	f080 813e 	bcs.w	8002e30 <HAL_UART_IRQHandler+0x518>
 8002bb4:	687b      	ldr	r3, [r7, #4]
 8002bb6:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8002bba:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8002bbc:	687b      	ldr	r3, [r7, #4]
 8002bbe:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002bc0:	69db      	ldr	r3, [r3, #28]
 8002bc2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002bc6:	f000 8088 	beq.w	8002cda <HAL_UART_IRQHandler+0x3c2>
 8002bca:	687b      	ldr	r3, [r7, #4]
 8002bcc:	681b      	ldr	r3, [r3, #0]
 8002bce:	330c      	adds	r3, #12
 8002bd0:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8002bd4:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8002bd8:	e853 3f00 	ldrex	r3, [r3]
 8002bdc:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8002be0:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8002be4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8002be8:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8002bec:	687b      	ldr	r3, [r7, #4]
 8002bee:	681b      	ldr	r3, [r3, #0]
 8002bf0:	330c      	adds	r3, #12
 8002bf2:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 8002bf6:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8002bfa:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8002bfe:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 8002c02:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8002c06:	e841 2300 	strex	r3, r2, [r1]
 8002c0a:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8002c0e:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8002c12:	2b00      	cmp	r3, #0
 8002c14:	d1d9      	bne.n	8002bca <HAL_UART_IRQHandler+0x2b2>
 8002c16:	687b      	ldr	r3, [r7, #4]
 8002c18:	681b      	ldr	r3, [r3, #0]
 8002c1a:	3314      	adds	r3, #20
 8002c1c:	677b      	str	r3, [r7, #116]	@ 0x74
 8002c1e:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8002c20:	e853 3f00 	ldrex	r3, [r3]
 8002c24:	673b      	str	r3, [r7, #112]	@ 0x70
 8002c26:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8002c28:	f023 0301 	bic.w	r3, r3, #1
 8002c2c:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8002c30:	687b      	ldr	r3, [r7, #4]
 8002c32:	681b      	ldr	r3, [r3, #0]
 8002c34:	3314      	adds	r3, #20
 8002c36:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8002c3a:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8002c3e:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8002c40:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 8002c42:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 8002c46:	e841 2300 	strex	r3, r2, [r1]
 8002c4a:	67bb      	str	r3, [r7, #120]	@ 0x78
 8002c4c:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8002c4e:	2b00      	cmp	r3, #0
 8002c50:	d1e1      	bne.n	8002c16 <HAL_UART_IRQHandler+0x2fe>
 8002c52:	687b      	ldr	r3, [r7, #4]
 8002c54:	681b      	ldr	r3, [r3, #0]
 8002c56:	3314      	adds	r3, #20
 8002c58:	663b      	str	r3, [r7, #96]	@ 0x60
 8002c5a:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8002c5c:	e853 3f00 	ldrex	r3, [r3]
 8002c60:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8002c62:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8002c64:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8002c68:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8002c6c:	687b      	ldr	r3, [r7, #4]
 8002c6e:	681b      	ldr	r3, [r3, #0]
 8002c70:	3314      	adds	r3, #20
 8002c72:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8002c76:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8002c78:	66bb      	str	r3, [r7, #104]	@ 0x68
 8002c7a:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8002c7c:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8002c7e:	e841 2300 	strex	r3, r2, [r1]
 8002c82:	667b      	str	r3, [r7, #100]	@ 0x64
 8002c84:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8002c86:	2b00      	cmp	r3, #0
 8002c88:	d1e3      	bne.n	8002c52 <HAL_UART_IRQHandler+0x33a>
 8002c8a:	687b      	ldr	r3, [r7, #4]
 8002c8c:	2220      	movs	r2, #32
 8002c8e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002c92:	687b      	ldr	r3, [r7, #4]
 8002c94:	2200      	movs	r2, #0
 8002c96:	631a      	str	r2, [r3, #48]	@ 0x30
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	681b      	ldr	r3, [r3, #0]
 8002c9c:	330c      	adds	r3, #12
 8002c9e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8002ca0:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8002ca2:	e853 3f00 	ldrex	r3, [r3]
 8002ca6:	64bb      	str	r3, [r7, #72]	@ 0x48
 8002ca8:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8002caa:	f023 0310 	bic.w	r3, r3, #16
 8002cae:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8002cb2:	687b      	ldr	r3, [r7, #4]
 8002cb4:	681b      	ldr	r3, [r3, #0]
 8002cb6:	330c      	adds	r3, #12
 8002cb8:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8002cbc:	65ba      	str	r2, [r7, #88]	@ 0x58
 8002cbe:	657b      	str	r3, [r7, #84]	@ 0x54
 8002cc0:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8002cc2:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8002cc4:	e841 2300 	strex	r3, r2, [r1]
 8002cc8:	653b      	str	r3, [r7, #80]	@ 0x50
 8002cca:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8002ccc:	2b00      	cmp	r3, #0
 8002cce:	d1e3      	bne.n	8002c98 <HAL_UART_IRQHandler+0x380>
 8002cd0:	687b      	ldr	r3, [r7, #4]
 8002cd2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002cd4:	4618      	mov	r0, r3
 8002cd6:	f7fe fd6c 	bl	80017b2 <HAL_DMA_Abort>
 8002cda:	687b      	ldr	r3, [r7, #4]
 8002cdc:	2202      	movs	r2, #2
 8002cde:	635a      	str	r2, [r3, #52]	@ 0x34
 8002ce0:	687b      	ldr	r3, [r7, #4]
 8002ce2:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8002ce4:	687b      	ldr	r3, [r7, #4]
 8002ce6:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8002ce8:	b29b      	uxth	r3, r3
 8002cea:	1ad3      	subs	r3, r2, r3
 8002cec:	b29b      	uxth	r3, r3
 8002cee:	4619      	mov	r1, r3
 8002cf0:	6878      	ldr	r0, [r7, #4]
 8002cf2:	f000 f8b7 	bl	8002e64 <HAL_UARTEx_RxEventCallback>
 8002cf6:	e09b      	b.n	8002e30 <HAL_UART_IRQHandler+0x518>
 8002cf8:	08003069 	.word	0x08003069
 8002cfc:	687b      	ldr	r3, [r7, #4]
 8002cfe:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8002d00:	687b      	ldr	r3, [r7, #4]
 8002d02:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8002d04:	b29b      	uxth	r3, r3
 8002d06:	1ad3      	subs	r3, r2, r3
 8002d08:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8002d0c:	687b      	ldr	r3, [r7, #4]
 8002d0e:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8002d10:	b29b      	uxth	r3, r3
 8002d12:	2b00      	cmp	r3, #0
 8002d14:	f000 808e 	beq.w	8002e34 <HAL_UART_IRQHandler+0x51c>
 8002d18:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8002d1c:	2b00      	cmp	r3, #0
 8002d1e:	f000 8089 	beq.w	8002e34 <HAL_UART_IRQHandler+0x51c>
 8002d22:	687b      	ldr	r3, [r7, #4]
 8002d24:	681b      	ldr	r3, [r3, #0]
 8002d26:	330c      	adds	r3, #12
 8002d28:	63bb      	str	r3, [r7, #56]	@ 0x38
 8002d2a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8002d2c:	e853 3f00 	ldrex	r3, [r3]
 8002d30:	637b      	str	r3, [r7, #52]	@ 0x34
 8002d32:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8002d34:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8002d38:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8002d3c:	687b      	ldr	r3, [r7, #4]
 8002d3e:	681b      	ldr	r3, [r3, #0]
 8002d40:	330c      	adds	r3, #12
 8002d42:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 8002d46:	647a      	str	r2, [r7, #68]	@ 0x44
 8002d48:	643b      	str	r3, [r7, #64]	@ 0x40
 8002d4a:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8002d4c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8002d4e:	e841 2300 	strex	r3, r2, [r1]
 8002d52:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8002d54:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8002d56:	2b00      	cmp	r3, #0
 8002d58:	d1e3      	bne.n	8002d22 <HAL_UART_IRQHandler+0x40a>
 8002d5a:	687b      	ldr	r3, [r7, #4]
 8002d5c:	681b      	ldr	r3, [r3, #0]
 8002d5e:	3314      	adds	r3, #20
 8002d60:	627b      	str	r3, [r7, #36]	@ 0x24
 8002d62:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002d64:	e853 3f00 	ldrex	r3, [r3]
 8002d68:	623b      	str	r3, [r7, #32]
 8002d6a:	6a3b      	ldr	r3, [r7, #32]
 8002d6c:	f023 0301 	bic.w	r3, r3, #1
 8002d70:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8002d74:	687b      	ldr	r3, [r7, #4]
 8002d76:	681b      	ldr	r3, [r3, #0]
 8002d78:	3314      	adds	r3, #20
 8002d7a:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8002d7e:	633a      	str	r2, [r7, #48]	@ 0x30
 8002d80:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8002d82:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8002d84:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8002d86:	e841 2300 	strex	r3, r2, [r1]
 8002d8a:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002d8c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002d8e:	2b00      	cmp	r3, #0
 8002d90:	d1e3      	bne.n	8002d5a <HAL_UART_IRQHandler+0x442>
 8002d92:	687b      	ldr	r3, [r7, #4]
 8002d94:	2220      	movs	r2, #32
 8002d96:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002d9a:	687b      	ldr	r3, [r7, #4]
 8002d9c:	2200      	movs	r2, #0
 8002d9e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002da0:	687b      	ldr	r3, [r7, #4]
 8002da2:	681b      	ldr	r3, [r3, #0]
 8002da4:	330c      	adds	r3, #12
 8002da6:	613b      	str	r3, [r7, #16]
 8002da8:	693b      	ldr	r3, [r7, #16]
 8002daa:	e853 3f00 	ldrex	r3, [r3]
 8002dae:	60fb      	str	r3, [r7, #12]
 8002db0:	68fb      	ldr	r3, [r7, #12]
 8002db2:	f023 0310 	bic.w	r3, r3, #16
 8002db6:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8002dba:	687b      	ldr	r3, [r7, #4]
 8002dbc:	681b      	ldr	r3, [r3, #0]
 8002dbe:	330c      	adds	r3, #12
 8002dc0:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8002dc4:	61fa      	str	r2, [r7, #28]
 8002dc6:	61bb      	str	r3, [r7, #24]
 8002dc8:	69b9      	ldr	r1, [r7, #24]
 8002dca:	69fa      	ldr	r2, [r7, #28]
 8002dcc:	e841 2300 	strex	r3, r2, [r1]
 8002dd0:	617b      	str	r3, [r7, #20]
 8002dd2:	697b      	ldr	r3, [r7, #20]
 8002dd4:	2b00      	cmp	r3, #0
 8002dd6:	d1e3      	bne.n	8002da0 <HAL_UART_IRQHandler+0x488>
 8002dd8:	687b      	ldr	r3, [r7, #4]
 8002dda:	2202      	movs	r2, #2
 8002ddc:	635a      	str	r2, [r3, #52]	@ 0x34
 8002dde:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8002de2:	4619      	mov	r1, r3
 8002de4:	6878      	ldr	r0, [r7, #4]
 8002de6:	f000 f83d 	bl	8002e64 <HAL_UARTEx_RxEventCallback>
 8002dea:	e023      	b.n	8002e34 <HAL_UART_IRQHandler+0x51c>
 8002dec:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002df0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002df4:	2b00      	cmp	r3, #0
 8002df6:	d009      	beq.n	8002e0c <HAL_UART_IRQHandler+0x4f4>
 8002df8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8002dfc:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002e00:	2b00      	cmp	r3, #0
 8002e02:	d003      	beq.n	8002e0c <HAL_UART_IRQHandler+0x4f4>
 8002e04:	6878      	ldr	r0, [r7, #4]
 8002e06:	f000 f943 	bl	8003090 <UART_Transmit_IT>
 8002e0a:	e014      	b.n	8002e36 <HAL_UART_IRQHandler+0x51e>
 8002e0c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8002e10:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002e14:	2b00      	cmp	r3, #0
 8002e16:	d00e      	beq.n	8002e36 <HAL_UART_IRQHandler+0x51e>
 8002e18:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8002e1c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002e20:	2b00      	cmp	r3, #0
 8002e22:	d008      	beq.n	8002e36 <HAL_UART_IRQHandler+0x51e>
 8002e24:	6878      	ldr	r0, [r7, #4]
 8002e26:	f000 f983 	bl	8003130 <UART_EndTransmit_IT>
 8002e2a:	e004      	b.n	8002e36 <HAL_UART_IRQHandler+0x51e>
 8002e2c:	bf00      	nop
 8002e2e:	e002      	b.n	8002e36 <HAL_UART_IRQHandler+0x51e>
 8002e30:	bf00      	nop
 8002e32:	e000      	b.n	8002e36 <HAL_UART_IRQHandler+0x51e>
 8002e34:	bf00      	nop
 8002e36:	37e8      	adds	r7, #232	@ 0xe8
 8002e38:	46bd      	mov	sp, r7
 8002e3a:	bd80      	pop	{r7, pc}

08002e3c <HAL_UART_TxCpltCallback>:
 8002e3c:	b480      	push	{r7}
 8002e3e:	b083      	sub	sp, #12
 8002e40:	af00      	add	r7, sp, #0
 8002e42:	6078      	str	r0, [r7, #4]
 8002e44:	bf00      	nop
 8002e46:	370c      	adds	r7, #12
 8002e48:	46bd      	mov	sp, r7
 8002e4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e4e:	4770      	bx	lr

08002e50 <HAL_UART_ErrorCallback>:
 8002e50:	b480      	push	{r7}
 8002e52:	b083      	sub	sp, #12
 8002e54:	af00      	add	r7, sp, #0
 8002e56:	6078      	str	r0, [r7, #4]
 8002e58:	bf00      	nop
 8002e5a:	370c      	adds	r7, #12
 8002e5c:	46bd      	mov	sp, r7
 8002e5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e62:	4770      	bx	lr

08002e64 <HAL_UARTEx_RxEventCallback>:
 8002e64:	b480      	push	{r7}
 8002e66:	b083      	sub	sp, #12
 8002e68:	af00      	add	r7, sp, #0
 8002e6a:	6078      	str	r0, [r7, #4]
 8002e6c:	460b      	mov	r3, r1
 8002e6e:	807b      	strh	r3, [r7, #2]
 8002e70:	bf00      	nop
 8002e72:	370c      	adds	r7, #12
 8002e74:	46bd      	mov	sp, r7
 8002e76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e7a:	4770      	bx	lr

08002e7c <UART_WaitOnFlagUntilTimeout>:
 8002e7c:	b580      	push	{r7, lr}
 8002e7e:	b086      	sub	sp, #24
 8002e80:	af00      	add	r7, sp, #0
 8002e82:	60f8      	str	r0, [r7, #12]
 8002e84:	60b9      	str	r1, [r7, #8]
 8002e86:	603b      	str	r3, [r7, #0]
 8002e88:	4613      	mov	r3, r2
 8002e8a:	71fb      	strb	r3, [r7, #7]
 8002e8c:	e03b      	b.n	8002f06 <UART_WaitOnFlagUntilTimeout+0x8a>
 8002e8e:	6a3b      	ldr	r3, [r7, #32]
 8002e90:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002e94:	d037      	beq.n	8002f06 <UART_WaitOnFlagUntilTimeout+0x8a>
 8002e96:	f7fe fb4b 	bl	8001530 <HAL_GetTick>
 8002e9a:	4602      	mov	r2, r0
 8002e9c:	683b      	ldr	r3, [r7, #0]
 8002e9e:	1ad3      	subs	r3, r2, r3
 8002ea0:	6a3a      	ldr	r2, [r7, #32]
 8002ea2:	429a      	cmp	r2, r3
 8002ea4:	d302      	bcc.n	8002eac <UART_WaitOnFlagUntilTimeout+0x30>
 8002ea6:	6a3b      	ldr	r3, [r7, #32]
 8002ea8:	2b00      	cmp	r3, #0
 8002eaa:	d101      	bne.n	8002eb0 <UART_WaitOnFlagUntilTimeout+0x34>
 8002eac:	2303      	movs	r3, #3
 8002eae:	e03a      	b.n	8002f26 <UART_WaitOnFlagUntilTimeout+0xaa>
 8002eb0:	68fb      	ldr	r3, [r7, #12]
 8002eb2:	681b      	ldr	r3, [r3, #0]
 8002eb4:	68db      	ldr	r3, [r3, #12]
 8002eb6:	f003 0304 	and.w	r3, r3, #4
 8002eba:	2b00      	cmp	r3, #0
 8002ebc:	d023      	beq.n	8002f06 <UART_WaitOnFlagUntilTimeout+0x8a>
 8002ebe:	68bb      	ldr	r3, [r7, #8]
 8002ec0:	2b80      	cmp	r3, #128	@ 0x80
 8002ec2:	d020      	beq.n	8002f06 <UART_WaitOnFlagUntilTimeout+0x8a>
 8002ec4:	68bb      	ldr	r3, [r7, #8]
 8002ec6:	2b40      	cmp	r3, #64	@ 0x40
 8002ec8:	d01d      	beq.n	8002f06 <UART_WaitOnFlagUntilTimeout+0x8a>
 8002eca:	68fb      	ldr	r3, [r7, #12]
 8002ecc:	681b      	ldr	r3, [r3, #0]
 8002ece:	681b      	ldr	r3, [r3, #0]
 8002ed0:	f003 0308 	and.w	r3, r3, #8
 8002ed4:	2b08      	cmp	r3, #8
 8002ed6:	d116      	bne.n	8002f06 <UART_WaitOnFlagUntilTimeout+0x8a>
 8002ed8:	2300      	movs	r3, #0
 8002eda:	617b      	str	r3, [r7, #20]
 8002edc:	68fb      	ldr	r3, [r7, #12]
 8002ede:	681b      	ldr	r3, [r3, #0]
 8002ee0:	681b      	ldr	r3, [r3, #0]
 8002ee2:	617b      	str	r3, [r7, #20]
 8002ee4:	68fb      	ldr	r3, [r7, #12]
 8002ee6:	681b      	ldr	r3, [r3, #0]
 8002ee8:	685b      	ldr	r3, [r3, #4]
 8002eea:	617b      	str	r3, [r7, #20]
 8002eec:	697b      	ldr	r3, [r7, #20]
 8002eee:	68f8      	ldr	r0, [r7, #12]
 8002ef0:	f000 f857 	bl	8002fa2 <UART_EndRxTransfer>
 8002ef4:	68fb      	ldr	r3, [r7, #12]
 8002ef6:	2208      	movs	r2, #8
 8002ef8:	645a      	str	r2, [r3, #68]	@ 0x44
 8002efa:	68fb      	ldr	r3, [r7, #12]
 8002efc:	2200      	movs	r2, #0
 8002efe:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8002f02:	2301      	movs	r3, #1
 8002f04:	e00f      	b.n	8002f26 <UART_WaitOnFlagUntilTimeout+0xaa>
 8002f06:	68fb      	ldr	r3, [r7, #12]
 8002f08:	681b      	ldr	r3, [r3, #0]
 8002f0a:	681a      	ldr	r2, [r3, #0]
 8002f0c:	68bb      	ldr	r3, [r7, #8]
 8002f0e:	4013      	ands	r3, r2
 8002f10:	68ba      	ldr	r2, [r7, #8]
 8002f12:	429a      	cmp	r2, r3
 8002f14:	bf0c      	ite	eq
 8002f16:	2301      	moveq	r3, #1
 8002f18:	2300      	movne	r3, #0
 8002f1a:	b2db      	uxtb	r3, r3
 8002f1c:	461a      	mov	r2, r3
 8002f1e:	79fb      	ldrb	r3, [r7, #7]
 8002f20:	429a      	cmp	r2, r3
 8002f22:	d0b4      	beq.n	8002e8e <UART_WaitOnFlagUntilTimeout+0x12>
 8002f24:	2300      	movs	r3, #0
 8002f26:	4618      	mov	r0, r3
 8002f28:	3718      	adds	r7, #24
 8002f2a:	46bd      	mov	sp, r7
 8002f2c:	bd80      	pop	{r7, pc}

08002f2e <UART_Start_Receive_IT>:
 8002f2e:	b480      	push	{r7}
 8002f30:	b085      	sub	sp, #20
 8002f32:	af00      	add	r7, sp, #0
 8002f34:	60f8      	str	r0, [r7, #12]
 8002f36:	60b9      	str	r1, [r7, #8]
 8002f38:	4613      	mov	r3, r2
 8002f3a:	80fb      	strh	r3, [r7, #6]
 8002f3c:	68fb      	ldr	r3, [r7, #12]
 8002f3e:	68ba      	ldr	r2, [r7, #8]
 8002f40:	629a      	str	r2, [r3, #40]	@ 0x28
 8002f42:	68fb      	ldr	r3, [r7, #12]
 8002f44:	88fa      	ldrh	r2, [r7, #6]
 8002f46:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8002f48:	68fb      	ldr	r3, [r7, #12]
 8002f4a:	88fa      	ldrh	r2, [r7, #6]
 8002f4c:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8002f4e:	68fb      	ldr	r3, [r7, #12]
 8002f50:	2200      	movs	r2, #0
 8002f52:	645a      	str	r2, [r3, #68]	@ 0x44
 8002f54:	68fb      	ldr	r3, [r7, #12]
 8002f56:	2222      	movs	r2, #34	@ 0x22
 8002f58:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8002f5c:	68fb      	ldr	r3, [r7, #12]
 8002f5e:	691b      	ldr	r3, [r3, #16]
 8002f60:	2b00      	cmp	r3, #0
 8002f62:	d007      	beq.n	8002f74 <UART_Start_Receive_IT+0x46>
 8002f64:	68fb      	ldr	r3, [r7, #12]
 8002f66:	681b      	ldr	r3, [r3, #0]
 8002f68:	68da      	ldr	r2, [r3, #12]
 8002f6a:	68fb      	ldr	r3, [r7, #12]
 8002f6c:	681b      	ldr	r3, [r3, #0]
 8002f6e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002f72:	60da      	str	r2, [r3, #12]
 8002f74:	68fb      	ldr	r3, [r7, #12]
 8002f76:	681b      	ldr	r3, [r3, #0]
 8002f78:	695a      	ldr	r2, [r3, #20]
 8002f7a:	68fb      	ldr	r3, [r7, #12]
 8002f7c:	681b      	ldr	r3, [r3, #0]
 8002f7e:	f042 0201 	orr.w	r2, r2, #1
 8002f82:	615a      	str	r2, [r3, #20]
 8002f84:	68fb      	ldr	r3, [r7, #12]
 8002f86:	681b      	ldr	r3, [r3, #0]
 8002f88:	68da      	ldr	r2, [r3, #12]
 8002f8a:	68fb      	ldr	r3, [r7, #12]
 8002f8c:	681b      	ldr	r3, [r3, #0]
 8002f8e:	f042 0220 	orr.w	r2, r2, #32
 8002f92:	60da      	str	r2, [r3, #12]
 8002f94:	2300      	movs	r3, #0
 8002f96:	4618      	mov	r0, r3
 8002f98:	3714      	adds	r7, #20
 8002f9a:	46bd      	mov	sp, r7
 8002f9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fa0:	4770      	bx	lr

08002fa2 <UART_EndRxTransfer>:
 8002fa2:	b480      	push	{r7}
 8002fa4:	b095      	sub	sp, #84	@ 0x54
 8002fa6:	af00      	add	r7, sp, #0
 8002fa8:	6078      	str	r0, [r7, #4]
 8002faa:	687b      	ldr	r3, [r7, #4]
 8002fac:	681b      	ldr	r3, [r3, #0]
 8002fae:	330c      	adds	r3, #12
 8002fb0:	637b      	str	r3, [r7, #52]	@ 0x34
 8002fb2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8002fb4:	e853 3f00 	ldrex	r3, [r3]
 8002fb8:	633b      	str	r3, [r7, #48]	@ 0x30
 8002fba:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002fbc:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8002fc0:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8002fc2:	687b      	ldr	r3, [r7, #4]
 8002fc4:	681b      	ldr	r3, [r3, #0]
 8002fc6:	330c      	adds	r3, #12
 8002fc8:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8002fca:	643a      	str	r2, [r7, #64]	@ 0x40
 8002fcc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8002fce:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8002fd0:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8002fd2:	e841 2300 	strex	r3, r2, [r1]
 8002fd6:	63bb      	str	r3, [r7, #56]	@ 0x38
 8002fd8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8002fda:	2b00      	cmp	r3, #0
 8002fdc:	d1e5      	bne.n	8002faa <UART_EndRxTransfer+0x8>
 8002fde:	687b      	ldr	r3, [r7, #4]
 8002fe0:	681b      	ldr	r3, [r3, #0]
 8002fe2:	3314      	adds	r3, #20
 8002fe4:	623b      	str	r3, [r7, #32]
 8002fe6:	6a3b      	ldr	r3, [r7, #32]
 8002fe8:	e853 3f00 	ldrex	r3, [r3]
 8002fec:	61fb      	str	r3, [r7, #28]
 8002fee:	69fb      	ldr	r3, [r7, #28]
 8002ff0:	f023 0301 	bic.w	r3, r3, #1
 8002ff4:	64bb      	str	r3, [r7, #72]	@ 0x48
 8002ff6:	687b      	ldr	r3, [r7, #4]
 8002ff8:	681b      	ldr	r3, [r3, #0]
 8002ffa:	3314      	adds	r3, #20
 8002ffc:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8002ffe:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8003000:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003002:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8003004:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8003006:	e841 2300 	strex	r3, r2, [r1]
 800300a:	627b      	str	r3, [r7, #36]	@ 0x24
 800300c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800300e:	2b00      	cmp	r3, #0
 8003010:	d1e5      	bne.n	8002fde <UART_EndRxTransfer+0x3c>
 8003012:	687b      	ldr	r3, [r7, #4]
 8003014:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003016:	2b01      	cmp	r3, #1
 8003018:	d119      	bne.n	800304e <UART_EndRxTransfer+0xac>
 800301a:	687b      	ldr	r3, [r7, #4]
 800301c:	681b      	ldr	r3, [r3, #0]
 800301e:	330c      	adds	r3, #12
 8003020:	60fb      	str	r3, [r7, #12]
 8003022:	68fb      	ldr	r3, [r7, #12]
 8003024:	e853 3f00 	ldrex	r3, [r3]
 8003028:	60bb      	str	r3, [r7, #8]
 800302a:	68bb      	ldr	r3, [r7, #8]
 800302c:	f023 0310 	bic.w	r3, r3, #16
 8003030:	647b      	str	r3, [r7, #68]	@ 0x44
 8003032:	687b      	ldr	r3, [r7, #4]
 8003034:	681b      	ldr	r3, [r3, #0]
 8003036:	330c      	adds	r3, #12
 8003038:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800303a:	61ba      	str	r2, [r7, #24]
 800303c:	617b      	str	r3, [r7, #20]
 800303e:	6979      	ldr	r1, [r7, #20]
 8003040:	69ba      	ldr	r2, [r7, #24]
 8003042:	e841 2300 	strex	r3, r2, [r1]
 8003046:	613b      	str	r3, [r7, #16]
 8003048:	693b      	ldr	r3, [r7, #16]
 800304a:	2b00      	cmp	r3, #0
 800304c:	d1e5      	bne.n	800301a <UART_EndRxTransfer+0x78>
 800304e:	687b      	ldr	r3, [r7, #4]
 8003050:	2220      	movs	r2, #32
 8003052:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003056:	687b      	ldr	r3, [r7, #4]
 8003058:	2200      	movs	r2, #0
 800305a:	631a      	str	r2, [r3, #48]	@ 0x30
 800305c:	bf00      	nop
 800305e:	3754      	adds	r7, #84	@ 0x54
 8003060:	46bd      	mov	sp, r7
 8003062:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003066:	4770      	bx	lr

08003068 <UART_DMAAbortOnError>:
 8003068:	b580      	push	{r7, lr}
 800306a:	b084      	sub	sp, #16
 800306c:	af00      	add	r7, sp, #0
 800306e:	6078      	str	r0, [r7, #4]
 8003070:	687b      	ldr	r3, [r7, #4]
 8003072:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003074:	60fb      	str	r3, [r7, #12]
 8003076:	68fb      	ldr	r3, [r7, #12]
 8003078:	2200      	movs	r2, #0
 800307a:	85da      	strh	r2, [r3, #46]	@ 0x2e
 800307c:	68fb      	ldr	r3, [r7, #12]
 800307e:	2200      	movs	r2, #0
 8003080:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003082:	68f8      	ldr	r0, [r7, #12]
 8003084:	f7ff fee4 	bl	8002e50 <HAL_UART_ErrorCallback>
 8003088:	bf00      	nop
 800308a:	3710      	adds	r7, #16
 800308c:	46bd      	mov	sp, r7
 800308e:	bd80      	pop	{r7, pc}

08003090 <UART_Transmit_IT>:
 8003090:	b480      	push	{r7}
 8003092:	b085      	sub	sp, #20
 8003094:	af00      	add	r7, sp, #0
 8003096:	6078      	str	r0, [r7, #4]
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800309e:	b2db      	uxtb	r3, r3
 80030a0:	2b21      	cmp	r3, #33	@ 0x21
 80030a2:	d13e      	bne.n	8003122 <UART_Transmit_IT+0x92>
 80030a4:	687b      	ldr	r3, [r7, #4]
 80030a6:	689b      	ldr	r3, [r3, #8]
 80030a8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80030ac:	d114      	bne.n	80030d8 <UART_Transmit_IT+0x48>
 80030ae:	687b      	ldr	r3, [r7, #4]
 80030b0:	691b      	ldr	r3, [r3, #16]
 80030b2:	2b00      	cmp	r3, #0
 80030b4:	d110      	bne.n	80030d8 <UART_Transmit_IT+0x48>
 80030b6:	687b      	ldr	r3, [r7, #4]
 80030b8:	6a1b      	ldr	r3, [r3, #32]
 80030ba:	60fb      	str	r3, [r7, #12]
 80030bc:	68fb      	ldr	r3, [r7, #12]
 80030be:	881b      	ldrh	r3, [r3, #0]
 80030c0:	461a      	mov	r2, r3
 80030c2:	687b      	ldr	r3, [r7, #4]
 80030c4:	681b      	ldr	r3, [r3, #0]
 80030c6:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80030ca:	605a      	str	r2, [r3, #4]
 80030cc:	687b      	ldr	r3, [r7, #4]
 80030ce:	6a1b      	ldr	r3, [r3, #32]
 80030d0:	1c9a      	adds	r2, r3, #2
 80030d2:	687b      	ldr	r3, [r7, #4]
 80030d4:	621a      	str	r2, [r3, #32]
 80030d6:	e008      	b.n	80030ea <UART_Transmit_IT+0x5a>
 80030d8:	687b      	ldr	r3, [r7, #4]
 80030da:	6a1b      	ldr	r3, [r3, #32]
 80030dc:	1c59      	adds	r1, r3, #1
 80030de:	687a      	ldr	r2, [r7, #4]
 80030e0:	6211      	str	r1, [r2, #32]
 80030e2:	781a      	ldrb	r2, [r3, #0]
 80030e4:	687b      	ldr	r3, [r7, #4]
 80030e6:	681b      	ldr	r3, [r3, #0]
 80030e8:	605a      	str	r2, [r3, #4]
 80030ea:	687b      	ldr	r3, [r7, #4]
 80030ec:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80030ee:	b29b      	uxth	r3, r3
 80030f0:	3b01      	subs	r3, #1
 80030f2:	b29b      	uxth	r3, r3
 80030f4:	687a      	ldr	r2, [r7, #4]
 80030f6:	4619      	mov	r1, r3
 80030f8:	84d1      	strh	r1, [r2, #38]	@ 0x26
 80030fa:	2b00      	cmp	r3, #0
 80030fc:	d10f      	bne.n	800311e <UART_Transmit_IT+0x8e>
 80030fe:	687b      	ldr	r3, [r7, #4]
 8003100:	681b      	ldr	r3, [r3, #0]
 8003102:	68da      	ldr	r2, [r3, #12]
 8003104:	687b      	ldr	r3, [r7, #4]
 8003106:	681b      	ldr	r3, [r3, #0]
 8003108:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800310c:	60da      	str	r2, [r3, #12]
 800310e:	687b      	ldr	r3, [r7, #4]
 8003110:	681b      	ldr	r3, [r3, #0]
 8003112:	68da      	ldr	r2, [r3, #12]
 8003114:	687b      	ldr	r3, [r7, #4]
 8003116:	681b      	ldr	r3, [r3, #0]
 8003118:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800311c:	60da      	str	r2, [r3, #12]
 800311e:	2300      	movs	r3, #0
 8003120:	e000      	b.n	8003124 <UART_Transmit_IT+0x94>
 8003122:	2302      	movs	r3, #2
 8003124:	4618      	mov	r0, r3
 8003126:	3714      	adds	r7, #20
 8003128:	46bd      	mov	sp, r7
 800312a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800312e:	4770      	bx	lr

08003130 <UART_EndTransmit_IT>:
 8003130:	b580      	push	{r7, lr}
 8003132:	b082      	sub	sp, #8
 8003134:	af00      	add	r7, sp, #0
 8003136:	6078      	str	r0, [r7, #4]
 8003138:	687b      	ldr	r3, [r7, #4]
 800313a:	681b      	ldr	r3, [r3, #0]
 800313c:	68da      	ldr	r2, [r3, #12]
 800313e:	687b      	ldr	r3, [r7, #4]
 8003140:	681b      	ldr	r3, [r3, #0]
 8003142:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8003146:	60da      	str	r2, [r3, #12]
 8003148:	687b      	ldr	r3, [r7, #4]
 800314a:	2220      	movs	r2, #32
 800314c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003150:	6878      	ldr	r0, [r7, #4]
 8003152:	f7ff fe73 	bl	8002e3c <HAL_UART_TxCpltCallback>
 8003156:	2300      	movs	r3, #0
 8003158:	4618      	mov	r0, r3
 800315a:	3708      	adds	r7, #8
 800315c:	46bd      	mov	sp, r7
 800315e:	bd80      	pop	{r7, pc}

08003160 <UART_Receive_IT>:
 8003160:	b580      	push	{r7, lr}
 8003162:	b08c      	sub	sp, #48	@ 0x30
 8003164:	af00      	add	r7, sp, #0
 8003166:	6078      	str	r0, [r7, #4]
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 800316e:	b2db      	uxtb	r3, r3
 8003170:	2b22      	cmp	r3, #34	@ 0x22
 8003172:	f040 80ae 	bne.w	80032d2 <UART_Receive_IT+0x172>
 8003176:	687b      	ldr	r3, [r7, #4]
 8003178:	689b      	ldr	r3, [r3, #8]
 800317a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800317e:	d117      	bne.n	80031b0 <UART_Receive_IT+0x50>
 8003180:	687b      	ldr	r3, [r7, #4]
 8003182:	691b      	ldr	r3, [r3, #16]
 8003184:	2b00      	cmp	r3, #0
 8003186:	d113      	bne.n	80031b0 <UART_Receive_IT+0x50>
 8003188:	2300      	movs	r3, #0
 800318a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800318c:	687b      	ldr	r3, [r7, #4]
 800318e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003190:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003192:	687b      	ldr	r3, [r7, #4]
 8003194:	681b      	ldr	r3, [r3, #0]
 8003196:	685b      	ldr	r3, [r3, #4]
 8003198:	b29b      	uxth	r3, r3
 800319a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800319e:	b29a      	uxth	r2, r3
 80031a0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80031a2:	801a      	strh	r2, [r3, #0]
 80031a4:	687b      	ldr	r3, [r7, #4]
 80031a6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80031a8:	1c9a      	adds	r2, r3, #2
 80031aa:	687b      	ldr	r3, [r7, #4]
 80031ac:	629a      	str	r2, [r3, #40]	@ 0x28
 80031ae:	e026      	b.n	80031fe <UART_Receive_IT+0x9e>
 80031b0:	687b      	ldr	r3, [r7, #4]
 80031b2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80031b4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80031b6:	2300      	movs	r3, #0
 80031b8:	62bb      	str	r3, [r7, #40]	@ 0x28
 80031ba:	687b      	ldr	r3, [r7, #4]
 80031bc:	689b      	ldr	r3, [r3, #8]
 80031be:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80031c2:	d007      	beq.n	80031d4 <UART_Receive_IT+0x74>
 80031c4:	687b      	ldr	r3, [r7, #4]
 80031c6:	689b      	ldr	r3, [r3, #8]
 80031c8:	2b00      	cmp	r3, #0
 80031ca:	d10a      	bne.n	80031e2 <UART_Receive_IT+0x82>
 80031cc:	687b      	ldr	r3, [r7, #4]
 80031ce:	691b      	ldr	r3, [r3, #16]
 80031d0:	2b00      	cmp	r3, #0
 80031d2:	d106      	bne.n	80031e2 <UART_Receive_IT+0x82>
 80031d4:	687b      	ldr	r3, [r7, #4]
 80031d6:	681b      	ldr	r3, [r3, #0]
 80031d8:	685b      	ldr	r3, [r3, #4]
 80031da:	b2da      	uxtb	r2, r3
 80031dc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80031de:	701a      	strb	r2, [r3, #0]
 80031e0:	e008      	b.n	80031f4 <UART_Receive_IT+0x94>
 80031e2:	687b      	ldr	r3, [r7, #4]
 80031e4:	681b      	ldr	r3, [r3, #0]
 80031e6:	685b      	ldr	r3, [r3, #4]
 80031e8:	b2db      	uxtb	r3, r3
 80031ea:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80031ee:	b2da      	uxtb	r2, r3
 80031f0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80031f2:	701a      	strb	r2, [r3, #0]
 80031f4:	687b      	ldr	r3, [r7, #4]
 80031f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80031f8:	1c5a      	adds	r2, r3, #1
 80031fa:	687b      	ldr	r3, [r7, #4]
 80031fc:	629a      	str	r2, [r3, #40]	@ 0x28
 80031fe:	687b      	ldr	r3, [r7, #4]
 8003200:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8003202:	b29b      	uxth	r3, r3
 8003204:	3b01      	subs	r3, #1
 8003206:	b29b      	uxth	r3, r3
 8003208:	687a      	ldr	r2, [r7, #4]
 800320a:	4619      	mov	r1, r3
 800320c:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 800320e:	2b00      	cmp	r3, #0
 8003210:	d15d      	bne.n	80032ce <UART_Receive_IT+0x16e>
 8003212:	687b      	ldr	r3, [r7, #4]
 8003214:	681b      	ldr	r3, [r3, #0]
 8003216:	68da      	ldr	r2, [r3, #12]
 8003218:	687b      	ldr	r3, [r7, #4]
 800321a:	681b      	ldr	r3, [r3, #0]
 800321c:	f022 0220 	bic.w	r2, r2, #32
 8003220:	60da      	str	r2, [r3, #12]
 8003222:	687b      	ldr	r3, [r7, #4]
 8003224:	681b      	ldr	r3, [r3, #0]
 8003226:	68da      	ldr	r2, [r3, #12]
 8003228:	687b      	ldr	r3, [r7, #4]
 800322a:	681b      	ldr	r3, [r3, #0]
 800322c:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8003230:	60da      	str	r2, [r3, #12]
 8003232:	687b      	ldr	r3, [r7, #4]
 8003234:	681b      	ldr	r3, [r3, #0]
 8003236:	695a      	ldr	r2, [r3, #20]
 8003238:	687b      	ldr	r3, [r7, #4]
 800323a:	681b      	ldr	r3, [r3, #0]
 800323c:	f022 0201 	bic.w	r2, r2, #1
 8003240:	615a      	str	r2, [r3, #20]
 8003242:	687b      	ldr	r3, [r7, #4]
 8003244:	2220      	movs	r2, #32
 8003246:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800324a:	687b      	ldr	r3, [r7, #4]
 800324c:	2200      	movs	r2, #0
 800324e:	635a      	str	r2, [r3, #52]	@ 0x34
 8003250:	687b      	ldr	r3, [r7, #4]
 8003252:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003254:	2b01      	cmp	r3, #1
 8003256:	d135      	bne.n	80032c4 <UART_Receive_IT+0x164>
 8003258:	687b      	ldr	r3, [r7, #4]
 800325a:	2200      	movs	r2, #0
 800325c:	631a      	str	r2, [r3, #48]	@ 0x30
 800325e:	687b      	ldr	r3, [r7, #4]
 8003260:	681b      	ldr	r3, [r3, #0]
 8003262:	330c      	adds	r3, #12
 8003264:	617b      	str	r3, [r7, #20]
 8003266:	697b      	ldr	r3, [r7, #20]
 8003268:	e853 3f00 	ldrex	r3, [r3]
 800326c:	613b      	str	r3, [r7, #16]
 800326e:	693b      	ldr	r3, [r7, #16]
 8003270:	f023 0310 	bic.w	r3, r3, #16
 8003274:	627b      	str	r3, [r7, #36]	@ 0x24
 8003276:	687b      	ldr	r3, [r7, #4]
 8003278:	681b      	ldr	r3, [r3, #0]
 800327a:	330c      	adds	r3, #12
 800327c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800327e:	623a      	str	r2, [r7, #32]
 8003280:	61fb      	str	r3, [r7, #28]
 8003282:	69f9      	ldr	r1, [r7, #28]
 8003284:	6a3a      	ldr	r2, [r7, #32]
 8003286:	e841 2300 	strex	r3, r2, [r1]
 800328a:	61bb      	str	r3, [r7, #24]
 800328c:	69bb      	ldr	r3, [r7, #24]
 800328e:	2b00      	cmp	r3, #0
 8003290:	d1e5      	bne.n	800325e <UART_Receive_IT+0xfe>
 8003292:	687b      	ldr	r3, [r7, #4]
 8003294:	681b      	ldr	r3, [r3, #0]
 8003296:	681b      	ldr	r3, [r3, #0]
 8003298:	f003 0310 	and.w	r3, r3, #16
 800329c:	2b10      	cmp	r3, #16
 800329e:	d10a      	bne.n	80032b6 <UART_Receive_IT+0x156>
 80032a0:	2300      	movs	r3, #0
 80032a2:	60fb      	str	r3, [r7, #12]
 80032a4:	687b      	ldr	r3, [r7, #4]
 80032a6:	681b      	ldr	r3, [r3, #0]
 80032a8:	681b      	ldr	r3, [r3, #0]
 80032aa:	60fb      	str	r3, [r7, #12]
 80032ac:	687b      	ldr	r3, [r7, #4]
 80032ae:	681b      	ldr	r3, [r3, #0]
 80032b0:	685b      	ldr	r3, [r3, #4]
 80032b2:	60fb      	str	r3, [r7, #12]
 80032b4:	68fb      	ldr	r3, [r7, #12]
 80032b6:	687b      	ldr	r3, [r7, #4]
 80032b8:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 80032ba:	4619      	mov	r1, r3
 80032bc:	6878      	ldr	r0, [r7, #4]
 80032be:	f7ff fdd1 	bl	8002e64 <HAL_UARTEx_RxEventCallback>
 80032c2:	e002      	b.n	80032ca <UART_Receive_IT+0x16a>
 80032c4:	6878      	ldr	r0, [r7, #4]
 80032c6:	f7fd fccd 	bl	8000c64 <HAL_UART_RxCpltCallback>
 80032ca:	2300      	movs	r3, #0
 80032cc:	e002      	b.n	80032d4 <UART_Receive_IT+0x174>
 80032ce:	2300      	movs	r3, #0
 80032d0:	e000      	b.n	80032d4 <UART_Receive_IT+0x174>
 80032d2:	2302      	movs	r3, #2
 80032d4:	4618      	mov	r0, r3
 80032d6:	3730      	adds	r7, #48	@ 0x30
 80032d8:	46bd      	mov	sp, r7
 80032da:	bd80      	pop	{r7, pc}

080032dc <UART_SetConfig>:
 80032dc:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80032e0:	b0c0      	sub	sp, #256	@ 0x100
 80032e2:	af00      	add	r7, sp, #0
 80032e4:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 80032e8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80032ec:	681b      	ldr	r3, [r3, #0]
 80032ee:	691b      	ldr	r3, [r3, #16]
 80032f0:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 80032f4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80032f8:	68d9      	ldr	r1, [r3, #12]
 80032fa:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80032fe:	681a      	ldr	r2, [r3, #0]
 8003300:	ea40 0301 	orr.w	r3, r0, r1
 8003304:	6113      	str	r3, [r2, #16]
 8003306:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800330a:	689a      	ldr	r2, [r3, #8]
 800330c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003310:	691b      	ldr	r3, [r3, #16]
 8003312:	431a      	orrs	r2, r3
 8003314:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003318:	695b      	ldr	r3, [r3, #20]
 800331a:	431a      	orrs	r2, r3
 800331c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003320:	69db      	ldr	r3, [r3, #28]
 8003322:	4313      	orrs	r3, r2
 8003324:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8003328:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800332c:	681b      	ldr	r3, [r3, #0]
 800332e:	68db      	ldr	r3, [r3, #12]
 8003330:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8003334:	f021 010c 	bic.w	r1, r1, #12
 8003338:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800333c:	681a      	ldr	r2, [r3, #0]
 800333e:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8003342:	430b      	orrs	r3, r1
 8003344:	60d3      	str	r3, [r2, #12]
 8003346:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800334a:	681b      	ldr	r3, [r3, #0]
 800334c:	695b      	ldr	r3, [r3, #20]
 800334e:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 8003352:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003356:	6999      	ldr	r1, [r3, #24]
 8003358:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800335c:	681a      	ldr	r2, [r3, #0]
 800335e:	ea40 0301 	orr.w	r3, r0, r1
 8003362:	6153      	str	r3, [r2, #20]
 8003364:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003368:	681a      	ldr	r2, [r3, #0]
 800336a:	4b8f      	ldr	r3, [pc, #572]	@ (80035a8 <UART_SetConfig+0x2cc>)
 800336c:	429a      	cmp	r2, r3
 800336e:	d005      	beq.n	800337c <UART_SetConfig+0xa0>
 8003370:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003374:	681a      	ldr	r2, [r3, #0]
 8003376:	4b8d      	ldr	r3, [pc, #564]	@ (80035ac <UART_SetConfig+0x2d0>)
 8003378:	429a      	cmp	r2, r3
 800337a:	d104      	bne.n	8003386 <UART_SetConfig+0xaa>
 800337c:	f7ff f9b8 	bl	80026f0 <HAL_RCC_GetPCLK2Freq>
 8003380:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8003384:	e003      	b.n	800338e <UART_SetConfig+0xb2>
 8003386:	f7ff f99f 	bl	80026c8 <HAL_RCC_GetPCLK1Freq>
 800338a:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 800338e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003392:	69db      	ldr	r3, [r3, #28]
 8003394:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8003398:	f040 810c 	bne.w	80035b4 <UART_SetConfig+0x2d8>
 800339c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80033a0:	2200      	movs	r2, #0
 80033a2:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 80033a6:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 80033aa:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 80033ae:	4622      	mov	r2, r4
 80033b0:	462b      	mov	r3, r5
 80033b2:	1891      	adds	r1, r2, r2
 80033b4:	65b9      	str	r1, [r7, #88]	@ 0x58
 80033b6:	415b      	adcs	r3, r3
 80033b8:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80033ba:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 80033be:	4621      	mov	r1, r4
 80033c0:	eb12 0801 	adds.w	r8, r2, r1
 80033c4:	4629      	mov	r1, r5
 80033c6:	eb43 0901 	adc.w	r9, r3, r1
 80033ca:	f04f 0200 	mov.w	r2, #0
 80033ce:	f04f 0300 	mov.w	r3, #0
 80033d2:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80033d6:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80033da:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80033de:	4690      	mov	r8, r2
 80033e0:	4699      	mov	r9, r3
 80033e2:	4623      	mov	r3, r4
 80033e4:	eb18 0303 	adds.w	r3, r8, r3
 80033e8:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 80033ec:	462b      	mov	r3, r5
 80033ee:	eb49 0303 	adc.w	r3, r9, r3
 80033f2:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 80033f6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80033fa:	685b      	ldr	r3, [r3, #4]
 80033fc:	2200      	movs	r2, #0
 80033fe:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8003402:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8003406:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 800340a:	460b      	mov	r3, r1
 800340c:	18db      	adds	r3, r3, r3
 800340e:	653b      	str	r3, [r7, #80]	@ 0x50
 8003410:	4613      	mov	r3, r2
 8003412:	eb42 0303 	adc.w	r3, r2, r3
 8003416:	657b      	str	r3, [r7, #84]	@ 0x54
 8003418:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 800341c:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8003420:	f7fc ff2e 	bl	8000280 <__aeabi_uldivmod>
 8003424:	4602      	mov	r2, r0
 8003426:	460b      	mov	r3, r1
 8003428:	4b61      	ldr	r3, [pc, #388]	@ (80035b0 <UART_SetConfig+0x2d4>)
 800342a:	fba3 2302 	umull	r2, r3, r3, r2
 800342e:	095b      	lsrs	r3, r3, #5
 8003430:	011c      	lsls	r4, r3, #4
 8003432:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003436:	2200      	movs	r2, #0
 8003438:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 800343c:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8003440:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8003444:	4642      	mov	r2, r8
 8003446:	464b      	mov	r3, r9
 8003448:	1891      	adds	r1, r2, r2
 800344a:	64b9      	str	r1, [r7, #72]	@ 0x48
 800344c:	415b      	adcs	r3, r3
 800344e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003450:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8003454:	4641      	mov	r1, r8
 8003456:	eb12 0a01 	adds.w	sl, r2, r1
 800345a:	4649      	mov	r1, r9
 800345c:	eb43 0b01 	adc.w	fp, r3, r1
 8003460:	f04f 0200 	mov.w	r2, #0
 8003464:	f04f 0300 	mov.w	r3, #0
 8003468:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800346c:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8003470:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8003474:	4692      	mov	sl, r2
 8003476:	469b      	mov	fp, r3
 8003478:	4643      	mov	r3, r8
 800347a:	eb1a 0303 	adds.w	r3, sl, r3
 800347e:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8003482:	464b      	mov	r3, r9
 8003484:	eb4b 0303 	adc.w	r3, fp, r3
 8003488:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 800348c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8003490:	685b      	ldr	r3, [r3, #4]
 8003492:	2200      	movs	r2, #0
 8003494:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8003498:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 800349c:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 80034a0:	460b      	mov	r3, r1
 80034a2:	18db      	adds	r3, r3, r3
 80034a4:	643b      	str	r3, [r7, #64]	@ 0x40
 80034a6:	4613      	mov	r3, r2
 80034a8:	eb42 0303 	adc.w	r3, r2, r3
 80034ac:	647b      	str	r3, [r7, #68]	@ 0x44
 80034ae:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 80034b2:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 80034b6:	f7fc fee3 	bl	8000280 <__aeabi_uldivmod>
 80034ba:	4602      	mov	r2, r0
 80034bc:	460b      	mov	r3, r1
 80034be:	4611      	mov	r1, r2
 80034c0:	4b3b      	ldr	r3, [pc, #236]	@ (80035b0 <UART_SetConfig+0x2d4>)
 80034c2:	fba3 2301 	umull	r2, r3, r3, r1
 80034c6:	095b      	lsrs	r3, r3, #5
 80034c8:	2264      	movs	r2, #100	@ 0x64
 80034ca:	fb02 f303 	mul.w	r3, r2, r3
 80034ce:	1acb      	subs	r3, r1, r3
 80034d0:	00db      	lsls	r3, r3, #3
 80034d2:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 80034d6:	4b36      	ldr	r3, [pc, #216]	@ (80035b0 <UART_SetConfig+0x2d4>)
 80034d8:	fba3 2302 	umull	r2, r3, r3, r2
 80034dc:	095b      	lsrs	r3, r3, #5
 80034de:	005b      	lsls	r3, r3, #1
 80034e0:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 80034e4:	441c      	add	r4, r3
 80034e6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80034ea:	2200      	movs	r2, #0
 80034ec:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80034f0:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 80034f4:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 80034f8:	4642      	mov	r2, r8
 80034fa:	464b      	mov	r3, r9
 80034fc:	1891      	adds	r1, r2, r2
 80034fe:	63b9      	str	r1, [r7, #56]	@ 0x38
 8003500:	415b      	adcs	r3, r3
 8003502:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003504:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8003508:	4641      	mov	r1, r8
 800350a:	1851      	adds	r1, r2, r1
 800350c:	6339      	str	r1, [r7, #48]	@ 0x30
 800350e:	4649      	mov	r1, r9
 8003510:	414b      	adcs	r3, r1
 8003512:	637b      	str	r3, [r7, #52]	@ 0x34
 8003514:	f04f 0200 	mov.w	r2, #0
 8003518:	f04f 0300 	mov.w	r3, #0
 800351c:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8003520:	4659      	mov	r1, fp
 8003522:	00cb      	lsls	r3, r1, #3
 8003524:	4651      	mov	r1, sl
 8003526:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800352a:	4651      	mov	r1, sl
 800352c:	00ca      	lsls	r2, r1, #3
 800352e:	4610      	mov	r0, r2
 8003530:	4619      	mov	r1, r3
 8003532:	4603      	mov	r3, r0
 8003534:	4642      	mov	r2, r8
 8003536:	189b      	adds	r3, r3, r2
 8003538:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800353c:	464b      	mov	r3, r9
 800353e:	460a      	mov	r2, r1
 8003540:	eb42 0303 	adc.w	r3, r2, r3
 8003544:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8003548:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800354c:	685b      	ldr	r3, [r3, #4]
 800354e:	2200      	movs	r2, #0
 8003550:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8003554:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8003558:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 800355c:	460b      	mov	r3, r1
 800355e:	18db      	adds	r3, r3, r3
 8003560:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003562:	4613      	mov	r3, r2
 8003564:	eb42 0303 	adc.w	r3, r2, r3
 8003568:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800356a:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 800356e:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8003572:	f7fc fe85 	bl	8000280 <__aeabi_uldivmod>
 8003576:	4602      	mov	r2, r0
 8003578:	460b      	mov	r3, r1
 800357a:	4b0d      	ldr	r3, [pc, #52]	@ (80035b0 <UART_SetConfig+0x2d4>)
 800357c:	fba3 1302 	umull	r1, r3, r3, r2
 8003580:	095b      	lsrs	r3, r3, #5
 8003582:	2164      	movs	r1, #100	@ 0x64
 8003584:	fb01 f303 	mul.w	r3, r1, r3
 8003588:	1ad3      	subs	r3, r2, r3
 800358a:	00db      	lsls	r3, r3, #3
 800358c:	3332      	adds	r3, #50	@ 0x32
 800358e:	4a08      	ldr	r2, [pc, #32]	@ (80035b0 <UART_SetConfig+0x2d4>)
 8003590:	fba2 2303 	umull	r2, r3, r2, r3
 8003594:	095b      	lsrs	r3, r3, #5
 8003596:	f003 0207 	and.w	r2, r3, #7
 800359a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800359e:	681b      	ldr	r3, [r3, #0]
 80035a0:	4422      	add	r2, r4
 80035a2:	609a      	str	r2, [r3, #8]
 80035a4:	e106      	b.n	80037b4 <UART_SetConfig+0x4d8>
 80035a6:	bf00      	nop
 80035a8:	40011000 	.word	0x40011000
 80035ac:	40011400 	.word	0x40011400
 80035b0:	51eb851f 	.word	0x51eb851f
 80035b4:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80035b8:	2200      	movs	r2, #0
 80035ba:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80035be:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 80035c2:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 80035c6:	4642      	mov	r2, r8
 80035c8:	464b      	mov	r3, r9
 80035ca:	1891      	adds	r1, r2, r2
 80035cc:	6239      	str	r1, [r7, #32]
 80035ce:	415b      	adcs	r3, r3
 80035d0:	627b      	str	r3, [r7, #36]	@ 0x24
 80035d2:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 80035d6:	4641      	mov	r1, r8
 80035d8:	1854      	adds	r4, r2, r1
 80035da:	4649      	mov	r1, r9
 80035dc:	eb43 0501 	adc.w	r5, r3, r1
 80035e0:	f04f 0200 	mov.w	r2, #0
 80035e4:	f04f 0300 	mov.w	r3, #0
 80035e8:	00eb      	lsls	r3, r5, #3
 80035ea:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80035ee:	00e2      	lsls	r2, r4, #3
 80035f0:	4614      	mov	r4, r2
 80035f2:	461d      	mov	r5, r3
 80035f4:	4643      	mov	r3, r8
 80035f6:	18e3      	adds	r3, r4, r3
 80035f8:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80035fc:	464b      	mov	r3, r9
 80035fe:	eb45 0303 	adc.w	r3, r5, r3
 8003602:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8003606:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800360a:	685b      	ldr	r3, [r3, #4]
 800360c:	2200      	movs	r2, #0
 800360e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8003612:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8003616:	f04f 0200 	mov.w	r2, #0
 800361a:	f04f 0300 	mov.w	r3, #0
 800361e:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8003622:	4629      	mov	r1, r5
 8003624:	008b      	lsls	r3, r1, #2
 8003626:	4621      	mov	r1, r4
 8003628:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800362c:	4621      	mov	r1, r4
 800362e:	008a      	lsls	r2, r1, #2
 8003630:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8003634:	f7fc fe24 	bl	8000280 <__aeabi_uldivmod>
 8003638:	4602      	mov	r2, r0
 800363a:	460b      	mov	r3, r1
 800363c:	4b60      	ldr	r3, [pc, #384]	@ (80037c0 <UART_SetConfig+0x4e4>)
 800363e:	fba3 2302 	umull	r2, r3, r3, r2
 8003642:	095b      	lsrs	r3, r3, #5
 8003644:	011c      	lsls	r4, r3, #4
 8003646:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800364a:	2200      	movs	r2, #0
 800364c:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8003650:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8003654:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8003658:	4642      	mov	r2, r8
 800365a:	464b      	mov	r3, r9
 800365c:	1891      	adds	r1, r2, r2
 800365e:	61b9      	str	r1, [r7, #24]
 8003660:	415b      	adcs	r3, r3
 8003662:	61fb      	str	r3, [r7, #28]
 8003664:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8003668:	4641      	mov	r1, r8
 800366a:	1851      	adds	r1, r2, r1
 800366c:	6139      	str	r1, [r7, #16]
 800366e:	4649      	mov	r1, r9
 8003670:	414b      	adcs	r3, r1
 8003672:	617b      	str	r3, [r7, #20]
 8003674:	f04f 0200 	mov.w	r2, #0
 8003678:	f04f 0300 	mov.w	r3, #0
 800367c:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8003680:	4659      	mov	r1, fp
 8003682:	00cb      	lsls	r3, r1, #3
 8003684:	4651      	mov	r1, sl
 8003686:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800368a:	4651      	mov	r1, sl
 800368c:	00ca      	lsls	r2, r1, #3
 800368e:	4610      	mov	r0, r2
 8003690:	4619      	mov	r1, r3
 8003692:	4603      	mov	r3, r0
 8003694:	4642      	mov	r2, r8
 8003696:	189b      	adds	r3, r3, r2
 8003698:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 800369c:	464b      	mov	r3, r9
 800369e:	460a      	mov	r2, r1
 80036a0:	eb42 0303 	adc.w	r3, r2, r3
 80036a4:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80036a8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80036ac:	685b      	ldr	r3, [r3, #4]
 80036ae:	2200      	movs	r2, #0
 80036b0:	67bb      	str	r3, [r7, #120]	@ 0x78
 80036b2:	67fa      	str	r2, [r7, #124]	@ 0x7c
 80036b4:	f04f 0200 	mov.w	r2, #0
 80036b8:	f04f 0300 	mov.w	r3, #0
 80036bc:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 80036c0:	4649      	mov	r1, r9
 80036c2:	008b      	lsls	r3, r1, #2
 80036c4:	4641      	mov	r1, r8
 80036c6:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80036ca:	4641      	mov	r1, r8
 80036cc:	008a      	lsls	r2, r1, #2
 80036ce:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 80036d2:	f7fc fdd5 	bl	8000280 <__aeabi_uldivmod>
 80036d6:	4602      	mov	r2, r0
 80036d8:	460b      	mov	r3, r1
 80036da:	4611      	mov	r1, r2
 80036dc:	4b38      	ldr	r3, [pc, #224]	@ (80037c0 <UART_SetConfig+0x4e4>)
 80036de:	fba3 2301 	umull	r2, r3, r3, r1
 80036e2:	095b      	lsrs	r3, r3, #5
 80036e4:	2264      	movs	r2, #100	@ 0x64
 80036e6:	fb02 f303 	mul.w	r3, r2, r3
 80036ea:	1acb      	subs	r3, r1, r3
 80036ec:	011b      	lsls	r3, r3, #4
 80036ee:	3332      	adds	r3, #50	@ 0x32
 80036f0:	4a33      	ldr	r2, [pc, #204]	@ (80037c0 <UART_SetConfig+0x4e4>)
 80036f2:	fba2 2303 	umull	r2, r3, r2, r3
 80036f6:	095b      	lsrs	r3, r3, #5
 80036f8:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80036fc:	441c      	add	r4, r3
 80036fe:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8003702:	2200      	movs	r2, #0
 8003704:	673b      	str	r3, [r7, #112]	@ 0x70
 8003706:	677a      	str	r2, [r7, #116]	@ 0x74
 8003708:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 800370c:	4642      	mov	r2, r8
 800370e:	464b      	mov	r3, r9
 8003710:	1891      	adds	r1, r2, r2
 8003712:	60b9      	str	r1, [r7, #8]
 8003714:	415b      	adcs	r3, r3
 8003716:	60fb      	str	r3, [r7, #12]
 8003718:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800371c:	4641      	mov	r1, r8
 800371e:	1851      	adds	r1, r2, r1
 8003720:	6039      	str	r1, [r7, #0]
 8003722:	4649      	mov	r1, r9
 8003724:	414b      	adcs	r3, r1
 8003726:	607b      	str	r3, [r7, #4]
 8003728:	f04f 0200 	mov.w	r2, #0
 800372c:	f04f 0300 	mov.w	r3, #0
 8003730:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8003734:	4659      	mov	r1, fp
 8003736:	00cb      	lsls	r3, r1, #3
 8003738:	4651      	mov	r1, sl
 800373a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800373e:	4651      	mov	r1, sl
 8003740:	00ca      	lsls	r2, r1, #3
 8003742:	4610      	mov	r0, r2
 8003744:	4619      	mov	r1, r3
 8003746:	4603      	mov	r3, r0
 8003748:	4642      	mov	r2, r8
 800374a:	189b      	adds	r3, r3, r2
 800374c:	66bb      	str	r3, [r7, #104]	@ 0x68
 800374e:	464b      	mov	r3, r9
 8003750:	460a      	mov	r2, r1
 8003752:	eb42 0303 	adc.w	r3, r2, r3
 8003756:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8003758:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800375c:	685b      	ldr	r3, [r3, #4]
 800375e:	2200      	movs	r2, #0
 8003760:	663b      	str	r3, [r7, #96]	@ 0x60
 8003762:	667a      	str	r2, [r7, #100]	@ 0x64
 8003764:	f04f 0200 	mov.w	r2, #0
 8003768:	f04f 0300 	mov.w	r3, #0
 800376c:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8003770:	4649      	mov	r1, r9
 8003772:	008b      	lsls	r3, r1, #2
 8003774:	4641      	mov	r1, r8
 8003776:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800377a:	4641      	mov	r1, r8
 800377c:	008a      	lsls	r2, r1, #2
 800377e:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 8003782:	f7fc fd7d 	bl	8000280 <__aeabi_uldivmod>
 8003786:	4602      	mov	r2, r0
 8003788:	460b      	mov	r3, r1
 800378a:	4b0d      	ldr	r3, [pc, #52]	@ (80037c0 <UART_SetConfig+0x4e4>)
 800378c:	fba3 1302 	umull	r1, r3, r3, r2
 8003790:	095b      	lsrs	r3, r3, #5
 8003792:	2164      	movs	r1, #100	@ 0x64
 8003794:	fb01 f303 	mul.w	r3, r1, r3
 8003798:	1ad3      	subs	r3, r2, r3
 800379a:	011b      	lsls	r3, r3, #4
 800379c:	3332      	adds	r3, #50	@ 0x32
 800379e:	4a08      	ldr	r2, [pc, #32]	@ (80037c0 <UART_SetConfig+0x4e4>)
 80037a0:	fba2 2303 	umull	r2, r3, r2, r3
 80037a4:	095b      	lsrs	r3, r3, #5
 80037a6:	f003 020f 	and.w	r2, r3, #15
 80037aa:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80037ae:	681b      	ldr	r3, [r3, #0]
 80037b0:	4422      	add	r2, r4
 80037b2:	609a      	str	r2, [r3, #8]
 80037b4:	bf00      	nop
 80037b6:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 80037ba:	46bd      	mov	sp, r7
 80037bc:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80037c0:	51eb851f 	.word	0x51eb851f

080037c4 <siprintf>:
 80037c4:	b40e      	push	{r1, r2, r3}
 80037c6:	b500      	push	{lr}
 80037c8:	b09c      	sub	sp, #112	@ 0x70
 80037ca:	ab1d      	add	r3, sp, #116	@ 0x74
 80037cc:	9002      	str	r0, [sp, #8]
 80037ce:	9006      	str	r0, [sp, #24]
 80037d0:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 80037d4:	4809      	ldr	r0, [pc, #36]	@ (80037fc <siprintf+0x38>)
 80037d6:	9107      	str	r1, [sp, #28]
 80037d8:	9104      	str	r1, [sp, #16]
 80037da:	4909      	ldr	r1, [pc, #36]	@ (8003800 <siprintf+0x3c>)
 80037dc:	f853 2b04 	ldr.w	r2, [r3], #4
 80037e0:	9105      	str	r1, [sp, #20]
 80037e2:	6800      	ldr	r0, [r0, #0]
 80037e4:	9301      	str	r3, [sp, #4]
 80037e6:	a902      	add	r1, sp, #8
 80037e8:	f000 f994 	bl	8003b14 <_svfiprintf_r>
 80037ec:	9b02      	ldr	r3, [sp, #8]
 80037ee:	2200      	movs	r2, #0
 80037f0:	701a      	strb	r2, [r3, #0]
 80037f2:	b01c      	add	sp, #112	@ 0x70
 80037f4:	f85d eb04 	ldr.w	lr, [sp], #4
 80037f8:	b003      	add	sp, #12
 80037fa:	4770      	bx	lr
 80037fc:	2000000c 	.word	0x2000000c
 8003800:	ffff0208 	.word	0xffff0208

08003804 <memset>:
 8003804:	4402      	add	r2, r0
 8003806:	4603      	mov	r3, r0
 8003808:	4293      	cmp	r3, r2
 800380a:	d100      	bne.n	800380e <memset+0xa>
 800380c:	4770      	bx	lr
 800380e:	f803 1b01 	strb.w	r1, [r3], #1
 8003812:	e7f9      	b.n	8003808 <memset+0x4>

08003814 <__errno>:
 8003814:	4b01      	ldr	r3, [pc, #4]	@ (800381c <__errno+0x8>)
 8003816:	6818      	ldr	r0, [r3, #0]
 8003818:	4770      	bx	lr
 800381a:	bf00      	nop
 800381c:	2000000c 	.word	0x2000000c

08003820 <__libc_init_array>:
 8003820:	b570      	push	{r4, r5, r6, lr}
 8003822:	4d0d      	ldr	r5, [pc, #52]	@ (8003858 <__libc_init_array+0x38>)
 8003824:	4c0d      	ldr	r4, [pc, #52]	@ (800385c <__libc_init_array+0x3c>)
 8003826:	1b64      	subs	r4, r4, r5
 8003828:	10a4      	asrs	r4, r4, #2
 800382a:	2600      	movs	r6, #0
 800382c:	42a6      	cmp	r6, r4
 800382e:	d109      	bne.n	8003844 <__libc_init_array+0x24>
 8003830:	4d0b      	ldr	r5, [pc, #44]	@ (8003860 <__libc_init_array+0x40>)
 8003832:	4c0c      	ldr	r4, [pc, #48]	@ (8003864 <__libc_init_array+0x44>)
 8003834:	f000 fc66 	bl	8004104 <_init>
 8003838:	1b64      	subs	r4, r4, r5
 800383a:	10a4      	asrs	r4, r4, #2
 800383c:	2600      	movs	r6, #0
 800383e:	42a6      	cmp	r6, r4
 8003840:	d105      	bne.n	800384e <__libc_init_array+0x2e>
 8003842:	bd70      	pop	{r4, r5, r6, pc}
 8003844:	f855 3b04 	ldr.w	r3, [r5], #4
 8003848:	4798      	blx	r3
 800384a:	3601      	adds	r6, #1
 800384c:	e7ee      	b.n	800382c <__libc_init_array+0xc>
 800384e:	f855 3b04 	ldr.w	r3, [r5], #4
 8003852:	4798      	blx	r3
 8003854:	3601      	adds	r6, #1
 8003856:	e7f2      	b.n	800383e <__libc_init_array+0x1e>
 8003858:	08004390 	.word	0x08004390
 800385c:	08004390 	.word	0x08004390
 8003860:	08004390 	.word	0x08004390
 8003864:	08004394 	.word	0x08004394

08003868 <__retarget_lock_acquire_recursive>:
 8003868:	4770      	bx	lr

0800386a <__retarget_lock_release_recursive>:
 800386a:	4770      	bx	lr

0800386c <_free_r>:
 800386c:	b538      	push	{r3, r4, r5, lr}
 800386e:	4605      	mov	r5, r0
 8003870:	2900      	cmp	r1, #0
 8003872:	d041      	beq.n	80038f8 <_free_r+0x8c>
 8003874:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003878:	1f0c      	subs	r4, r1, #4
 800387a:	2b00      	cmp	r3, #0
 800387c:	bfb8      	it	lt
 800387e:	18e4      	addlt	r4, r4, r3
 8003880:	f000 f8e0 	bl	8003a44 <__malloc_lock>
 8003884:	4a1d      	ldr	r2, [pc, #116]	@ (80038fc <_free_r+0x90>)
 8003886:	6813      	ldr	r3, [r2, #0]
 8003888:	b933      	cbnz	r3, 8003898 <_free_r+0x2c>
 800388a:	6063      	str	r3, [r4, #4]
 800388c:	6014      	str	r4, [r2, #0]
 800388e:	4628      	mov	r0, r5
 8003890:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003894:	f000 b8dc 	b.w	8003a50 <__malloc_unlock>
 8003898:	42a3      	cmp	r3, r4
 800389a:	d908      	bls.n	80038ae <_free_r+0x42>
 800389c:	6820      	ldr	r0, [r4, #0]
 800389e:	1821      	adds	r1, r4, r0
 80038a0:	428b      	cmp	r3, r1
 80038a2:	bf01      	itttt	eq
 80038a4:	6819      	ldreq	r1, [r3, #0]
 80038a6:	685b      	ldreq	r3, [r3, #4]
 80038a8:	1809      	addeq	r1, r1, r0
 80038aa:	6021      	streq	r1, [r4, #0]
 80038ac:	e7ed      	b.n	800388a <_free_r+0x1e>
 80038ae:	461a      	mov	r2, r3
 80038b0:	685b      	ldr	r3, [r3, #4]
 80038b2:	b10b      	cbz	r3, 80038b8 <_free_r+0x4c>
 80038b4:	42a3      	cmp	r3, r4
 80038b6:	d9fa      	bls.n	80038ae <_free_r+0x42>
 80038b8:	6811      	ldr	r1, [r2, #0]
 80038ba:	1850      	adds	r0, r2, r1
 80038bc:	42a0      	cmp	r0, r4
 80038be:	d10b      	bne.n	80038d8 <_free_r+0x6c>
 80038c0:	6820      	ldr	r0, [r4, #0]
 80038c2:	4401      	add	r1, r0
 80038c4:	1850      	adds	r0, r2, r1
 80038c6:	4283      	cmp	r3, r0
 80038c8:	6011      	str	r1, [r2, #0]
 80038ca:	d1e0      	bne.n	800388e <_free_r+0x22>
 80038cc:	6818      	ldr	r0, [r3, #0]
 80038ce:	685b      	ldr	r3, [r3, #4]
 80038d0:	6053      	str	r3, [r2, #4]
 80038d2:	4408      	add	r0, r1
 80038d4:	6010      	str	r0, [r2, #0]
 80038d6:	e7da      	b.n	800388e <_free_r+0x22>
 80038d8:	d902      	bls.n	80038e0 <_free_r+0x74>
 80038da:	230c      	movs	r3, #12
 80038dc:	602b      	str	r3, [r5, #0]
 80038de:	e7d6      	b.n	800388e <_free_r+0x22>
 80038e0:	6820      	ldr	r0, [r4, #0]
 80038e2:	1821      	adds	r1, r4, r0
 80038e4:	428b      	cmp	r3, r1
 80038e6:	bf04      	itt	eq
 80038e8:	6819      	ldreq	r1, [r3, #0]
 80038ea:	685b      	ldreq	r3, [r3, #4]
 80038ec:	6063      	str	r3, [r4, #4]
 80038ee:	bf04      	itt	eq
 80038f0:	1809      	addeq	r1, r1, r0
 80038f2:	6021      	streq	r1, [r4, #0]
 80038f4:	6054      	str	r4, [r2, #4]
 80038f6:	e7ca      	b.n	800388e <_free_r+0x22>
 80038f8:	bd38      	pop	{r3, r4, r5, pc}
 80038fa:	bf00      	nop
 80038fc:	2000039c 	.word	0x2000039c

08003900 <sbrk_aligned>:
 8003900:	b570      	push	{r4, r5, r6, lr}
 8003902:	4e0f      	ldr	r6, [pc, #60]	@ (8003940 <sbrk_aligned+0x40>)
 8003904:	460c      	mov	r4, r1
 8003906:	6831      	ldr	r1, [r6, #0]
 8003908:	4605      	mov	r5, r0
 800390a:	b911      	cbnz	r1, 8003912 <sbrk_aligned+0x12>
 800390c:	f000 fba6 	bl	800405c <_sbrk_r>
 8003910:	6030      	str	r0, [r6, #0]
 8003912:	4621      	mov	r1, r4
 8003914:	4628      	mov	r0, r5
 8003916:	f000 fba1 	bl	800405c <_sbrk_r>
 800391a:	1c43      	adds	r3, r0, #1
 800391c:	d103      	bne.n	8003926 <sbrk_aligned+0x26>
 800391e:	f04f 34ff 	mov.w	r4, #4294967295
 8003922:	4620      	mov	r0, r4
 8003924:	bd70      	pop	{r4, r5, r6, pc}
 8003926:	1cc4      	adds	r4, r0, #3
 8003928:	f024 0403 	bic.w	r4, r4, #3
 800392c:	42a0      	cmp	r0, r4
 800392e:	d0f8      	beq.n	8003922 <sbrk_aligned+0x22>
 8003930:	1a21      	subs	r1, r4, r0
 8003932:	4628      	mov	r0, r5
 8003934:	f000 fb92 	bl	800405c <_sbrk_r>
 8003938:	3001      	adds	r0, #1
 800393a:	d1f2      	bne.n	8003922 <sbrk_aligned+0x22>
 800393c:	e7ef      	b.n	800391e <sbrk_aligned+0x1e>
 800393e:	bf00      	nop
 8003940:	20000398 	.word	0x20000398

08003944 <_malloc_r>:
 8003944:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003948:	1ccd      	adds	r5, r1, #3
 800394a:	f025 0503 	bic.w	r5, r5, #3
 800394e:	3508      	adds	r5, #8
 8003950:	2d0c      	cmp	r5, #12
 8003952:	bf38      	it	cc
 8003954:	250c      	movcc	r5, #12
 8003956:	2d00      	cmp	r5, #0
 8003958:	4606      	mov	r6, r0
 800395a:	db01      	blt.n	8003960 <_malloc_r+0x1c>
 800395c:	42a9      	cmp	r1, r5
 800395e:	d904      	bls.n	800396a <_malloc_r+0x26>
 8003960:	230c      	movs	r3, #12
 8003962:	6033      	str	r3, [r6, #0]
 8003964:	2000      	movs	r0, #0
 8003966:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800396a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8003a40 <_malloc_r+0xfc>
 800396e:	f000 f869 	bl	8003a44 <__malloc_lock>
 8003972:	f8d8 3000 	ldr.w	r3, [r8]
 8003976:	461c      	mov	r4, r3
 8003978:	bb44      	cbnz	r4, 80039cc <_malloc_r+0x88>
 800397a:	4629      	mov	r1, r5
 800397c:	4630      	mov	r0, r6
 800397e:	f7ff ffbf 	bl	8003900 <sbrk_aligned>
 8003982:	1c43      	adds	r3, r0, #1
 8003984:	4604      	mov	r4, r0
 8003986:	d158      	bne.n	8003a3a <_malloc_r+0xf6>
 8003988:	f8d8 4000 	ldr.w	r4, [r8]
 800398c:	4627      	mov	r7, r4
 800398e:	2f00      	cmp	r7, #0
 8003990:	d143      	bne.n	8003a1a <_malloc_r+0xd6>
 8003992:	2c00      	cmp	r4, #0
 8003994:	d04b      	beq.n	8003a2e <_malloc_r+0xea>
 8003996:	6823      	ldr	r3, [r4, #0]
 8003998:	4639      	mov	r1, r7
 800399a:	4630      	mov	r0, r6
 800399c:	eb04 0903 	add.w	r9, r4, r3
 80039a0:	f000 fb5c 	bl	800405c <_sbrk_r>
 80039a4:	4581      	cmp	r9, r0
 80039a6:	d142      	bne.n	8003a2e <_malloc_r+0xea>
 80039a8:	6821      	ldr	r1, [r4, #0]
 80039aa:	1a6d      	subs	r5, r5, r1
 80039ac:	4629      	mov	r1, r5
 80039ae:	4630      	mov	r0, r6
 80039b0:	f7ff ffa6 	bl	8003900 <sbrk_aligned>
 80039b4:	3001      	adds	r0, #1
 80039b6:	d03a      	beq.n	8003a2e <_malloc_r+0xea>
 80039b8:	6823      	ldr	r3, [r4, #0]
 80039ba:	442b      	add	r3, r5
 80039bc:	6023      	str	r3, [r4, #0]
 80039be:	f8d8 3000 	ldr.w	r3, [r8]
 80039c2:	685a      	ldr	r2, [r3, #4]
 80039c4:	bb62      	cbnz	r2, 8003a20 <_malloc_r+0xdc>
 80039c6:	f8c8 7000 	str.w	r7, [r8]
 80039ca:	e00f      	b.n	80039ec <_malloc_r+0xa8>
 80039cc:	6822      	ldr	r2, [r4, #0]
 80039ce:	1b52      	subs	r2, r2, r5
 80039d0:	d420      	bmi.n	8003a14 <_malloc_r+0xd0>
 80039d2:	2a0b      	cmp	r2, #11
 80039d4:	d917      	bls.n	8003a06 <_malloc_r+0xc2>
 80039d6:	1961      	adds	r1, r4, r5
 80039d8:	42a3      	cmp	r3, r4
 80039da:	6025      	str	r5, [r4, #0]
 80039dc:	bf18      	it	ne
 80039de:	6059      	strne	r1, [r3, #4]
 80039e0:	6863      	ldr	r3, [r4, #4]
 80039e2:	bf08      	it	eq
 80039e4:	f8c8 1000 	streq.w	r1, [r8]
 80039e8:	5162      	str	r2, [r4, r5]
 80039ea:	604b      	str	r3, [r1, #4]
 80039ec:	4630      	mov	r0, r6
 80039ee:	f000 f82f 	bl	8003a50 <__malloc_unlock>
 80039f2:	f104 000b 	add.w	r0, r4, #11
 80039f6:	1d23      	adds	r3, r4, #4
 80039f8:	f020 0007 	bic.w	r0, r0, #7
 80039fc:	1ac2      	subs	r2, r0, r3
 80039fe:	bf1c      	itt	ne
 8003a00:	1a1b      	subne	r3, r3, r0
 8003a02:	50a3      	strne	r3, [r4, r2]
 8003a04:	e7af      	b.n	8003966 <_malloc_r+0x22>
 8003a06:	6862      	ldr	r2, [r4, #4]
 8003a08:	42a3      	cmp	r3, r4
 8003a0a:	bf0c      	ite	eq
 8003a0c:	f8c8 2000 	streq.w	r2, [r8]
 8003a10:	605a      	strne	r2, [r3, #4]
 8003a12:	e7eb      	b.n	80039ec <_malloc_r+0xa8>
 8003a14:	4623      	mov	r3, r4
 8003a16:	6864      	ldr	r4, [r4, #4]
 8003a18:	e7ae      	b.n	8003978 <_malloc_r+0x34>
 8003a1a:	463c      	mov	r4, r7
 8003a1c:	687f      	ldr	r7, [r7, #4]
 8003a1e:	e7b6      	b.n	800398e <_malloc_r+0x4a>
 8003a20:	461a      	mov	r2, r3
 8003a22:	685b      	ldr	r3, [r3, #4]
 8003a24:	42a3      	cmp	r3, r4
 8003a26:	d1fb      	bne.n	8003a20 <_malloc_r+0xdc>
 8003a28:	2300      	movs	r3, #0
 8003a2a:	6053      	str	r3, [r2, #4]
 8003a2c:	e7de      	b.n	80039ec <_malloc_r+0xa8>
 8003a2e:	230c      	movs	r3, #12
 8003a30:	6033      	str	r3, [r6, #0]
 8003a32:	4630      	mov	r0, r6
 8003a34:	f000 f80c 	bl	8003a50 <__malloc_unlock>
 8003a38:	e794      	b.n	8003964 <_malloc_r+0x20>
 8003a3a:	6005      	str	r5, [r0, #0]
 8003a3c:	e7d6      	b.n	80039ec <_malloc_r+0xa8>
 8003a3e:	bf00      	nop
 8003a40:	2000039c 	.word	0x2000039c

08003a44 <__malloc_lock>:
 8003a44:	4801      	ldr	r0, [pc, #4]	@ (8003a4c <__malloc_lock+0x8>)
 8003a46:	f7ff bf0f 	b.w	8003868 <__retarget_lock_acquire_recursive>
 8003a4a:	bf00      	nop
 8003a4c:	20000394 	.word	0x20000394

08003a50 <__malloc_unlock>:
 8003a50:	4801      	ldr	r0, [pc, #4]	@ (8003a58 <__malloc_unlock+0x8>)
 8003a52:	f7ff bf0a 	b.w	800386a <__retarget_lock_release_recursive>
 8003a56:	bf00      	nop
 8003a58:	20000394 	.word	0x20000394

08003a5c <__ssputs_r>:
 8003a5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003a60:	688e      	ldr	r6, [r1, #8]
 8003a62:	461f      	mov	r7, r3
 8003a64:	42be      	cmp	r6, r7
 8003a66:	680b      	ldr	r3, [r1, #0]
 8003a68:	4682      	mov	sl, r0
 8003a6a:	460c      	mov	r4, r1
 8003a6c:	4690      	mov	r8, r2
 8003a6e:	d82d      	bhi.n	8003acc <__ssputs_r+0x70>
 8003a70:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003a74:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8003a78:	d026      	beq.n	8003ac8 <__ssputs_r+0x6c>
 8003a7a:	6965      	ldr	r5, [r4, #20]
 8003a7c:	6909      	ldr	r1, [r1, #16]
 8003a7e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003a82:	eba3 0901 	sub.w	r9, r3, r1
 8003a86:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003a8a:	1c7b      	adds	r3, r7, #1
 8003a8c:	444b      	add	r3, r9
 8003a8e:	106d      	asrs	r5, r5, #1
 8003a90:	429d      	cmp	r5, r3
 8003a92:	bf38      	it	cc
 8003a94:	461d      	movcc	r5, r3
 8003a96:	0553      	lsls	r3, r2, #21
 8003a98:	d527      	bpl.n	8003aea <__ssputs_r+0x8e>
 8003a9a:	4629      	mov	r1, r5
 8003a9c:	f7ff ff52 	bl	8003944 <_malloc_r>
 8003aa0:	4606      	mov	r6, r0
 8003aa2:	b360      	cbz	r0, 8003afe <__ssputs_r+0xa2>
 8003aa4:	6921      	ldr	r1, [r4, #16]
 8003aa6:	464a      	mov	r2, r9
 8003aa8:	f000 fae8 	bl	800407c <memcpy>
 8003aac:	89a3      	ldrh	r3, [r4, #12]
 8003aae:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8003ab2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003ab6:	81a3      	strh	r3, [r4, #12]
 8003ab8:	6126      	str	r6, [r4, #16]
 8003aba:	6165      	str	r5, [r4, #20]
 8003abc:	444e      	add	r6, r9
 8003abe:	eba5 0509 	sub.w	r5, r5, r9
 8003ac2:	6026      	str	r6, [r4, #0]
 8003ac4:	60a5      	str	r5, [r4, #8]
 8003ac6:	463e      	mov	r6, r7
 8003ac8:	42be      	cmp	r6, r7
 8003aca:	d900      	bls.n	8003ace <__ssputs_r+0x72>
 8003acc:	463e      	mov	r6, r7
 8003ace:	6820      	ldr	r0, [r4, #0]
 8003ad0:	4632      	mov	r2, r6
 8003ad2:	4641      	mov	r1, r8
 8003ad4:	f000 faa8 	bl	8004028 <memmove>
 8003ad8:	68a3      	ldr	r3, [r4, #8]
 8003ada:	1b9b      	subs	r3, r3, r6
 8003adc:	60a3      	str	r3, [r4, #8]
 8003ade:	6823      	ldr	r3, [r4, #0]
 8003ae0:	4433      	add	r3, r6
 8003ae2:	6023      	str	r3, [r4, #0]
 8003ae4:	2000      	movs	r0, #0
 8003ae6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003aea:	462a      	mov	r2, r5
 8003aec:	f000 fad4 	bl	8004098 <_realloc_r>
 8003af0:	4606      	mov	r6, r0
 8003af2:	2800      	cmp	r0, #0
 8003af4:	d1e0      	bne.n	8003ab8 <__ssputs_r+0x5c>
 8003af6:	6921      	ldr	r1, [r4, #16]
 8003af8:	4650      	mov	r0, sl
 8003afa:	f7ff feb7 	bl	800386c <_free_r>
 8003afe:	230c      	movs	r3, #12
 8003b00:	f8ca 3000 	str.w	r3, [sl]
 8003b04:	89a3      	ldrh	r3, [r4, #12]
 8003b06:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003b0a:	81a3      	strh	r3, [r4, #12]
 8003b0c:	f04f 30ff 	mov.w	r0, #4294967295
 8003b10:	e7e9      	b.n	8003ae6 <__ssputs_r+0x8a>
	...

08003b14 <_svfiprintf_r>:
 8003b14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b18:	4698      	mov	r8, r3
 8003b1a:	898b      	ldrh	r3, [r1, #12]
 8003b1c:	061b      	lsls	r3, r3, #24
 8003b1e:	b09d      	sub	sp, #116	@ 0x74
 8003b20:	4607      	mov	r7, r0
 8003b22:	460d      	mov	r5, r1
 8003b24:	4614      	mov	r4, r2
 8003b26:	d510      	bpl.n	8003b4a <_svfiprintf_r+0x36>
 8003b28:	690b      	ldr	r3, [r1, #16]
 8003b2a:	b973      	cbnz	r3, 8003b4a <_svfiprintf_r+0x36>
 8003b2c:	2140      	movs	r1, #64	@ 0x40
 8003b2e:	f7ff ff09 	bl	8003944 <_malloc_r>
 8003b32:	6028      	str	r0, [r5, #0]
 8003b34:	6128      	str	r0, [r5, #16]
 8003b36:	b930      	cbnz	r0, 8003b46 <_svfiprintf_r+0x32>
 8003b38:	230c      	movs	r3, #12
 8003b3a:	603b      	str	r3, [r7, #0]
 8003b3c:	f04f 30ff 	mov.w	r0, #4294967295
 8003b40:	b01d      	add	sp, #116	@ 0x74
 8003b42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b46:	2340      	movs	r3, #64	@ 0x40
 8003b48:	616b      	str	r3, [r5, #20]
 8003b4a:	2300      	movs	r3, #0
 8003b4c:	9309      	str	r3, [sp, #36]	@ 0x24
 8003b4e:	2320      	movs	r3, #32
 8003b50:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003b54:	f8cd 800c 	str.w	r8, [sp, #12]
 8003b58:	2330      	movs	r3, #48	@ 0x30
 8003b5a:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8003cf8 <_svfiprintf_r+0x1e4>
 8003b5e:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8003b62:	f04f 0901 	mov.w	r9, #1
 8003b66:	4623      	mov	r3, r4
 8003b68:	469a      	mov	sl, r3
 8003b6a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003b6e:	b10a      	cbz	r2, 8003b74 <_svfiprintf_r+0x60>
 8003b70:	2a25      	cmp	r2, #37	@ 0x25
 8003b72:	d1f9      	bne.n	8003b68 <_svfiprintf_r+0x54>
 8003b74:	ebba 0b04 	subs.w	fp, sl, r4
 8003b78:	d00b      	beq.n	8003b92 <_svfiprintf_r+0x7e>
 8003b7a:	465b      	mov	r3, fp
 8003b7c:	4622      	mov	r2, r4
 8003b7e:	4629      	mov	r1, r5
 8003b80:	4638      	mov	r0, r7
 8003b82:	f7ff ff6b 	bl	8003a5c <__ssputs_r>
 8003b86:	3001      	adds	r0, #1
 8003b88:	f000 80a7 	beq.w	8003cda <_svfiprintf_r+0x1c6>
 8003b8c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003b8e:	445a      	add	r2, fp
 8003b90:	9209      	str	r2, [sp, #36]	@ 0x24
 8003b92:	f89a 3000 	ldrb.w	r3, [sl]
 8003b96:	2b00      	cmp	r3, #0
 8003b98:	f000 809f 	beq.w	8003cda <_svfiprintf_r+0x1c6>
 8003b9c:	2300      	movs	r3, #0
 8003b9e:	f04f 32ff 	mov.w	r2, #4294967295
 8003ba2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003ba6:	f10a 0a01 	add.w	sl, sl, #1
 8003baa:	9304      	str	r3, [sp, #16]
 8003bac:	9307      	str	r3, [sp, #28]
 8003bae:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8003bb2:	931a      	str	r3, [sp, #104]	@ 0x68
 8003bb4:	4654      	mov	r4, sl
 8003bb6:	2205      	movs	r2, #5
 8003bb8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003bbc:	484e      	ldr	r0, [pc, #312]	@ (8003cf8 <_svfiprintf_r+0x1e4>)
 8003bbe:	f7fc fb0f 	bl	80001e0 <memchr>
 8003bc2:	9a04      	ldr	r2, [sp, #16]
 8003bc4:	b9d8      	cbnz	r0, 8003bfe <_svfiprintf_r+0xea>
 8003bc6:	06d0      	lsls	r0, r2, #27
 8003bc8:	bf44      	itt	mi
 8003bca:	2320      	movmi	r3, #32
 8003bcc:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003bd0:	0711      	lsls	r1, r2, #28
 8003bd2:	bf44      	itt	mi
 8003bd4:	232b      	movmi	r3, #43	@ 0x2b
 8003bd6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003bda:	f89a 3000 	ldrb.w	r3, [sl]
 8003bde:	2b2a      	cmp	r3, #42	@ 0x2a
 8003be0:	d015      	beq.n	8003c0e <_svfiprintf_r+0xfa>
 8003be2:	9a07      	ldr	r2, [sp, #28]
 8003be4:	4654      	mov	r4, sl
 8003be6:	2000      	movs	r0, #0
 8003be8:	f04f 0c0a 	mov.w	ip, #10
 8003bec:	4621      	mov	r1, r4
 8003bee:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003bf2:	3b30      	subs	r3, #48	@ 0x30
 8003bf4:	2b09      	cmp	r3, #9
 8003bf6:	d94b      	bls.n	8003c90 <_svfiprintf_r+0x17c>
 8003bf8:	b1b0      	cbz	r0, 8003c28 <_svfiprintf_r+0x114>
 8003bfa:	9207      	str	r2, [sp, #28]
 8003bfc:	e014      	b.n	8003c28 <_svfiprintf_r+0x114>
 8003bfe:	eba0 0308 	sub.w	r3, r0, r8
 8003c02:	fa09 f303 	lsl.w	r3, r9, r3
 8003c06:	4313      	orrs	r3, r2
 8003c08:	9304      	str	r3, [sp, #16]
 8003c0a:	46a2      	mov	sl, r4
 8003c0c:	e7d2      	b.n	8003bb4 <_svfiprintf_r+0xa0>
 8003c0e:	9b03      	ldr	r3, [sp, #12]
 8003c10:	1d19      	adds	r1, r3, #4
 8003c12:	681b      	ldr	r3, [r3, #0]
 8003c14:	9103      	str	r1, [sp, #12]
 8003c16:	2b00      	cmp	r3, #0
 8003c18:	bfbb      	ittet	lt
 8003c1a:	425b      	neglt	r3, r3
 8003c1c:	f042 0202 	orrlt.w	r2, r2, #2
 8003c20:	9307      	strge	r3, [sp, #28]
 8003c22:	9307      	strlt	r3, [sp, #28]
 8003c24:	bfb8      	it	lt
 8003c26:	9204      	strlt	r2, [sp, #16]
 8003c28:	7823      	ldrb	r3, [r4, #0]
 8003c2a:	2b2e      	cmp	r3, #46	@ 0x2e
 8003c2c:	d10a      	bne.n	8003c44 <_svfiprintf_r+0x130>
 8003c2e:	7863      	ldrb	r3, [r4, #1]
 8003c30:	2b2a      	cmp	r3, #42	@ 0x2a
 8003c32:	d132      	bne.n	8003c9a <_svfiprintf_r+0x186>
 8003c34:	9b03      	ldr	r3, [sp, #12]
 8003c36:	1d1a      	adds	r2, r3, #4
 8003c38:	681b      	ldr	r3, [r3, #0]
 8003c3a:	9203      	str	r2, [sp, #12]
 8003c3c:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003c40:	3402      	adds	r4, #2
 8003c42:	9305      	str	r3, [sp, #20]
 8003c44:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8003d08 <_svfiprintf_r+0x1f4>
 8003c48:	7821      	ldrb	r1, [r4, #0]
 8003c4a:	2203      	movs	r2, #3
 8003c4c:	4650      	mov	r0, sl
 8003c4e:	f7fc fac7 	bl	80001e0 <memchr>
 8003c52:	b138      	cbz	r0, 8003c64 <_svfiprintf_r+0x150>
 8003c54:	9b04      	ldr	r3, [sp, #16]
 8003c56:	eba0 000a 	sub.w	r0, r0, sl
 8003c5a:	2240      	movs	r2, #64	@ 0x40
 8003c5c:	4082      	lsls	r2, r0
 8003c5e:	4313      	orrs	r3, r2
 8003c60:	3401      	adds	r4, #1
 8003c62:	9304      	str	r3, [sp, #16]
 8003c64:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003c68:	4824      	ldr	r0, [pc, #144]	@ (8003cfc <_svfiprintf_r+0x1e8>)
 8003c6a:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8003c6e:	2206      	movs	r2, #6
 8003c70:	f7fc fab6 	bl	80001e0 <memchr>
 8003c74:	2800      	cmp	r0, #0
 8003c76:	d036      	beq.n	8003ce6 <_svfiprintf_r+0x1d2>
 8003c78:	4b21      	ldr	r3, [pc, #132]	@ (8003d00 <_svfiprintf_r+0x1ec>)
 8003c7a:	bb1b      	cbnz	r3, 8003cc4 <_svfiprintf_r+0x1b0>
 8003c7c:	9b03      	ldr	r3, [sp, #12]
 8003c7e:	3307      	adds	r3, #7
 8003c80:	f023 0307 	bic.w	r3, r3, #7
 8003c84:	3308      	adds	r3, #8
 8003c86:	9303      	str	r3, [sp, #12]
 8003c88:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003c8a:	4433      	add	r3, r6
 8003c8c:	9309      	str	r3, [sp, #36]	@ 0x24
 8003c8e:	e76a      	b.n	8003b66 <_svfiprintf_r+0x52>
 8003c90:	fb0c 3202 	mla	r2, ip, r2, r3
 8003c94:	460c      	mov	r4, r1
 8003c96:	2001      	movs	r0, #1
 8003c98:	e7a8      	b.n	8003bec <_svfiprintf_r+0xd8>
 8003c9a:	2300      	movs	r3, #0
 8003c9c:	3401      	adds	r4, #1
 8003c9e:	9305      	str	r3, [sp, #20]
 8003ca0:	4619      	mov	r1, r3
 8003ca2:	f04f 0c0a 	mov.w	ip, #10
 8003ca6:	4620      	mov	r0, r4
 8003ca8:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003cac:	3a30      	subs	r2, #48	@ 0x30
 8003cae:	2a09      	cmp	r2, #9
 8003cb0:	d903      	bls.n	8003cba <_svfiprintf_r+0x1a6>
 8003cb2:	2b00      	cmp	r3, #0
 8003cb4:	d0c6      	beq.n	8003c44 <_svfiprintf_r+0x130>
 8003cb6:	9105      	str	r1, [sp, #20]
 8003cb8:	e7c4      	b.n	8003c44 <_svfiprintf_r+0x130>
 8003cba:	fb0c 2101 	mla	r1, ip, r1, r2
 8003cbe:	4604      	mov	r4, r0
 8003cc0:	2301      	movs	r3, #1
 8003cc2:	e7f0      	b.n	8003ca6 <_svfiprintf_r+0x192>
 8003cc4:	ab03      	add	r3, sp, #12
 8003cc6:	9300      	str	r3, [sp, #0]
 8003cc8:	462a      	mov	r2, r5
 8003cca:	4b0e      	ldr	r3, [pc, #56]	@ (8003d04 <_svfiprintf_r+0x1f0>)
 8003ccc:	a904      	add	r1, sp, #16
 8003cce:	4638      	mov	r0, r7
 8003cd0:	f3af 8000 	nop.w
 8003cd4:	1c42      	adds	r2, r0, #1
 8003cd6:	4606      	mov	r6, r0
 8003cd8:	d1d6      	bne.n	8003c88 <_svfiprintf_r+0x174>
 8003cda:	89ab      	ldrh	r3, [r5, #12]
 8003cdc:	065b      	lsls	r3, r3, #25
 8003cde:	f53f af2d 	bmi.w	8003b3c <_svfiprintf_r+0x28>
 8003ce2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003ce4:	e72c      	b.n	8003b40 <_svfiprintf_r+0x2c>
 8003ce6:	ab03      	add	r3, sp, #12
 8003ce8:	9300      	str	r3, [sp, #0]
 8003cea:	462a      	mov	r2, r5
 8003cec:	4b05      	ldr	r3, [pc, #20]	@ (8003d04 <_svfiprintf_r+0x1f0>)
 8003cee:	a904      	add	r1, sp, #16
 8003cf0:	4638      	mov	r0, r7
 8003cf2:	f000 f879 	bl	8003de8 <_printf_i>
 8003cf6:	e7ed      	b.n	8003cd4 <_svfiprintf_r+0x1c0>
 8003cf8:	08004354 	.word	0x08004354
 8003cfc:	0800435e 	.word	0x0800435e
 8003d00:	00000000 	.word	0x00000000
 8003d04:	08003a5d 	.word	0x08003a5d
 8003d08:	0800435a 	.word	0x0800435a

08003d0c <_printf_common>:
 8003d0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003d10:	4616      	mov	r6, r2
 8003d12:	4698      	mov	r8, r3
 8003d14:	688a      	ldr	r2, [r1, #8]
 8003d16:	690b      	ldr	r3, [r1, #16]
 8003d18:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8003d1c:	4293      	cmp	r3, r2
 8003d1e:	bfb8      	it	lt
 8003d20:	4613      	movlt	r3, r2
 8003d22:	6033      	str	r3, [r6, #0]
 8003d24:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8003d28:	4607      	mov	r7, r0
 8003d2a:	460c      	mov	r4, r1
 8003d2c:	b10a      	cbz	r2, 8003d32 <_printf_common+0x26>
 8003d2e:	3301      	adds	r3, #1
 8003d30:	6033      	str	r3, [r6, #0]
 8003d32:	6823      	ldr	r3, [r4, #0]
 8003d34:	0699      	lsls	r1, r3, #26
 8003d36:	bf42      	ittt	mi
 8003d38:	6833      	ldrmi	r3, [r6, #0]
 8003d3a:	3302      	addmi	r3, #2
 8003d3c:	6033      	strmi	r3, [r6, #0]
 8003d3e:	6825      	ldr	r5, [r4, #0]
 8003d40:	f015 0506 	ands.w	r5, r5, #6
 8003d44:	d106      	bne.n	8003d54 <_printf_common+0x48>
 8003d46:	f104 0a19 	add.w	sl, r4, #25
 8003d4a:	68e3      	ldr	r3, [r4, #12]
 8003d4c:	6832      	ldr	r2, [r6, #0]
 8003d4e:	1a9b      	subs	r3, r3, r2
 8003d50:	42ab      	cmp	r3, r5
 8003d52:	dc26      	bgt.n	8003da2 <_printf_common+0x96>
 8003d54:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8003d58:	6822      	ldr	r2, [r4, #0]
 8003d5a:	3b00      	subs	r3, #0
 8003d5c:	bf18      	it	ne
 8003d5e:	2301      	movne	r3, #1
 8003d60:	0692      	lsls	r2, r2, #26
 8003d62:	d42b      	bmi.n	8003dbc <_printf_common+0xb0>
 8003d64:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8003d68:	4641      	mov	r1, r8
 8003d6a:	4638      	mov	r0, r7
 8003d6c:	47c8      	blx	r9
 8003d6e:	3001      	adds	r0, #1
 8003d70:	d01e      	beq.n	8003db0 <_printf_common+0xa4>
 8003d72:	6823      	ldr	r3, [r4, #0]
 8003d74:	6922      	ldr	r2, [r4, #16]
 8003d76:	f003 0306 	and.w	r3, r3, #6
 8003d7a:	2b04      	cmp	r3, #4
 8003d7c:	bf02      	ittt	eq
 8003d7e:	68e5      	ldreq	r5, [r4, #12]
 8003d80:	6833      	ldreq	r3, [r6, #0]
 8003d82:	1aed      	subeq	r5, r5, r3
 8003d84:	68a3      	ldr	r3, [r4, #8]
 8003d86:	bf0c      	ite	eq
 8003d88:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8003d8c:	2500      	movne	r5, #0
 8003d8e:	4293      	cmp	r3, r2
 8003d90:	bfc4      	itt	gt
 8003d92:	1a9b      	subgt	r3, r3, r2
 8003d94:	18ed      	addgt	r5, r5, r3
 8003d96:	2600      	movs	r6, #0
 8003d98:	341a      	adds	r4, #26
 8003d9a:	42b5      	cmp	r5, r6
 8003d9c:	d11a      	bne.n	8003dd4 <_printf_common+0xc8>
 8003d9e:	2000      	movs	r0, #0
 8003da0:	e008      	b.n	8003db4 <_printf_common+0xa8>
 8003da2:	2301      	movs	r3, #1
 8003da4:	4652      	mov	r2, sl
 8003da6:	4641      	mov	r1, r8
 8003da8:	4638      	mov	r0, r7
 8003daa:	47c8      	blx	r9
 8003dac:	3001      	adds	r0, #1
 8003dae:	d103      	bne.n	8003db8 <_printf_common+0xac>
 8003db0:	f04f 30ff 	mov.w	r0, #4294967295
 8003db4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003db8:	3501      	adds	r5, #1
 8003dba:	e7c6      	b.n	8003d4a <_printf_common+0x3e>
 8003dbc:	18e1      	adds	r1, r4, r3
 8003dbe:	1c5a      	adds	r2, r3, #1
 8003dc0:	2030      	movs	r0, #48	@ 0x30
 8003dc2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8003dc6:	4422      	add	r2, r4
 8003dc8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8003dcc:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8003dd0:	3302      	adds	r3, #2
 8003dd2:	e7c7      	b.n	8003d64 <_printf_common+0x58>
 8003dd4:	2301      	movs	r3, #1
 8003dd6:	4622      	mov	r2, r4
 8003dd8:	4641      	mov	r1, r8
 8003dda:	4638      	mov	r0, r7
 8003ddc:	47c8      	blx	r9
 8003dde:	3001      	adds	r0, #1
 8003de0:	d0e6      	beq.n	8003db0 <_printf_common+0xa4>
 8003de2:	3601      	adds	r6, #1
 8003de4:	e7d9      	b.n	8003d9a <_printf_common+0x8e>
	...

08003de8 <_printf_i>:
 8003de8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003dec:	7e0f      	ldrb	r7, [r1, #24]
 8003dee:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8003df0:	2f78      	cmp	r7, #120	@ 0x78
 8003df2:	4691      	mov	r9, r2
 8003df4:	4680      	mov	r8, r0
 8003df6:	460c      	mov	r4, r1
 8003df8:	469a      	mov	sl, r3
 8003dfa:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8003dfe:	d807      	bhi.n	8003e10 <_printf_i+0x28>
 8003e00:	2f62      	cmp	r7, #98	@ 0x62
 8003e02:	d80a      	bhi.n	8003e1a <_printf_i+0x32>
 8003e04:	2f00      	cmp	r7, #0
 8003e06:	f000 80d2 	beq.w	8003fae <_printf_i+0x1c6>
 8003e0a:	2f58      	cmp	r7, #88	@ 0x58
 8003e0c:	f000 80b9 	beq.w	8003f82 <_printf_i+0x19a>
 8003e10:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8003e14:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8003e18:	e03a      	b.n	8003e90 <_printf_i+0xa8>
 8003e1a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8003e1e:	2b15      	cmp	r3, #21
 8003e20:	d8f6      	bhi.n	8003e10 <_printf_i+0x28>
 8003e22:	a101      	add	r1, pc, #4	@ (adr r1, 8003e28 <_printf_i+0x40>)
 8003e24:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8003e28:	08003e81 	.word	0x08003e81
 8003e2c:	08003e95 	.word	0x08003e95
 8003e30:	08003e11 	.word	0x08003e11
 8003e34:	08003e11 	.word	0x08003e11
 8003e38:	08003e11 	.word	0x08003e11
 8003e3c:	08003e11 	.word	0x08003e11
 8003e40:	08003e95 	.word	0x08003e95
 8003e44:	08003e11 	.word	0x08003e11
 8003e48:	08003e11 	.word	0x08003e11
 8003e4c:	08003e11 	.word	0x08003e11
 8003e50:	08003e11 	.word	0x08003e11
 8003e54:	08003f95 	.word	0x08003f95
 8003e58:	08003ebf 	.word	0x08003ebf
 8003e5c:	08003f4f 	.word	0x08003f4f
 8003e60:	08003e11 	.word	0x08003e11
 8003e64:	08003e11 	.word	0x08003e11
 8003e68:	08003fb7 	.word	0x08003fb7
 8003e6c:	08003e11 	.word	0x08003e11
 8003e70:	08003ebf 	.word	0x08003ebf
 8003e74:	08003e11 	.word	0x08003e11
 8003e78:	08003e11 	.word	0x08003e11
 8003e7c:	08003f57 	.word	0x08003f57
 8003e80:	6833      	ldr	r3, [r6, #0]
 8003e82:	1d1a      	adds	r2, r3, #4
 8003e84:	681b      	ldr	r3, [r3, #0]
 8003e86:	6032      	str	r2, [r6, #0]
 8003e88:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8003e8c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8003e90:	2301      	movs	r3, #1
 8003e92:	e09d      	b.n	8003fd0 <_printf_i+0x1e8>
 8003e94:	6833      	ldr	r3, [r6, #0]
 8003e96:	6820      	ldr	r0, [r4, #0]
 8003e98:	1d19      	adds	r1, r3, #4
 8003e9a:	6031      	str	r1, [r6, #0]
 8003e9c:	0606      	lsls	r6, r0, #24
 8003e9e:	d501      	bpl.n	8003ea4 <_printf_i+0xbc>
 8003ea0:	681d      	ldr	r5, [r3, #0]
 8003ea2:	e003      	b.n	8003eac <_printf_i+0xc4>
 8003ea4:	0645      	lsls	r5, r0, #25
 8003ea6:	d5fb      	bpl.n	8003ea0 <_printf_i+0xb8>
 8003ea8:	f9b3 5000 	ldrsh.w	r5, [r3]
 8003eac:	2d00      	cmp	r5, #0
 8003eae:	da03      	bge.n	8003eb8 <_printf_i+0xd0>
 8003eb0:	232d      	movs	r3, #45	@ 0x2d
 8003eb2:	426d      	negs	r5, r5
 8003eb4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8003eb8:	4859      	ldr	r0, [pc, #356]	@ (8004020 <_printf_i+0x238>)
 8003eba:	230a      	movs	r3, #10
 8003ebc:	e011      	b.n	8003ee2 <_printf_i+0xfa>
 8003ebe:	6821      	ldr	r1, [r4, #0]
 8003ec0:	6833      	ldr	r3, [r6, #0]
 8003ec2:	0608      	lsls	r0, r1, #24
 8003ec4:	f853 5b04 	ldr.w	r5, [r3], #4
 8003ec8:	d402      	bmi.n	8003ed0 <_printf_i+0xe8>
 8003eca:	0649      	lsls	r1, r1, #25
 8003ecc:	bf48      	it	mi
 8003ece:	b2ad      	uxthmi	r5, r5
 8003ed0:	2f6f      	cmp	r7, #111	@ 0x6f
 8003ed2:	4853      	ldr	r0, [pc, #332]	@ (8004020 <_printf_i+0x238>)
 8003ed4:	6033      	str	r3, [r6, #0]
 8003ed6:	bf14      	ite	ne
 8003ed8:	230a      	movne	r3, #10
 8003eda:	2308      	moveq	r3, #8
 8003edc:	2100      	movs	r1, #0
 8003ede:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8003ee2:	6866      	ldr	r6, [r4, #4]
 8003ee4:	60a6      	str	r6, [r4, #8]
 8003ee6:	2e00      	cmp	r6, #0
 8003ee8:	bfa2      	ittt	ge
 8003eea:	6821      	ldrge	r1, [r4, #0]
 8003eec:	f021 0104 	bicge.w	r1, r1, #4
 8003ef0:	6021      	strge	r1, [r4, #0]
 8003ef2:	b90d      	cbnz	r5, 8003ef8 <_printf_i+0x110>
 8003ef4:	2e00      	cmp	r6, #0
 8003ef6:	d04b      	beq.n	8003f90 <_printf_i+0x1a8>
 8003ef8:	4616      	mov	r6, r2
 8003efa:	fbb5 f1f3 	udiv	r1, r5, r3
 8003efe:	fb03 5711 	mls	r7, r3, r1, r5
 8003f02:	5dc7      	ldrb	r7, [r0, r7]
 8003f04:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8003f08:	462f      	mov	r7, r5
 8003f0a:	42bb      	cmp	r3, r7
 8003f0c:	460d      	mov	r5, r1
 8003f0e:	d9f4      	bls.n	8003efa <_printf_i+0x112>
 8003f10:	2b08      	cmp	r3, #8
 8003f12:	d10b      	bne.n	8003f2c <_printf_i+0x144>
 8003f14:	6823      	ldr	r3, [r4, #0]
 8003f16:	07df      	lsls	r7, r3, #31
 8003f18:	d508      	bpl.n	8003f2c <_printf_i+0x144>
 8003f1a:	6923      	ldr	r3, [r4, #16]
 8003f1c:	6861      	ldr	r1, [r4, #4]
 8003f1e:	4299      	cmp	r1, r3
 8003f20:	bfde      	ittt	le
 8003f22:	2330      	movle	r3, #48	@ 0x30
 8003f24:	f806 3c01 	strble.w	r3, [r6, #-1]
 8003f28:	f106 36ff 	addle.w	r6, r6, #4294967295
 8003f2c:	1b92      	subs	r2, r2, r6
 8003f2e:	6122      	str	r2, [r4, #16]
 8003f30:	f8cd a000 	str.w	sl, [sp]
 8003f34:	464b      	mov	r3, r9
 8003f36:	aa03      	add	r2, sp, #12
 8003f38:	4621      	mov	r1, r4
 8003f3a:	4640      	mov	r0, r8
 8003f3c:	f7ff fee6 	bl	8003d0c <_printf_common>
 8003f40:	3001      	adds	r0, #1
 8003f42:	d14a      	bne.n	8003fda <_printf_i+0x1f2>
 8003f44:	f04f 30ff 	mov.w	r0, #4294967295
 8003f48:	b004      	add	sp, #16
 8003f4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003f4e:	6823      	ldr	r3, [r4, #0]
 8003f50:	f043 0320 	orr.w	r3, r3, #32
 8003f54:	6023      	str	r3, [r4, #0]
 8003f56:	4833      	ldr	r0, [pc, #204]	@ (8004024 <_printf_i+0x23c>)
 8003f58:	2778      	movs	r7, #120	@ 0x78
 8003f5a:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8003f5e:	6823      	ldr	r3, [r4, #0]
 8003f60:	6831      	ldr	r1, [r6, #0]
 8003f62:	061f      	lsls	r7, r3, #24
 8003f64:	f851 5b04 	ldr.w	r5, [r1], #4
 8003f68:	d402      	bmi.n	8003f70 <_printf_i+0x188>
 8003f6a:	065f      	lsls	r7, r3, #25
 8003f6c:	bf48      	it	mi
 8003f6e:	b2ad      	uxthmi	r5, r5
 8003f70:	6031      	str	r1, [r6, #0]
 8003f72:	07d9      	lsls	r1, r3, #31
 8003f74:	bf44      	itt	mi
 8003f76:	f043 0320 	orrmi.w	r3, r3, #32
 8003f7a:	6023      	strmi	r3, [r4, #0]
 8003f7c:	b11d      	cbz	r5, 8003f86 <_printf_i+0x19e>
 8003f7e:	2310      	movs	r3, #16
 8003f80:	e7ac      	b.n	8003edc <_printf_i+0xf4>
 8003f82:	4827      	ldr	r0, [pc, #156]	@ (8004020 <_printf_i+0x238>)
 8003f84:	e7e9      	b.n	8003f5a <_printf_i+0x172>
 8003f86:	6823      	ldr	r3, [r4, #0]
 8003f88:	f023 0320 	bic.w	r3, r3, #32
 8003f8c:	6023      	str	r3, [r4, #0]
 8003f8e:	e7f6      	b.n	8003f7e <_printf_i+0x196>
 8003f90:	4616      	mov	r6, r2
 8003f92:	e7bd      	b.n	8003f10 <_printf_i+0x128>
 8003f94:	6833      	ldr	r3, [r6, #0]
 8003f96:	6825      	ldr	r5, [r4, #0]
 8003f98:	6961      	ldr	r1, [r4, #20]
 8003f9a:	1d18      	adds	r0, r3, #4
 8003f9c:	6030      	str	r0, [r6, #0]
 8003f9e:	062e      	lsls	r6, r5, #24
 8003fa0:	681b      	ldr	r3, [r3, #0]
 8003fa2:	d501      	bpl.n	8003fa8 <_printf_i+0x1c0>
 8003fa4:	6019      	str	r1, [r3, #0]
 8003fa6:	e002      	b.n	8003fae <_printf_i+0x1c6>
 8003fa8:	0668      	lsls	r0, r5, #25
 8003faa:	d5fb      	bpl.n	8003fa4 <_printf_i+0x1bc>
 8003fac:	8019      	strh	r1, [r3, #0]
 8003fae:	2300      	movs	r3, #0
 8003fb0:	6123      	str	r3, [r4, #16]
 8003fb2:	4616      	mov	r6, r2
 8003fb4:	e7bc      	b.n	8003f30 <_printf_i+0x148>
 8003fb6:	6833      	ldr	r3, [r6, #0]
 8003fb8:	1d1a      	adds	r2, r3, #4
 8003fba:	6032      	str	r2, [r6, #0]
 8003fbc:	681e      	ldr	r6, [r3, #0]
 8003fbe:	6862      	ldr	r2, [r4, #4]
 8003fc0:	2100      	movs	r1, #0
 8003fc2:	4630      	mov	r0, r6
 8003fc4:	f7fc f90c 	bl	80001e0 <memchr>
 8003fc8:	b108      	cbz	r0, 8003fce <_printf_i+0x1e6>
 8003fca:	1b80      	subs	r0, r0, r6
 8003fcc:	6060      	str	r0, [r4, #4]
 8003fce:	6863      	ldr	r3, [r4, #4]
 8003fd0:	6123      	str	r3, [r4, #16]
 8003fd2:	2300      	movs	r3, #0
 8003fd4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8003fd8:	e7aa      	b.n	8003f30 <_printf_i+0x148>
 8003fda:	6923      	ldr	r3, [r4, #16]
 8003fdc:	4632      	mov	r2, r6
 8003fde:	4649      	mov	r1, r9
 8003fe0:	4640      	mov	r0, r8
 8003fe2:	47d0      	blx	sl
 8003fe4:	3001      	adds	r0, #1
 8003fe6:	d0ad      	beq.n	8003f44 <_printf_i+0x15c>
 8003fe8:	6823      	ldr	r3, [r4, #0]
 8003fea:	079b      	lsls	r3, r3, #30
 8003fec:	d413      	bmi.n	8004016 <_printf_i+0x22e>
 8003fee:	68e0      	ldr	r0, [r4, #12]
 8003ff0:	9b03      	ldr	r3, [sp, #12]
 8003ff2:	4298      	cmp	r0, r3
 8003ff4:	bfb8      	it	lt
 8003ff6:	4618      	movlt	r0, r3
 8003ff8:	e7a6      	b.n	8003f48 <_printf_i+0x160>
 8003ffa:	2301      	movs	r3, #1
 8003ffc:	4632      	mov	r2, r6
 8003ffe:	4649      	mov	r1, r9
 8004000:	4640      	mov	r0, r8
 8004002:	47d0      	blx	sl
 8004004:	3001      	adds	r0, #1
 8004006:	d09d      	beq.n	8003f44 <_printf_i+0x15c>
 8004008:	3501      	adds	r5, #1
 800400a:	68e3      	ldr	r3, [r4, #12]
 800400c:	9903      	ldr	r1, [sp, #12]
 800400e:	1a5b      	subs	r3, r3, r1
 8004010:	42ab      	cmp	r3, r5
 8004012:	dcf2      	bgt.n	8003ffa <_printf_i+0x212>
 8004014:	e7eb      	b.n	8003fee <_printf_i+0x206>
 8004016:	2500      	movs	r5, #0
 8004018:	f104 0619 	add.w	r6, r4, #25
 800401c:	e7f5      	b.n	800400a <_printf_i+0x222>
 800401e:	bf00      	nop
 8004020:	08004365 	.word	0x08004365
 8004024:	08004376 	.word	0x08004376

08004028 <memmove>:
 8004028:	4288      	cmp	r0, r1
 800402a:	b510      	push	{r4, lr}
 800402c:	eb01 0402 	add.w	r4, r1, r2
 8004030:	d902      	bls.n	8004038 <memmove+0x10>
 8004032:	4284      	cmp	r4, r0
 8004034:	4623      	mov	r3, r4
 8004036:	d807      	bhi.n	8004048 <memmove+0x20>
 8004038:	1e43      	subs	r3, r0, #1
 800403a:	42a1      	cmp	r1, r4
 800403c:	d008      	beq.n	8004050 <memmove+0x28>
 800403e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004042:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004046:	e7f8      	b.n	800403a <memmove+0x12>
 8004048:	4402      	add	r2, r0
 800404a:	4601      	mov	r1, r0
 800404c:	428a      	cmp	r2, r1
 800404e:	d100      	bne.n	8004052 <memmove+0x2a>
 8004050:	bd10      	pop	{r4, pc}
 8004052:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004056:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800405a:	e7f7      	b.n	800404c <memmove+0x24>

0800405c <_sbrk_r>:
 800405c:	b538      	push	{r3, r4, r5, lr}
 800405e:	4d06      	ldr	r5, [pc, #24]	@ (8004078 <_sbrk_r+0x1c>)
 8004060:	2300      	movs	r3, #0
 8004062:	4604      	mov	r4, r0
 8004064:	4608      	mov	r0, r1
 8004066:	602b      	str	r3, [r5, #0]
 8004068:	f7fc fe6e 	bl	8000d48 <_sbrk>
 800406c:	1c43      	adds	r3, r0, #1
 800406e:	d102      	bne.n	8004076 <_sbrk_r+0x1a>
 8004070:	682b      	ldr	r3, [r5, #0]
 8004072:	b103      	cbz	r3, 8004076 <_sbrk_r+0x1a>
 8004074:	6023      	str	r3, [r4, #0]
 8004076:	bd38      	pop	{r3, r4, r5, pc}
 8004078:	20000390 	.word	0x20000390

0800407c <memcpy>:
 800407c:	440a      	add	r2, r1
 800407e:	4291      	cmp	r1, r2
 8004080:	f100 33ff 	add.w	r3, r0, #4294967295
 8004084:	d100      	bne.n	8004088 <memcpy+0xc>
 8004086:	4770      	bx	lr
 8004088:	b510      	push	{r4, lr}
 800408a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800408e:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004092:	4291      	cmp	r1, r2
 8004094:	d1f9      	bne.n	800408a <memcpy+0xe>
 8004096:	bd10      	pop	{r4, pc}

08004098 <_realloc_r>:
 8004098:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800409c:	4680      	mov	r8, r0
 800409e:	4615      	mov	r5, r2
 80040a0:	460c      	mov	r4, r1
 80040a2:	b921      	cbnz	r1, 80040ae <_realloc_r+0x16>
 80040a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80040a8:	4611      	mov	r1, r2
 80040aa:	f7ff bc4b 	b.w	8003944 <_malloc_r>
 80040ae:	b92a      	cbnz	r2, 80040bc <_realloc_r+0x24>
 80040b0:	f7ff fbdc 	bl	800386c <_free_r>
 80040b4:	2400      	movs	r4, #0
 80040b6:	4620      	mov	r0, r4
 80040b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80040bc:	f000 f81a 	bl	80040f4 <_malloc_usable_size_r>
 80040c0:	4285      	cmp	r5, r0
 80040c2:	4606      	mov	r6, r0
 80040c4:	d802      	bhi.n	80040cc <_realloc_r+0x34>
 80040c6:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 80040ca:	d8f4      	bhi.n	80040b6 <_realloc_r+0x1e>
 80040cc:	4629      	mov	r1, r5
 80040ce:	4640      	mov	r0, r8
 80040d0:	f7ff fc38 	bl	8003944 <_malloc_r>
 80040d4:	4607      	mov	r7, r0
 80040d6:	2800      	cmp	r0, #0
 80040d8:	d0ec      	beq.n	80040b4 <_realloc_r+0x1c>
 80040da:	42b5      	cmp	r5, r6
 80040dc:	462a      	mov	r2, r5
 80040de:	4621      	mov	r1, r4
 80040e0:	bf28      	it	cs
 80040e2:	4632      	movcs	r2, r6
 80040e4:	f7ff ffca 	bl	800407c <memcpy>
 80040e8:	4621      	mov	r1, r4
 80040ea:	4640      	mov	r0, r8
 80040ec:	f7ff fbbe 	bl	800386c <_free_r>
 80040f0:	463c      	mov	r4, r7
 80040f2:	e7e0      	b.n	80040b6 <_realloc_r+0x1e>

080040f4 <_malloc_usable_size_r>:
 80040f4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80040f8:	1f18      	subs	r0, r3, #4
 80040fa:	2b00      	cmp	r3, #0
 80040fc:	bfbc      	itt	lt
 80040fe:	580b      	ldrlt	r3, [r1, r0]
 8004100:	18c0      	addlt	r0, r0, r3
 8004102:	4770      	bx	lr

08004104 <_init>:
 8004104:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004106:	bf00      	nop
 8004108:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800410a:	bc08      	pop	{r3}
 800410c:	469e      	mov	lr, r3
 800410e:	4770      	bx	lr

08004110 <_fini>:
 8004110:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004112:	bf00      	nop
 8004114:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004116:	bc08      	pop	{r3}
 8004118:	469e      	mov	lr, r3
 800411a:	4770      	bx	lr
