
Capstone.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004d14  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000090  08004eb4  08004eb4  00005eb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004f44  08004f44  00006060  2**0
                  CONTENTS
  4 .ARM          00000008  08004f44  08004f44  00005f44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004f4c  08004f4c  00006060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004f4c  08004f4c  00005f4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004f50  08004f50  00005f50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000060  20000000  08004f54  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000338  20000060  08004fb4  00006060  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000398  08004fb4  00006398  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00006060  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000d2c5  00000000  00000000  00006090  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000244a  00000000  00000000  00013355  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000b50  00000000  00000000  000157a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000008b7  00000000  00000000  000162f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00017abb  00000000  00000000  00016ba7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00011940  00000000  00000000  0002e662  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00088d0f  00000000  00000000  0003ffa2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000c8cb1  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000323c  00000000  00000000  000c8cf4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000064  00000000  00000000  000cbf30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000060 	.word	0x20000060
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08004e9c 	.word	0x08004e9c

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000064 	.word	0x20000064
 80001dc:	08004e9c 	.word	0x08004e9c

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_uldivmod>:
 8000280:	b953      	cbnz	r3, 8000298 <__aeabi_uldivmod+0x18>
 8000282:	b94a      	cbnz	r2, 8000298 <__aeabi_uldivmod+0x18>
 8000284:	2900      	cmp	r1, #0
 8000286:	bf08      	it	eq
 8000288:	2800      	cmpeq	r0, #0
 800028a:	bf1c      	itt	ne
 800028c:	f04f 31ff 	movne.w	r1, #4294967295
 8000290:	f04f 30ff 	movne.w	r0, #4294967295
 8000294:	f000 b96a 	b.w	800056c <__aeabi_idiv0>
 8000298:	f1ad 0c08 	sub.w	ip, sp, #8
 800029c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002a0:	f000 f806 	bl	80002b0 <__udivmoddi4>
 80002a4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002a8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ac:	b004      	add	sp, #16
 80002ae:	4770      	bx	lr

080002b0 <__udivmoddi4>:
 80002b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002b4:	9d08      	ldr	r5, [sp, #32]
 80002b6:	460c      	mov	r4, r1
 80002b8:	2b00      	cmp	r3, #0
 80002ba:	d14e      	bne.n	800035a <__udivmoddi4+0xaa>
 80002bc:	4694      	mov	ip, r2
 80002be:	458c      	cmp	ip, r1
 80002c0:	4686      	mov	lr, r0
 80002c2:	fab2 f282 	clz	r2, r2
 80002c6:	d962      	bls.n	800038e <__udivmoddi4+0xde>
 80002c8:	b14a      	cbz	r2, 80002de <__udivmoddi4+0x2e>
 80002ca:	f1c2 0320 	rsb	r3, r2, #32
 80002ce:	4091      	lsls	r1, r2
 80002d0:	fa20 f303 	lsr.w	r3, r0, r3
 80002d4:	fa0c fc02 	lsl.w	ip, ip, r2
 80002d8:	4319      	orrs	r1, r3
 80002da:	fa00 fe02 	lsl.w	lr, r0, r2
 80002de:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80002e2:	fa1f f68c 	uxth.w	r6, ip
 80002e6:	fbb1 f4f7 	udiv	r4, r1, r7
 80002ea:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80002ee:	fb07 1114 	mls	r1, r7, r4, r1
 80002f2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80002f6:	fb04 f106 	mul.w	r1, r4, r6
 80002fa:	4299      	cmp	r1, r3
 80002fc:	d90a      	bls.n	8000314 <__udivmoddi4+0x64>
 80002fe:	eb1c 0303 	adds.w	r3, ip, r3
 8000302:	f104 30ff 	add.w	r0, r4, #4294967295
 8000306:	f080 8112 	bcs.w	800052e <__udivmoddi4+0x27e>
 800030a:	4299      	cmp	r1, r3
 800030c:	f240 810f 	bls.w	800052e <__udivmoddi4+0x27e>
 8000310:	3c02      	subs	r4, #2
 8000312:	4463      	add	r3, ip
 8000314:	1a59      	subs	r1, r3, r1
 8000316:	fa1f f38e 	uxth.w	r3, lr
 800031a:	fbb1 f0f7 	udiv	r0, r1, r7
 800031e:	fb07 1110 	mls	r1, r7, r0, r1
 8000322:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000326:	fb00 f606 	mul.w	r6, r0, r6
 800032a:	429e      	cmp	r6, r3
 800032c:	d90a      	bls.n	8000344 <__udivmoddi4+0x94>
 800032e:	eb1c 0303 	adds.w	r3, ip, r3
 8000332:	f100 31ff 	add.w	r1, r0, #4294967295
 8000336:	f080 80fc 	bcs.w	8000532 <__udivmoddi4+0x282>
 800033a:	429e      	cmp	r6, r3
 800033c:	f240 80f9 	bls.w	8000532 <__udivmoddi4+0x282>
 8000340:	4463      	add	r3, ip
 8000342:	3802      	subs	r0, #2
 8000344:	1b9b      	subs	r3, r3, r6
 8000346:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800034a:	2100      	movs	r1, #0
 800034c:	b11d      	cbz	r5, 8000356 <__udivmoddi4+0xa6>
 800034e:	40d3      	lsrs	r3, r2
 8000350:	2200      	movs	r2, #0
 8000352:	e9c5 3200 	strd	r3, r2, [r5]
 8000356:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800035a:	428b      	cmp	r3, r1
 800035c:	d905      	bls.n	800036a <__udivmoddi4+0xba>
 800035e:	b10d      	cbz	r5, 8000364 <__udivmoddi4+0xb4>
 8000360:	e9c5 0100 	strd	r0, r1, [r5]
 8000364:	2100      	movs	r1, #0
 8000366:	4608      	mov	r0, r1
 8000368:	e7f5      	b.n	8000356 <__udivmoddi4+0xa6>
 800036a:	fab3 f183 	clz	r1, r3
 800036e:	2900      	cmp	r1, #0
 8000370:	d146      	bne.n	8000400 <__udivmoddi4+0x150>
 8000372:	42a3      	cmp	r3, r4
 8000374:	d302      	bcc.n	800037c <__udivmoddi4+0xcc>
 8000376:	4290      	cmp	r0, r2
 8000378:	f0c0 80f0 	bcc.w	800055c <__udivmoddi4+0x2ac>
 800037c:	1a86      	subs	r6, r0, r2
 800037e:	eb64 0303 	sbc.w	r3, r4, r3
 8000382:	2001      	movs	r0, #1
 8000384:	2d00      	cmp	r5, #0
 8000386:	d0e6      	beq.n	8000356 <__udivmoddi4+0xa6>
 8000388:	e9c5 6300 	strd	r6, r3, [r5]
 800038c:	e7e3      	b.n	8000356 <__udivmoddi4+0xa6>
 800038e:	2a00      	cmp	r2, #0
 8000390:	f040 8090 	bne.w	80004b4 <__udivmoddi4+0x204>
 8000394:	eba1 040c 	sub.w	r4, r1, ip
 8000398:	ea4f 481c 	mov.w	r8, ip, lsr #16
 800039c:	fa1f f78c 	uxth.w	r7, ip
 80003a0:	2101      	movs	r1, #1
 80003a2:	fbb4 f6f8 	udiv	r6, r4, r8
 80003a6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003aa:	fb08 4416 	mls	r4, r8, r6, r4
 80003ae:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003b2:	fb07 f006 	mul.w	r0, r7, r6
 80003b6:	4298      	cmp	r0, r3
 80003b8:	d908      	bls.n	80003cc <__udivmoddi4+0x11c>
 80003ba:	eb1c 0303 	adds.w	r3, ip, r3
 80003be:	f106 34ff 	add.w	r4, r6, #4294967295
 80003c2:	d202      	bcs.n	80003ca <__udivmoddi4+0x11a>
 80003c4:	4298      	cmp	r0, r3
 80003c6:	f200 80cd 	bhi.w	8000564 <__udivmoddi4+0x2b4>
 80003ca:	4626      	mov	r6, r4
 80003cc:	1a1c      	subs	r4, r3, r0
 80003ce:	fa1f f38e 	uxth.w	r3, lr
 80003d2:	fbb4 f0f8 	udiv	r0, r4, r8
 80003d6:	fb08 4410 	mls	r4, r8, r0, r4
 80003da:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003de:	fb00 f707 	mul.w	r7, r0, r7
 80003e2:	429f      	cmp	r7, r3
 80003e4:	d908      	bls.n	80003f8 <__udivmoddi4+0x148>
 80003e6:	eb1c 0303 	adds.w	r3, ip, r3
 80003ea:	f100 34ff 	add.w	r4, r0, #4294967295
 80003ee:	d202      	bcs.n	80003f6 <__udivmoddi4+0x146>
 80003f0:	429f      	cmp	r7, r3
 80003f2:	f200 80b0 	bhi.w	8000556 <__udivmoddi4+0x2a6>
 80003f6:	4620      	mov	r0, r4
 80003f8:	1bdb      	subs	r3, r3, r7
 80003fa:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 80003fe:	e7a5      	b.n	800034c <__udivmoddi4+0x9c>
 8000400:	f1c1 0620 	rsb	r6, r1, #32
 8000404:	408b      	lsls	r3, r1
 8000406:	fa22 f706 	lsr.w	r7, r2, r6
 800040a:	431f      	orrs	r7, r3
 800040c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000410:	fa04 f301 	lsl.w	r3, r4, r1
 8000414:	ea43 030c 	orr.w	r3, r3, ip
 8000418:	40f4      	lsrs	r4, r6
 800041a:	fa00 f801 	lsl.w	r8, r0, r1
 800041e:	0c38      	lsrs	r0, r7, #16
 8000420:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000424:	fbb4 fef0 	udiv	lr, r4, r0
 8000428:	fa1f fc87 	uxth.w	ip, r7
 800042c:	fb00 441e 	mls	r4, r0, lr, r4
 8000430:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000434:	fb0e f90c 	mul.w	r9, lr, ip
 8000438:	45a1      	cmp	r9, r4
 800043a:	fa02 f201 	lsl.w	r2, r2, r1
 800043e:	d90a      	bls.n	8000456 <__udivmoddi4+0x1a6>
 8000440:	193c      	adds	r4, r7, r4
 8000442:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000446:	f080 8084 	bcs.w	8000552 <__udivmoddi4+0x2a2>
 800044a:	45a1      	cmp	r9, r4
 800044c:	f240 8081 	bls.w	8000552 <__udivmoddi4+0x2a2>
 8000450:	f1ae 0e02 	sub.w	lr, lr, #2
 8000454:	443c      	add	r4, r7
 8000456:	eba4 0409 	sub.w	r4, r4, r9
 800045a:	fa1f f983 	uxth.w	r9, r3
 800045e:	fbb4 f3f0 	udiv	r3, r4, r0
 8000462:	fb00 4413 	mls	r4, r0, r3, r4
 8000466:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800046a:	fb03 fc0c 	mul.w	ip, r3, ip
 800046e:	45a4      	cmp	ip, r4
 8000470:	d907      	bls.n	8000482 <__udivmoddi4+0x1d2>
 8000472:	193c      	adds	r4, r7, r4
 8000474:	f103 30ff 	add.w	r0, r3, #4294967295
 8000478:	d267      	bcs.n	800054a <__udivmoddi4+0x29a>
 800047a:	45a4      	cmp	ip, r4
 800047c:	d965      	bls.n	800054a <__udivmoddi4+0x29a>
 800047e:	3b02      	subs	r3, #2
 8000480:	443c      	add	r4, r7
 8000482:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000486:	fba0 9302 	umull	r9, r3, r0, r2
 800048a:	eba4 040c 	sub.w	r4, r4, ip
 800048e:	429c      	cmp	r4, r3
 8000490:	46ce      	mov	lr, r9
 8000492:	469c      	mov	ip, r3
 8000494:	d351      	bcc.n	800053a <__udivmoddi4+0x28a>
 8000496:	d04e      	beq.n	8000536 <__udivmoddi4+0x286>
 8000498:	b155      	cbz	r5, 80004b0 <__udivmoddi4+0x200>
 800049a:	ebb8 030e 	subs.w	r3, r8, lr
 800049e:	eb64 040c 	sbc.w	r4, r4, ip
 80004a2:	fa04 f606 	lsl.w	r6, r4, r6
 80004a6:	40cb      	lsrs	r3, r1
 80004a8:	431e      	orrs	r6, r3
 80004aa:	40cc      	lsrs	r4, r1
 80004ac:	e9c5 6400 	strd	r6, r4, [r5]
 80004b0:	2100      	movs	r1, #0
 80004b2:	e750      	b.n	8000356 <__udivmoddi4+0xa6>
 80004b4:	f1c2 0320 	rsb	r3, r2, #32
 80004b8:	fa20 f103 	lsr.w	r1, r0, r3
 80004bc:	fa0c fc02 	lsl.w	ip, ip, r2
 80004c0:	fa24 f303 	lsr.w	r3, r4, r3
 80004c4:	4094      	lsls	r4, r2
 80004c6:	430c      	orrs	r4, r1
 80004c8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80004cc:	fa00 fe02 	lsl.w	lr, r0, r2
 80004d0:	fa1f f78c 	uxth.w	r7, ip
 80004d4:	fbb3 f0f8 	udiv	r0, r3, r8
 80004d8:	fb08 3110 	mls	r1, r8, r0, r3
 80004dc:	0c23      	lsrs	r3, r4, #16
 80004de:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80004e2:	fb00 f107 	mul.w	r1, r0, r7
 80004e6:	4299      	cmp	r1, r3
 80004e8:	d908      	bls.n	80004fc <__udivmoddi4+0x24c>
 80004ea:	eb1c 0303 	adds.w	r3, ip, r3
 80004ee:	f100 36ff 	add.w	r6, r0, #4294967295
 80004f2:	d22c      	bcs.n	800054e <__udivmoddi4+0x29e>
 80004f4:	4299      	cmp	r1, r3
 80004f6:	d92a      	bls.n	800054e <__udivmoddi4+0x29e>
 80004f8:	3802      	subs	r0, #2
 80004fa:	4463      	add	r3, ip
 80004fc:	1a5b      	subs	r3, r3, r1
 80004fe:	b2a4      	uxth	r4, r4
 8000500:	fbb3 f1f8 	udiv	r1, r3, r8
 8000504:	fb08 3311 	mls	r3, r8, r1, r3
 8000508:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800050c:	fb01 f307 	mul.w	r3, r1, r7
 8000510:	42a3      	cmp	r3, r4
 8000512:	d908      	bls.n	8000526 <__udivmoddi4+0x276>
 8000514:	eb1c 0404 	adds.w	r4, ip, r4
 8000518:	f101 36ff 	add.w	r6, r1, #4294967295
 800051c:	d213      	bcs.n	8000546 <__udivmoddi4+0x296>
 800051e:	42a3      	cmp	r3, r4
 8000520:	d911      	bls.n	8000546 <__udivmoddi4+0x296>
 8000522:	3902      	subs	r1, #2
 8000524:	4464      	add	r4, ip
 8000526:	1ae4      	subs	r4, r4, r3
 8000528:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800052c:	e739      	b.n	80003a2 <__udivmoddi4+0xf2>
 800052e:	4604      	mov	r4, r0
 8000530:	e6f0      	b.n	8000314 <__udivmoddi4+0x64>
 8000532:	4608      	mov	r0, r1
 8000534:	e706      	b.n	8000344 <__udivmoddi4+0x94>
 8000536:	45c8      	cmp	r8, r9
 8000538:	d2ae      	bcs.n	8000498 <__udivmoddi4+0x1e8>
 800053a:	ebb9 0e02 	subs.w	lr, r9, r2
 800053e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000542:	3801      	subs	r0, #1
 8000544:	e7a8      	b.n	8000498 <__udivmoddi4+0x1e8>
 8000546:	4631      	mov	r1, r6
 8000548:	e7ed      	b.n	8000526 <__udivmoddi4+0x276>
 800054a:	4603      	mov	r3, r0
 800054c:	e799      	b.n	8000482 <__udivmoddi4+0x1d2>
 800054e:	4630      	mov	r0, r6
 8000550:	e7d4      	b.n	80004fc <__udivmoddi4+0x24c>
 8000552:	46d6      	mov	lr, sl
 8000554:	e77f      	b.n	8000456 <__udivmoddi4+0x1a6>
 8000556:	4463      	add	r3, ip
 8000558:	3802      	subs	r0, #2
 800055a:	e74d      	b.n	80003f8 <__udivmoddi4+0x148>
 800055c:	4606      	mov	r6, r0
 800055e:	4623      	mov	r3, r4
 8000560:	4608      	mov	r0, r1
 8000562:	e70f      	b.n	8000384 <__udivmoddi4+0xd4>
 8000564:	3e02      	subs	r6, #2
 8000566:	4463      	add	r3, ip
 8000568:	e730      	b.n	80003cc <__udivmoddi4+0x11c>
 800056a:	bf00      	nop

0800056c <__aeabi_idiv0>:
 800056c:	4770      	bx	lr
 800056e:	bf00      	nop

08000570 <Determine_I2C_Bus_TPS55288>:
extern I2C_HandleTypeDef hi2c3;

const uint8_t AddressesTPS55288[2] = {0x74, 0x75};

I2C_HandleTypeDef *Determine_I2C_Bus_TPS55288(uint8_t Converter_Index)
{
 8000570:	b480      	push	{r7}
 8000572:	b085      	sub	sp, #20
 8000574:	af00      	add	r7, sp, #0
 8000576:	4603      	mov	r3, r0
 8000578:	71fb      	strb	r3, [r7, #7]
	uint8_t converter_set = Converter_Index / 2;
 800057a:	79fb      	ldrb	r3, [r7, #7]
 800057c:	085b      	lsrs	r3, r3, #1
 800057e:	72fb      	strb	r3, [r7, #11]
	I2C_HandleTypeDef *I2C_Line_Address;
	switch (converter_set) {
 8000580:	7afb      	ldrb	r3, [r7, #11]
 8000582:	2b02      	cmp	r3, #2
 8000584:	d00c      	beq.n	80005a0 <Determine_I2C_Bus_TPS55288+0x30>
 8000586:	2b02      	cmp	r3, #2
 8000588:	dc0d      	bgt.n	80005a6 <Determine_I2C_Bus_TPS55288+0x36>
 800058a:	2b00      	cmp	r3, #0
 800058c:	d002      	beq.n	8000594 <Determine_I2C_Bus_TPS55288+0x24>
 800058e:	2b01      	cmp	r3, #1
 8000590:	d003      	beq.n	800059a <Determine_I2C_Bus_TPS55288+0x2a>
 8000592:	e008      	b.n	80005a6 <Determine_I2C_Bus_TPS55288+0x36>
	case 0:
		I2C_Line_Address = &hi2c1;
 8000594:	4b07      	ldr	r3, [pc, #28]	@ (80005b4 <Determine_I2C_Bus_TPS55288+0x44>)
 8000596:	60fb      	str	r3, [r7, #12]
		break;
 8000598:	e005      	b.n	80005a6 <Determine_I2C_Bus_TPS55288+0x36>
	case 1:
		I2C_Line_Address = &hi2c2;
 800059a:	4b07      	ldr	r3, [pc, #28]	@ (80005b8 <Determine_I2C_Bus_TPS55288+0x48>)
 800059c:	60fb      	str	r3, [r7, #12]
		break;
 800059e:	e002      	b.n	80005a6 <Determine_I2C_Bus_TPS55288+0x36>
	case 2:
		I2C_Line_Address = &hi2c3;
 80005a0:	4b06      	ldr	r3, [pc, #24]	@ (80005bc <Determine_I2C_Bus_TPS55288+0x4c>)
 80005a2:	60fb      	str	r3, [r7, #12]
		break;
 80005a4:	bf00      	nop
	}
	return I2C_Line_Address;
 80005a6:	68fb      	ldr	r3, [r7, #12]
}
 80005a8:	4618      	mov	r0, r3
 80005aa:	3714      	adds	r7, #20
 80005ac:	46bd      	mov	sp, r7
 80005ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005b2:	4770      	bx	lr
 80005b4:	2000007c 	.word	0x2000007c
 80005b8:	200000d0 	.word	0x200000d0
 80005bc:	20000124 	.word	0x20000124

080005c0 <Update_Reference_Voltage_TPS55288>:
		Error_Handler();
	}
}

void Update_Reference_Voltage_TPS55288(uint8_t Converter_Index, uint8_t Increase_Boolean, uint8_t Change_Amount)
{
 80005c0:	b580      	push	{r7, lr}
 80005c2:	b086      	sub	sp, #24
 80005c4:	af00      	add	r7, sp, #0
 80005c6:	4603      	mov	r3, r0
 80005c8:	71fb      	strb	r3, [r7, #7]
 80005ca:	460b      	mov	r3, r1
 80005cc:	71bb      	strb	r3, [r7, #6]
 80005ce:	4613      	mov	r3, r2
 80005d0:	717b      	strb	r3, [r7, #5]
	uint16_t Current_Reference_Voltage = 0;
 80005d2:	2300      	movs	r3, #0
 80005d4:	82fb      	strh	r3, [r7, #22]
	uint8_t ReadValue = 0;
 80005d6:	2300      	movs	r3, #0
 80005d8:	757b      	strb	r3, [r7, #21]
	HAL_StatusTypeDef HAL_Status;
	ReadValue = ReadByteTPS55288(Converter_Index, REF0, &HAL_Status);
 80005da:	f107 020f 	add.w	r2, r7, #15
 80005de:	79fb      	ldrb	r3, [r7, #7]
 80005e0:	2100      	movs	r1, #0
 80005e2:	4618      	mov	r0, r3
 80005e4:	f000 f8ea 	bl	80007bc <ReadByteTPS55288>
 80005e8:	4603      	mov	r3, r0
 80005ea:	757b      	strb	r3, [r7, #21]
	if (HAL_Status != HAL_OK) {
 80005ec:	7bfb      	ldrb	r3, [r7, #15]
 80005ee:	2b00      	cmp	r3, #0
 80005f0:	d001      	beq.n	80005f6 <Update_Reference_Voltage_TPS55288+0x36>
		Error_Handler();
 80005f2:	f000 fc35 	bl	8000e60 <Error_Handler>
	}
	Current_Reference_Voltage = Current_Reference_Voltage + ReadValue;
 80005f6:	7d7b      	ldrb	r3, [r7, #21]
 80005f8:	b29a      	uxth	r2, r3
 80005fa:	8afb      	ldrh	r3, [r7, #22]
 80005fc:	4413      	add	r3, r2
 80005fe:	82fb      	strh	r3, [r7, #22]
	ReadValue = ReadByteTPS55288(Converter_Index, REF1, &HAL_Status);
 8000600:	f107 020f 	add.w	r2, r7, #15
 8000604:	79fb      	ldrb	r3, [r7, #7]
 8000606:	2101      	movs	r1, #1
 8000608:	4618      	mov	r0, r3
 800060a:	f000 f8d7 	bl	80007bc <ReadByteTPS55288>
 800060e:	4603      	mov	r3, r0
 8000610:	757b      	strb	r3, [r7, #21]
	if (HAL_Status != HAL_OK) {
 8000612:	7bfb      	ldrb	r3, [r7, #15]
 8000614:	2b00      	cmp	r3, #0
 8000616:	d001      	beq.n	800061c <Update_Reference_Voltage_TPS55288+0x5c>
		Error_Handler();
 8000618:	f000 fc22 	bl	8000e60 <Error_Handler>
	}
	Current_Reference_Voltage = Current_Reference_Voltage + ((ReadValue * REF1MASK) << 8);
 800061c:	7d7b      	ldrb	r3, [r7, #21]
 800061e:	b29b      	uxth	r3, r3
 8000620:	461a      	mov	r2, r3
 8000622:	0052      	lsls	r2, r2, #1
 8000624:	4413      	add	r3, r2
 8000626:	b29b      	uxth	r3, r3
 8000628:	021b      	lsls	r3, r3, #8
 800062a:	b29a      	uxth	r2, r3
 800062c:	8afb      	ldrh	r3, [r7, #22]
 800062e:	4413      	add	r3, r2
 8000630:	82fb      	strh	r3, [r7, #22]
	uint16_t Next_Reference_Voltage;
	uint8_t Ref1_Write;
	uint8_t Ref0_Write;
	if (Increase_Boolean && Current_Reference_Voltage <= (0x3FF - Change_Amount)) {
 8000632:	79bb      	ldrb	r3, [r7, #6]
 8000634:	2b00      	cmp	r3, #0
 8000636:	d024      	beq.n	8000682 <Update_Reference_Voltage_TPS55288+0xc2>
 8000638:	8afa      	ldrh	r2, [r7, #22]
 800063a:	797b      	ldrb	r3, [r7, #5]
 800063c:	f5c3 737f 	rsb	r3, r3, #1020	@ 0x3fc
 8000640:	3303      	adds	r3, #3
 8000642:	429a      	cmp	r2, r3
 8000644:	dc1d      	bgt.n	8000682 <Update_Reference_Voltage_TPS55288+0xc2>
		Next_Reference_Voltage = Current_Reference_Voltage + Change_Amount;
 8000646:	797b      	ldrb	r3, [r7, #5]
 8000648:	b29a      	uxth	r2, r3
 800064a:	8afb      	ldrh	r3, [r7, #22]
 800064c:	4413      	add	r3, r2
 800064e:	827b      	strh	r3, [r7, #18]
		Ref1_Write = ((Next_Reference_Voltage >> 8) & MASKSTART) + (ReadValue & (~REF1MASK));
 8000650:	8a7b      	ldrh	r3, [r7, #18]
 8000652:	0a1b      	lsrs	r3, r3, #8
 8000654:	b29b      	uxth	r3, r3
 8000656:	b2da      	uxtb	r2, r3
 8000658:	7d7b      	ldrb	r3, [r7, #21]
 800065a:	f023 0303 	bic.w	r3, r3, #3
 800065e:	b2db      	uxtb	r3, r3
 8000660:	4413      	add	r3, r2
 8000662:	747b      	strb	r3, [r7, #17]
		Ref0_Write = Next_Reference_Voltage & MASKSTART;
 8000664:	8a7b      	ldrh	r3, [r7, #18]
 8000666:	743b      	strb	r3, [r7, #16]
		WriteByteTPS55288(Converter_Index, REF0, Ref0_Write);
 8000668:	7c3a      	ldrb	r2, [r7, #16]
 800066a:	79fb      	ldrb	r3, [r7, #7]
 800066c:	2100      	movs	r1, #0
 800066e:	4618      	mov	r0, r3
 8000670:	f000 f862 	bl	8000738 <WriteByteTPS55288>
		WriteByteTPS55288(Converter_Index, REF1, Ref1_Write);
 8000674:	7c7a      	ldrb	r2, [r7, #17]
 8000676:	79fb      	ldrb	r3, [r7, #7]
 8000678:	2101      	movs	r1, #1
 800067a:	4618      	mov	r0, r3
 800067c:	f000 f85c 	bl	8000738 <WriteByteTPS55288>
		Ref1_Write = ((Next_Reference_Voltage >> 8) & MASKSTART) + (ReadValue & (~REF1MASK));
		Ref0_Write = Next_Reference_Voltage & MASKSTART;
		WriteByteTPS55288(Converter_Index, REF0, Ref0_Write);
		WriteByteTPS55288(Converter_Index, REF1, Ref1_Write);
	}
}
 8000680:	e024      	b.n	80006cc <Update_Reference_Voltage_TPS55288+0x10c>
	else if ((!Increase_Boolean) && Current_Reference_Voltage >= Change_Amount) {
 8000682:	79bb      	ldrb	r3, [r7, #6]
 8000684:	2b00      	cmp	r3, #0
 8000686:	d121      	bne.n	80006cc <Update_Reference_Voltage_TPS55288+0x10c>
 8000688:	797b      	ldrb	r3, [r7, #5]
 800068a:	b29b      	uxth	r3, r3
 800068c:	8afa      	ldrh	r2, [r7, #22]
 800068e:	429a      	cmp	r2, r3
 8000690:	d31c      	bcc.n	80006cc <Update_Reference_Voltage_TPS55288+0x10c>
		Next_Reference_Voltage = Current_Reference_Voltage - Change_Amount;
 8000692:	797b      	ldrb	r3, [r7, #5]
 8000694:	b29b      	uxth	r3, r3
 8000696:	8afa      	ldrh	r2, [r7, #22]
 8000698:	1ad3      	subs	r3, r2, r3
 800069a:	827b      	strh	r3, [r7, #18]
		Ref1_Write = ((Next_Reference_Voltage >> 8) & MASKSTART) + (ReadValue & (~REF1MASK));
 800069c:	8a7b      	ldrh	r3, [r7, #18]
 800069e:	0a1b      	lsrs	r3, r3, #8
 80006a0:	b29b      	uxth	r3, r3
 80006a2:	b2da      	uxtb	r2, r3
 80006a4:	7d7b      	ldrb	r3, [r7, #21]
 80006a6:	f023 0303 	bic.w	r3, r3, #3
 80006aa:	b2db      	uxtb	r3, r3
 80006ac:	4413      	add	r3, r2
 80006ae:	747b      	strb	r3, [r7, #17]
		Ref0_Write = Next_Reference_Voltage & MASKSTART;
 80006b0:	8a7b      	ldrh	r3, [r7, #18]
 80006b2:	743b      	strb	r3, [r7, #16]
		WriteByteTPS55288(Converter_Index, REF0, Ref0_Write);
 80006b4:	7c3a      	ldrb	r2, [r7, #16]
 80006b6:	79fb      	ldrb	r3, [r7, #7]
 80006b8:	2100      	movs	r1, #0
 80006ba:	4618      	mov	r0, r3
 80006bc:	f000 f83c 	bl	8000738 <WriteByteTPS55288>
		WriteByteTPS55288(Converter_Index, REF1, Ref1_Write);
 80006c0:	7c7a      	ldrb	r2, [r7, #17]
 80006c2:	79fb      	ldrb	r3, [r7, #7]
 80006c4:	2101      	movs	r1, #1
 80006c6:	4618      	mov	r0, r3
 80006c8:	f000 f836 	bl	8000738 <WriteByteTPS55288>
}
 80006cc:	bf00      	nop
 80006ce:	3718      	adds	r7, #24
 80006d0:	46bd      	mov	sp, r7
 80006d2:	bd80      	pop	{r7, pc}

080006d4 <Set_Reference_Voltage_TPS55288>:

void Set_Reference_Voltage_TPS55288(uint8_t Converter_Index, uint32_t Reference_Voltage)
{
 80006d4:	b580      	push	{r7, lr}
 80006d6:	b084      	sub	sp, #16
 80006d8:	af00      	add	r7, sp, #0
 80006da:	4603      	mov	r3, r0
 80006dc:	6039      	str	r1, [r7, #0]
 80006de:	71fb      	strb	r3, [r7, #7]
	uint8_t ReadValue = 0;
 80006e0:	2300      	movs	r3, #0
 80006e2:	73fb      	strb	r3, [r7, #15]
	HAL_StatusTypeDef HAL_Status;
	ReadValue = ReadByteTPS55288(Converter_Index, REF1, &HAL_Status);
 80006e4:	f107 020c 	add.w	r2, r7, #12
 80006e8:	79fb      	ldrb	r3, [r7, #7]
 80006ea:	2101      	movs	r1, #1
 80006ec:	4618      	mov	r0, r3
 80006ee:	f000 f865 	bl	80007bc <ReadByteTPS55288>
 80006f2:	4603      	mov	r3, r0
 80006f4:	73fb      	strb	r3, [r7, #15]
	if (HAL_Status != HAL_OK) {
 80006f6:	7b3b      	ldrb	r3, [r7, #12]
 80006f8:	2b00      	cmp	r3, #0
 80006fa:	d001      	beq.n	8000700 <Set_Reference_Voltage_TPS55288+0x2c>
		Error_Handler();
 80006fc:	f000 fbb0 	bl	8000e60 <Error_Handler>
	}
	uint8_t Ref1_Write;
	uint8_t Ref0_Write;
	Ref1_Write = ((Reference_Voltage >> 8) & MASKSTART) + (ReadValue & (~REF1MASK));
 8000700:	683b      	ldr	r3, [r7, #0]
 8000702:	0a1b      	lsrs	r3, r3, #8
 8000704:	b2da      	uxtb	r2, r3
 8000706:	7bfb      	ldrb	r3, [r7, #15]
 8000708:	f023 0303 	bic.w	r3, r3, #3
 800070c:	b2db      	uxtb	r3, r3
 800070e:	4413      	add	r3, r2
 8000710:	73bb      	strb	r3, [r7, #14]
	Ref0_Write = Reference_Voltage & MASKSTART;
 8000712:	683b      	ldr	r3, [r7, #0]
 8000714:	737b      	strb	r3, [r7, #13]
	WriteByteTPS55288(Converter_Index, REF0, Ref0_Write);
 8000716:	7b7a      	ldrb	r2, [r7, #13]
 8000718:	79fb      	ldrb	r3, [r7, #7]
 800071a:	2100      	movs	r1, #0
 800071c:	4618      	mov	r0, r3
 800071e:	f000 f80b 	bl	8000738 <WriteByteTPS55288>
	WriteByteTPS55288(Converter_Index, REF1, Ref1_Write);
 8000722:	7bba      	ldrb	r2, [r7, #14]
 8000724:	79fb      	ldrb	r3, [r7, #7]
 8000726:	2101      	movs	r1, #1
 8000728:	4618      	mov	r0, r3
 800072a:	f000 f805 	bl	8000738 <WriteByteTPS55288>
}
 800072e:	bf00      	nop
 8000730:	3710      	adds	r7, #16
 8000732:	46bd      	mov	sp, r7
 8000734:	bd80      	pop	{r7, pc}
	...

08000738 <WriteByteTPS55288>:

HAL_StatusTypeDef WriteByteTPS55288(uint8_t Converter_Index, uint8_t Register_Address, uint8_t WriteData)
{
 8000738:	b580      	push	{r7, lr}
 800073a:	b088      	sub	sp, #32
 800073c:	af02      	add	r7, sp, #8
 800073e:	4603      	mov	r3, r0
 8000740:	71fb      	strb	r3, [r7, #7]
 8000742:	460b      	mov	r3, r1
 8000744:	71bb      	strb	r3, [r7, #6]
 8000746:	4613      	mov	r3, r2
 8000748:	717b      	strb	r3, [r7, #5]
	uint8_t address_type = Converter_Index % 2;
 800074a:	79fb      	ldrb	r3, [r7, #7]
 800074c:	f003 0301 	and.w	r3, r3, #1
 8000750:	75fb      	strb	r3, [r7, #23]
	I2C_HandleTypeDef *I2C_Line_Address = Determine_I2C_Bus_TPS55288(Converter_Index);
 8000752:	79fb      	ldrb	r3, [r7, #7]
 8000754:	4618      	mov	r0, r3
 8000756:	f7ff ff0b 	bl	8000570 <Determine_I2C_Bus_TPS55288>
 800075a:	6138      	str	r0, [r7, #16]
	uint8_t Device_Address = AddressesTPS55288[address_type];
 800075c:	7dfb      	ldrb	r3, [r7, #23]
 800075e:	4a16      	ldr	r2, [pc, #88]	@ (80007b8 <WriteByteTPS55288+0x80>)
 8000760:	5cd3      	ldrb	r3, [r2, r3]
 8000762:	73fb      	strb	r3, [r7, #15]
	uint8_t BytesToSend[2];
	BytesToSend[0] = Register_Address;
 8000764:	79bb      	ldrb	r3, [r7, #6]
 8000766:	733b      	strb	r3, [r7, #12]
	BytesToSend[1] = WriteData;
 8000768:	797b      	ldrb	r3, [r7, #5]
 800076a:	737b      	strb	r3, [r7, #13]
	HAL_StatusTypeDef HAL_Status = HAL_ERROR;
 800076c:	2301      	movs	r3, #1
 800076e:	73bb      	strb	r3, [r7, #14]
	HAL_Status = HAL_I2C_Master_Transmit(I2C_Line_Address, Device_Address, BytesToSend, 2, HAL_MAX_DELAY);
 8000770:	7bfb      	ldrb	r3, [r7, #15]
 8000772:	b299      	uxth	r1, r3
 8000774:	f107 020c 	add.w	r2, r7, #12
 8000778:	f04f 33ff 	mov.w	r3, #4294967295
 800077c:	9300      	str	r3, [sp, #0]
 800077e:	2302      	movs	r3, #2
 8000780:	6938      	ldr	r0, [r7, #16]
 8000782:	f001 fa59 	bl	8001c38 <HAL_I2C_Master_Transmit>
 8000786:	4603      	mov	r3, r0
 8000788:	73bb      	strb	r3, [r7, #14]
	if (HAL_Status != HAL_OK) {
 800078a:	7bbb      	ldrb	r3, [r7, #14]
 800078c:	2b00      	cmp	r3, #0
 800078e:	d001      	beq.n	8000794 <WriteByteTPS55288+0x5c>
		return HAL_Status;
 8000790:	7bbb      	ldrb	r3, [r7, #14]
 8000792:	e00c      	b.n	80007ae <WriteByteTPS55288+0x76>
//		Error_Handler();
	}
	while (HAL_I2C_IsDeviceReady(I2C_Line_Address, Device_Address, 1, HAL_MAX_DELAY));
 8000794:	bf00      	nop
 8000796:	7bfb      	ldrb	r3, [r7, #15]
 8000798:	b299      	uxth	r1, r3
 800079a:	f04f 33ff 	mov.w	r3, #4294967295
 800079e:	2201      	movs	r2, #1
 80007a0:	6938      	ldr	r0, [r7, #16]
 80007a2:	f001 fd79 	bl	8002298 <HAL_I2C_IsDeviceReady>
 80007a6:	4603      	mov	r3, r0
 80007a8:	2b00      	cmp	r3, #0
 80007aa:	d1f4      	bne.n	8000796 <WriteByteTPS55288+0x5e>
	return HAL_Status;
 80007ac:	7bbb      	ldrb	r3, [r7, #14]
}
 80007ae:	4618      	mov	r0, r3
 80007b0:	3718      	adds	r7, #24
 80007b2:	46bd      	mov	sp, r7
 80007b4:	bd80      	pop	{r7, pc}
 80007b6:	bf00      	nop
 80007b8:	08004ef4 	.word	0x08004ef4

080007bc <ReadByteTPS55288>:

uint8_t ReadByteTPS55288(uint8_t Converter_Index, uint8_t Register_Address, HAL_StatusTypeDef *Error_Handling)
{
 80007bc:	b580      	push	{r7, lr}
 80007be:	b088      	sub	sp, #32
 80007c0:	af02      	add	r7, sp, #8
 80007c2:	4603      	mov	r3, r0
 80007c4:	603a      	str	r2, [r7, #0]
 80007c6:	71fb      	strb	r3, [r7, #7]
 80007c8:	460b      	mov	r3, r1
 80007ca:	71bb      	strb	r3, [r7, #6]
	uint8_t ReturnValue = 0;
 80007cc:	2300      	movs	r3, #0
 80007ce:	73bb      	strb	r3, [r7, #14]
	uint8_t address_type = Converter_Index % 2;
 80007d0:	79fb      	ldrb	r3, [r7, #7]
 80007d2:	f003 0301 	and.w	r3, r3, #1
 80007d6:	75fb      	strb	r3, [r7, #23]
	I2C_HandleTypeDef *I2C_Line_Address = Determine_I2C_Bus_TPS55288(Converter_Index);
 80007d8:	79fb      	ldrb	r3, [r7, #7]
 80007da:	4618      	mov	r0, r3
 80007dc:	f7ff fec8 	bl	8000570 <Determine_I2C_Bus_TPS55288>
 80007e0:	6138      	str	r0, [r7, #16]
	uint8_t Device_Address = AddressesTPS55288[address_type];
 80007e2:	7dfb      	ldrb	r3, [r7, #23]
 80007e4:	4a13      	ldr	r2, [pc, #76]	@ (8000834 <ReadByteTPS55288+0x78>)
 80007e6:	5cd3      	ldrb	r3, [r2, r3]
 80007e8:	73fb      	strb	r3, [r7, #15]
	uint8_t BytesToSend[1];
	BytesToSend[0] = Register_Address;
 80007ea:	79bb      	ldrb	r3, [r7, #6]
 80007ec:	733b      	strb	r3, [r7, #12]
	*Error_Handling = HAL_I2C_Master_Transmit(I2C_Line_Address, Device_Address, BytesToSend, 1, HAL_MAX_DELAY);
 80007ee:	7bfb      	ldrb	r3, [r7, #15]
 80007f0:	b299      	uxth	r1, r3
 80007f2:	f107 020c 	add.w	r2, r7, #12
 80007f6:	f04f 33ff 	mov.w	r3, #4294967295
 80007fa:	9300      	str	r3, [sp, #0]
 80007fc:	2301      	movs	r3, #1
 80007fe:	6938      	ldr	r0, [r7, #16]
 8000800:	f001 fa1a 	bl	8001c38 <HAL_I2C_Master_Transmit>
 8000804:	4603      	mov	r3, r0
 8000806:	461a      	mov	r2, r3
 8000808:	683b      	ldr	r3, [r7, #0]
 800080a:	701a      	strb	r2, [r3, #0]
	*Error_Handling = HAL_I2C_Master_Receive(I2C_Line_Address, Device_Address, &ReturnValue, 1, HAL_MAX_DELAY);
 800080c:	7bfb      	ldrb	r3, [r7, #15]
 800080e:	b299      	uxth	r1, r3
 8000810:	f107 020e 	add.w	r2, r7, #14
 8000814:	f04f 33ff 	mov.w	r3, #4294967295
 8000818:	9300      	str	r3, [sp, #0]
 800081a:	2301      	movs	r3, #1
 800081c:	6938      	ldr	r0, [r7, #16]
 800081e:	f001 fb09 	bl	8001e34 <HAL_I2C_Master_Receive>
 8000822:	4603      	mov	r3, r0
 8000824:	461a      	mov	r2, r3
 8000826:	683b      	ldr	r3, [r7, #0]
 8000828:	701a      	strb	r2, [r3, #0]
	return ReturnValue;
 800082a:	7bbb      	ldrb	r3, [r7, #14]
}
 800082c:	4618      	mov	r0, r3
 800082e:	3718      	adds	r7, #24
 8000830:	46bd      	mov	sp, r7
 8000832:	bd80      	pop	{r7, pc}
 8000834:	08004ef4 	.word	0x08004ef4

08000838 <MX_GPIO_Init>:
/* USER CODE END 1 */

/** Pinout Configuration
*/
void MX_GPIO_Init(void)
{
 8000838:	b480      	push	{r7}
 800083a:	b085      	sub	sp, #20
 800083c:	af00      	add	r7, sp, #0

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800083e:	2300      	movs	r3, #0
 8000840:	60fb      	str	r3, [r7, #12]
 8000842:	4b17      	ldr	r3, [pc, #92]	@ (80008a0 <MX_GPIO_Init+0x68>)
 8000844:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000846:	4a16      	ldr	r2, [pc, #88]	@ (80008a0 <MX_GPIO_Init+0x68>)
 8000848:	f043 0301 	orr.w	r3, r3, #1
 800084c:	6313      	str	r3, [r2, #48]	@ 0x30
 800084e:	4b14      	ldr	r3, [pc, #80]	@ (80008a0 <MX_GPIO_Init+0x68>)
 8000850:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000852:	f003 0301 	and.w	r3, r3, #1
 8000856:	60fb      	str	r3, [r7, #12]
 8000858:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800085a:	2300      	movs	r3, #0
 800085c:	60bb      	str	r3, [r7, #8]
 800085e:	4b10      	ldr	r3, [pc, #64]	@ (80008a0 <MX_GPIO_Init+0x68>)
 8000860:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000862:	4a0f      	ldr	r2, [pc, #60]	@ (80008a0 <MX_GPIO_Init+0x68>)
 8000864:	f043 0302 	orr.w	r3, r3, #2
 8000868:	6313      	str	r3, [r2, #48]	@ 0x30
 800086a:	4b0d      	ldr	r3, [pc, #52]	@ (80008a0 <MX_GPIO_Init+0x68>)
 800086c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800086e:	f003 0302 	and.w	r3, r3, #2
 8000872:	60bb      	str	r3, [r7, #8]
 8000874:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000876:	2300      	movs	r3, #0
 8000878:	607b      	str	r3, [r7, #4]
 800087a:	4b09      	ldr	r3, [pc, #36]	@ (80008a0 <MX_GPIO_Init+0x68>)
 800087c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800087e:	4a08      	ldr	r2, [pc, #32]	@ (80008a0 <MX_GPIO_Init+0x68>)
 8000880:	f043 0304 	orr.w	r3, r3, #4
 8000884:	6313      	str	r3, [r2, #48]	@ 0x30
 8000886:	4b06      	ldr	r3, [pc, #24]	@ (80008a0 <MX_GPIO_Init+0x68>)
 8000888:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800088a:	f003 0304 	and.w	r3, r3, #4
 800088e:	607b      	str	r3, [r7, #4]
 8000890:	687b      	ldr	r3, [r7, #4]

}
 8000892:	bf00      	nop
 8000894:	3714      	adds	r7, #20
 8000896:	46bd      	mov	sp, r7
 8000898:	f85d 7b04 	ldr.w	r7, [sp], #4
 800089c:	4770      	bx	lr
 800089e:	bf00      	nop
 80008a0:	40023800 	.word	0x40023800

080008a4 <Calculate_Power_hc>:
{
	Read_Sensor_ValuesACS37800(Converter_Index, Voltage, Current);
}

float Calculate_Power_hc(float Voltage, float Current)
{
 80008a4:	b480      	push	{r7}
 80008a6:	b083      	sub	sp, #12
 80008a8:	af00      	add	r7, sp, #0
 80008aa:	ed87 0a01 	vstr	s0, [r7, #4]
 80008ae:	edc7 0a00 	vstr	s1, [r7]
	return Voltage * Current;
 80008b2:	ed97 7a01 	vldr	s14, [r7, #4]
 80008b6:	edd7 7a00 	vldr	s15, [r7]
 80008ba:	ee67 7a27 	vmul.f32	s15, s14, s15
}
 80008be:	eeb0 0a67 	vmov.f32	s0, s15
 80008c2:	370c      	adds	r7, #12
 80008c4:	46bd      	mov	sp, r7
 80008c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008ca:	4770      	bx	lr

080008cc <MX_I2C1_Init>:
I2C_HandleTypeDef hi2c2;
I2C_HandleTypeDef hi2c3;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 80008cc:	b580      	push	{r7, lr}
 80008ce:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 80008d0:	4b12      	ldr	r3, [pc, #72]	@ (800091c <MX_I2C1_Init+0x50>)
 80008d2:	4a13      	ldr	r2, [pc, #76]	@ (8000920 <MX_I2C1_Init+0x54>)
 80008d4:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 80008d6:	4b11      	ldr	r3, [pc, #68]	@ (800091c <MX_I2C1_Init+0x50>)
 80008d8:	4a12      	ldr	r2, [pc, #72]	@ (8000924 <MX_I2C1_Init+0x58>)
 80008da:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 80008dc:	4b0f      	ldr	r3, [pc, #60]	@ (800091c <MX_I2C1_Init+0x50>)
 80008de:	2200      	movs	r2, #0
 80008e0:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 80008e2:	4b0e      	ldr	r3, [pc, #56]	@ (800091c <MX_I2C1_Init+0x50>)
 80008e4:	2200      	movs	r2, #0
 80008e6:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80008e8:	4b0c      	ldr	r3, [pc, #48]	@ (800091c <MX_I2C1_Init+0x50>)
 80008ea:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80008ee:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80008f0:	4b0a      	ldr	r3, [pc, #40]	@ (800091c <MX_I2C1_Init+0x50>)
 80008f2:	2200      	movs	r2, #0
 80008f4:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 80008f6:	4b09      	ldr	r3, [pc, #36]	@ (800091c <MX_I2C1_Init+0x50>)
 80008f8:	2200      	movs	r2, #0
 80008fa:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80008fc:	4b07      	ldr	r3, [pc, #28]	@ (800091c <MX_I2C1_Init+0x50>)
 80008fe:	2200      	movs	r2, #0
 8000900:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000902:	4b06      	ldr	r3, [pc, #24]	@ (800091c <MX_I2C1_Init+0x50>)
 8000904:	2200      	movs	r2, #0
 8000906:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8000908:	4804      	ldr	r0, [pc, #16]	@ (800091c <MX_I2C1_Init+0x50>)
 800090a:	f001 f851 	bl	80019b0 <HAL_I2C_Init>
 800090e:	4603      	mov	r3, r0
 8000910:	2b00      	cmp	r3, #0
 8000912:	d001      	beq.n	8000918 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8000914:	f000 faa4 	bl	8000e60 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8000918:	bf00      	nop
 800091a:	bd80      	pop	{r7, pc}
 800091c:	2000007c 	.word	0x2000007c
 8000920:	40005400 	.word	0x40005400
 8000924:	000186a0 	.word	0x000186a0

08000928 <MX_I2C2_Init>:
/* I2C2 init function */
void MX_I2C2_Init(void)
{
 8000928:	b580      	push	{r7, lr}
 800092a:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 800092c:	4b12      	ldr	r3, [pc, #72]	@ (8000978 <MX_I2C2_Init+0x50>)
 800092e:	4a13      	ldr	r2, [pc, #76]	@ (800097c <MX_I2C2_Init+0x54>)
 8000930:	601a      	str	r2, [r3, #0]
  hi2c2.Init.ClockSpeed = 100000;
 8000932:	4b11      	ldr	r3, [pc, #68]	@ (8000978 <MX_I2C2_Init+0x50>)
 8000934:	4a12      	ldr	r2, [pc, #72]	@ (8000980 <MX_I2C2_Init+0x58>)
 8000936:	605a      	str	r2, [r3, #4]
  hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000938:	4b0f      	ldr	r3, [pc, #60]	@ (8000978 <MX_I2C2_Init+0x50>)
 800093a:	2200      	movs	r2, #0
 800093c:	609a      	str	r2, [r3, #8]
  hi2c2.Init.OwnAddress1 = 0;
 800093e:	4b0e      	ldr	r3, [pc, #56]	@ (8000978 <MX_I2C2_Init+0x50>)
 8000940:	2200      	movs	r2, #0
 8000942:	60da      	str	r2, [r3, #12]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000944:	4b0c      	ldr	r3, [pc, #48]	@ (8000978 <MX_I2C2_Init+0x50>)
 8000946:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 800094a:	611a      	str	r2, [r3, #16]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800094c:	4b0a      	ldr	r3, [pc, #40]	@ (8000978 <MX_I2C2_Init+0x50>)
 800094e:	2200      	movs	r2, #0
 8000950:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2 = 0;
 8000952:	4b09      	ldr	r3, [pc, #36]	@ (8000978 <MX_I2C2_Init+0x50>)
 8000954:	2200      	movs	r2, #0
 8000956:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000958:	4b07      	ldr	r3, [pc, #28]	@ (8000978 <MX_I2C2_Init+0x50>)
 800095a:	2200      	movs	r2, #0
 800095c:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800095e:	4b06      	ldr	r3, [pc, #24]	@ (8000978 <MX_I2C2_Init+0x50>)
 8000960:	2200      	movs	r2, #0
 8000962:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8000964:	4804      	ldr	r0, [pc, #16]	@ (8000978 <MX_I2C2_Init+0x50>)
 8000966:	f001 f823 	bl	80019b0 <HAL_I2C_Init>
 800096a:	4603      	mov	r3, r0
 800096c:	2b00      	cmp	r3, #0
 800096e:	d001      	beq.n	8000974 <MX_I2C2_Init+0x4c>
  {
    Error_Handler();
 8000970:	f000 fa76 	bl	8000e60 <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 8000974:	bf00      	nop
 8000976:	bd80      	pop	{r7, pc}
 8000978:	200000d0 	.word	0x200000d0
 800097c:	40005800 	.word	0x40005800
 8000980:	000186a0 	.word	0x000186a0

08000984 <MX_I2C3_Init>:
/* I2C3 init function */
void MX_I2C3_Init(void)
{
 8000984:	b580      	push	{r7, lr}
 8000986:	af00      	add	r7, sp, #0
  /* USER CODE END I2C3_Init 0 */

  /* USER CODE BEGIN I2C3_Init 1 */

  /* USER CODE END I2C3_Init 1 */
  hi2c3.Instance = I2C3;
 8000988:	4b12      	ldr	r3, [pc, #72]	@ (80009d4 <MX_I2C3_Init+0x50>)
 800098a:	4a13      	ldr	r2, [pc, #76]	@ (80009d8 <MX_I2C3_Init+0x54>)
 800098c:	601a      	str	r2, [r3, #0]
  hi2c3.Init.ClockSpeed = 100000;
 800098e:	4b11      	ldr	r3, [pc, #68]	@ (80009d4 <MX_I2C3_Init+0x50>)
 8000990:	4a12      	ldr	r2, [pc, #72]	@ (80009dc <MX_I2C3_Init+0x58>)
 8000992:	605a      	str	r2, [r3, #4]
  hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000994:	4b0f      	ldr	r3, [pc, #60]	@ (80009d4 <MX_I2C3_Init+0x50>)
 8000996:	2200      	movs	r2, #0
 8000998:	609a      	str	r2, [r3, #8]
  hi2c3.Init.OwnAddress1 = 0;
 800099a:	4b0e      	ldr	r3, [pc, #56]	@ (80009d4 <MX_I2C3_Init+0x50>)
 800099c:	2200      	movs	r2, #0
 800099e:	60da      	str	r2, [r3, #12]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80009a0:	4b0c      	ldr	r3, [pc, #48]	@ (80009d4 <MX_I2C3_Init+0x50>)
 80009a2:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80009a6:	611a      	str	r2, [r3, #16]
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80009a8:	4b0a      	ldr	r3, [pc, #40]	@ (80009d4 <MX_I2C3_Init+0x50>)
 80009aa:	2200      	movs	r2, #0
 80009ac:	615a      	str	r2, [r3, #20]
  hi2c3.Init.OwnAddress2 = 0;
 80009ae:	4b09      	ldr	r3, [pc, #36]	@ (80009d4 <MX_I2C3_Init+0x50>)
 80009b0:	2200      	movs	r2, #0
 80009b2:	619a      	str	r2, [r3, #24]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80009b4:	4b07      	ldr	r3, [pc, #28]	@ (80009d4 <MX_I2C3_Init+0x50>)
 80009b6:	2200      	movs	r2, #0
 80009b8:	61da      	str	r2, [r3, #28]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80009ba:	4b06      	ldr	r3, [pc, #24]	@ (80009d4 <MX_I2C3_Init+0x50>)
 80009bc:	2200      	movs	r2, #0
 80009be:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80009c0:	4804      	ldr	r0, [pc, #16]	@ (80009d4 <MX_I2C3_Init+0x50>)
 80009c2:	f000 fff5 	bl	80019b0 <HAL_I2C_Init>
 80009c6:	4603      	mov	r3, r0
 80009c8:	2b00      	cmp	r3, #0
 80009ca:	d001      	beq.n	80009d0 <MX_I2C3_Init+0x4c>
  {
    Error_Handler();
 80009cc:	f000 fa48 	bl	8000e60 <Error_Handler>
  }
  /* USER CODE BEGIN I2C3_Init 2 */

  /* USER CODE END I2C3_Init 2 */

}
 80009d0:	bf00      	nop
 80009d2:	bd80      	pop	{r7, pc}
 80009d4:	20000124 	.word	0x20000124
 80009d8:	40005c00 	.word	0x40005c00
 80009dc:	000186a0 	.word	0x000186a0

080009e0 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 80009e0:	b580      	push	{r7, lr}
 80009e2:	b08e      	sub	sp, #56	@ 0x38
 80009e4:	af00      	add	r7, sp, #0
 80009e6:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80009e8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80009ec:	2200      	movs	r2, #0
 80009ee:	601a      	str	r2, [r3, #0]
 80009f0:	605a      	str	r2, [r3, #4]
 80009f2:	609a      	str	r2, [r3, #8]
 80009f4:	60da      	str	r2, [r3, #12]
 80009f6:	611a      	str	r2, [r3, #16]
  if(i2cHandle->Instance==I2C1)
 80009f8:	687b      	ldr	r3, [r7, #4]
 80009fa:	681b      	ldr	r3, [r3, #0]
 80009fc:	4a63      	ldr	r2, [pc, #396]	@ (8000b8c <HAL_I2C_MspInit+0x1ac>)
 80009fe:	4293      	cmp	r3, r2
 8000a00:	d12c      	bne.n	8000a5c <HAL_I2C_MspInit+0x7c>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000a02:	2300      	movs	r3, #0
 8000a04:	623b      	str	r3, [r7, #32]
 8000a06:	4b62      	ldr	r3, [pc, #392]	@ (8000b90 <HAL_I2C_MspInit+0x1b0>)
 8000a08:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a0a:	4a61      	ldr	r2, [pc, #388]	@ (8000b90 <HAL_I2C_MspInit+0x1b0>)
 8000a0c:	f043 0302 	orr.w	r3, r3, #2
 8000a10:	6313      	str	r3, [r2, #48]	@ 0x30
 8000a12:	4b5f      	ldr	r3, [pc, #380]	@ (8000b90 <HAL_I2C_MspInit+0x1b0>)
 8000a14:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a16:	f003 0302 	and.w	r3, r3, #2
 8000a1a:	623b      	str	r3, [r7, #32]
 8000a1c:	6a3b      	ldr	r3, [r7, #32]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8000a1e:	23c0      	movs	r3, #192	@ 0xc0
 8000a20:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000a22:	2312      	movs	r3, #18
 8000a24:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a26:	2300      	movs	r3, #0
 8000a28:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000a2a:	2303      	movs	r3, #3
 8000a2c:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8000a2e:	2304      	movs	r3, #4
 8000a30:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000a32:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000a36:	4619      	mov	r1, r3
 8000a38:	4856      	ldr	r0, [pc, #344]	@ (8000b94 <HAL_I2C_MspInit+0x1b4>)
 8000a3a:	f000 fe35 	bl	80016a8 <HAL_GPIO_Init>

    /* I2C1 clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8000a3e:	2300      	movs	r3, #0
 8000a40:	61fb      	str	r3, [r7, #28]
 8000a42:	4b53      	ldr	r3, [pc, #332]	@ (8000b90 <HAL_I2C_MspInit+0x1b0>)
 8000a44:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000a46:	4a52      	ldr	r2, [pc, #328]	@ (8000b90 <HAL_I2C_MspInit+0x1b0>)
 8000a48:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8000a4c:	6413      	str	r3, [r2, #64]	@ 0x40
 8000a4e:	4b50      	ldr	r3, [pc, #320]	@ (8000b90 <HAL_I2C_MspInit+0x1b0>)
 8000a50:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000a52:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8000a56:	61fb      	str	r3, [r7, #28]
 8000a58:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_I2C3_CLK_ENABLE();
  /* USER CODE BEGIN I2C3_MspInit 1 */

  /* USER CODE END I2C3_MspInit 1 */
  }
}
 8000a5a:	e093      	b.n	8000b84 <HAL_I2C_MspInit+0x1a4>
  else if(i2cHandle->Instance==I2C2)
 8000a5c:	687b      	ldr	r3, [r7, #4]
 8000a5e:	681b      	ldr	r3, [r3, #0]
 8000a60:	4a4d      	ldr	r2, [pc, #308]	@ (8000b98 <HAL_I2C_MspInit+0x1b8>)
 8000a62:	4293      	cmp	r3, r2
 8000a64:	d13d      	bne.n	8000ae2 <HAL_I2C_MspInit+0x102>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000a66:	2300      	movs	r3, #0
 8000a68:	61bb      	str	r3, [r7, #24]
 8000a6a:	4b49      	ldr	r3, [pc, #292]	@ (8000b90 <HAL_I2C_MspInit+0x1b0>)
 8000a6c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a6e:	4a48      	ldr	r2, [pc, #288]	@ (8000b90 <HAL_I2C_MspInit+0x1b0>)
 8000a70:	f043 0302 	orr.w	r3, r3, #2
 8000a74:	6313      	str	r3, [r2, #48]	@ 0x30
 8000a76:	4b46      	ldr	r3, [pc, #280]	@ (8000b90 <HAL_I2C_MspInit+0x1b0>)
 8000a78:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a7a:	f003 0302 	and.w	r3, r3, #2
 8000a7e:	61bb      	str	r3, [r7, #24]
 8000a80:	69bb      	ldr	r3, [r7, #24]
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8000a82:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000a86:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000a88:	2312      	movs	r3, #18
 8000a8a:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a8c:	2300      	movs	r3, #0
 8000a8e:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000a90:	2303      	movs	r3, #3
 8000a92:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8000a94:	2304      	movs	r3, #4
 8000a96:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000a98:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000a9c:	4619      	mov	r1, r3
 8000a9e:	483d      	ldr	r0, [pc, #244]	@ (8000b94 <HAL_I2C_MspInit+0x1b4>)
 8000aa0:	f000 fe02 	bl	80016a8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8000aa4:	2308      	movs	r3, #8
 8000aa6:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000aa8:	2312      	movs	r3, #18
 8000aaa:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000aac:	2300      	movs	r3, #0
 8000aae:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000ab0:	2303      	movs	r3, #3
 8000ab2:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF9_I2C2;
 8000ab4:	2309      	movs	r3, #9
 8000ab6:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000ab8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000abc:	4619      	mov	r1, r3
 8000abe:	4835      	ldr	r0, [pc, #212]	@ (8000b94 <HAL_I2C_MspInit+0x1b4>)
 8000ac0:	f000 fdf2 	bl	80016a8 <HAL_GPIO_Init>
    __HAL_RCC_I2C2_CLK_ENABLE();
 8000ac4:	2300      	movs	r3, #0
 8000ac6:	617b      	str	r3, [r7, #20]
 8000ac8:	4b31      	ldr	r3, [pc, #196]	@ (8000b90 <HAL_I2C_MspInit+0x1b0>)
 8000aca:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000acc:	4a30      	ldr	r2, [pc, #192]	@ (8000b90 <HAL_I2C_MspInit+0x1b0>)
 8000ace:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8000ad2:	6413      	str	r3, [r2, #64]	@ 0x40
 8000ad4:	4b2e      	ldr	r3, [pc, #184]	@ (8000b90 <HAL_I2C_MspInit+0x1b0>)
 8000ad6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000ad8:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8000adc:	617b      	str	r3, [r7, #20]
 8000ade:	697b      	ldr	r3, [r7, #20]
}
 8000ae0:	e050      	b.n	8000b84 <HAL_I2C_MspInit+0x1a4>
  else if(i2cHandle->Instance==I2C3)
 8000ae2:	687b      	ldr	r3, [r7, #4]
 8000ae4:	681b      	ldr	r3, [r3, #0]
 8000ae6:	4a2d      	ldr	r2, [pc, #180]	@ (8000b9c <HAL_I2C_MspInit+0x1bc>)
 8000ae8:	4293      	cmp	r3, r2
 8000aea:	d14b      	bne.n	8000b84 <HAL_I2C_MspInit+0x1a4>
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000aec:	2300      	movs	r3, #0
 8000aee:	613b      	str	r3, [r7, #16]
 8000af0:	4b27      	ldr	r3, [pc, #156]	@ (8000b90 <HAL_I2C_MspInit+0x1b0>)
 8000af2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000af4:	4a26      	ldr	r2, [pc, #152]	@ (8000b90 <HAL_I2C_MspInit+0x1b0>)
 8000af6:	f043 0304 	orr.w	r3, r3, #4
 8000afa:	6313      	str	r3, [r2, #48]	@ 0x30
 8000afc:	4b24      	ldr	r3, [pc, #144]	@ (8000b90 <HAL_I2C_MspInit+0x1b0>)
 8000afe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000b00:	f003 0304 	and.w	r3, r3, #4
 8000b04:	613b      	str	r3, [r7, #16]
 8000b06:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000b08:	2300      	movs	r3, #0
 8000b0a:	60fb      	str	r3, [r7, #12]
 8000b0c:	4b20      	ldr	r3, [pc, #128]	@ (8000b90 <HAL_I2C_MspInit+0x1b0>)
 8000b0e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000b10:	4a1f      	ldr	r2, [pc, #124]	@ (8000b90 <HAL_I2C_MspInit+0x1b0>)
 8000b12:	f043 0301 	orr.w	r3, r3, #1
 8000b16:	6313      	str	r3, [r2, #48]	@ 0x30
 8000b18:	4b1d      	ldr	r3, [pc, #116]	@ (8000b90 <HAL_I2C_MspInit+0x1b0>)
 8000b1a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000b1c:	f003 0301 	and.w	r3, r3, #1
 8000b20:	60fb      	str	r3, [r7, #12]
 8000b22:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8000b24:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8000b28:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000b2a:	2312      	movs	r3, #18
 8000b2c:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b2e:	2300      	movs	r3, #0
 8000b30:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000b32:	2303      	movs	r3, #3
 8000b34:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8000b36:	2304      	movs	r3, #4
 8000b38:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000b3a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000b3e:	4619      	mov	r1, r3
 8000b40:	4817      	ldr	r0, [pc, #92]	@ (8000ba0 <HAL_I2C_MspInit+0x1c0>)
 8000b42:	f000 fdb1 	bl	80016a8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8000b46:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8000b4a:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000b4c:	2312      	movs	r3, #18
 8000b4e:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b50:	2300      	movs	r3, #0
 8000b52:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000b54:	2303      	movs	r3, #3
 8000b56:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8000b58:	2304      	movs	r3, #4
 8000b5a:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000b5c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000b60:	4619      	mov	r1, r3
 8000b62:	4810      	ldr	r0, [pc, #64]	@ (8000ba4 <HAL_I2C_MspInit+0x1c4>)
 8000b64:	f000 fda0 	bl	80016a8 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8000b68:	2300      	movs	r3, #0
 8000b6a:	60bb      	str	r3, [r7, #8]
 8000b6c:	4b08      	ldr	r3, [pc, #32]	@ (8000b90 <HAL_I2C_MspInit+0x1b0>)
 8000b6e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000b70:	4a07      	ldr	r2, [pc, #28]	@ (8000b90 <HAL_I2C_MspInit+0x1b0>)
 8000b72:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8000b76:	6413      	str	r3, [r2, #64]	@ 0x40
 8000b78:	4b05      	ldr	r3, [pc, #20]	@ (8000b90 <HAL_I2C_MspInit+0x1b0>)
 8000b7a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000b7c:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8000b80:	60bb      	str	r3, [r7, #8]
 8000b82:	68bb      	ldr	r3, [r7, #8]
}
 8000b84:	bf00      	nop
 8000b86:	3738      	adds	r7, #56	@ 0x38
 8000b88:	46bd      	mov	sp, r7
 8000b8a:	bd80      	pop	{r7, pc}
 8000b8c:	40005400 	.word	0x40005400
 8000b90:	40023800 	.word	0x40023800
 8000b94:	40020400 	.word	0x40020400
 8000b98:	40005800 	.word	0x40005800
 8000b9c:	40005c00 	.word	0x40005c00
 8000ba0:	40020800 	.word	0x40020800
 8000ba4:	40020000 	.word	0x40020000

08000ba8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000ba8:	b580      	push	{r7, lr}
 8000baa:	b08c      	sub	sp, #48	@ 0x30
 8000bac:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN 1 */
  uint8_t Single_Converter_Index = 0;
 8000bae:	2300      	movs	r3, #0
 8000bb0:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000bb4:	f000 fb3e 	bl	8001234 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000bb8:	f000 f85e 	bl	8000c78 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000bbc:	f7ff fe3c 	bl	8000838 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8000bc0:	f000 fa54 	bl	800106c <MX_USART2_UART_Init>
  MX_I2C1_Init();
 8000bc4:	f7ff fe82 	bl	80008cc <MX_I2C1_Init>
  MX_I2C2_Init();
 8000bc8:	f7ff feae 	bl	8000928 <MX_I2C2_Init>
  MX_I2C3_Init();
 8000bcc:	f7ff feda 	bl	8000984 <MX_I2C3_Init>

	  }
	  while (1);
  }
  else {
	  sprintf((char *)OutputBuffer, "Communication Started\r\n");
 8000bd0:	4921      	ldr	r1, [pc, #132]	@ (8000c58 <main+0xb0>)
 8000bd2:	4822      	ldr	r0, [pc, #136]	@ (8000c5c <main+0xb4>)
 8000bd4:	f003 fcc2 	bl	800455c <siprintf>
	  PrintOutputBuffer(OutputBuffer);
 8000bd8:	4820      	ldr	r0, [pc, #128]	@ (8000c5c <main+0xb4>)
 8000bda:	f000 fadb 	bl	8001194 <PrintOutputBuffer>
	  sprintf((char *)OutputBuffer, "Receiving Character\r\n");
 8000bde:	4920      	ldr	r1, [pc, #128]	@ (8000c60 <main+0xb8>)
 8000be0:	481e      	ldr	r0, [pc, #120]	@ (8000c5c <main+0xb4>)
 8000be2:	f003 fcbb 	bl	800455c <siprintf>
	  PrintOutputBuffer(OutputBuffer);
 8000be6:	481d      	ldr	r0, [pc, #116]	@ (8000c5c <main+0xb4>)
 8000be8:	f000 fad4 	bl	8001194 <PrintOutputBuffer>
	  HAL_Status = HAL_UART_Receive_IT(&huart2, &ReceiveCharacter, 1);
 8000bec:	2201      	movs	r2, #1
 8000bee:	491d      	ldr	r1, [pc, #116]	@ (8000c64 <main+0xbc>)
 8000bf0:	481d      	ldr	r0, [pc, #116]	@ (8000c68 <main+0xc0>)
 8000bf2:	f002 fd38 	bl	8003666 <HAL_UART_Receive_IT>
 8000bf6:	4603      	mov	r3, r0
 8000bf8:	461a      	mov	r2, r3
 8000bfa:	4b1c      	ldr	r3, [pc, #112]	@ (8000c6c <main+0xc4>)
 8000bfc:	701a      	strb	r2, [r3, #0]

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  if (Interrupt_Occurred) {
 8000bfe:	4b1c      	ldr	r3, [pc, #112]	@ (8000c70 <main+0xc8>)
 8000c00:	781b      	ldrb	r3, [r3, #0]
 8000c02:	2b00      	cmp	r3, #0
 8000c04:	d012      	beq.n	8000c2c <main+0x84>
	  	  Interrupt_Occurred = 0;
 8000c06:	4b1a      	ldr	r3, [pc, #104]	@ (8000c70 <main+0xc8>)
 8000c08:	2200      	movs	r2, #0
 8000c0a:	701a      	strb	r2, [r3, #0]
	  	  HAL_Status = HAL_UART_Receive_IT(&huart2, &ReceiveCharacter, 1);
 8000c0c:	2201      	movs	r2, #1
 8000c0e:	4915      	ldr	r1, [pc, #84]	@ (8000c64 <main+0xbc>)
 8000c10:	4815      	ldr	r0, [pc, #84]	@ (8000c68 <main+0xc0>)
 8000c12:	f002 fd28 	bl	8003666 <HAL_UART_Receive_IT>
 8000c16:	4603      	mov	r3, r0
 8000c18:	461a      	mov	r2, r3
 8000c1a:	4b14      	ldr	r3, [pc, #80]	@ (8000c6c <main+0xc4>)
 8000c1c:	701a      	strb	r2, [r3, #0]
	  	  if (Current_Mode == SWEEP_PANELS) {
 8000c1e:	4b15      	ldr	r3, [pc, #84]	@ (8000c74 <main+0xcc>)
 8000c20:	781b      	ldrb	r3, [r3, #0]
 8000c22:	2b04      	cmp	r3, #4
 8000c24:	d102      	bne.n	8000c2c <main+0x84>
	  		  Increase_Converter_Reference_Voltage(8);
 8000c26:	2008      	movs	r0, #8
 8000c28:	f000 f9b8 	bl	8000f9c <Increase_Converter_Reference_Voltage>
	  	  }
	  }
	  switch (Current_Mode) {
 8000c2c:	4b11      	ldr	r3, [pc, #68]	@ (8000c74 <main+0xcc>)
 8000c2e:	781b      	ldrb	r3, [r3, #0]
 8000c30:	3b01      	subs	r3, #1
 8000c32:	2b03      	cmp	r3, #3
 8000c34:	d80a      	bhi.n	8000c4c <main+0xa4>
 8000c36:	a201      	add	r2, pc, #4	@ (adr r2, 8000c3c <main+0x94>)
 8000c38:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000c3c:	08000c4d 	.word	0x08000c4d
 8000c40:	08000c4d 	.word	0x08000c4d
 8000c44:	08000c4d 	.word	0x08000c4d
 8000c48:	08000c4d 	.word	0x08000c4d
			  break;
		  case SMART_ALGORITHM:

			  break;
	  }
	  HAL_Delay(500);
 8000c4c:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8000c50:	f000 fb62 	bl	8001318 <HAL_Delay>
	  if (Interrupt_Occurred) {
 8000c54:	e7d3      	b.n	8000bfe <main+0x56>
 8000c56:	bf00      	nop
 8000c58:	08004eb4 	.word	0x08004eb4
 8000c5c:	2000017c 	.word	0x2000017c
 8000c60:	08004ecc 	.word	0x08004ecc
 8000c64:	20000178 	.word	0x20000178
 8000c68:	20000204 	.word	0x20000204
 8000c6c:	200001fd 	.word	0x200001fd
 8000c70:	200001fc 	.word	0x200001fc
 8000c74:	20000000 	.word	0x20000000

08000c78 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000c78:	b580      	push	{r7, lr}
 8000c7a:	b094      	sub	sp, #80	@ 0x50
 8000c7c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000c7e:	f107 0320 	add.w	r3, r7, #32
 8000c82:	2230      	movs	r2, #48	@ 0x30
 8000c84:	2100      	movs	r1, #0
 8000c86:	4618      	mov	r0, r3
 8000c88:	f003 fc88 	bl	800459c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000c8c:	f107 030c 	add.w	r3, r7, #12
 8000c90:	2200      	movs	r2, #0
 8000c92:	601a      	str	r2, [r3, #0]
 8000c94:	605a      	str	r2, [r3, #4]
 8000c96:	609a      	str	r2, [r3, #8]
 8000c98:	60da      	str	r2, [r3, #12]
 8000c9a:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000c9c:	2300      	movs	r3, #0
 8000c9e:	60bb      	str	r3, [r7, #8]
 8000ca0:	4b23      	ldr	r3, [pc, #140]	@ (8000d30 <SystemClock_Config+0xb8>)
 8000ca2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000ca4:	4a22      	ldr	r2, [pc, #136]	@ (8000d30 <SystemClock_Config+0xb8>)
 8000ca6:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000caa:	6413      	str	r3, [r2, #64]	@ 0x40
 8000cac:	4b20      	ldr	r3, [pc, #128]	@ (8000d30 <SystemClock_Config+0xb8>)
 8000cae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000cb0:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000cb4:	60bb      	str	r3, [r7, #8]
 8000cb6:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 8000cb8:	2300      	movs	r3, #0
 8000cba:	607b      	str	r3, [r7, #4]
 8000cbc:	4b1d      	ldr	r3, [pc, #116]	@ (8000d34 <SystemClock_Config+0xbc>)
 8000cbe:	681b      	ldr	r3, [r3, #0]
 8000cc0:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8000cc4:	4a1b      	ldr	r2, [pc, #108]	@ (8000d34 <SystemClock_Config+0xbc>)
 8000cc6:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8000cca:	6013      	str	r3, [r2, #0]
 8000ccc:	4b19      	ldr	r3, [pc, #100]	@ (8000d34 <SystemClock_Config+0xbc>)
 8000cce:	681b      	ldr	r3, [r3, #0]
 8000cd0:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8000cd4:	607b      	str	r3, [r7, #4]
 8000cd6:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000cd8:	2302      	movs	r3, #2
 8000cda:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000cdc:	2301      	movs	r3, #1
 8000cde:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000ce0:	2310      	movs	r3, #16
 8000ce2:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8000ce4:	2300      	movs	r3, #0
 8000ce6:	63bb      	str	r3, [r7, #56]	@ 0x38
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000ce8:	f107 0320 	add.w	r3, r7, #32
 8000cec:	4618      	mov	r0, r3
 8000cee:	f001 ff87 	bl	8002c00 <HAL_RCC_OscConfig>
 8000cf2:	4603      	mov	r3, r0
 8000cf4:	2b00      	cmp	r3, #0
 8000cf6:	d001      	beq.n	8000cfc <SystemClock_Config+0x84>
  {
    Error_Handler();
 8000cf8:	f000 f8b2 	bl	8000e60 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000cfc:	230f      	movs	r3, #15
 8000cfe:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8000d00:	2300      	movs	r3, #0
 8000d02:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000d04:	2300      	movs	r3, #0
 8000d06:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000d08:	2300      	movs	r3, #0
 8000d0a:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000d0c:	2300      	movs	r3, #0
 8000d0e:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8000d10:	f107 030c 	add.w	r3, r7, #12
 8000d14:	2100      	movs	r1, #0
 8000d16:	4618      	mov	r0, r3
 8000d18:	f002 f9ea 	bl	80030f0 <HAL_RCC_ClockConfig>
 8000d1c:	4603      	mov	r3, r0
 8000d1e:	2b00      	cmp	r3, #0
 8000d20:	d001      	beq.n	8000d26 <SystemClock_Config+0xae>
  {
    Error_Handler();
 8000d22:	f000 f89d 	bl	8000e60 <Error_Handler>
  }
}
 8000d26:	bf00      	nop
 8000d28:	3750      	adds	r7, #80	@ 0x50
 8000d2a:	46bd      	mov	sp, r7
 8000d2c:	bd80      	pop	{r7, pc}
 8000d2e:	bf00      	nop
 8000d30:	40023800 	.word	0x40023800
 8000d34:	40007000 	.word	0x40007000

08000d38 <HAL_UART_RxCpltCallback>:

/* USER CODE BEGIN 4 */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8000d38:	b580      	push	{r7, lr}
 8000d3a:	b086      	sub	sp, #24
 8000d3c:	af00      	add	r7, sp, #0
 8000d3e:	6078      	str	r0, [r7, #4]
  if (TESTING_MODE) return;
  Interrupt_Occurred = 1;
 8000d40:	4b3b      	ldr	r3, [pc, #236]	@ (8000e30 <HAL_UART_RxCpltCallback+0xf8>)
 8000d42:	2201      	movs	r2, #1
 8000d44:	701a      	strb	r2, [r3, #0]
  HAL_Status = HAL_UART_Receive_IT(&huart2, &ReceiveCharacter, 1);
 8000d46:	2201      	movs	r2, #1
 8000d48:	493a      	ldr	r1, [pc, #232]	@ (8000e34 <HAL_UART_RxCpltCallback+0xfc>)
 8000d4a:	483b      	ldr	r0, [pc, #236]	@ (8000e38 <HAL_UART_RxCpltCallback+0x100>)
 8000d4c:	f002 fc8b 	bl	8003666 <HAL_UART_Receive_IT>
 8000d50:	4603      	mov	r3, r0
 8000d52:	461a      	mov	r2, r3
 8000d54:	4b39      	ldr	r3, [pc, #228]	@ (8000e3c <HAL_UART_RxCpltCallback+0x104>)
 8000d56:	701a      	strb	r2, [r3, #0]
  if (ReceiveCharacter == '0') {
 8000d58:	4b36      	ldr	r3, [pc, #216]	@ (8000e34 <HAL_UART_RxCpltCallback+0xfc>)
 8000d5a:	781b      	ldrb	r3, [r3, #0]
 8000d5c:	2b30      	cmp	r3, #48	@ 0x30
 8000d5e:	d125      	bne.n	8000dac <HAL_UART_RxCpltCallback+0x74>
	  float Voltage;
	  float Current;
	  float Power;
//	  Read_Sensor_ValuesACS37800(NUMBER_OF_CONVERTERS - 1, &Voltage, &Current);
	  Get_Sensor_Values_for_Panel_hc_test(NUMBER_OF_CONVERTERS - 1, &Voltage, &Current);
 8000d60:	f107 0210 	add.w	r2, r7, #16
 8000d64:	f107 0314 	add.w	r3, r7, #20
 8000d68:	4619      	mov	r1, r3
 8000d6a:	2000      	movs	r0, #0
 8000d6c:	f000 f87e 	bl	8000e6c <Get_Sensor_Values_for_Panel_hc_test>
//	  Voltage = 20;
//	  Current = 30;
	  Power = Calculate_Power_hc(Voltage, Current);
 8000d70:	edd7 7a05 	vldr	s15, [r7, #20]
 8000d74:	ed97 7a04 	vldr	s14, [r7, #16]
 8000d78:	eef0 0a47 	vmov.f32	s1, s14
 8000d7c:	eeb0 0a67 	vmov.f32	s0, s15
 8000d80:	f7ff fd90 	bl	80008a4 <Calculate_Power_hc>
 8000d84:	eef0 7a40 	vmov.f32	s15, s0
 8000d88:	edc7 7a03 	vstr	s15, [r7, #12]
	  memcpy(OutputBuffer, &Voltage, 4);
 8000d8c:	697b      	ldr	r3, [r7, #20]
 8000d8e:	4a2c      	ldr	r2, [pc, #176]	@ (8000e40 <HAL_UART_RxCpltCallback+0x108>)
 8000d90:	6013      	str	r3, [r2, #0]
	  memcpy(OutputBuffer + 4, &Current, 4);
 8000d92:	4a2c      	ldr	r2, [pc, #176]	@ (8000e44 <HAL_UART_RxCpltCallback+0x10c>)
 8000d94:	693b      	ldr	r3, [r7, #16]
 8000d96:	6013      	str	r3, [r2, #0]
	  memcpy(OutputBuffer + 8, &Power, 4);
 8000d98:	4a2b      	ldr	r2, [pc, #172]	@ (8000e48 <HAL_UART_RxCpltCallback+0x110>)
 8000d9a:	68fb      	ldr	r3, [r7, #12]
 8000d9c:	6013      	str	r3, [r2, #0]
	  OutputBuffer[DATALENGTH] = '\0';
 8000d9e:	4b28      	ldr	r3, [pc, #160]	@ (8000e40 <HAL_UART_RxCpltCallback+0x108>)
 8000da0:	2200      	movs	r2, #0
 8000da2:	731a      	strb	r2, [r3, #12]
	  PrintOutputData(OutputBuffer);
 8000da4:	4826      	ldr	r0, [pc, #152]	@ (8000e40 <HAL_UART_RxCpltCallback+0x108>)
 8000da6:	f000 f9dd 	bl	8001164 <PrintOutputData>
 8000daa:	e03d      	b.n	8000e28 <HAL_UART_RxCpltCallback+0xf0>
  }
  else if (ReceiveCharacter == '1') {
 8000dac:	4b21      	ldr	r3, [pc, #132]	@ (8000e34 <HAL_UART_RxCpltCallback+0xfc>)
 8000dae:	781b      	ldrb	r3, [r3, #0]
 8000db0:	2b31      	cmp	r3, #49	@ 0x31
 8000db2:	d10a      	bne.n	8000dca <HAL_UART_RxCpltCallback+0x92>
	  sprintf((char *)OutputBuffer, "P&O");
 8000db4:	4925      	ldr	r1, [pc, #148]	@ (8000e4c <HAL_UART_RxCpltCallback+0x114>)
 8000db6:	4822      	ldr	r0, [pc, #136]	@ (8000e40 <HAL_UART_RxCpltCallback+0x108>)
 8000db8:	f003 fbd0 	bl	800455c <siprintf>
	  PrintOutputBuffer(OutputBuffer);
 8000dbc:	4820      	ldr	r0, [pc, #128]	@ (8000e40 <HAL_UART_RxCpltCallback+0x108>)
 8000dbe:	f000 f9e9 	bl	8001194 <PrintOutputBuffer>
	  Current_Mode = PERTURB_AND_OBSERVE;
 8000dc2:	4b23      	ldr	r3, [pc, #140]	@ (8000e50 <HAL_UART_RxCpltCallback+0x118>)
 8000dc4:	2201      	movs	r2, #1
 8000dc6:	701a      	strb	r2, [r3, #0]
 8000dc8:	e02e      	b.n	8000e28 <HAL_UART_RxCpltCallback+0xf0>
  }
  else if (ReceiveCharacter == '2') {
 8000dca:	4b1a      	ldr	r3, [pc, #104]	@ (8000e34 <HAL_UART_RxCpltCallback+0xfc>)
 8000dcc:	781b      	ldrb	r3, [r3, #0]
 8000dce:	2b32      	cmp	r3, #50	@ 0x32
 8000dd0:	d10a      	bne.n	8000de8 <HAL_UART_RxCpltCallback+0xb0>
	  sprintf((char *)OutputBuffer, "HC");
 8000dd2:	4920      	ldr	r1, [pc, #128]	@ (8000e54 <HAL_UART_RxCpltCallback+0x11c>)
 8000dd4:	481a      	ldr	r0, [pc, #104]	@ (8000e40 <HAL_UART_RxCpltCallback+0x108>)
 8000dd6:	f003 fbc1 	bl	800455c <siprintf>
	  PrintOutputBuffer(OutputBuffer);
 8000dda:	4819      	ldr	r0, [pc, #100]	@ (8000e40 <HAL_UART_RxCpltCallback+0x108>)
 8000ddc:	f000 f9da 	bl	8001194 <PrintOutputBuffer>
	  Current_Mode = HILL_CLIMBING;
 8000de0:	4b1b      	ldr	r3, [pc, #108]	@ (8000e50 <HAL_UART_RxCpltCallback+0x118>)
 8000de2:	2202      	movs	r2, #2
 8000de4:	701a      	strb	r2, [r3, #0]
 8000de6:	e01f      	b.n	8000e28 <HAL_UART_RxCpltCallback+0xf0>
  }
  else if (ReceiveCharacter == '3') {
 8000de8:	4b12      	ldr	r3, [pc, #72]	@ (8000e34 <HAL_UART_RxCpltCallback+0xfc>)
 8000dea:	781b      	ldrb	r3, [r3, #0]
 8000dec:	2b33      	cmp	r3, #51	@ 0x33
 8000dee:	d10a      	bne.n	8000e06 <HAL_UART_RxCpltCallback+0xce>
	  sprintf((char *)OutputBuffer, "SA");
 8000df0:	4919      	ldr	r1, [pc, #100]	@ (8000e58 <HAL_UART_RxCpltCallback+0x120>)
 8000df2:	4813      	ldr	r0, [pc, #76]	@ (8000e40 <HAL_UART_RxCpltCallback+0x108>)
 8000df4:	f003 fbb2 	bl	800455c <siprintf>
	  PrintOutputBuffer(OutputBuffer);
 8000df8:	4811      	ldr	r0, [pc, #68]	@ (8000e40 <HAL_UART_RxCpltCallback+0x108>)
 8000dfa:	f000 f9cb 	bl	8001194 <PrintOutputBuffer>
	  Current_Mode = SMART_ALGORITHM;
 8000dfe:	4b14      	ldr	r3, [pc, #80]	@ (8000e50 <HAL_UART_RxCpltCallback+0x118>)
 8000e00:	2203      	movs	r2, #3
 8000e02:	701a      	strb	r2, [r3, #0]
 8000e04:	e010      	b.n	8000e28 <HAL_UART_RxCpltCallback+0xf0>
  }
  else if (ReceiveCharacter == '4') {
 8000e06:	4b0b      	ldr	r3, [pc, #44]	@ (8000e34 <HAL_UART_RxCpltCallback+0xfc>)
 8000e08:	781b      	ldrb	r3, [r3, #0]
 8000e0a:	2b34      	cmp	r3, #52	@ 0x34
 8000e0c:	d10c      	bne.n	8000e28 <HAL_UART_RxCpltCallback+0xf0>
	  sprintf((char *)OutputBuffer, "PS");
 8000e0e:	4913      	ldr	r1, [pc, #76]	@ (8000e5c <HAL_UART_RxCpltCallback+0x124>)
 8000e10:	480b      	ldr	r0, [pc, #44]	@ (8000e40 <HAL_UART_RxCpltCallback+0x108>)
 8000e12:	f003 fba3 	bl	800455c <siprintf>
	  PrintOutputBuffer(OutputBuffer);
 8000e16:	480a      	ldr	r0, [pc, #40]	@ (8000e40 <HAL_UART_RxCpltCallback+0x108>)
 8000e18:	f000 f9bc 	bl	8001194 <PrintOutputBuffer>
	  Current_Mode = SWEEP_PANELS;
 8000e1c:	4b0c      	ldr	r3, [pc, #48]	@ (8000e50 <HAL_UART_RxCpltCallback+0x118>)
 8000e1e:	2204      	movs	r2, #4
 8000e20:	701a      	strb	r2, [r3, #0]
	  Reset_Converters(NUMBER_OF_CONVERTERS);
 8000e22:	2001      	movs	r0, #1
 8000e24:	f000 f89c 	bl	8000f60 <Reset_Converters>
  }
}
 8000e28:	3718      	adds	r7, #24
 8000e2a:	46bd      	mov	sp, r7
 8000e2c:	bd80      	pop	{r7, pc}
 8000e2e:	bf00      	nop
 8000e30:	200001fc 	.word	0x200001fc
 8000e34:	20000178 	.word	0x20000178
 8000e38:	20000204 	.word	0x20000204
 8000e3c:	200001fd 	.word	0x200001fd
 8000e40:	2000017c 	.word	0x2000017c
 8000e44:	20000180 	.word	0x20000180
 8000e48:	20000184 	.word	0x20000184
 8000e4c:	08004ee4 	.word	0x08004ee4
 8000e50:	20000000 	.word	0x20000000
 8000e54:	08004ee8 	.word	0x08004ee8
 8000e58:	08004eec 	.word	0x08004eec
 8000e5c:	08004ef0 	.word	0x08004ef0

08000e60 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000e60:	b480      	push	{r7}
 8000e62:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000e64:	b672      	cpsid	i
}
 8000e66:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000e68:	bf00      	nop
 8000e6a:	e7fd      	b.n	8000e68 <Error_Handler+0x8>

08000e6c <Get_Sensor_Values_for_Panel_hc_test>:
	uint32_t I_line = Iin_as_float * (V_line / Vin_as_float);
	return I_line;
}

void Get_Sensor_Values_for_Panel_hc_test(uint8_t Converter_Index, float *Voltage, float *Current)
{
 8000e6c:	b480      	push	{r7}
 8000e6e:	b085      	sub	sp, #20
 8000e70:	af00      	add	r7, sp, #0
 8000e72:	4603      	mov	r3, r0
 8000e74:	60b9      	str	r1, [r7, #8]
 8000e76:	607a      	str	r2, [r7, #4]
 8000e78:	73fb      	strb	r3, [r7, #15]
	*Voltage = 1.6;
 8000e7a:	68bb      	ldr	r3, [r7, #8]
 8000e7c:	4a05      	ldr	r2, [pc, #20]	@ (8000e94 <Get_Sensor_Values_for_Panel_hc_test+0x28>)
 8000e7e:	601a      	str	r2, [r3, #0]
	*Current = 7.3;
 8000e80:	687b      	ldr	r3, [r7, #4]
 8000e82:	4a05      	ldr	r2, [pc, #20]	@ (8000e98 <Get_Sensor_Values_for_Panel_hc_test+0x2c>)
 8000e84:	601a      	str	r2, [r3, #0]
}
 8000e86:	bf00      	nop
 8000e88:	3714      	adds	r7, #20
 8000e8a:	46bd      	mov	sp, r7
 8000e8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e90:	4770      	bx	lr
 8000e92:	bf00      	nop
 8000e94:	3fcccccd 	.word	0x3fcccccd
 8000e98:	40e9999a 	.word	0x40e9999a

08000e9c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000e9c:	b480      	push	{r7}
 8000e9e:	b083      	sub	sp, #12
 8000ea0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000ea2:	2300      	movs	r3, #0
 8000ea4:	607b      	str	r3, [r7, #4]
 8000ea6:	4b10      	ldr	r3, [pc, #64]	@ (8000ee8 <HAL_MspInit+0x4c>)
 8000ea8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000eaa:	4a0f      	ldr	r2, [pc, #60]	@ (8000ee8 <HAL_MspInit+0x4c>)
 8000eac:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000eb0:	6453      	str	r3, [r2, #68]	@ 0x44
 8000eb2:	4b0d      	ldr	r3, [pc, #52]	@ (8000ee8 <HAL_MspInit+0x4c>)
 8000eb4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000eb6:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8000eba:	607b      	str	r3, [r7, #4]
 8000ebc:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ebe:	2300      	movs	r3, #0
 8000ec0:	603b      	str	r3, [r7, #0]
 8000ec2:	4b09      	ldr	r3, [pc, #36]	@ (8000ee8 <HAL_MspInit+0x4c>)
 8000ec4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000ec6:	4a08      	ldr	r2, [pc, #32]	@ (8000ee8 <HAL_MspInit+0x4c>)
 8000ec8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000ecc:	6413      	str	r3, [r2, #64]	@ 0x40
 8000ece:	4b06      	ldr	r3, [pc, #24]	@ (8000ee8 <HAL_MspInit+0x4c>)
 8000ed0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000ed2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000ed6:	603b      	str	r3, [r7, #0]
 8000ed8:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000eda:	bf00      	nop
 8000edc:	370c      	adds	r7, #12
 8000ede:	46bd      	mov	sp, r7
 8000ee0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ee4:	4770      	bx	lr
 8000ee6:	bf00      	nop
 8000ee8:	40023800 	.word	0x40023800

08000eec <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000eec:	b480      	push	{r7}
 8000eee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8000ef0:	bf00      	nop
 8000ef2:	e7fd      	b.n	8000ef0 <NMI_Handler+0x4>

08000ef4 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000ef4:	b480      	push	{r7}
 8000ef6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000ef8:	bf00      	nop
 8000efa:	e7fd      	b.n	8000ef8 <HardFault_Handler+0x4>

08000efc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000efc:	b480      	push	{r7}
 8000efe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000f00:	bf00      	nop
 8000f02:	e7fd      	b.n	8000f00 <MemManage_Handler+0x4>

08000f04 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000f04:	b480      	push	{r7}
 8000f06:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000f08:	bf00      	nop
 8000f0a:	e7fd      	b.n	8000f08 <BusFault_Handler+0x4>

08000f0c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000f0c:	b480      	push	{r7}
 8000f0e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000f10:	bf00      	nop
 8000f12:	e7fd      	b.n	8000f10 <UsageFault_Handler+0x4>

08000f14 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000f14:	b480      	push	{r7}
 8000f16:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000f18:	bf00      	nop
 8000f1a:	46bd      	mov	sp, r7
 8000f1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f20:	4770      	bx	lr

08000f22 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000f22:	b480      	push	{r7}
 8000f24:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000f26:	bf00      	nop
 8000f28:	46bd      	mov	sp, r7
 8000f2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f2e:	4770      	bx	lr

08000f30 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000f30:	b480      	push	{r7}
 8000f32:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000f34:	bf00      	nop
 8000f36:	46bd      	mov	sp, r7
 8000f38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f3c:	4770      	bx	lr

08000f3e <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000f3e:	b580      	push	{r7, lr}
 8000f40:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000f42:	f000 f9c9 	bl	80012d8 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000f46:	bf00      	nop
 8000f48:	bd80      	pop	{r7, pc}
	...

08000f4c <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 8000f4c:	b580      	push	{r7, lr}
 8000f4e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8000f50:	4802      	ldr	r0, [pc, #8]	@ (8000f5c <USART2_IRQHandler+0x10>)
 8000f52:	f002 fbad 	bl	80036b0 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */
//  HAL_UART_RxCpltCallback(&huart2);
  /* USER CODE END USART2_IRQn 1 */
}
 8000f56:	bf00      	nop
 8000f58:	bd80      	pop	{r7, pc}
 8000f5a:	bf00      	nop
 8000f5c:	20000204 	.word	0x20000204

08000f60 <Reset_Converters>:
#include "sweeppanels.h"

uint8_t Converter_Number_PS;

void Reset_Converters(uint8_t Number_of_Converters)
{
 8000f60:	b580      	push	{r7, lr}
 8000f62:	b084      	sub	sp, #16
 8000f64:	af00      	add	r7, sp, #0
 8000f66:	4603      	mov	r3, r0
 8000f68:	71fb      	strb	r3, [r7, #7]
	for (int i = 0; i < Number_of_Converters; i++) {
 8000f6a:	2300      	movs	r3, #0
 8000f6c:	60fb      	str	r3, [r7, #12]
 8000f6e:	e008      	b.n	8000f82 <Reset_Converters+0x22>
		Set_Reference_Voltage_TPS55288(i, 0);
 8000f70:	68fb      	ldr	r3, [r7, #12]
 8000f72:	b2db      	uxtb	r3, r3
 8000f74:	2100      	movs	r1, #0
 8000f76:	4618      	mov	r0, r3
 8000f78:	f7ff fbac 	bl	80006d4 <Set_Reference_Voltage_TPS55288>
	for (int i = 0; i < Number_of_Converters; i++) {
 8000f7c:	68fb      	ldr	r3, [r7, #12]
 8000f7e:	3301      	adds	r3, #1
 8000f80:	60fb      	str	r3, [r7, #12]
 8000f82:	79fb      	ldrb	r3, [r7, #7]
 8000f84:	68fa      	ldr	r2, [r7, #12]
 8000f86:	429a      	cmp	r2, r3
 8000f88:	dbf2      	blt.n	8000f70 <Reset_Converters+0x10>
	}
	Converter_Number_PS = Number_of_Converters;
 8000f8a:	4a03      	ldr	r2, [pc, #12]	@ (8000f98 <Reset_Converters+0x38>)
 8000f8c:	79fb      	ldrb	r3, [r7, #7]
 8000f8e:	7013      	strb	r3, [r2, #0]
}
 8000f90:	bf00      	nop
 8000f92:	3710      	adds	r7, #16
 8000f94:	46bd      	mov	sp, r7
 8000f96:	bd80      	pop	{r7, pc}
 8000f98:	200001fe 	.word	0x200001fe

08000f9c <Increase_Converter_Reference_Voltage>:

void Increase_Converter_Reference_Voltage(uint8_t Increase_Rate)
{
 8000f9c:	b580      	push	{r7, lr}
 8000f9e:	b084      	sub	sp, #16
 8000fa0:	af00      	add	r7, sp, #0
 8000fa2:	4603      	mov	r3, r0
 8000fa4:	71fb      	strb	r3, [r7, #7]
	for (int i = 0; i < Converter_Number_PS; i++) {
 8000fa6:	2300      	movs	r3, #0
 8000fa8:	60fb      	str	r3, [r7, #12]
 8000faa:	e009      	b.n	8000fc0 <Increase_Converter_Reference_Voltage+0x24>
		Update_Reference_Voltage_TPS55288(i, 1, Increase_Rate);
 8000fac:	68fb      	ldr	r3, [r7, #12]
 8000fae:	b2db      	uxtb	r3, r3
 8000fb0:	79fa      	ldrb	r2, [r7, #7]
 8000fb2:	2101      	movs	r1, #1
 8000fb4:	4618      	mov	r0, r3
 8000fb6:	f7ff fb03 	bl	80005c0 <Update_Reference_Voltage_TPS55288>
	for (int i = 0; i < Converter_Number_PS; i++) {
 8000fba:	68fb      	ldr	r3, [r7, #12]
 8000fbc:	3301      	adds	r3, #1
 8000fbe:	60fb      	str	r3, [r7, #12]
 8000fc0:	4b05      	ldr	r3, [pc, #20]	@ (8000fd8 <Increase_Converter_Reference_Voltage+0x3c>)
 8000fc2:	781b      	ldrb	r3, [r3, #0]
 8000fc4:	461a      	mov	r2, r3
 8000fc6:	68fb      	ldr	r3, [r7, #12]
 8000fc8:	4293      	cmp	r3, r2
 8000fca:	dbef      	blt.n	8000fac <Increase_Converter_Reference_Voltage+0x10>
	}
}
 8000fcc:	bf00      	nop
 8000fce:	bf00      	nop
 8000fd0:	3710      	adds	r7, #16
 8000fd2:	46bd      	mov	sp, r7
 8000fd4:	bd80      	pop	{r7, pc}
 8000fd6:	bf00      	nop
 8000fd8:	200001fe 	.word	0x200001fe

08000fdc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000fdc:	b580      	push	{r7, lr}
 8000fde:	b086      	sub	sp, #24
 8000fe0:	af00      	add	r7, sp, #0
 8000fe2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000fe4:	4a14      	ldr	r2, [pc, #80]	@ (8001038 <_sbrk+0x5c>)
 8000fe6:	4b15      	ldr	r3, [pc, #84]	@ (800103c <_sbrk+0x60>)
 8000fe8:	1ad3      	subs	r3, r2, r3
 8000fea:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000fec:	697b      	ldr	r3, [r7, #20]
 8000fee:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000ff0:	4b13      	ldr	r3, [pc, #76]	@ (8001040 <_sbrk+0x64>)
 8000ff2:	681b      	ldr	r3, [r3, #0]
 8000ff4:	2b00      	cmp	r3, #0
 8000ff6:	d102      	bne.n	8000ffe <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000ff8:	4b11      	ldr	r3, [pc, #68]	@ (8001040 <_sbrk+0x64>)
 8000ffa:	4a12      	ldr	r2, [pc, #72]	@ (8001044 <_sbrk+0x68>)
 8000ffc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000ffe:	4b10      	ldr	r3, [pc, #64]	@ (8001040 <_sbrk+0x64>)
 8001000:	681a      	ldr	r2, [r3, #0]
 8001002:	687b      	ldr	r3, [r7, #4]
 8001004:	4413      	add	r3, r2
 8001006:	693a      	ldr	r2, [r7, #16]
 8001008:	429a      	cmp	r2, r3
 800100a:	d207      	bcs.n	800101c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800100c:	f003 face 	bl	80045ac <__errno>
 8001010:	4603      	mov	r3, r0
 8001012:	220c      	movs	r2, #12
 8001014:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001016:	f04f 33ff 	mov.w	r3, #4294967295
 800101a:	e009      	b.n	8001030 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800101c:	4b08      	ldr	r3, [pc, #32]	@ (8001040 <_sbrk+0x64>)
 800101e:	681b      	ldr	r3, [r3, #0]
 8001020:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001022:	4b07      	ldr	r3, [pc, #28]	@ (8001040 <_sbrk+0x64>)
 8001024:	681a      	ldr	r2, [r3, #0]
 8001026:	687b      	ldr	r3, [r7, #4]
 8001028:	4413      	add	r3, r2
 800102a:	4a05      	ldr	r2, [pc, #20]	@ (8001040 <_sbrk+0x64>)
 800102c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800102e:	68fb      	ldr	r3, [r7, #12]
}
 8001030:	4618      	mov	r0, r3
 8001032:	3718      	adds	r7, #24
 8001034:	46bd      	mov	sp, r7
 8001036:	bd80      	pop	{r7, pc}
 8001038:	20018000 	.word	0x20018000
 800103c:	00000400 	.word	0x00000400
 8001040:	20000200 	.word	0x20000200
 8001044:	20000398 	.word	0x20000398

08001048 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001048:	b480      	push	{r7}
 800104a:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800104c:	4b06      	ldr	r3, [pc, #24]	@ (8001068 <SystemInit+0x20>)
 800104e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001052:	4a05      	ldr	r2, [pc, #20]	@ (8001068 <SystemInit+0x20>)
 8001054:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001058:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800105c:	bf00      	nop
 800105e:	46bd      	mov	sp, r7
 8001060:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001064:	4770      	bx	lr
 8001066:	bf00      	nop
 8001068:	e000ed00 	.word	0xe000ed00

0800106c <MX_USART2_UART_Init>:
UART_HandleTypeDef huart2;

/* USART2 init function */

void MX_USART2_UART_Init(void)
{
 800106c:	b580      	push	{r7, lr}
 800106e:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8001070:	4b12      	ldr	r3, [pc, #72]	@ (80010bc <MX_USART2_UART_Init+0x50>)
 8001072:	4a13      	ldr	r2, [pc, #76]	@ (80010c0 <MX_USART2_UART_Init+0x54>)
 8001074:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8001076:	4b11      	ldr	r3, [pc, #68]	@ (80010bc <MX_USART2_UART_Init+0x50>)
 8001078:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 800107c:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_9B;
 800107e:	4b0f      	ldr	r3, [pc, #60]	@ (80010bc <MX_USART2_UART_Init+0x50>)
 8001080:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8001084:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8001086:	4b0d      	ldr	r3, [pc, #52]	@ (80010bc <MX_USART2_UART_Init+0x50>)
 8001088:	2200      	movs	r2, #0
 800108a:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_EVEN;
 800108c:	4b0b      	ldr	r3, [pc, #44]	@ (80010bc <MX_USART2_UART_Init+0x50>)
 800108e:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001092:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8001094:	4b09      	ldr	r3, [pc, #36]	@ (80010bc <MX_USART2_UART_Init+0x50>)
 8001096:	220c      	movs	r2, #12
 8001098:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800109a:	4b08      	ldr	r3, [pc, #32]	@ (80010bc <MX_USART2_UART_Init+0x50>)
 800109c:	2200      	movs	r2, #0
 800109e:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80010a0:	4b06      	ldr	r3, [pc, #24]	@ (80010bc <MX_USART2_UART_Init+0x50>)
 80010a2:	2200      	movs	r2, #0
 80010a4:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80010a6:	4805      	ldr	r0, [pc, #20]	@ (80010bc <MX_USART2_UART_Init+0x50>)
 80010a8:	f002 fa02 	bl	80034b0 <HAL_UART_Init>
 80010ac:	4603      	mov	r3, r0
 80010ae:	2b00      	cmp	r3, #0
 80010b0:	d001      	beq.n	80010b6 <MX_USART2_UART_Init+0x4a>
  {
    Error_Handler();
 80010b2:	f7ff fed5 	bl	8000e60 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80010b6:	bf00      	nop
 80010b8:	bd80      	pop	{r7, pc}
 80010ba:	bf00      	nop
 80010bc:	20000204 	.word	0x20000204
 80010c0:	40004400 	.word	0x40004400

080010c4 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 80010c4:	b580      	push	{r7, lr}
 80010c6:	b08a      	sub	sp, #40	@ 0x28
 80010c8:	af00      	add	r7, sp, #0
 80010ca:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80010cc:	f107 0314 	add.w	r3, r7, #20
 80010d0:	2200      	movs	r2, #0
 80010d2:	601a      	str	r2, [r3, #0]
 80010d4:	605a      	str	r2, [r3, #4]
 80010d6:	609a      	str	r2, [r3, #8]
 80010d8:	60da      	str	r2, [r3, #12]
 80010da:	611a      	str	r2, [r3, #16]
  if(uartHandle->Instance==USART2)
 80010dc:	687b      	ldr	r3, [r7, #4]
 80010de:	681b      	ldr	r3, [r3, #0]
 80010e0:	4a1d      	ldr	r2, [pc, #116]	@ (8001158 <HAL_UART_MspInit+0x94>)
 80010e2:	4293      	cmp	r3, r2
 80010e4:	d133      	bne.n	800114e <HAL_UART_MspInit+0x8a>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* USART2 clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 80010e6:	2300      	movs	r3, #0
 80010e8:	613b      	str	r3, [r7, #16]
 80010ea:	4b1c      	ldr	r3, [pc, #112]	@ (800115c <HAL_UART_MspInit+0x98>)
 80010ec:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80010ee:	4a1b      	ldr	r2, [pc, #108]	@ (800115c <HAL_UART_MspInit+0x98>)
 80010f0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80010f4:	6413      	str	r3, [r2, #64]	@ 0x40
 80010f6:	4b19      	ldr	r3, [pc, #100]	@ (800115c <HAL_UART_MspInit+0x98>)
 80010f8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80010fa:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80010fe:	613b      	str	r3, [r7, #16]
 8001100:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001102:	2300      	movs	r3, #0
 8001104:	60fb      	str	r3, [r7, #12]
 8001106:	4b15      	ldr	r3, [pc, #84]	@ (800115c <HAL_UART_MspInit+0x98>)
 8001108:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800110a:	4a14      	ldr	r2, [pc, #80]	@ (800115c <HAL_UART_MspInit+0x98>)
 800110c:	f043 0301 	orr.w	r3, r3, #1
 8001110:	6313      	str	r3, [r2, #48]	@ 0x30
 8001112:	4b12      	ldr	r3, [pc, #72]	@ (800115c <HAL_UART_MspInit+0x98>)
 8001114:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001116:	f003 0301 	and.w	r3, r3, #1
 800111a:	60fb      	str	r3, [r7, #12]
 800111c:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 800111e:	230c      	movs	r3, #12
 8001120:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001122:	2302      	movs	r3, #2
 8001124:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001126:	2300      	movs	r3, #0
 8001128:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800112a:	2303      	movs	r3, #3
 800112c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 800112e:	2307      	movs	r3, #7
 8001130:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001132:	f107 0314 	add.w	r3, r7, #20
 8001136:	4619      	mov	r1, r3
 8001138:	4809      	ldr	r0, [pc, #36]	@ (8001160 <HAL_UART_MspInit+0x9c>)
 800113a:	f000 fab5 	bl	80016a8 <HAL_GPIO_Init>

    /* USART2 interrupt Init */
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 800113e:	2200      	movs	r2, #0
 8001140:	2100      	movs	r1, #0
 8001142:	2026      	movs	r0, #38	@ 0x26
 8001144:	f000 f9e7 	bl	8001516 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8001148:	2026      	movs	r0, #38	@ 0x26
 800114a:	f000 fa00 	bl	800154e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }
}
 800114e:	bf00      	nop
 8001150:	3728      	adds	r7, #40	@ 0x28
 8001152:	46bd      	mov	sp, r7
 8001154:	bd80      	pop	{r7, pc}
 8001156:	bf00      	nop
 8001158:	40004400 	.word	0x40004400
 800115c:	40023800 	.word	0x40023800
 8001160:	40020000 	.word	0x40020000

08001164 <PrintOutputData>:
  }
}

/* USER CODE BEGIN 1 */
void PrintOutputData(uint8_t *OutputBuffer)
{
 8001164:	b580      	push	{r7, lr}
 8001166:	b084      	sub	sp, #16
 8001168:	af00      	add	r7, sp, #0
 800116a:	6078      	str	r0, [r7, #4]
	HAL_StatusTypeDef HALStatus;
	HALStatus = HAL_UART_Transmit(&huart2, OutputBuffer, 12, HAL_MAX_DELAY);
 800116c:	f04f 33ff 	mov.w	r3, #4294967295
 8001170:	220c      	movs	r2, #12
 8001172:	6879      	ldr	r1, [r7, #4]
 8001174:	4806      	ldr	r0, [pc, #24]	@ (8001190 <PrintOutputData+0x2c>)
 8001176:	f002 f9eb 	bl	8003550 <HAL_UART_Transmit>
 800117a:	4603      	mov	r3, r0
 800117c:	73fb      	strb	r3, [r7, #15]
	if (HALStatus != HAL_OK) {
 800117e:	7bfb      	ldrb	r3, [r7, #15]
 8001180:	2b00      	cmp	r3, #0
 8001182:	d001      	beq.n	8001188 <PrintOutputData+0x24>
		Error_Handler();
 8001184:	f7ff fe6c 	bl	8000e60 <Error_Handler>
	}
}
 8001188:	bf00      	nop
 800118a:	3710      	adds	r7, #16
 800118c:	46bd      	mov	sp, r7
 800118e:	bd80      	pop	{r7, pc}
 8001190:	20000204 	.word	0x20000204

08001194 <PrintOutputBuffer>:

void PrintOutputBuffer(uint8_t *OutputBuffer)
{
 8001194:	b580      	push	{r7, lr}
 8001196:	b084      	sub	sp, #16
 8001198:	af00      	add	r7, sp, #0
 800119a:	6078      	str	r0, [r7, #4]
	uint32_t StringLength;
	HAL_StatusTypeDef HALStatus;

	for (StringLength = 0; *(OutputBuffer + StringLength); StringLength++);
 800119c:	2300      	movs	r3, #0
 800119e:	60fb      	str	r3, [r7, #12]
 80011a0:	e002      	b.n	80011a8 <PrintOutputBuffer+0x14>
 80011a2:	68fb      	ldr	r3, [r7, #12]
 80011a4:	3301      	adds	r3, #1
 80011a6:	60fb      	str	r3, [r7, #12]
 80011a8:	687a      	ldr	r2, [r7, #4]
 80011aa:	68fb      	ldr	r3, [r7, #12]
 80011ac:	4413      	add	r3, r2
 80011ae:	781b      	ldrb	r3, [r3, #0]
 80011b0:	2b00      	cmp	r3, #0
 80011b2:	d1f6      	bne.n	80011a2 <PrintOutputBuffer+0xe>

	HALStatus = HAL_UART_Transmit(&huart2, OutputBuffer, StringLength, HAL_MAX_DELAY);
 80011b4:	68fb      	ldr	r3, [r7, #12]
 80011b6:	b29a      	uxth	r2, r3
 80011b8:	f04f 33ff 	mov.w	r3, #4294967295
 80011bc:	6879      	ldr	r1, [r7, #4]
 80011be:	4807      	ldr	r0, [pc, #28]	@ (80011dc <PrintOutputBuffer+0x48>)
 80011c0:	f002 f9c6 	bl	8003550 <HAL_UART_Transmit>
 80011c4:	4603      	mov	r3, r0
 80011c6:	72fb      	strb	r3, [r7, #11]

	if (HALStatus != HAL_OK) {
 80011c8:	7afb      	ldrb	r3, [r7, #11]
 80011ca:	2b00      	cmp	r3, #0
 80011cc:	d001      	beq.n	80011d2 <PrintOutputBuffer+0x3e>
		Error_Handler();
 80011ce:	f7ff fe47 	bl	8000e60 <Error_Handler>
	}

}
 80011d2:	bf00      	nop
 80011d4:	3710      	adds	r7, #16
 80011d6:	46bd      	mov	sp, r7
 80011d8:	bd80      	pop	{r7, pc}
 80011da:	bf00      	nop
 80011dc:	20000204 	.word	0x20000204

080011e0 <Reset_Handler>:
 80011e0:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001218 <LoopFillZerobss+0xe>
 80011e4:	f7ff ff30 	bl	8001048 <SystemInit>
 80011e8:	480c      	ldr	r0, [pc, #48]	@ (800121c <LoopFillZerobss+0x12>)
 80011ea:	490d      	ldr	r1, [pc, #52]	@ (8001220 <LoopFillZerobss+0x16>)
 80011ec:	4a0d      	ldr	r2, [pc, #52]	@ (8001224 <LoopFillZerobss+0x1a>)
 80011ee:	2300      	movs	r3, #0
 80011f0:	e002      	b.n	80011f8 <LoopCopyDataInit>

080011f2 <CopyDataInit>:
 80011f2:	58d4      	ldr	r4, [r2, r3]
 80011f4:	50c4      	str	r4, [r0, r3]
 80011f6:	3304      	adds	r3, #4

080011f8 <LoopCopyDataInit>:
 80011f8:	18c4      	adds	r4, r0, r3
 80011fa:	428c      	cmp	r4, r1
 80011fc:	d3f9      	bcc.n	80011f2 <CopyDataInit>
 80011fe:	4a0a      	ldr	r2, [pc, #40]	@ (8001228 <LoopFillZerobss+0x1e>)
 8001200:	4c0a      	ldr	r4, [pc, #40]	@ (800122c <LoopFillZerobss+0x22>)
 8001202:	2300      	movs	r3, #0
 8001204:	e001      	b.n	800120a <LoopFillZerobss>

08001206 <FillZerobss>:
 8001206:	6013      	str	r3, [r2, #0]
 8001208:	3204      	adds	r2, #4

0800120a <LoopFillZerobss>:
 800120a:	42a2      	cmp	r2, r4
 800120c:	d3fb      	bcc.n	8001206 <FillZerobss>
 800120e:	f003 f9d3 	bl	80045b8 <__libc_init_array>
 8001212:	f7ff fcc9 	bl	8000ba8 <main>
 8001216:	4770      	bx	lr
 8001218:	20018000 	.word	0x20018000
 800121c:	20000000 	.word	0x20000000
 8001220:	20000060 	.word	0x20000060
 8001224:	08004f54 	.word	0x08004f54
 8001228:	20000060 	.word	0x20000060
 800122c:	20000398 	.word	0x20000398

08001230 <ADC_IRQHandler>:
 8001230:	e7fe      	b.n	8001230 <ADC_IRQHandler>
	...

08001234 <HAL_Init>:
 8001234:	b580      	push	{r7, lr}
 8001236:	af00      	add	r7, sp, #0
 8001238:	4b0e      	ldr	r3, [pc, #56]	@ (8001274 <HAL_Init+0x40>)
 800123a:	681b      	ldr	r3, [r3, #0]
 800123c:	4a0d      	ldr	r2, [pc, #52]	@ (8001274 <HAL_Init+0x40>)
 800123e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001242:	6013      	str	r3, [r2, #0]
 8001244:	4b0b      	ldr	r3, [pc, #44]	@ (8001274 <HAL_Init+0x40>)
 8001246:	681b      	ldr	r3, [r3, #0]
 8001248:	4a0a      	ldr	r2, [pc, #40]	@ (8001274 <HAL_Init+0x40>)
 800124a:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800124e:	6013      	str	r3, [r2, #0]
 8001250:	4b08      	ldr	r3, [pc, #32]	@ (8001274 <HAL_Init+0x40>)
 8001252:	681b      	ldr	r3, [r3, #0]
 8001254:	4a07      	ldr	r2, [pc, #28]	@ (8001274 <HAL_Init+0x40>)
 8001256:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800125a:	6013      	str	r3, [r2, #0]
 800125c:	2003      	movs	r0, #3
 800125e:	f000 f94f 	bl	8001500 <HAL_NVIC_SetPriorityGrouping>
 8001262:	200f      	movs	r0, #15
 8001264:	f000 f808 	bl	8001278 <HAL_InitTick>
 8001268:	f7ff fe18 	bl	8000e9c <HAL_MspInit>
 800126c:	2300      	movs	r3, #0
 800126e:	4618      	mov	r0, r3
 8001270:	bd80      	pop	{r7, pc}
 8001272:	bf00      	nop
 8001274:	40023c00 	.word	0x40023c00

08001278 <HAL_InitTick>:
 8001278:	b580      	push	{r7, lr}
 800127a:	b082      	sub	sp, #8
 800127c:	af00      	add	r7, sp, #0
 800127e:	6078      	str	r0, [r7, #4]
 8001280:	4b12      	ldr	r3, [pc, #72]	@ (80012cc <HAL_InitTick+0x54>)
 8001282:	681a      	ldr	r2, [r3, #0]
 8001284:	4b12      	ldr	r3, [pc, #72]	@ (80012d0 <HAL_InitTick+0x58>)
 8001286:	781b      	ldrb	r3, [r3, #0]
 8001288:	4619      	mov	r1, r3
 800128a:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800128e:	fbb3 f3f1 	udiv	r3, r3, r1
 8001292:	fbb2 f3f3 	udiv	r3, r2, r3
 8001296:	4618      	mov	r0, r3
 8001298:	f000 f967 	bl	800156a <HAL_SYSTICK_Config>
 800129c:	4603      	mov	r3, r0
 800129e:	2b00      	cmp	r3, #0
 80012a0:	d001      	beq.n	80012a6 <HAL_InitTick+0x2e>
 80012a2:	2301      	movs	r3, #1
 80012a4:	e00e      	b.n	80012c4 <HAL_InitTick+0x4c>
 80012a6:	687b      	ldr	r3, [r7, #4]
 80012a8:	2b0f      	cmp	r3, #15
 80012aa:	d80a      	bhi.n	80012c2 <HAL_InitTick+0x4a>
 80012ac:	2200      	movs	r2, #0
 80012ae:	6879      	ldr	r1, [r7, #4]
 80012b0:	f04f 30ff 	mov.w	r0, #4294967295
 80012b4:	f000 f92f 	bl	8001516 <HAL_NVIC_SetPriority>
 80012b8:	4a06      	ldr	r2, [pc, #24]	@ (80012d4 <HAL_InitTick+0x5c>)
 80012ba:	687b      	ldr	r3, [r7, #4]
 80012bc:	6013      	str	r3, [r2, #0]
 80012be:	2300      	movs	r3, #0
 80012c0:	e000      	b.n	80012c4 <HAL_InitTick+0x4c>
 80012c2:	2301      	movs	r3, #1
 80012c4:	4618      	mov	r0, r3
 80012c6:	3708      	adds	r7, #8
 80012c8:	46bd      	mov	sp, r7
 80012ca:	bd80      	pop	{r7, pc}
 80012cc:	20000004 	.word	0x20000004
 80012d0:	2000000c 	.word	0x2000000c
 80012d4:	20000008 	.word	0x20000008

080012d8 <HAL_IncTick>:
 80012d8:	b480      	push	{r7}
 80012da:	af00      	add	r7, sp, #0
 80012dc:	4b06      	ldr	r3, [pc, #24]	@ (80012f8 <HAL_IncTick+0x20>)
 80012de:	781b      	ldrb	r3, [r3, #0]
 80012e0:	461a      	mov	r2, r3
 80012e2:	4b06      	ldr	r3, [pc, #24]	@ (80012fc <HAL_IncTick+0x24>)
 80012e4:	681b      	ldr	r3, [r3, #0]
 80012e6:	4413      	add	r3, r2
 80012e8:	4a04      	ldr	r2, [pc, #16]	@ (80012fc <HAL_IncTick+0x24>)
 80012ea:	6013      	str	r3, [r2, #0]
 80012ec:	bf00      	nop
 80012ee:	46bd      	mov	sp, r7
 80012f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012f4:	4770      	bx	lr
 80012f6:	bf00      	nop
 80012f8:	2000000c 	.word	0x2000000c
 80012fc:	2000024c 	.word	0x2000024c

08001300 <HAL_GetTick>:
 8001300:	b480      	push	{r7}
 8001302:	af00      	add	r7, sp, #0
 8001304:	4b03      	ldr	r3, [pc, #12]	@ (8001314 <HAL_GetTick+0x14>)
 8001306:	681b      	ldr	r3, [r3, #0]
 8001308:	4618      	mov	r0, r3
 800130a:	46bd      	mov	sp, r7
 800130c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001310:	4770      	bx	lr
 8001312:	bf00      	nop
 8001314:	2000024c 	.word	0x2000024c

08001318 <HAL_Delay>:
 8001318:	b580      	push	{r7, lr}
 800131a:	b084      	sub	sp, #16
 800131c:	af00      	add	r7, sp, #0
 800131e:	6078      	str	r0, [r7, #4]
 8001320:	f7ff ffee 	bl	8001300 <HAL_GetTick>
 8001324:	60b8      	str	r0, [r7, #8]
 8001326:	687b      	ldr	r3, [r7, #4]
 8001328:	60fb      	str	r3, [r7, #12]
 800132a:	68fb      	ldr	r3, [r7, #12]
 800132c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001330:	d005      	beq.n	800133e <HAL_Delay+0x26>
 8001332:	4b0a      	ldr	r3, [pc, #40]	@ (800135c <HAL_Delay+0x44>)
 8001334:	781b      	ldrb	r3, [r3, #0]
 8001336:	461a      	mov	r2, r3
 8001338:	68fb      	ldr	r3, [r7, #12]
 800133a:	4413      	add	r3, r2
 800133c:	60fb      	str	r3, [r7, #12]
 800133e:	bf00      	nop
 8001340:	f7ff ffde 	bl	8001300 <HAL_GetTick>
 8001344:	4602      	mov	r2, r0
 8001346:	68bb      	ldr	r3, [r7, #8]
 8001348:	1ad3      	subs	r3, r2, r3
 800134a:	68fa      	ldr	r2, [r7, #12]
 800134c:	429a      	cmp	r2, r3
 800134e:	d8f7      	bhi.n	8001340 <HAL_Delay+0x28>
 8001350:	bf00      	nop
 8001352:	bf00      	nop
 8001354:	3710      	adds	r7, #16
 8001356:	46bd      	mov	sp, r7
 8001358:	bd80      	pop	{r7, pc}
 800135a:	bf00      	nop
 800135c:	2000000c 	.word	0x2000000c

08001360 <__NVIC_SetPriorityGrouping>:
 8001360:	b480      	push	{r7}
 8001362:	b085      	sub	sp, #20
 8001364:	af00      	add	r7, sp, #0
 8001366:	6078      	str	r0, [r7, #4]
 8001368:	687b      	ldr	r3, [r7, #4]
 800136a:	f003 0307 	and.w	r3, r3, #7
 800136e:	60fb      	str	r3, [r7, #12]
 8001370:	4b0c      	ldr	r3, [pc, #48]	@ (80013a4 <__NVIC_SetPriorityGrouping+0x44>)
 8001372:	68db      	ldr	r3, [r3, #12]
 8001374:	60bb      	str	r3, [r7, #8]
 8001376:	68ba      	ldr	r2, [r7, #8]
 8001378:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 800137c:	4013      	ands	r3, r2
 800137e:	60bb      	str	r3, [r7, #8]
 8001380:	68fb      	ldr	r3, [r7, #12]
 8001382:	021a      	lsls	r2, r3, #8
 8001384:	68bb      	ldr	r3, [r7, #8]
 8001386:	4313      	orrs	r3, r2
 8001388:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 800138c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001390:	60bb      	str	r3, [r7, #8]
 8001392:	4a04      	ldr	r2, [pc, #16]	@ (80013a4 <__NVIC_SetPriorityGrouping+0x44>)
 8001394:	68bb      	ldr	r3, [r7, #8]
 8001396:	60d3      	str	r3, [r2, #12]
 8001398:	bf00      	nop
 800139a:	3714      	adds	r7, #20
 800139c:	46bd      	mov	sp, r7
 800139e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013a2:	4770      	bx	lr
 80013a4:	e000ed00 	.word	0xe000ed00

080013a8 <__NVIC_GetPriorityGrouping>:
 80013a8:	b480      	push	{r7}
 80013aa:	af00      	add	r7, sp, #0
 80013ac:	4b04      	ldr	r3, [pc, #16]	@ (80013c0 <__NVIC_GetPriorityGrouping+0x18>)
 80013ae:	68db      	ldr	r3, [r3, #12]
 80013b0:	0a1b      	lsrs	r3, r3, #8
 80013b2:	f003 0307 	and.w	r3, r3, #7
 80013b6:	4618      	mov	r0, r3
 80013b8:	46bd      	mov	sp, r7
 80013ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013be:	4770      	bx	lr
 80013c0:	e000ed00 	.word	0xe000ed00

080013c4 <__NVIC_EnableIRQ>:
 80013c4:	b480      	push	{r7}
 80013c6:	b083      	sub	sp, #12
 80013c8:	af00      	add	r7, sp, #0
 80013ca:	4603      	mov	r3, r0
 80013cc:	71fb      	strb	r3, [r7, #7]
 80013ce:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80013d2:	2b00      	cmp	r3, #0
 80013d4:	db0b      	blt.n	80013ee <__NVIC_EnableIRQ+0x2a>
 80013d6:	79fb      	ldrb	r3, [r7, #7]
 80013d8:	f003 021f 	and.w	r2, r3, #31
 80013dc:	4907      	ldr	r1, [pc, #28]	@ (80013fc <__NVIC_EnableIRQ+0x38>)
 80013de:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80013e2:	095b      	lsrs	r3, r3, #5
 80013e4:	2001      	movs	r0, #1
 80013e6:	fa00 f202 	lsl.w	r2, r0, r2
 80013ea:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80013ee:	bf00      	nop
 80013f0:	370c      	adds	r7, #12
 80013f2:	46bd      	mov	sp, r7
 80013f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013f8:	4770      	bx	lr
 80013fa:	bf00      	nop
 80013fc:	e000e100 	.word	0xe000e100

08001400 <__NVIC_SetPriority>:
 8001400:	b480      	push	{r7}
 8001402:	b083      	sub	sp, #12
 8001404:	af00      	add	r7, sp, #0
 8001406:	4603      	mov	r3, r0
 8001408:	6039      	str	r1, [r7, #0]
 800140a:	71fb      	strb	r3, [r7, #7]
 800140c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001410:	2b00      	cmp	r3, #0
 8001412:	db0a      	blt.n	800142a <__NVIC_SetPriority+0x2a>
 8001414:	683b      	ldr	r3, [r7, #0]
 8001416:	b2da      	uxtb	r2, r3
 8001418:	490c      	ldr	r1, [pc, #48]	@ (800144c <__NVIC_SetPriority+0x4c>)
 800141a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800141e:	0112      	lsls	r2, r2, #4
 8001420:	b2d2      	uxtb	r2, r2
 8001422:	440b      	add	r3, r1
 8001424:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001428:	e00a      	b.n	8001440 <__NVIC_SetPriority+0x40>
 800142a:	683b      	ldr	r3, [r7, #0]
 800142c:	b2da      	uxtb	r2, r3
 800142e:	4908      	ldr	r1, [pc, #32]	@ (8001450 <__NVIC_SetPriority+0x50>)
 8001430:	79fb      	ldrb	r3, [r7, #7]
 8001432:	f003 030f 	and.w	r3, r3, #15
 8001436:	3b04      	subs	r3, #4
 8001438:	0112      	lsls	r2, r2, #4
 800143a:	b2d2      	uxtb	r2, r2
 800143c:	440b      	add	r3, r1
 800143e:	761a      	strb	r2, [r3, #24]
 8001440:	bf00      	nop
 8001442:	370c      	adds	r7, #12
 8001444:	46bd      	mov	sp, r7
 8001446:	f85d 7b04 	ldr.w	r7, [sp], #4
 800144a:	4770      	bx	lr
 800144c:	e000e100 	.word	0xe000e100
 8001450:	e000ed00 	.word	0xe000ed00

08001454 <NVIC_EncodePriority>:
 8001454:	b480      	push	{r7}
 8001456:	b089      	sub	sp, #36	@ 0x24
 8001458:	af00      	add	r7, sp, #0
 800145a:	60f8      	str	r0, [r7, #12]
 800145c:	60b9      	str	r1, [r7, #8]
 800145e:	607a      	str	r2, [r7, #4]
 8001460:	68fb      	ldr	r3, [r7, #12]
 8001462:	f003 0307 	and.w	r3, r3, #7
 8001466:	61fb      	str	r3, [r7, #28]
 8001468:	69fb      	ldr	r3, [r7, #28]
 800146a:	f1c3 0307 	rsb	r3, r3, #7
 800146e:	2b04      	cmp	r3, #4
 8001470:	bf28      	it	cs
 8001472:	2304      	movcs	r3, #4
 8001474:	61bb      	str	r3, [r7, #24]
 8001476:	69fb      	ldr	r3, [r7, #28]
 8001478:	3304      	adds	r3, #4
 800147a:	2b06      	cmp	r3, #6
 800147c:	d902      	bls.n	8001484 <NVIC_EncodePriority+0x30>
 800147e:	69fb      	ldr	r3, [r7, #28]
 8001480:	3b03      	subs	r3, #3
 8001482:	e000      	b.n	8001486 <NVIC_EncodePriority+0x32>
 8001484:	2300      	movs	r3, #0
 8001486:	617b      	str	r3, [r7, #20]
 8001488:	f04f 32ff 	mov.w	r2, #4294967295
 800148c:	69bb      	ldr	r3, [r7, #24]
 800148e:	fa02 f303 	lsl.w	r3, r2, r3
 8001492:	43da      	mvns	r2, r3
 8001494:	68bb      	ldr	r3, [r7, #8]
 8001496:	401a      	ands	r2, r3
 8001498:	697b      	ldr	r3, [r7, #20]
 800149a:	409a      	lsls	r2, r3
 800149c:	f04f 31ff 	mov.w	r1, #4294967295
 80014a0:	697b      	ldr	r3, [r7, #20]
 80014a2:	fa01 f303 	lsl.w	r3, r1, r3
 80014a6:	43d9      	mvns	r1, r3
 80014a8:	687b      	ldr	r3, [r7, #4]
 80014aa:	400b      	ands	r3, r1
 80014ac:	4313      	orrs	r3, r2
 80014ae:	4618      	mov	r0, r3
 80014b0:	3724      	adds	r7, #36	@ 0x24
 80014b2:	46bd      	mov	sp, r7
 80014b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014b8:	4770      	bx	lr
	...

080014bc <SysTick_Config>:
 80014bc:	b580      	push	{r7, lr}
 80014be:	b082      	sub	sp, #8
 80014c0:	af00      	add	r7, sp, #0
 80014c2:	6078      	str	r0, [r7, #4]
 80014c4:	687b      	ldr	r3, [r7, #4]
 80014c6:	3b01      	subs	r3, #1
 80014c8:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80014cc:	d301      	bcc.n	80014d2 <SysTick_Config+0x16>
 80014ce:	2301      	movs	r3, #1
 80014d0:	e00f      	b.n	80014f2 <SysTick_Config+0x36>
 80014d2:	4a0a      	ldr	r2, [pc, #40]	@ (80014fc <SysTick_Config+0x40>)
 80014d4:	687b      	ldr	r3, [r7, #4]
 80014d6:	3b01      	subs	r3, #1
 80014d8:	6053      	str	r3, [r2, #4]
 80014da:	210f      	movs	r1, #15
 80014dc:	f04f 30ff 	mov.w	r0, #4294967295
 80014e0:	f7ff ff8e 	bl	8001400 <__NVIC_SetPriority>
 80014e4:	4b05      	ldr	r3, [pc, #20]	@ (80014fc <SysTick_Config+0x40>)
 80014e6:	2200      	movs	r2, #0
 80014e8:	609a      	str	r2, [r3, #8]
 80014ea:	4b04      	ldr	r3, [pc, #16]	@ (80014fc <SysTick_Config+0x40>)
 80014ec:	2207      	movs	r2, #7
 80014ee:	601a      	str	r2, [r3, #0]
 80014f0:	2300      	movs	r3, #0
 80014f2:	4618      	mov	r0, r3
 80014f4:	3708      	adds	r7, #8
 80014f6:	46bd      	mov	sp, r7
 80014f8:	bd80      	pop	{r7, pc}
 80014fa:	bf00      	nop
 80014fc:	e000e010 	.word	0xe000e010

08001500 <HAL_NVIC_SetPriorityGrouping>:
 8001500:	b580      	push	{r7, lr}
 8001502:	b082      	sub	sp, #8
 8001504:	af00      	add	r7, sp, #0
 8001506:	6078      	str	r0, [r7, #4]
 8001508:	6878      	ldr	r0, [r7, #4]
 800150a:	f7ff ff29 	bl	8001360 <__NVIC_SetPriorityGrouping>
 800150e:	bf00      	nop
 8001510:	3708      	adds	r7, #8
 8001512:	46bd      	mov	sp, r7
 8001514:	bd80      	pop	{r7, pc}

08001516 <HAL_NVIC_SetPriority>:
 8001516:	b580      	push	{r7, lr}
 8001518:	b086      	sub	sp, #24
 800151a:	af00      	add	r7, sp, #0
 800151c:	4603      	mov	r3, r0
 800151e:	60b9      	str	r1, [r7, #8]
 8001520:	607a      	str	r2, [r7, #4]
 8001522:	73fb      	strb	r3, [r7, #15]
 8001524:	2300      	movs	r3, #0
 8001526:	617b      	str	r3, [r7, #20]
 8001528:	f7ff ff3e 	bl	80013a8 <__NVIC_GetPriorityGrouping>
 800152c:	6178      	str	r0, [r7, #20]
 800152e:	687a      	ldr	r2, [r7, #4]
 8001530:	68b9      	ldr	r1, [r7, #8]
 8001532:	6978      	ldr	r0, [r7, #20]
 8001534:	f7ff ff8e 	bl	8001454 <NVIC_EncodePriority>
 8001538:	4602      	mov	r2, r0
 800153a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800153e:	4611      	mov	r1, r2
 8001540:	4618      	mov	r0, r3
 8001542:	f7ff ff5d 	bl	8001400 <__NVIC_SetPriority>
 8001546:	bf00      	nop
 8001548:	3718      	adds	r7, #24
 800154a:	46bd      	mov	sp, r7
 800154c:	bd80      	pop	{r7, pc}

0800154e <HAL_NVIC_EnableIRQ>:
 800154e:	b580      	push	{r7, lr}
 8001550:	b082      	sub	sp, #8
 8001552:	af00      	add	r7, sp, #0
 8001554:	4603      	mov	r3, r0
 8001556:	71fb      	strb	r3, [r7, #7]
 8001558:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800155c:	4618      	mov	r0, r3
 800155e:	f7ff ff31 	bl	80013c4 <__NVIC_EnableIRQ>
 8001562:	bf00      	nop
 8001564:	3708      	adds	r7, #8
 8001566:	46bd      	mov	sp, r7
 8001568:	bd80      	pop	{r7, pc}

0800156a <HAL_SYSTICK_Config>:
 800156a:	b580      	push	{r7, lr}
 800156c:	b082      	sub	sp, #8
 800156e:	af00      	add	r7, sp, #0
 8001570:	6078      	str	r0, [r7, #4]
 8001572:	6878      	ldr	r0, [r7, #4]
 8001574:	f7ff ffa2 	bl	80014bc <SysTick_Config>
 8001578:	4603      	mov	r3, r0
 800157a:	4618      	mov	r0, r3
 800157c:	3708      	adds	r7, #8
 800157e:	46bd      	mov	sp, r7
 8001580:	bd80      	pop	{r7, pc}

08001582 <HAL_DMA_Abort>:
 8001582:	b580      	push	{r7, lr}
 8001584:	b084      	sub	sp, #16
 8001586:	af00      	add	r7, sp, #0
 8001588:	6078      	str	r0, [r7, #4]
 800158a:	687b      	ldr	r3, [r7, #4]
 800158c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800158e:	60fb      	str	r3, [r7, #12]
 8001590:	f7ff feb6 	bl	8001300 <HAL_GetTick>
 8001594:	60b8      	str	r0, [r7, #8]
 8001596:	687b      	ldr	r3, [r7, #4]
 8001598:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800159c:	b2db      	uxtb	r3, r3
 800159e:	2b02      	cmp	r3, #2
 80015a0:	d008      	beq.n	80015b4 <HAL_DMA_Abort+0x32>
 80015a2:	687b      	ldr	r3, [r7, #4]
 80015a4:	2280      	movs	r2, #128	@ 0x80
 80015a6:	655a      	str	r2, [r3, #84]	@ 0x54
 80015a8:	687b      	ldr	r3, [r7, #4]
 80015aa:	2200      	movs	r2, #0
 80015ac:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80015b0:	2301      	movs	r3, #1
 80015b2:	e052      	b.n	800165a <HAL_DMA_Abort+0xd8>
 80015b4:	687b      	ldr	r3, [r7, #4]
 80015b6:	681b      	ldr	r3, [r3, #0]
 80015b8:	681a      	ldr	r2, [r3, #0]
 80015ba:	687b      	ldr	r3, [r7, #4]
 80015bc:	681b      	ldr	r3, [r3, #0]
 80015be:	f022 0216 	bic.w	r2, r2, #22
 80015c2:	601a      	str	r2, [r3, #0]
 80015c4:	687b      	ldr	r3, [r7, #4]
 80015c6:	681b      	ldr	r3, [r3, #0]
 80015c8:	695a      	ldr	r2, [r3, #20]
 80015ca:	687b      	ldr	r3, [r7, #4]
 80015cc:	681b      	ldr	r3, [r3, #0]
 80015ce:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80015d2:	615a      	str	r2, [r3, #20]
 80015d4:	687b      	ldr	r3, [r7, #4]
 80015d6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80015d8:	2b00      	cmp	r3, #0
 80015da:	d103      	bne.n	80015e4 <HAL_DMA_Abort+0x62>
 80015dc:	687b      	ldr	r3, [r7, #4]
 80015de:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80015e0:	2b00      	cmp	r3, #0
 80015e2:	d007      	beq.n	80015f4 <HAL_DMA_Abort+0x72>
 80015e4:	687b      	ldr	r3, [r7, #4]
 80015e6:	681b      	ldr	r3, [r3, #0]
 80015e8:	681a      	ldr	r2, [r3, #0]
 80015ea:	687b      	ldr	r3, [r7, #4]
 80015ec:	681b      	ldr	r3, [r3, #0]
 80015ee:	f022 0208 	bic.w	r2, r2, #8
 80015f2:	601a      	str	r2, [r3, #0]
 80015f4:	687b      	ldr	r3, [r7, #4]
 80015f6:	681b      	ldr	r3, [r3, #0]
 80015f8:	681a      	ldr	r2, [r3, #0]
 80015fa:	687b      	ldr	r3, [r7, #4]
 80015fc:	681b      	ldr	r3, [r3, #0]
 80015fe:	f022 0201 	bic.w	r2, r2, #1
 8001602:	601a      	str	r2, [r3, #0]
 8001604:	e013      	b.n	800162e <HAL_DMA_Abort+0xac>
 8001606:	f7ff fe7b 	bl	8001300 <HAL_GetTick>
 800160a:	4602      	mov	r2, r0
 800160c:	68bb      	ldr	r3, [r7, #8]
 800160e:	1ad3      	subs	r3, r2, r3
 8001610:	2b05      	cmp	r3, #5
 8001612:	d90c      	bls.n	800162e <HAL_DMA_Abort+0xac>
 8001614:	687b      	ldr	r3, [r7, #4]
 8001616:	2220      	movs	r2, #32
 8001618:	655a      	str	r2, [r3, #84]	@ 0x54
 800161a:	687b      	ldr	r3, [r7, #4]
 800161c:	2203      	movs	r2, #3
 800161e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8001622:	687b      	ldr	r3, [r7, #4]
 8001624:	2200      	movs	r2, #0
 8001626:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 800162a:	2303      	movs	r3, #3
 800162c:	e015      	b.n	800165a <HAL_DMA_Abort+0xd8>
 800162e:	687b      	ldr	r3, [r7, #4]
 8001630:	681b      	ldr	r3, [r3, #0]
 8001632:	681b      	ldr	r3, [r3, #0]
 8001634:	f003 0301 	and.w	r3, r3, #1
 8001638:	2b00      	cmp	r3, #0
 800163a:	d1e4      	bne.n	8001606 <HAL_DMA_Abort+0x84>
 800163c:	687b      	ldr	r3, [r7, #4]
 800163e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8001640:	223f      	movs	r2, #63	@ 0x3f
 8001642:	409a      	lsls	r2, r3
 8001644:	68fb      	ldr	r3, [r7, #12]
 8001646:	609a      	str	r2, [r3, #8]
 8001648:	687b      	ldr	r3, [r7, #4]
 800164a:	2201      	movs	r2, #1
 800164c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8001650:	687b      	ldr	r3, [r7, #4]
 8001652:	2200      	movs	r2, #0
 8001654:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8001658:	2300      	movs	r3, #0
 800165a:	4618      	mov	r0, r3
 800165c:	3710      	adds	r7, #16
 800165e:	46bd      	mov	sp, r7
 8001660:	bd80      	pop	{r7, pc}

08001662 <HAL_DMA_Abort_IT>:
 8001662:	b480      	push	{r7}
 8001664:	b083      	sub	sp, #12
 8001666:	af00      	add	r7, sp, #0
 8001668:	6078      	str	r0, [r7, #4]
 800166a:	687b      	ldr	r3, [r7, #4]
 800166c:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8001670:	b2db      	uxtb	r3, r3
 8001672:	2b02      	cmp	r3, #2
 8001674:	d004      	beq.n	8001680 <HAL_DMA_Abort_IT+0x1e>
 8001676:	687b      	ldr	r3, [r7, #4]
 8001678:	2280      	movs	r2, #128	@ 0x80
 800167a:	655a      	str	r2, [r3, #84]	@ 0x54
 800167c:	2301      	movs	r3, #1
 800167e:	e00c      	b.n	800169a <HAL_DMA_Abort_IT+0x38>
 8001680:	687b      	ldr	r3, [r7, #4]
 8001682:	2205      	movs	r2, #5
 8001684:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8001688:	687b      	ldr	r3, [r7, #4]
 800168a:	681b      	ldr	r3, [r3, #0]
 800168c:	681a      	ldr	r2, [r3, #0]
 800168e:	687b      	ldr	r3, [r7, #4]
 8001690:	681b      	ldr	r3, [r3, #0]
 8001692:	f022 0201 	bic.w	r2, r2, #1
 8001696:	601a      	str	r2, [r3, #0]
 8001698:	2300      	movs	r3, #0
 800169a:	4618      	mov	r0, r3
 800169c:	370c      	adds	r7, #12
 800169e:	46bd      	mov	sp, r7
 80016a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016a4:	4770      	bx	lr
	...

080016a8 <HAL_GPIO_Init>:
 80016a8:	b480      	push	{r7}
 80016aa:	b089      	sub	sp, #36	@ 0x24
 80016ac:	af00      	add	r7, sp, #0
 80016ae:	6078      	str	r0, [r7, #4]
 80016b0:	6039      	str	r1, [r7, #0]
 80016b2:	2300      	movs	r3, #0
 80016b4:	617b      	str	r3, [r7, #20]
 80016b6:	2300      	movs	r3, #0
 80016b8:	613b      	str	r3, [r7, #16]
 80016ba:	2300      	movs	r3, #0
 80016bc:	61bb      	str	r3, [r7, #24]
 80016be:	2300      	movs	r3, #0
 80016c0:	61fb      	str	r3, [r7, #28]
 80016c2:	e159      	b.n	8001978 <HAL_GPIO_Init+0x2d0>
 80016c4:	2201      	movs	r2, #1
 80016c6:	69fb      	ldr	r3, [r7, #28]
 80016c8:	fa02 f303 	lsl.w	r3, r2, r3
 80016cc:	617b      	str	r3, [r7, #20]
 80016ce:	683b      	ldr	r3, [r7, #0]
 80016d0:	681b      	ldr	r3, [r3, #0]
 80016d2:	697a      	ldr	r2, [r7, #20]
 80016d4:	4013      	ands	r3, r2
 80016d6:	613b      	str	r3, [r7, #16]
 80016d8:	693a      	ldr	r2, [r7, #16]
 80016da:	697b      	ldr	r3, [r7, #20]
 80016dc:	429a      	cmp	r2, r3
 80016de:	f040 8148 	bne.w	8001972 <HAL_GPIO_Init+0x2ca>
 80016e2:	683b      	ldr	r3, [r7, #0]
 80016e4:	685b      	ldr	r3, [r3, #4]
 80016e6:	f003 0303 	and.w	r3, r3, #3
 80016ea:	2b01      	cmp	r3, #1
 80016ec:	d005      	beq.n	80016fa <HAL_GPIO_Init+0x52>
 80016ee:	683b      	ldr	r3, [r7, #0]
 80016f0:	685b      	ldr	r3, [r3, #4]
 80016f2:	f003 0303 	and.w	r3, r3, #3
 80016f6:	2b02      	cmp	r3, #2
 80016f8:	d130      	bne.n	800175c <HAL_GPIO_Init+0xb4>
 80016fa:	687b      	ldr	r3, [r7, #4]
 80016fc:	689b      	ldr	r3, [r3, #8]
 80016fe:	61bb      	str	r3, [r7, #24]
 8001700:	69fb      	ldr	r3, [r7, #28]
 8001702:	005b      	lsls	r3, r3, #1
 8001704:	2203      	movs	r2, #3
 8001706:	fa02 f303 	lsl.w	r3, r2, r3
 800170a:	43db      	mvns	r3, r3
 800170c:	69ba      	ldr	r2, [r7, #24]
 800170e:	4013      	ands	r3, r2
 8001710:	61bb      	str	r3, [r7, #24]
 8001712:	683b      	ldr	r3, [r7, #0]
 8001714:	68da      	ldr	r2, [r3, #12]
 8001716:	69fb      	ldr	r3, [r7, #28]
 8001718:	005b      	lsls	r3, r3, #1
 800171a:	fa02 f303 	lsl.w	r3, r2, r3
 800171e:	69ba      	ldr	r2, [r7, #24]
 8001720:	4313      	orrs	r3, r2
 8001722:	61bb      	str	r3, [r7, #24]
 8001724:	687b      	ldr	r3, [r7, #4]
 8001726:	69ba      	ldr	r2, [r7, #24]
 8001728:	609a      	str	r2, [r3, #8]
 800172a:	687b      	ldr	r3, [r7, #4]
 800172c:	685b      	ldr	r3, [r3, #4]
 800172e:	61bb      	str	r3, [r7, #24]
 8001730:	2201      	movs	r2, #1
 8001732:	69fb      	ldr	r3, [r7, #28]
 8001734:	fa02 f303 	lsl.w	r3, r2, r3
 8001738:	43db      	mvns	r3, r3
 800173a:	69ba      	ldr	r2, [r7, #24]
 800173c:	4013      	ands	r3, r2
 800173e:	61bb      	str	r3, [r7, #24]
 8001740:	683b      	ldr	r3, [r7, #0]
 8001742:	685b      	ldr	r3, [r3, #4]
 8001744:	091b      	lsrs	r3, r3, #4
 8001746:	f003 0201 	and.w	r2, r3, #1
 800174a:	69fb      	ldr	r3, [r7, #28]
 800174c:	fa02 f303 	lsl.w	r3, r2, r3
 8001750:	69ba      	ldr	r2, [r7, #24]
 8001752:	4313      	orrs	r3, r2
 8001754:	61bb      	str	r3, [r7, #24]
 8001756:	687b      	ldr	r3, [r7, #4]
 8001758:	69ba      	ldr	r2, [r7, #24]
 800175a:	605a      	str	r2, [r3, #4]
 800175c:	683b      	ldr	r3, [r7, #0]
 800175e:	685b      	ldr	r3, [r3, #4]
 8001760:	f003 0303 	and.w	r3, r3, #3
 8001764:	2b03      	cmp	r3, #3
 8001766:	d017      	beq.n	8001798 <HAL_GPIO_Init+0xf0>
 8001768:	687b      	ldr	r3, [r7, #4]
 800176a:	68db      	ldr	r3, [r3, #12]
 800176c:	61bb      	str	r3, [r7, #24]
 800176e:	69fb      	ldr	r3, [r7, #28]
 8001770:	005b      	lsls	r3, r3, #1
 8001772:	2203      	movs	r2, #3
 8001774:	fa02 f303 	lsl.w	r3, r2, r3
 8001778:	43db      	mvns	r3, r3
 800177a:	69ba      	ldr	r2, [r7, #24]
 800177c:	4013      	ands	r3, r2
 800177e:	61bb      	str	r3, [r7, #24]
 8001780:	683b      	ldr	r3, [r7, #0]
 8001782:	689a      	ldr	r2, [r3, #8]
 8001784:	69fb      	ldr	r3, [r7, #28]
 8001786:	005b      	lsls	r3, r3, #1
 8001788:	fa02 f303 	lsl.w	r3, r2, r3
 800178c:	69ba      	ldr	r2, [r7, #24]
 800178e:	4313      	orrs	r3, r2
 8001790:	61bb      	str	r3, [r7, #24]
 8001792:	687b      	ldr	r3, [r7, #4]
 8001794:	69ba      	ldr	r2, [r7, #24]
 8001796:	60da      	str	r2, [r3, #12]
 8001798:	683b      	ldr	r3, [r7, #0]
 800179a:	685b      	ldr	r3, [r3, #4]
 800179c:	f003 0303 	and.w	r3, r3, #3
 80017a0:	2b02      	cmp	r3, #2
 80017a2:	d123      	bne.n	80017ec <HAL_GPIO_Init+0x144>
 80017a4:	69fb      	ldr	r3, [r7, #28]
 80017a6:	08da      	lsrs	r2, r3, #3
 80017a8:	687b      	ldr	r3, [r7, #4]
 80017aa:	3208      	adds	r2, #8
 80017ac:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80017b0:	61bb      	str	r3, [r7, #24]
 80017b2:	69fb      	ldr	r3, [r7, #28]
 80017b4:	f003 0307 	and.w	r3, r3, #7
 80017b8:	009b      	lsls	r3, r3, #2
 80017ba:	220f      	movs	r2, #15
 80017bc:	fa02 f303 	lsl.w	r3, r2, r3
 80017c0:	43db      	mvns	r3, r3
 80017c2:	69ba      	ldr	r2, [r7, #24]
 80017c4:	4013      	ands	r3, r2
 80017c6:	61bb      	str	r3, [r7, #24]
 80017c8:	683b      	ldr	r3, [r7, #0]
 80017ca:	691a      	ldr	r2, [r3, #16]
 80017cc:	69fb      	ldr	r3, [r7, #28]
 80017ce:	f003 0307 	and.w	r3, r3, #7
 80017d2:	009b      	lsls	r3, r3, #2
 80017d4:	fa02 f303 	lsl.w	r3, r2, r3
 80017d8:	69ba      	ldr	r2, [r7, #24]
 80017da:	4313      	orrs	r3, r2
 80017dc:	61bb      	str	r3, [r7, #24]
 80017de:	69fb      	ldr	r3, [r7, #28]
 80017e0:	08da      	lsrs	r2, r3, #3
 80017e2:	687b      	ldr	r3, [r7, #4]
 80017e4:	3208      	adds	r2, #8
 80017e6:	69b9      	ldr	r1, [r7, #24]
 80017e8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80017ec:	687b      	ldr	r3, [r7, #4]
 80017ee:	681b      	ldr	r3, [r3, #0]
 80017f0:	61bb      	str	r3, [r7, #24]
 80017f2:	69fb      	ldr	r3, [r7, #28]
 80017f4:	005b      	lsls	r3, r3, #1
 80017f6:	2203      	movs	r2, #3
 80017f8:	fa02 f303 	lsl.w	r3, r2, r3
 80017fc:	43db      	mvns	r3, r3
 80017fe:	69ba      	ldr	r2, [r7, #24]
 8001800:	4013      	ands	r3, r2
 8001802:	61bb      	str	r3, [r7, #24]
 8001804:	683b      	ldr	r3, [r7, #0]
 8001806:	685b      	ldr	r3, [r3, #4]
 8001808:	f003 0203 	and.w	r2, r3, #3
 800180c:	69fb      	ldr	r3, [r7, #28]
 800180e:	005b      	lsls	r3, r3, #1
 8001810:	fa02 f303 	lsl.w	r3, r2, r3
 8001814:	69ba      	ldr	r2, [r7, #24]
 8001816:	4313      	orrs	r3, r2
 8001818:	61bb      	str	r3, [r7, #24]
 800181a:	687b      	ldr	r3, [r7, #4]
 800181c:	69ba      	ldr	r2, [r7, #24]
 800181e:	601a      	str	r2, [r3, #0]
 8001820:	683b      	ldr	r3, [r7, #0]
 8001822:	685b      	ldr	r3, [r3, #4]
 8001824:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8001828:	2b00      	cmp	r3, #0
 800182a:	f000 80a2 	beq.w	8001972 <HAL_GPIO_Init+0x2ca>
 800182e:	2300      	movs	r3, #0
 8001830:	60fb      	str	r3, [r7, #12]
 8001832:	4b57      	ldr	r3, [pc, #348]	@ (8001990 <HAL_GPIO_Init+0x2e8>)
 8001834:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001836:	4a56      	ldr	r2, [pc, #344]	@ (8001990 <HAL_GPIO_Init+0x2e8>)
 8001838:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800183c:	6453      	str	r3, [r2, #68]	@ 0x44
 800183e:	4b54      	ldr	r3, [pc, #336]	@ (8001990 <HAL_GPIO_Init+0x2e8>)
 8001840:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001842:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001846:	60fb      	str	r3, [r7, #12]
 8001848:	68fb      	ldr	r3, [r7, #12]
 800184a:	4a52      	ldr	r2, [pc, #328]	@ (8001994 <HAL_GPIO_Init+0x2ec>)
 800184c:	69fb      	ldr	r3, [r7, #28]
 800184e:	089b      	lsrs	r3, r3, #2
 8001850:	3302      	adds	r3, #2
 8001852:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001856:	61bb      	str	r3, [r7, #24]
 8001858:	69fb      	ldr	r3, [r7, #28]
 800185a:	f003 0303 	and.w	r3, r3, #3
 800185e:	009b      	lsls	r3, r3, #2
 8001860:	220f      	movs	r2, #15
 8001862:	fa02 f303 	lsl.w	r3, r2, r3
 8001866:	43db      	mvns	r3, r3
 8001868:	69ba      	ldr	r2, [r7, #24]
 800186a:	4013      	ands	r3, r2
 800186c:	61bb      	str	r3, [r7, #24]
 800186e:	687b      	ldr	r3, [r7, #4]
 8001870:	4a49      	ldr	r2, [pc, #292]	@ (8001998 <HAL_GPIO_Init+0x2f0>)
 8001872:	4293      	cmp	r3, r2
 8001874:	d019      	beq.n	80018aa <HAL_GPIO_Init+0x202>
 8001876:	687b      	ldr	r3, [r7, #4]
 8001878:	4a48      	ldr	r2, [pc, #288]	@ (800199c <HAL_GPIO_Init+0x2f4>)
 800187a:	4293      	cmp	r3, r2
 800187c:	d013      	beq.n	80018a6 <HAL_GPIO_Init+0x1fe>
 800187e:	687b      	ldr	r3, [r7, #4]
 8001880:	4a47      	ldr	r2, [pc, #284]	@ (80019a0 <HAL_GPIO_Init+0x2f8>)
 8001882:	4293      	cmp	r3, r2
 8001884:	d00d      	beq.n	80018a2 <HAL_GPIO_Init+0x1fa>
 8001886:	687b      	ldr	r3, [r7, #4]
 8001888:	4a46      	ldr	r2, [pc, #280]	@ (80019a4 <HAL_GPIO_Init+0x2fc>)
 800188a:	4293      	cmp	r3, r2
 800188c:	d007      	beq.n	800189e <HAL_GPIO_Init+0x1f6>
 800188e:	687b      	ldr	r3, [r7, #4]
 8001890:	4a45      	ldr	r2, [pc, #276]	@ (80019a8 <HAL_GPIO_Init+0x300>)
 8001892:	4293      	cmp	r3, r2
 8001894:	d101      	bne.n	800189a <HAL_GPIO_Init+0x1f2>
 8001896:	2304      	movs	r3, #4
 8001898:	e008      	b.n	80018ac <HAL_GPIO_Init+0x204>
 800189a:	2307      	movs	r3, #7
 800189c:	e006      	b.n	80018ac <HAL_GPIO_Init+0x204>
 800189e:	2303      	movs	r3, #3
 80018a0:	e004      	b.n	80018ac <HAL_GPIO_Init+0x204>
 80018a2:	2302      	movs	r3, #2
 80018a4:	e002      	b.n	80018ac <HAL_GPIO_Init+0x204>
 80018a6:	2301      	movs	r3, #1
 80018a8:	e000      	b.n	80018ac <HAL_GPIO_Init+0x204>
 80018aa:	2300      	movs	r3, #0
 80018ac:	69fa      	ldr	r2, [r7, #28]
 80018ae:	f002 0203 	and.w	r2, r2, #3
 80018b2:	0092      	lsls	r2, r2, #2
 80018b4:	4093      	lsls	r3, r2
 80018b6:	69ba      	ldr	r2, [r7, #24]
 80018b8:	4313      	orrs	r3, r2
 80018ba:	61bb      	str	r3, [r7, #24]
 80018bc:	4935      	ldr	r1, [pc, #212]	@ (8001994 <HAL_GPIO_Init+0x2ec>)
 80018be:	69fb      	ldr	r3, [r7, #28]
 80018c0:	089b      	lsrs	r3, r3, #2
 80018c2:	3302      	adds	r3, #2
 80018c4:	69ba      	ldr	r2, [r7, #24]
 80018c6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80018ca:	4b38      	ldr	r3, [pc, #224]	@ (80019ac <HAL_GPIO_Init+0x304>)
 80018cc:	689b      	ldr	r3, [r3, #8]
 80018ce:	61bb      	str	r3, [r7, #24]
 80018d0:	693b      	ldr	r3, [r7, #16]
 80018d2:	43db      	mvns	r3, r3
 80018d4:	69ba      	ldr	r2, [r7, #24]
 80018d6:	4013      	ands	r3, r2
 80018d8:	61bb      	str	r3, [r7, #24]
 80018da:	683b      	ldr	r3, [r7, #0]
 80018dc:	685b      	ldr	r3, [r3, #4]
 80018de:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80018e2:	2b00      	cmp	r3, #0
 80018e4:	d003      	beq.n	80018ee <HAL_GPIO_Init+0x246>
 80018e6:	69ba      	ldr	r2, [r7, #24]
 80018e8:	693b      	ldr	r3, [r7, #16]
 80018ea:	4313      	orrs	r3, r2
 80018ec:	61bb      	str	r3, [r7, #24]
 80018ee:	4a2f      	ldr	r2, [pc, #188]	@ (80019ac <HAL_GPIO_Init+0x304>)
 80018f0:	69bb      	ldr	r3, [r7, #24]
 80018f2:	6093      	str	r3, [r2, #8]
 80018f4:	4b2d      	ldr	r3, [pc, #180]	@ (80019ac <HAL_GPIO_Init+0x304>)
 80018f6:	68db      	ldr	r3, [r3, #12]
 80018f8:	61bb      	str	r3, [r7, #24]
 80018fa:	693b      	ldr	r3, [r7, #16]
 80018fc:	43db      	mvns	r3, r3
 80018fe:	69ba      	ldr	r2, [r7, #24]
 8001900:	4013      	ands	r3, r2
 8001902:	61bb      	str	r3, [r7, #24]
 8001904:	683b      	ldr	r3, [r7, #0]
 8001906:	685b      	ldr	r3, [r3, #4]
 8001908:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800190c:	2b00      	cmp	r3, #0
 800190e:	d003      	beq.n	8001918 <HAL_GPIO_Init+0x270>
 8001910:	69ba      	ldr	r2, [r7, #24]
 8001912:	693b      	ldr	r3, [r7, #16]
 8001914:	4313      	orrs	r3, r2
 8001916:	61bb      	str	r3, [r7, #24]
 8001918:	4a24      	ldr	r2, [pc, #144]	@ (80019ac <HAL_GPIO_Init+0x304>)
 800191a:	69bb      	ldr	r3, [r7, #24]
 800191c:	60d3      	str	r3, [r2, #12]
 800191e:	4b23      	ldr	r3, [pc, #140]	@ (80019ac <HAL_GPIO_Init+0x304>)
 8001920:	685b      	ldr	r3, [r3, #4]
 8001922:	61bb      	str	r3, [r7, #24]
 8001924:	693b      	ldr	r3, [r7, #16]
 8001926:	43db      	mvns	r3, r3
 8001928:	69ba      	ldr	r2, [r7, #24]
 800192a:	4013      	ands	r3, r2
 800192c:	61bb      	str	r3, [r7, #24]
 800192e:	683b      	ldr	r3, [r7, #0]
 8001930:	685b      	ldr	r3, [r3, #4]
 8001932:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001936:	2b00      	cmp	r3, #0
 8001938:	d003      	beq.n	8001942 <HAL_GPIO_Init+0x29a>
 800193a:	69ba      	ldr	r2, [r7, #24]
 800193c:	693b      	ldr	r3, [r7, #16]
 800193e:	4313      	orrs	r3, r2
 8001940:	61bb      	str	r3, [r7, #24]
 8001942:	4a1a      	ldr	r2, [pc, #104]	@ (80019ac <HAL_GPIO_Init+0x304>)
 8001944:	69bb      	ldr	r3, [r7, #24]
 8001946:	6053      	str	r3, [r2, #4]
 8001948:	4b18      	ldr	r3, [pc, #96]	@ (80019ac <HAL_GPIO_Init+0x304>)
 800194a:	681b      	ldr	r3, [r3, #0]
 800194c:	61bb      	str	r3, [r7, #24]
 800194e:	693b      	ldr	r3, [r7, #16]
 8001950:	43db      	mvns	r3, r3
 8001952:	69ba      	ldr	r2, [r7, #24]
 8001954:	4013      	ands	r3, r2
 8001956:	61bb      	str	r3, [r7, #24]
 8001958:	683b      	ldr	r3, [r7, #0]
 800195a:	685b      	ldr	r3, [r3, #4]
 800195c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001960:	2b00      	cmp	r3, #0
 8001962:	d003      	beq.n	800196c <HAL_GPIO_Init+0x2c4>
 8001964:	69ba      	ldr	r2, [r7, #24]
 8001966:	693b      	ldr	r3, [r7, #16]
 8001968:	4313      	orrs	r3, r2
 800196a:	61bb      	str	r3, [r7, #24]
 800196c:	4a0f      	ldr	r2, [pc, #60]	@ (80019ac <HAL_GPIO_Init+0x304>)
 800196e:	69bb      	ldr	r3, [r7, #24]
 8001970:	6013      	str	r3, [r2, #0]
 8001972:	69fb      	ldr	r3, [r7, #28]
 8001974:	3301      	adds	r3, #1
 8001976:	61fb      	str	r3, [r7, #28]
 8001978:	69fb      	ldr	r3, [r7, #28]
 800197a:	2b0f      	cmp	r3, #15
 800197c:	f67f aea2 	bls.w	80016c4 <HAL_GPIO_Init+0x1c>
 8001980:	bf00      	nop
 8001982:	bf00      	nop
 8001984:	3724      	adds	r7, #36	@ 0x24
 8001986:	46bd      	mov	sp, r7
 8001988:	f85d 7b04 	ldr.w	r7, [sp], #4
 800198c:	4770      	bx	lr
 800198e:	bf00      	nop
 8001990:	40023800 	.word	0x40023800
 8001994:	40013800 	.word	0x40013800
 8001998:	40020000 	.word	0x40020000
 800199c:	40020400 	.word	0x40020400
 80019a0:	40020800 	.word	0x40020800
 80019a4:	40020c00 	.word	0x40020c00
 80019a8:	40021000 	.word	0x40021000
 80019ac:	40013c00 	.word	0x40013c00

080019b0 <HAL_I2C_Init>:
 80019b0:	b580      	push	{r7, lr}
 80019b2:	b084      	sub	sp, #16
 80019b4:	af00      	add	r7, sp, #0
 80019b6:	6078      	str	r0, [r7, #4]
 80019b8:	687b      	ldr	r3, [r7, #4]
 80019ba:	2b00      	cmp	r3, #0
 80019bc:	d101      	bne.n	80019c2 <HAL_I2C_Init+0x12>
 80019be:	2301      	movs	r3, #1
 80019c0:	e12b      	b.n	8001c1a <HAL_I2C_Init+0x26a>
 80019c2:	687b      	ldr	r3, [r7, #4]
 80019c4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80019c8:	b2db      	uxtb	r3, r3
 80019ca:	2b00      	cmp	r3, #0
 80019cc:	d106      	bne.n	80019dc <HAL_I2C_Init+0x2c>
 80019ce:	687b      	ldr	r3, [r7, #4]
 80019d0:	2200      	movs	r2, #0
 80019d2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80019d6:	6878      	ldr	r0, [r7, #4]
 80019d8:	f7ff f802 	bl	80009e0 <HAL_I2C_MspInit>
 80019dc:	687b      	ldr	r3, [r7, #4]
 80019de:	2224      	movs	r2, #36	@ 0x24
 80019e0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80019e4:	687b      	ldr	r3, [r7, #4]
 80019e6:	681b      	ldr	r3, [r3, #0]
 80019e8:	681a      	ldr	r2, [r3, #0]
 80019ea:	687b      	ldr	r3, [r7, #4]
 80019ec:	681b      	ldr	r3, [r3, #0]
 80019ee:	f022 0201 	bic.w	r2, r2, #1
 80019f2:	601a      	str	r2, [r3, #0]
 80019f4:	687b      	ldr	r3, [r7, #4]
 80019f6:	681b      	ldr	r3, [r3, #0]
 80019f8:	681a      	ldr	r2, [r3, #0]
 80019fa:	687b      	ldr	r3, [r7, #4]
 80019fc:	681b      	ldr	r3, [r3, #0]
 80019fe:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8001a02:	601a      	str	r2, [r3, #0]
 8001a04:	687b      	ldr	r3, [r7, #4]
 8001a06:	681b      	ldr	r3, [r3, #0]
 8001a08:	681a      	ldr	r2, [r3, #0]
 8001a0a:	687b      	ldr	r3, [r7, #4]
 8001a0c:	681b      	ldr	r3, [r3, #0]
 8001a0e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8001a12:	601a      	str	r2, [r3, #0]
 8001a14:	f001 fd24 	bl	8003460 <HAL_RCC_GetPCLK1Freq>
 8001a18:	60f8      	str	r0, [r7, #12]
 8001a1a:	687b      	ldr	r3, [r7, #4]
 8001a1c:	685b      	ldr	r3, [r3, #4]
 8001a1e:	4a81      	ldr	r2, [pc, #516]	@ (8001c24 <HAL_I2C_Init+0x274>)
 8001a20:	4293      	cmp	r3, r2
 8001a22:	d807      	bhi.n	8001a34 <HAL_I2C_Init+0x84>
 8001a24:	68fb      	ldr	r3, [r7, #12]
 8001a26:	4a80      	ldr	r2, [pc, #512]	@ (8001c28 <HAL_I2C_Init+0x278>)
 8001a28:	4293      	cmp	r3, r2
 8001a2a:	bf94      	ite	ls
 8001a2c:	2301      	movls	r3, #1
 8001a2e:	2300      	movhi	r3, #0
 8001a30:	b2db      	uxtb	r3, r3
 8001a32:	e006      	b.n	8001a42 <HAL_I2C_Init+0x92>
 8001a34:	68fb      	ldr	r3, [r7, #12]
 8001a36:	4a7d      	ldr	r2, [pc, #500]	@ (8001c2c <HAL_I2C_Init+0x27c>)
 8001a38:	4293      	cmp	r3, r2
 8001a3a:	bf94      	ite	ls
 8001a3c:	2301      	movls	r3, #1
 8001a3e:	2300      	movhi	r3, #0
 8001a40:	b2db      	uxtb	r3, r3
 8001a42:	2b00      	cmp	r3, #0
 8001a44:	d001      	beq.n	8001a4a <HAL_I2C_Init+0x9a>
 8001a46:	2301      	movs	r3, #1
 8001a48:	e0e7      	b.n	8001c1a <HAL_I2C_Init+0x26a>
 8001a4a:	68fb      	ldr	r3, [r7, #12]
 8001a4c:	4a78      	ldr	r2, [pc, #480]	@ (8001c30 <HAL_I2C_Init+0x280>)
 8001a4e:	fba2 2303 	umull	r2, r3, r2, r3
 8001a52:	0c9b      	lsrs	r3, r3, #18
 8001a54:	60bb      	str	r3, [r7, #8]
 8001a56:	687b      	ldr	r3, [r7, #4]
 8001a58:	681b      	ldr	r3, [r3, #0]
 8001a5a:	685b      	ldr	r3, [r3, #4]
 8001a5c:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8001a60:	687b      	ldr	r3, [r7, #4]
 8001a62:	681b      	ldr	r3, [r3, #0]
 8001a64:	68ba      	ldr	r2, [r7, #8]
 8001a66:	430a      	orrs	r2, r1
 8001a68:	605a      	str	r2, [r3, #4]
 8001a6a:	687b      	ldr	r3, [r7, #4]
 8001a6c:	681b      	ldr	r3, [r3, #0]
 8001a6e:	6a1b      	ldr	r3, [r3, #32]
 8001a70:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8001a74:	687b      	ldr	r3, [r7, #4]
 8001a76:	685b      	ldr	r3, [r3, #4]
 8001a78:	4a6a      	ldr	r2, [pc, #424]	@ (8001c24 <HAL_I2C_Init+0x274>)
 8001a7a:	4293      	cmp	r3, r2
 8001a7c:	d802      	bhi.n	8001a84 <HAL_I2C_Init+0xd4>
 8001a7e:	68bb      	ldr	r3, [r7, #8]
 8001a80:	3301      	adds	r3, #1
 8001a82:	e009      	b.n	8001a98 <HAL_I2C_Init+0xe8>
 8001a84:	68bb      	ldr	r3, [r7, #8]
 8001a86:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8001a8a:	fb02 f303 	mul.w	r3, r2, r3
 8001a8e:	4a69      	ldr	r2, [pc, #420]	@ (8001c34 <HAL_I2C_Init+0x284>)
 8001a90:	fba2 2303 	umull	r2, r3, r2, r3
 8001a94:	099b      	lsrs	r3, r3, #6
 8001a96:	3301      	adds	r3, #1
 8001a98:	687a      	ldr	r2, [r7, #4]
 8001a9a:	6812      	ldr	r2, [r2, #0]
 8001a9c:	430b      	orrs	r3, r1
 8001a9e:	6213      	str	r3, [r2, #32]
 8001aa0:	687b      	ldr	r3, [r7, #4]
 8001aa2:	681b      	ldr	r3, [r3, #0]
 8001aa4:	69db      	ldr	r3, [r3, #28]
 8001aa6:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 8001aaa:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 8001aae:	687b      	ldr	r3, [r7, #4]
 8001ab0:	685b      	ldr	r3, [r3, #4]
 8001ab2:	495c      	ldr	r1, [pc, #368]	@ (8001c24 <HAL_I2C_Init+0x274>)
 8001ab4:	428b      	cmp	r3, r1
 8001ab6:	d819      	bhi.n	8001aec <HAL_I2C_Init+0x13c>
 8001ab8:	68fb      	ldr	r3, [r7, #12]
 8001aba:	1e59      	subs	r1, r3, #1
 8001abc:	687b      	ldr	r3, [r7, #4]
 8001abe:	685b      	ldr	r3, [r3, #4]
 8001ac0:	005b      	lsls	r3, r3, #1
 8001ac2:	fbb1 f3f3 	udiv	r3, r1, r3
 8001ac6:	1c59      	adds	r1, r3, #1
 8001ac8:	f640 73fc 	movw	r3, #4092	@ 0xffc
 8001acc:	400b      	ands	r3, r1
 8001ace:	2b00      	cmp	r3, #0
 8001ad0:	d00a      	beq.n	8001ae8 <HAL_I2C_Init+0x138>
 8001ad2:	68fb      	ldr	r3, [r7, #12]
 8001ad4:	1e59      	subs	r1, r3, #1
 8001ad6:	687b      	ldr	r3, [r7, #4]
 8001ad8:	685b      	ldr	r3, [r3, #4]
 8001ada:	005b      	lsls	r3, r3, #1
 8001adc:	fbb1 f3f3 	udiv	r3, r1, r3
 8001ae0:	3301      	adds	r3, #1
 8001ae2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001ae6:	e051      	b.n	8001b8c <HAL_I2C_Init+0x1dc>
 8001ae8:	2304      	movs	r3, #4
 8001aea:	e04f      	b.n	8001b8c <HAL_I2C_Init+0x1dc>
 8001aec:	687b      	ldr	r3, [r7, #4]
 8001aee:	689b      	ldr	r3, [r3, #8]
 8001af0:	2b00      	cmp	r3, #0
 8001af2:	d111      	bne.n	8001b18 <HAL_I2C_Init+0x168>
 8001af4:	68fb      	ldr	r3, [r7, #12]
 8001af6:	1e58      	subs	r0, r3, #1
 8001af8:	687b      	ldr	r3, [r7, #4]
 8001afa:	6859      	ldr	r1, [r3, #4]
 8001afc:	460b      	mov	r3, r1
 8001afe:	005b      	lsls	r3, r3, #1
 8001b00:	440b      	add	r3, r1
 8001b02:	fbb0 f3f3 	udiv	r3, r0, r3
 8001b06:	3301      	adds	r3, #1
 8001b08:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001b0c:	2b00      	cmp	r3, #0
 8001b0e:	bf0c      	ite	eq
 8001b10:	2301      	moveq	r3, #1
 8001b12:	2300      	movne	r3, #0
 8001b14:	b2db      	uxtb	r3, r3
 8001b16:	e012      	b.n	8001b3e <HAL_I2C_Init+0x18e>
 8001b18:	68fb      	ldr	r3, [r7, #12]
 8001b1a:	1e58      	subs	r0, r3, #1
 8001b1c:	687b      	ldr	r3, [r7, #4]
 8001b1e:	6859      	ldr	r1, [r3, #4]
 8001b20:	460b      	mov	r3, r1
 8001b22:	009b      	lsls	r3, r3, #2
 8001b24:	440b      	add	r3, r1
 8001b26:	0099      	lsls	r1, r3, #2
 8001b28:	440b      	add	r3, r1
 8001b2a:	fbb0 f3f3 	udiv	r3, r0, r3
 8001b2e:	3301      	adds	r3, #1
 8001b30:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001b34:	2b00      	cmp	r3, #0
 8001b36:	bf0c      	ite	eq
 8001b38:	2301      	moveq	r3, #1
 8001b3a:	2300      	movne	r3, #0
 8001b3c:	b2db      	uxtb	r3, r3
 8001b3e:	2b00      	cmp	r3, #0
 8001b40:	d001      	beq.n	8001b46 <HAL_I2C_Init+0x196>
 8001b42:	2301      	movs	r3, #1
 8001b44:	e022      	b.n	8001b8c <HAL_I2C_Init+0x1dc>
 8001b46:	687b      	ldr	r3, [r7, #4]
 8001b48:	689b      	ldr	r3, [r3, #8]
 8001b4a:	2b00      	cmp	r3, #0
 8001b4c:	d10e      	bne.n	8001b6c <HAL_I2C_Init+0x1bc>
 8001b4e:	68fb      	ldr	r3, [r7, #12]
 8001b50:	1e58      	subs	r0, r3, #1
 8001b52:	687b      	ldr	r3, [r7, #4]
 8001b54:	6859      	ldr	r1, [r3, #4]
 8001b56:	460b      	mov	r3, r1
 8001b58:	005b      	lsls	r3, r3, #1
 8001b5a:	440b      	add	r3, r1
 8001b5c:	fbb0 f3f3 	udiv	r3, r0, r3
 8001b60:	3301      	adds	r3, #1
 8001b62:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001b66:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8001b6a:	e00f      	b.n	8001b8c <HAL_I2C_Init+0x1dc>
 8001b6c:	68fb      	ldr	r3, [r7, #12]
 8001b6e:	1e58      	subs	r0, r3, #1
 8001b70:	687b      	ldr	r3, [r7, #4]
 8001b72:	6859      	ldr	r1, [r3, #4]
 8001b74:	460b      	mov	r3, r1
 8001b76:	009b      	lsls	r3, r3, #2
 8001b78:	440b      	add	r3, r1
 8001b7a:	0099      	lsls	r1, r3, #2
 8001b7c:	440b      	add	r3, r1
 8001b7e:	fbb0 f3f3 	udiv	r3, r0, r3
 8001b82:	3301      	adds	r3, #1
 8001b84:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001b88:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8001b8c:	6879      	ldr	r1, [r7, #4]
 8001b8e:	6809      	ldr	r1, [r1, #0]
 8001b90:	4313      	orrs	r3, r2
 8001b92:	61cb      	str	r3, [r1, #28]
 8001b94:	687b      	ldr	r3, [r7, #4]
 8001b96:	681b      	ldr	r3, [r3, #0]
 8001b98:	681b      	ldr	r3, [r3, #0]
 8001b9a:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 8001b9e:	687b      	ldr	r3, [r7, #4]
 8001ba0:	69da      	ldr	r2, [r3, #28]
 8001ba2:	687b      	ldr	r3, [r7, #4]
 8001ba4:	6a1b      	ldr	r3, [r3, #32]
 8001ba6:	431a      	orrs	r2, r3
 8001ba8:	687b      	ldr	r3, [r7, #4]
 8001baa:	681b      	ldr	r3, [r3, #0]
 8001bac:	430a      	orrs	r2, r1
 8001bae:	601a      	str	r2, [r3, #0]
 8001bb0:	687b      	ldr	r3, [r7, #4]
 8001bb2:	681b      	ldr	r3, [r3, #0]
 8001bb4:	689b      	ldr	r3, [r3, #8]
 8001bb6:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 8001bba:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8001bbe:	687a      	ldr	r2, [r7, #4]
 8001bc0:	6911      	ldr	r1, [r2, #16]
 8001bc2:	687a      	ldr	r2, [r7, #4]
 8001bc4:	68d2      	ldr	r2, [r2, #12]
 8001bc6:	4311      	orrs	r1, r2
 8001bc8:	687a      	ldr	r2, [r7, #4]
 8001bca:	6812      	ldr	r2, [r2, #0]
 8001bcc:	430b      	orrs	r3, r1
 8001bce:	6093      	str	r3, [r2, #8]
 8001bd0:	687b      	ldr	r3, [r7, #4]
 8001bd2:	681b      	ldr	r3, [r3, #0]
 8001bd4:	68db      	ldr	r3, [r3, #12]
 8001bd6:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 8001bda:	687b      	ldr	r3, [r7, #4]
 8001bdc:	695a      	ldr	r2, [r3, #20]
 8001bde:	687b      	ldr	r3, [r7, #4]
 8001be0:	699b      	ldr	r3, [r3, #24]
 8001be2:	431a      	orrs	r2, r3
 8001be4:	687b      	ldr	r3, [r7, #4]
 8001be6:	681b      	ldr	r3, [r3, #0]
 8001be8:	430a      	orrs	r2, r1
 8001bea:	60da      	str	r2, [r3, #12]
 8001bec:	687b      	ldr	r3, [r7, #4]
 8001bee:	681b      	ldr	r3, [r3, #0]
 8001bf0:	681a      	ldr	r2, [r3, #0]
 8001bf2:	687b      	ldr	r3, [r7, #4]
 8001bf4:	681b      	ldr	r3, [r3, #0]
 8001bf6:	f042 0201 	orr.w	r2, r2, #1
 8001bfa:	601a      	str	r2, [r3, #0]
 8001bfc:	687b      	ldr	r3, [r7, #4]
 8001bfe:	2200      	movs	r2, #0
 8001c00:	641a      	str	r2, [r3, #64]	@ 0x40
 8001c02:	687b      	ldr	r3, [r7, #4]
 8001c04:	2220      	movs	r2, #32
 8001c06:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001c0a:	687b      	ldr	r3, [r7, #4]
 8001c0c:	2200      	movs	r2, #0
 8001c0e:	631a      	str	r2, [r3, #48]	@ 0x30
 8001c10:	687b      	ldr	r3, [r7, #4]
 8001c12:	2200      	movs	r2, #0
 8001c14:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8001c18:	2300      	movs	r3, #0
 8001c1a:	4618      	mov	r0, r3
 8001c1c:	3710      	adds	r7, #16
 8001c1e:	46bd      	mov	sp, r7
 8001c20:	bd80      	pop	{r7, pc}
 8001c22:	bf00      	nop
 8001c24:	000186a0 	.word	0x000186a0
 8001c28:	001e847f 	.word	0x001e847f
 8001c2c:	003d08ff 	.word	0x003d08ff
 8001c30:	431bde83 	.word	0x431bde83
 8001c34:	10624dd3 	.word	0x10624dd3

08001c38 <HAL_I2C_Master_Transmit>:
 8001c38:	b580      	push	{r7, lr}
 8001c3a:	b088      	sub	sp, #32
 8001c3c:	af02      	add	r7, sp, #8
 8001c3e:	60f8      	str	r0, [r7, #12]
 8001c40:	607a      	str	r2, [r7, #4]
 8001c42:	461a      	mov	r2, r3
 8001c44:	460b      	mov	r3, r1
 8001c46:	817b      	strh	r3, [r7, #10]
 8001c48:	4613      	mov	r3, r2
 8001c4a:	813b      	strh	r3, [r7, #8]
 8001c4c:	f7ff fb58 	bl	8001300 <HAL_GetTick>
 8001c50:	6178      	str	r0, [r7, #20]
 8001c52:	68fb      	ldr	r3, [r7, #12]
 8001c54:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8001c58:	b2db      	uxtb	r3, r3
 8001c5a:	2b20      	cmp	r3, #32
 8001c5c:	f040 80e0 	bne.w	8001e20 <HAL_I2C_Master_Transmit+0x1e8>
 8001c60:	697b      	ldr	r3, [r7, #20]
 8001c62:	9300      	str	r3, [sp, #0]
 8001c64:	2319      	movs	r3, #25
 8001c66:	2201      	movs	r2, #1
 8001c68:	4970      	ldr	r1, [pc, #448]	@ (8001e2c <HAL_I2C_Master_Transmit+0x1f4>)
 8001c6a:	68f8      	ldr	r0, [r7, #12]
 8001c6c:	f000 fd92 	bl	8002794 <I2C_WaitOnFlagUntilTimeout>
 8001c70:	4603      	mov	r3, r0
 8001c72:	2b00      	cmp	r3, #0
 8001c74:	d001      	beq.n	8001c7a <HAL_I2C_Master_Transmit+0x42>
 8001c76:	2302      	movs	r3, #2
 8001c78:	e0d3      	b.n	8001e22 <HAL_I2C_Master_Transmit+0x1ea>
 8001c7a:	68fb      	ldr	r3, [r7, #12]
 8001c7c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001c80:	2b01      	cmp	r3, #1
 8001c82:	d101      	bne.n	8001c88 <HAL_I2C_Master_Transmit+0x50>
 8001c84:	2302      	movs	r3, #2
 8001c86:	e0cc      	b.n	8001e22 <HAL_I2C_Master_Transmit+0x1ea>
 8001c88:	68fb      	ldr	r3, [r7, #12]
 8001c8a:	2201      	movs	r2, #1
 8001c8c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001c90:	68fb      	ldr	r3, [r7, #12]
 8001c92:	681b      	ldr	r3, [r3, #0]
 8001c94:	681b      	ldr	r3, [r3, #0]
 8001c96:	f003 0301 	and.w	r3, r3, #1
 8001c9a:	2b01      	cmp	r3, #1
 8001c9c:	d007      	beq.n	8001cae <HAL_I2C_Master_Transmit+0x76>
 8001c9e:	68fb      	ldr	r3, [r7, #12]
 8001ca0:	681b      	ldr	r3, [r3, #0]
 8001ca2:	681a      	ldr	r2, [r3, #0]
 8001ca4:	68fb      	ldr	r3, [r7, #12]
 8001ca6:	681b      	ldr	r3, [r3, #0]
 8001ca8:	f042 0201 	orr.w	r2, r2, #1
 8001cac:	601a      	str	r2, [r3, #0]
 8001cae:	68fb      	ldr	r3, [r7, #12]
 8001cb0:	681b      	ldr	r3, [r3, #0]
 8001cb2:	681a      	ldr	r2, [r3, #0]
 8001cb4:	68fb      	ldr	r3, [r7, #12]
 8001cb6:	681b      	ldr	r3, [r3, #0]
 8001cb8:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8001cbc:	601a      	str	r2, [r3, #0]
 8001cbe:	68fb      	ldr	r3, [r7, #12]
 8001cc0:	2221      	movs	r2, #33	@ 0x21
 8001cc2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001cc6:	68fb      	ldr	r3, [r7, #12]
 8001cc8:	2210      	movs	r2, #16
 8001cca:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8001cce:	68fb      	ldr	r3, [r7, #12]
 8001cd0:	2200      	movs	r2, #0
 8001cd2:	641a      	str	r2, [r3, #64]	@ 0x40
 8001cd4:	68fb      	ldr	r3, [r7, #12]
 8001cd6:	687a      	ldr	r2, [r7, #4]
 8001cd8:	625a      	str	r2, [r3, #36]	@ 0x24
 8001cda:	68fb      	ldr	r3, [r7, #12]
 8001cdc:	893a      	ldrh	r2, [r7, #8]
 8001cde:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8001ce0:	68fb      	ldr	r3, [r7, #12]
 8001ce2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001ce4:	b29a      	uxth	r2, r3
 8001ce6:	68fb      	ldr	r3, [r7, #12]
 8001ce8:	851a      	strh	r2, [r3, #40]	@ 0x28
 8001cea:	68fb      	ldr	r3, [r7, #12]
 8001cec:	4a50      	ldr	r2, [pc, #320]	@ (8001e30 <HAL_I2C_Master_Transmit+0x1f8>)
 8001cee:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001cf0:	8979      	ldrh	r1, [r7, #10]
 8001cf2:	697b      	ldr	r3, [r7, #20]
 8001cf4:	6a3a      	ldr	r2, [r7, #32]
 8001cf6:	68f8      	ldr	r0, [r7, #12]
 8001cf8:	f000 fbfc 	bl	80024f4 <I2C_MasterRequestWrite>
 8001cfc:	4603      	mov	r3, r0
 8001cfe:	2b00      	cmp	r3, #0
 8001d00:	d001      	beq.n	8001d06 <HAL_I2C_Master_Transmit+0xce>
 8001d02:	2301      	movs	r3, #1
 8001d04:	e08d      	b.n	8001e22 <HAL_I2C_Master_Transmit+0x1ea>
 8001d06:	2300      	movs	r3, #0
 8001d08:	613b      	str	r3, [r7, #16]
 8001d0a:	68fb      	ldr	r3, [r7, #12]
 8001d0c:	681b      	ldr	r3, [r3, #0]
 8001d0e:	695b      	ldr	r3, [r3, #20]
 8001d10:	613b      	str	r3, [r7, #16]
 8001d12:	68fb      	ldr	r3, [r7, #12]
 8001d14:	681b      	ldr	r3, [r3, #0]
 8001d16:	699b      	ldr	r3, [r3, #24]
 8001d18:	613b      	str	r3, [r7, #16]
 8001d1a:	693b      	ldr	r3, [r7, #16]
 8001d1c:	e066      	b.n	8001dec <HAL_I2C_Master_Transmit+0x1b4>
 8001d1e:	697a      	ldr	r2, [r7, #20]
 8001d20:	6a39      	ldr	r1, [r7, #32]
 8001d22:	68f8      	ldr	r0, [r7, #12]
 8001d24:	f000 fe50 	bl	80029c8 <I2C_WaitOnTXEFlagUntilTimeout>
 8001d28:	4603      	mov	r3, r0
 8001d2a:	2b00      	cmp	r3, #0
 8001d2c:	d00d      	beq.n	8001d4a <HAL_I2C_Master_Transmit+0x112>
 8001d2e:	68fb      	ldr	r3, [r7, #12]
 8001d30:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001d32:	2b04      	cmp	r3, #4
 8001d34:	d107      	bne.n	8001d46 <HAL_I2C_Master_Transmit+0x10e>
 8001d36:	68fb      	ldr	r3, [r7, #12]
 8001d38:	681b      	ldr	r3, [r3, #0]
 8001d3a:	681a      	ldr	r2, [r3, #0]
 8001d3c:	68fb      	ldr	r3, [r7, #12]
 8001d3e:	681b      	ldr	r3, [r3, #0]
 8001d40:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001d44:	601a      	str	r2, [r3, #0]
 8001d46:	2301      	movs	r3, #1
 8001d48:	e06b      	b.n	8001e22 <HAL_I2C_Master_Transmit+0x1ea>
 8001d4a:	68fb      	ldr	r3, [r7, #12]
 8001d4c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001d4e:	781a      	ldrb	r2, [r3, #0]
 8001d50:	68fb      	ldr	r3, [r7, #12]
 8001d52:	681b      	ldr	r3, [r3, #0]
 8001d54:	611a      	str	r2, [r3, #16]
 8001d56:	68fb      	ldr	r3, [r7, #12]
 8001d58:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001d5a:	1c5a      	adds	r2, r3, #1
 8001d5c:	68fb      	ldr	r3, [r7, #12]
 8001d5e:	625a      	str	r2, [r3, #36]	@ 0x24
 8001d60:	68fb      	ldr	r3, [r7, #12]
 8001d62:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001d64:	b29b      	uxth	r3, r3
 8001d66:	3b01      	subs	r3, #1
 8001d68:	b29a      	uxth	r2, r3
 8001d6a:	68fb      	ldr	r3, [r7, #12]
 8001d6c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8001d6e:	68fb      	ldr	r3, [r7, #12]
 8001d70:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001d72:	3b01      	subs	r3, #1
 8001d74:	b29a      	uxth	r2, r3
 8001d76:	68fb      	ldr	r3, [r7, #12]
 8001d78:	851a      	strh	r2, [r3, #40]	@ 0x28
 8001d7a:	68fb      	ldr	r3, [r7, #12]
 8001d7c:	681b      	ldr	r3, [r3, #0]
 8001d7e:	695b      	ldr	r3, [r3, #20]
 8001d80:	f003 0304 	and.w	r3, r3, #4
 8001d84:	2b04      	cmp	r3, #4
 8001d86:	d11b      	bne.n	8001dc0 <HAL_I2C_Master_Transmit+0x188>
 8001d88:	68fb      	ldr	r3, [r7, #12]
 8001d8a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001d8c:	2b00      	cmp	r3, #0
 8001d8e:	d017      	beq.n	8001dc0 <HAL_I2C_Master_Transmit+0x188>
 8001d90:	68fb      	ldr	r3, [r7, #12]
 8001d92:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001d94:	781a      	ldrb	r2, [r3, #0]
 8001d96:	68fb      	ldr	r3, [r7, #12]
 8001d98:	681b      	ldr	r3, [r3, #0]
 8001d9a:	611a      	str	r2, [r3, #16]
 8001d9c:	68fb      	ldr	r3, [r7, #12]
 8001d9e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001da0:	1c5a      	adds	r2, r3, #1
 8001da2:	68fb      	ldr	r3, [r7, #12]
 8001da4:	625a      	str	r2, [r3, #36]	@ 0x24
 8001da6:	68fb      	ldr	r3, [r7, #12]
 8001da8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001daa:	b29b      	uxth	r3, r3
 8001dac:	3b01      	subs	r3, #1
 8001dae:	b29a      	uxth	r2, r3
 8001db0:	68fb      	ldr	r3, [r7, #12]
 8001db2:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8001db4:	68fb      	ldr	r3, [r7, #12]
 8001db6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001db8:	3b01      	subs	r3, #1
 8001dba:	b29a      	uxth	r2, r3
 8001dbc:	68fb      	ldr	r3, [r7, #12]
 8001dbe:	851a      	strh	r2, [r3, #40]	@ 0x28
 8001dc0:	697a      	ldr	r2, [r7, #20]
 8001dc2:	6a39      	ldr	r1, [r7, #32]
 8001dc4:	68f8      	ldr	r0, [r7, #12]
 8001dc6:	f000 fe47 	bl	8002a58 <I2C_WaitOnBTFFlagUntilTimeout>
 8001dca:	4603      	mov	r3, r0
 8001dcc:	2b00      	cmp	r3, #0
 8001dce:	d00d      	beq.n	8001dec <HAL_I2C_Master_Transmit+0x1b4>
 8001dd0:	68fb      	ldr	r3, [r7, #12]
 8001dd2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001dd4:	2b04      	cmp	r3, #4
 8001dd6:	d107      	bne.n	8001de8 <HAL_I2C_Master_Transmit+0x1b0>
 8001dd8:	68fb      	ldr	r3, [r7, #12]
 8001dda:	681b      	ldr	r3, [r3, #0]
 8001ddc:	681a      	ldr	r2, [r3, #0]
 8001dde:	68fb      	ldr	r3, [r7, #12]
 8001de0:	681b      	ldr	r3, [r3, #0]
 8001de2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001de6:	601a      	str	r2, [r3, #0]
 8001de8:	2301      	movs	r3, #1
 8001dea:	e01a      	b.n	8001e22 <HAL_I2C_Master_Transmit+0x1ea>
 8001dec:	68fb      	ldr	r3, [r7, #12]
 8001dee:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001df0:	2b00      	cmp	r3, #0
 8001df2:	d194      	bne.n	8001d1e <HAL_I2C_Master_Transmit+0xe6>
 8001df4:	68fb      	ldr	r3, [r7, #12]
 8001df6:	681b      	ldr	r3, [r3, #0]
 8001df8:	681a      	ldr	r2, [r3, #0]
 8001dfa:	68fb      	ldr	r3, [r7, #12]
 8001dfc:	681b      	ldr	r3, [r3, #0]
 8001dfe:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001e02:	601a      	str	r2, [r3, #0]
 8001e04:	68fb      	ldr	r3, [r7, #12]
 8001e06:	2220      	movs	r2, #32
 8001e08:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001e0c:	68fb      	ldr	r3, [r7, #12]
 8001e0e:	2200      	movs	r2, #0
 8001e10:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8001e14:	68fb      	ldr	r3, [r7, #12]
 8001e16:	2200      	movs	r2, #0
 8001e18:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001e1c:	2300      	movs	r3, #0
 8001e1e:	e000      	b.n	8001e22 <HAL_I2C_Master_Transmit+0x1ea>
 8001e20:	2302      	movs	r3, #2
 8001e22:	4618      	mov	r0, r3
 8001e24:	3718      	adds	r7, #24
 8001e26:	46bd      	mov	sp, r7
 8001e28:	bd80      	pop	{r7, pc}
 8001e2a:	bf00      	nop
 8001e2c:	00100002 	.word	0x00100002
 8001e30:	ffff0000 	.word	0xffff0000

08001e34 <HAL_I2C_Master_Receive>:
 8001e34:	b580      	push	{r7, lr}
 8001e36:	b08c      	sub	sp, #48	@ 0x30
 8001e38:	af02      	add	r7, sp, #8
 8001e3a:	60f8      	str	r0, [r7, #12]
 8001e3c:	607a      	str	r2, [r7, #4]
 8001e3e:	461a      	mov	r2, r3
 8001e40:	460b      	mov	r3, r1
 8001e42:	817b      	strh	r3, [r7, #10]
 8001e44:	4613      	mov	r3, r2
 8001e46:	813b      	strh	r3, [r7, #8]
 8001e48:	f7ff fa5a 	bl	8001300 <HAL_GetTick>
 8001e4c:	6278      	str	r0, [r7, #36]	@ 0x24
 8001e4e:	68fb      	ldr	r3, [r7, #12]
 8001e50:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8001e54:	b2db      	uxtb	r3, r3
 8001e56:	2b20      	cmp	r3, #32
 8001e58:	f040 8217 	bne.w	800228a <HAL_I2C_Master_Receive+0x456>
 8001e5c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001e5e:	9300      	str	r3, [sp, #0]
 8001e60:	2319      	movs	r3, #25
 8001e62:	2201      	movs	r2, #1
 8001e64:	497c      	ldr	r1, [pc, #496]	@ (8002058 <HAL_I2C_Master_Receive+0x224>)
 8001e66:	68f8      	ldr	r0, [r7, #12]
 8001e68:	f000 fc94 	bl	8002794 <I2C_WaitOnFlagUntilTimeout>
 8001e6c:	4603      	mov	r3, r0
 8001e6e:	2b00      	cmp	r3, #0
 8001e70:	d001      	beq.n	8001e76 <HAL_I2C_Master_Receive+0x42>
 8001e72:	2302      	movs	r3, #2
 8001e74:	e20a      	b.n	800228c <HAL_I2C_Master_Receive+0x458>
 8001e76:	68fb      	ldr	r3, [r7, #12]
 8001e78:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8001e7c:	2b01      	cmp	r3, #1
 8001e7e:	d101      	bne.n	8001e84 <HAL_I2C_Master_Receive+0x50>
 8001e80:	2302      	movs	r3, #2
 8001e82:	e203      	b.n	800228c <HAL_I2C_Master_Receive+0x458>
 8001e84:	68fb      	ldr	r3, [r7, #12]
 8001e86:	2201      	movs	r2, #1
 8001e88:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8001e8c:	68fb      	ldr	r3, [r7, #12]
 8001e8e:	681b      	ldr	r3, [r3, #0]
 8001e90:	681b      	ldr	r3, [r3, #0]
 8001e92:	f003 0301 	and.w	r3, r3, #1
 8001e96:	2b01      	cmp	r3, #1
 8001e98:	d007      	beq.n	8001eaa <HAL_I2C_Master_Receive+0x76>
 8001e9a:	68fb      	ldr	r3, [r7, #12]
 8001e9c:	681b      	ldr	r3, [r3, #0]
 8001e9e:	681a      	ldr	r2, [r3, #0]
 8001ea0:	68fb      	ldr	r3, [r7, #12]
 8001ea2:	681b      	ldr	r3, [r3, #0]
 8001ea4:	f042 0201 	orr.w	r2, r2, #1
 8001ea8:	601a      	str	r2, [r3, #0]
 8001eaa:	68fb      	ldr	r3, [r7, #12]
 8001eac:	681b      	ldr	r3, [r3, #0]
 8001eae:	681a      	ldr	r2, [r3, #0]
 8001eb0:	68fb      	ldr	r3, [r7, #12]
 8001eb2:	681b      	ldr	r3, [r3, #0]
 8001eb4:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8001eb8:	601a      	str	r2, [r3, #0]
 8001eba:	68fb      	ldr	r3, [r7, #12]
 8001ebc:	2222      	movs	r2, #34	@ 0x22
 8001ebe:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8001ec2:	68fb      	ldr	r3, [r7, #12]
 8001ec4:	2210      	movs	r2, #16
 8001ec6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8001eca:	68fb      	ldr	r3, [r7, #12]
 8001ecc:	2200      	movs	r2, #0
 8001ece:	641a      	str	r2, [r3, #64]	@ 0x40
 8001ed0:	68fb      	ldr	r3, [r7, #12]
 8001ed2:	687a      	ldr	r2, [r7, #4]
 8001ed4:	625a      	str	r2, [r3, #36]	@ 0x24
 8001ed6:	68fb      	ldr	r3, [r7, #12]
 8001ed8:	893a      	ldrh	r2, [r7, #8]
 8001eda:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8001edc:	68fb      	ldr	r3, [r7, #12]
 8001ede:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001ee0:	b29a      	uxth	r2, r3
 8001ee2:	68fb      	ldr	r3, [r7, #12]
 8001ee4:	851a      	strh	r2, [r3, #40]	@ 0x28
 8001ee6:	68fb      	ldr	r3, [r7, #12]
 8001ee8:	4a5c      	ldr	r2, [pc, #368]	@ (800205c <HAL_I2C_Master_Receive+0x228>)
 8001eea:	62da      	str	r2, [r3, #44]	@ 0x2c
 8001eec:	8979      	ldrh	r1, [r7, #10]
 8001eee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001ef0:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8001ef2:	68f8      	ldr	r0, [r7, #12]
 8001ef4:	f000 fb80 	bl	80025f8 <I2C_MasterRequestRead>
 8001ef8:	4603      	mov	r3, r0
 8001efa:	2b00      	cmp	r3, #0
 8001efc:	d001      	beq.n	8001f02 <HAL_I2C_Master_Receive+0xce>
 8001efe:	2301      	movs	r3, #1
 8001f00:	e1c4      	b.n	800228c <HAL_I2C_Master_Receive+0x458>
 8001f02:	68fb      	ldr	r3, [r7, #12]
 8001f04:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001f06:	2b00      	cmp	r3, #0
 8001f08:	d113      	bne.n	8001f32 <HAL_I2C_Master_Receive+0xfe>
 8001f0a:	2300      	movs	r3, #0
 8001f0c:	623b      	str	r3, [r7, #32]
 8001f0e:	68fb      	ldr	r3, [r7, #12]
 8001f10:	681b      	ldr	r3, [r3, #0]
 8001f12:	695b      	ldr	r3, [r3, #20]
 8001f14:	623b      	str	r3, [r7, #32]
 8001f16:	68fb      	ldr	r3, [r7, #12]
 8001f18:	681b      	ldr	r3, [r3, #0]
 8001f1a:	699b      	ldr	r3, [r3, #24]
 8001f1c:	623b      	str	r3, [r7, #32]
 8001f1e:	6a3b      	ldr	r3, [r7, #32]
 8001f20:	68fb      	ldr	r3, [r7, #12]
 8001f22:	681b      	ldr	r3, [r3, #0]
 8001f24:	681a      	ldr	r2, [r3, #0]
 8001f26:	68fb      	ldr	r3, [r7, #12]
 8001f28:	681b      	ldr	r3, [r3, #0]
 8001f2a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001f2e:	601a      	str	r2, [r3, #0]
 8001f30:	e198      	b.n	8002264 <HAL_I2C_Master_Receive+0x430>
 8001f32:	68fb      	ldr	r3, [r7, #12]
 8001f34:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001f36:	2b01      	cmp	r3, #1
 8001f38:	d11b      	bne.n	8001f72 <HAL_I2C_Master_Receive+0x13e>
 8001f3a:	68fb      	ldr	r3, [r7, #12]
 8001f3c:	681b      	ldr	r3, [r3, #0]
 8001f3e:	681a      	ldr	r2, [r3, #0]
 8001f40:	68fb      	ldr	r3, [r7, #12]
 8001f42:	681b      	ldr	r3, [r3, #0]
 8001f44:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8001f48:	601a      	str	r2, [r3, #0]
 8001f4a:	2300      	movs	r3, #0
 8001f4c:	61fb      	str	r3, [r7, #28]
 8001f4e:	68fb      	ldr	r3, [r7, #12]
 8001f50:	681b      	ldr	r3, [r3, #0]
 8001f52:	695b      	ldr	r3, [r3, #20]
 8001f54:	61fb      	str	r3, [r7, #28]
 8001f56:	68fb      	ldr	r3, [r7, #12]
 8001f58:	681b      	ldr	r3, [r3, #0]
 8001f5a:	699b      	ldr	r3, [r3, #24]
 8001f5c:	61fb      	str	r3, [r7, #28]
 8001f5e:	69fb      	ldr	r3, [r7, #28]
 8001f60:	68fb      	ldr	r3, [r7, #12]
 8001f62:	681b      	ldr	r3, [r3, #0]
 8001f64:	681a      	ldr	r2, [r3, #0]
 8001f66:	68fb      	ldr	r3, [r7, #12]
 8001f68:	681b      	ldr	r3, [r3, #0]
 8001f6a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8001f6e:	601a      	str	r2, [r3, #0]
 8001f70:	e178      	b.n	8002264 <HAL_I2C_Master_Receive+0x430>
 8001f72:	68fb      	ldr	r3, [r7, #12]
 8001f74:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001f76:	2b02      	cmp	r3, #2
 8001f78:	d11b      	bne.n	8001fb2 <HAL_I2C_Master_Receive+0x17e>
 8001f7a:	68fb      	ldr	r3, [r7, #12]
 8001f7c:	681b      	ldr	r3, [r3, #0]
 8001f7e:	681a      	ldr	r2, [r3, #0]
 8001f80:	68fb      	ldr	r3, [r7, #12]
 8001f82:	681b      	ldr	r3, [r3, #0]
 8001f84:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8001f88:	601a      	str	r2, [r3, #0]
 8001f8a:	68fb      	ldr	r3, [r7, #12]
 8001f8c:	681b      	ldr	r3, [r3, #0]
 8001f8e:	681a      	ldr	r2, [r3, #0]
 8001f90:	68fb      	ldr	r3, [r7, #12]
 8001f92:	681b      	ldr	r3, [r3, #0]
 8001f94:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8001f98:	601a      	str	r2, [r3, #0]
 8001f9a:	2300      	movs	r3, #0
 8001f9c:	61bb      	str	r3, [r7, #24]
 8001f9e:	68fb      	ldr	r3, [r7, #12]
 8001fa0:	681b      	ldr	r3, [r3, #0]
 8001fa2:	695b      	ldr	r3, [r3, #20]
 8001fa4:	61bb      	str	r3, [r7, #24]
 8001fa6:	68fb      	ldr	r3, [r7, #12]
 8001fa8:	681b      	ldr	r3, [r3, #0]
 8001faa:	699b      	ldr	r3, [r3, #24]
 8001fac:	61bb      	str	r3, [r7, #24]
 8001fae:	69bb      	ldr	r3, [r7, #24]
 8001fb0:	e158      	b.n	8002264 <HAL_I2C_Master_Receive+0x430>
 8001fb2:	68fb      	ldr	r3, [r7, #12]
 8001fb4:	681b      	ldr	r3, [r3, #0]
 8001fb6:	681a      	ldr	r2, [r3, #0]
 8001fb8:	68fb      	ldr	r3, [r7, #12]
 8001fba:	681b      	ldr	r3, [r3, #0]
 8001fbc:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8001fc0:	601a      	str	r2, [r3, #0]
 8001fc2:	2300      	movs	r3, #0
 8001fc4:	617b      	str	r3, [r7, #20]
 8001fc6:	68fb      	ldr	r3, [r7, #12]
 8001fc8:	681b      	ldr	r3, [r3, #0]
 8001fca:	695b      	ldr	r3, [r3, #20]
 8001fcc:	617b      	str	r3, [r7, #20]
 8001fce:	68fb      	ldr	r3, [r7, #12]
 8001fd0:	681b      	ldr	r3, [r3, #0]
 8001fd2:	699b      	ldr	r3, [r3, #24]
 8001fd4:	617b      	str	r3, [r7, #20]
 8001fd6:	697b      	ldr	r3, [r7, #20]
 8001fd8:	e144      	b.n	8002264 <HAL_I2C_Master_Receive+0x430>
 8001fda:	68fb      	ldr	r3, [r7, #12]
 8001fdc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001fde:	2b03      	cmp	r3, #3
 8001fe0:	f200 80f1 	bhi.w	80021c6 <HAL_I2C_Master_Receive+0x392>
 8001fe4:	68fb      	ldr	r3, [r7, #12]
 8001fe6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001fe8:	2b01      	cmp	r3, #1
 8001fea:	d123      	bne.n	8002034 <HAL_I2C_Master_Receive+0x200>
 8001fec:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001fee:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8001ff0:	68f8      	ldr	r0, [r7, #12]
 8001ff2:	f000 fd79 	bl	8002ae8 <I2C_WaitOnRXNEFlagUntilTimeout>
 8001ff6:	4603      	mov	r3, r0
 8001ff8:	2b00      	cmp	r3, #0
 8001ffa:	d001      	beq.n	8002000 <HAL_I2C_Master_Receive+0x1cc>
 8001ffc:	2301      	movs	r3, #1
 8001ffe:	e145      	b.n	800228c <HAL_I2C_Master_Receive+0x458>
 8002000:	68fb      	ldr	r3, [r7, #12]
 8002002:	681b      	ldr	r3, [r3, #0]
 8002004:	691a      	ldr	r2, [r3, #16]
 8002006:	68fb      	ldr	r3, [r7, #12]
 8002008:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800200a:	b2d2      	uxtb	r2, r2
 800200c:	701a      	strb	r2, [r3, #0]
 800200e:	68fb      	ldr	r3, [r7, #12]
 8002010:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002012:	1c5a      	adds	r2, r3, #1
 8002014:	68fb      	ldr	r3, [r7, #12]
 8002016:	625a      	str	r2, [r3, #36]	@ 0x24
 8002018:	68fb      	ldr	r3, [r7, #12]
 800201a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800201c:	3b01      	subs	r3, #1
 800201e:	b29a      	uxth	r2, r3
 8002020:	68fb      	ldr	r3, [r7, #12]
 8002022:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002024:	68fb      	ldr	r3, [r7, #12]
 8002026:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002028:	b29b      	uxth	r3, r3
 800202a:	3b01      	subs	r3, #1
 800202c:	b29a      	uxth	r2, r3
 800202e:	68fb      	ldr	r3, [r7, #12]
 8002030:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8002032:	e117      	b.n	8002264 <HAL_I2C_Master_Receive+0x430>
 8002034:	68fb      	ldr	r3, [r7, #12]
 8002036:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002038:	2b02      	cmp	r3, #2
 800203a:	d14e      	bne.n	80020da <HAL_I2C_Master_Receive+0x2a6>
 800203c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800203e:	9300      	str	r3, [sp, #0]
 8002040:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002042:	2200      	movs	r2, #0
 8002044:	4906      	ldr	r1, [pc, #24]	@ (8002060 <HAL_I2C_Master_Receive+0x22c>)
 8002046:	68f8      	ldr	r0, [r7, #12]
 8002048:	f000 fba4 	bl	8002794 <I2C_WaitOnFlagUntilTimeout>
 800204c:	4603      	mov	r3, r0
 800204e:	2b00      	cmp	r3, #0
 8002050:	d008      	beq.n	8002064 <HAL_I2C_Master_Receive+0x230>
 8002052:	2301      	movs	r3, #1
 8002054:	e11a      	b.n	800228c <HAL_I2C_Master_Receive+0x458>
 8002056:	bf00      	nop
 8002058:	00100002 	.word	0x00100002
 800205c:	ffff0000 	.word	0xffff0000
 8002060:	00010004 	.word	0x00010004
 8002064:	68fb      	ldr	r3, [r7, #12]
 8002066:	681b      	ldr	r3, [r3, #0]
 8002068:	681a      	ldr	r2, [r3, #0]
 800206a:	68fb      	ldr	r3, [r7, #12]
 800206c:	681b      	ldr	r3, [r3, #0]
 800206e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8002072:	601a      	str	r2, [r3, #0]
 8002074:	68fb      	ldr	r3, [r7, #12]
 8002076:	681b      	ldr	r3, [r3, #0]
 8002078:	691a      	ldr	r2, [r3, #16]
 800207a:	68fb      	ldr	r3, [r7, #12]
 800207c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800207e:	b2d2      	uxtb	r2, r2
 8002080:	701a      	strb	r2, [r3, #0]
 8002082:	68fb      	ldr	r3, [r7, #12]
 8002084:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002086:	1c5a      	adds	r2, r3, #1
 8002088:	68fb      	ldr	r3, [r7, #12]
 800208a:	625a      	str	r2, [r3, #36]	@ 0x24
 800208c:	68fb      	ldr	r3, [r7, #12]
 800208e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002090:	3b01      	subs	r3, #1
 8002092:	b29a      	uxth	r2, r3
 8002094:	68fb      	ldr	r3, [r7, #12]
 8002096:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002098:	68fb      	ldr	r3, [r7, #12]
 800209a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800209c:	b29b      	uxth	r3, r3
 800209e:	3b01      	subs	r3, #1
 80020a0:	b29a      	uxth	r2, r3
 80020a2:	68fb      	ldr	r3, [r7, #12]
 80020a4:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80020a6:	68fb      	ldr	r3, [r7, #12]
 80020a8:	681b      	ldr	r3, [r3, #0]
 80020aa:	691a      	ldr	r2, [r3, #16]
 80020ac:	68fb      	ldr	r3, [r7, #12]
 80020ae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80020b0:	b2d2      	uxtb	r2, r2
 80020b2:	701a      	strb	r2, [r3, #0]
 80020b4:	68fb      	ldr	r3, [r7, #12]
 80020b6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80020b8:	1c5a      	adds	r2, r3, #1
 80020ba:	68fb      	ldr	r3, [r7, #12]
 80020bc:	625a      	str	r2, [r3, #36]	@ 0x24
 80020be:	68fb      	ldr	r3, [r7, #12]
 80020c0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80020c2:	3b01      	subs	r3, #1
 80020c4:	b29a      	uxth	r2, r3
 80020c6:	68fb      	ldr	r3, [r7, #12]
 80020c8:	851a      	strh	r2, [r3, #40]	@ 0x28
 80020ca:	68fb      	ldr	r3, [r7, #12]
 80020cc:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80020ce:	b29b      	uxth	r3, r3
 80020d0:	3b01      	subs	r3, #1
 80020d2:	b29a      	uxth	r2, r3
 80020d4:	68fb      	ldr	r3, [r7, #12]
 80020d6:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80020d8:	e0c4      	b.n	8002264 <HAL_I2C_Master_Receive+0x430>
 80020da:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80020dc:	9300      	str	r3, [sp, #0]
 80020de:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80020e0:	2200      	movs	r2, #0
 80020e2:	496c      	ldr	r1, [pc, #432]	@ (8002294 <HAL_I2C_Master_Receive+0x460>)
 80020e4:	68f8      	ldr	r0, [r7, #12]
 80020e6:	f000 fb55 	bl	8002794 <I2C_WaitOnFlagUntilTimeout>
 80020ea:	4603      	mov	r3, r0
 80020ec:	2b00      	cmp	r3, #0
 80020ee:	d001      	beq.n	80020f4 <HAL_I2C_Master_Receive+0x2c0>
 80020f0:	2301      	movs	r3, #1
 80020f2:	e0cb      	b.n	800228c <HAL_I2C_Master_Receive+0x458>
 80020f4:	68fb      	ldr	r3, [r7, #12]
 80020f6:	681b      	ldr	r3, [r3, #0]
 80020f8:	681a      	ldr	r2, [r3, #0]
 80020fa:	68fb      	ldr	r3, [r7, #12]
 80020fc:	681b      	ldr	r3, [r3, #0]
 80020fe:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8002102:	601a      	str	r2, [r3, #0]
 8002104:	68fb      	ldr	r3, [r7, #12]
 8002106:	681b      	ldr	r3, [r3, #0]
 8002108:	691a      	ldr	r2, [r3, #16]
 800210a:	68fb      	ldr	r3, [r7, #12]
 800210c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800210e:	b2d2      	uxtb	r2, r2
 8002110:	701a      	strb	r2, [r3, #0]
 8002112:	68fb      	ldr	r3, [r7, #12]
 8002114:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002116:	1c5a      	adds	r2, r3, #1
 8002118:	68fb      	ldr	r3, [r7, #12]
 800211a:	625a      	str	r2, [r3, #36]	@ 0x24
 800211c:	68fb      	ldr	r3, [r7, #12]
 800211e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002120:	3b01      	subs	r3, #1
 8002122:	b29a      	uxth	r2, r3
 8002124:	68fb      	ldr	r3, [r7, #12]
 8002126:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002128:	68fb      	ldr	r3, [r7, #12]
 800212a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800212c:	b29b      	uxth	r3, r3
 800212e:	3b01      	subs	r3, #1
 8002130:	b29a      	uxth	r2, r3
 8002132:	68fb      	ldr	r3, [r7, #12]
 8002134:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8002136:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002138:	9300      	str	r3, [sp, #0]
 800213a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800213c:	2200      	movs	r2, #0
 800213e:	4955      	ldr	r1, [pc, #340]	@ (8002294 <HAL_I2C_Master_Receive+0x460>)
 8002140:	68f8      	ldr	r0, [r7, #12]
 8002142:	f000 fb27 	bl	8002794 <I2C_WaitOnFlagUntilTimeout>
 8002146:	4603      	mov	r3, r0
 8002148:	2b00      	cmp	r3, #0
 800214a:	d001      	beq.n	8002150 <HAL_I2C_Master_Receive+0x31c>
 800214c:	2301      	movs	r3, #1
 800214e:	e09d      	b.n	800228c <HAL_I2C_Master_Receive+0x458>
 8002150:	68fb      	ldr	r3, [r7, #12]
 8002152:	681b      	ldr	r3, [r3, #0]
 8002154:	681a      	ldr	r2, [r3, #0]
 8002156:	68fb      	ldr	r3, [r7, #12]
 8002158:	681b      	ldr	r3, [r3, #0]
 800215a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800215e:	601a      	str	r2, [r3, #0]
 8002160:	68fb      	ldr	r3, [r7, #12]
 8002162:	681b      	ldr	r3, [r3, #0]
 8002164:	691a      	ldr	r2, [r3, #16]
 8002166:	68fb      	ldr	r3, [r7, #12]
 8002168:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800216a:	b2d2      	uxtb	r2, r2
 800216c:	701a      	strb	r2, [r3, #0]
 800216e:	68fb      	ldr	r3, [r7, #12]
 8002170:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002172:	1c5a      	adds	r2, r3, #1
 8002174:	68fb      	ldr	r3, [r7, #12]
 8002176:	625a      	str	r2, [r3, #36]	@ 0x24
 8002178:	68fb      	ldr	r3, [r7, #12]
 800217a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800217c:	3b01      	subs	r3, #1
 800217e:	b29a      	uxth	r2, r3
 8002180:	68fb      	ldr	r3, [r7, #12]
 8002182:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002184:	68fb      	ldr	r3, [r7, #12]
 8002186:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002188:	b29b      	uxth	r3, r3
 800218a:	3b01      	subs	r3, #1
 800218c:	b29a      	uxth	r2, r3
 800218e:	68fb      	ldr	r3, [r7, #12]
 8002190:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8002192:	68fb      	ldr	r3, [r7, #12]
 8002194:	681b      	ldr	r3, [r3, #0]
 8002196:	691a      	ldr	r2, [r3, #16]
 8002198:	68fb      	ldr	r3, [r7, #12]
 800219a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800219c:	b2d2      	uxtb	r2, r2
 800219e:	701a      	strb	r2, [r3, #0]
 80021a0:	68fb      	ldr	r3, [r7, #12]
 80021a2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80021a4:	1c5a      	adds	r2, r3, #1
 80021a6:	68fb      	ldr	r3, [r7, #12]
 80021a8:	625a      	str	r2, [r3, #36]	@ 0x24
 80021aa:	68fb      	ldr	r3, [r7, #12]
 80021ac:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80021ae:	3b01      	subs	r3, #1
 80021b0:	b29a      	uxth	r2, r3
 80021b2:	68fb      	ldr	r3, [r7, #12]
 80021b4:	851a      	strh	r2, [r3, #40]	@ 0x28
 80021b6:	68fb      	ldr	r3, [r7, #12]
 80021b8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80021ba:	b29b      	uxth	r3, r3
 80021bc:	3b01      	subs	r3, #1
 80021be:	b29a      	uxth	r2, r3
 80021c0:	68fb      	ldr	r3, [r7, #12]
 80021c2:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80021c4:	e04e      	b.n	8002264 <HAL_I2C_Master_Receive+0x430>
 80021c6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80021c8:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 80021ca:	68f8      	ldr	r0, [r7, #12]
 80021cc:	f000 fc8c 	bl	8002ae8 <I2C_WaitOnRXNEFlagUntilTimeout>
 80021d0:	4603      	mov	r3, r0
 80021d2:	2b00      	cmp	r3, #0
 80021d4:	d001      	beq.n	80021da <HAL_I2C_Master_Receive+0x3a6>
 80021d6:	2301      	movs	r3, #1
 80021d8:	e058      	b.n	800228c <HAL_I2C_Master_Receive+0x458>
 80021da:	68fb      	ldr	r3, [r7, #12]
 80021dc:	681b      	ldr	r3, [r3, #0]
 80021de:	691a      	ldr	r2, [r3, #16]
 80021e0:	68fb      	ldr	r3, [r7, #12]
 80021e2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80021e4:	b2d2      	uxtb	r2, r2
 80021e6:	701a      	strb	r2, [r3, #0]
 80021e8:	68fb      	ldr	r3, [r7, #12]
 80021ea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80021ec:	1c5a      	adds	r2, r3, #1
 80021ee:	68fb      	ldr	r3, [r7, #12]
 80021f0:	625a      	str	r2, [r3, #36]	@ 0x24
 80021f2:	68fb      	ldr	r3, [r7, #12]
 80021f4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80021f6:	3b01      	subs	r3, #1
 80021f8:	b29a      	uxth	r2, r3
 80021fa:	68fb      	ldr	r3, [r7, #12]
 80021fc:	851a      	strh	r2, [r3, #40]	@ 0x28
 80021fe:	68fb      	ldr	r3, [r7, #12]
 8002200:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8002202:	b29b      	uxth	r3, r3
 8002204:	3b01      	subs	r3, #1
 8002206:	b29a      	uxth	r2, r3
 8002208:	68fb      	ldr	r3, [r7, #12]
 800220a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800220c:	68fb      	ldr	r3, [r7, #12]
 800220e:	681b      	ldr	r3, [r3, #0]
 8002210:	695b      	ldr	r3, [r3, #20]
 8002212:	f003 0304 	and.w	r3, r3, #4
 8002216:	2b04      	cmp	r3, #4
 8002218:	d124      	bne.n	8002264 <HAL_I2C_Master_Receive+0x430>
 800221a:	68fb      	ldr	r3, [r7, #12]
 800221c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800221e:	2b03      	cmp	r3, #3
 8002220:	d107      	bne.n	8002232 <HAL_I2C_Master_Receive+0x3fe>
 8002222:	68fb      	ldr	r3, [r7, #12]
 8002224:	681b      	ldr	r3, [r3, #0]
 8002226:	681a      	ldr	r2, [r3, #0]
 8002228:	68fb      	ldr	r3, [r7, #12]
 800222a:	681b      	ldr	r3, [r3, #0]
 800222c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8002230:	601a      	str	r2, [r3, #0]
 8002232:	68fb      	ldr	r3, [r7, #12]
 8002234:	681b      	ldr	r3, [r3, #0]
 8002236:	691a      	ldr	r2, [r3, #16]
 8002238:	68fb      	ldr	r3, [r7, #12]
 800223a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800223c:	b2d2      	uxtb	r2, r2
 800223e:	701a      	strb	r2, [r3, #0]
 8002240:	68fb      	ldr	r3, [r7, #12]
 8002242:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002244:	1c5a      	adds	r2, r3, #1
 8002246:	68fb      	ldr	r3, [r7, #12]
 8002248:	625a      	str	r2, [r3, #36]	@ 0x24
 800224a:	68fb      	ldr	r3, [r7, #12]
 800224c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800224e:	3b01      	subs	r3, #1
 8002250:	b29a      	uxth	r2, r3
 8002252:	68fb      	ldr	r3, [r7, #12]
 8002254:	851a      	strh	r2, [r3, #40]	@ 0x28
 8002256:	68fb      	ldr	r3, [r7, #12]
 8002258:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800225a:	b29b      	uxth	r3, r3
 800225c:	3b01      	subs	r3, #1
 800225e:	b29a      	uxth	r2, r3
 8002260:	68fb      	ldr	r3, [r7, #12]
 8002262:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8002264:	68fb      	ldr	r3, [r7, #12]
 8002266:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8002268:	2b00      	cmp	r3, #0
 800226a:	f47f aeb6 	bne.w	8001fda <HAL_I2C_Master_Receive+0x1a6>
 800226e:	68fb      	ldr	r3, [r7, #12]
 8002270:	2220      	movs	r2, #32
 8002272:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002276:	68fb      	ldr	r3, [r7, #12]
 8002278:	2200      	movs	r2, #0
 800227a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800227e:	68fb      	ldr	r3, [r7, #12]
 8002280:	2200      	movs	r2, #0
 8002282:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002286:	2300      	movs	r3, #0
 8002288:	e000      	b.n	800228c <HAL_I2C_Master_Receive+0x458>
 800228a:	2302      	movs	r3, #2
 800228c:	4618      	mov	r0, r3
 800228e:	3728      	adds	r7, #40	@ 0x28
 8002290:	46bd      	mov	sp, r7
 8002292:	bd80      	pop	{r7, pc}
 8002294:	00010004 	.word	0x00010004

08002298 <HAL_I2C_IsDeviceReady>:
 8002298:	b580      	push	{r7, lr}
 800229a:	b08a      	sub	sp, #40	@ 0x28
 800229c:	af02      	add	r7, sp, #8
 800229e:	60f8      	str	r0, [r7, #12]
 80022a0:	607a      	str	r2, [r7, #4]
 80022a2:	603b      	str	r3, [r7, #0]
 80022a4:	460b      	mov	r3, r1
 80022a6:	817b      	strh	r3, [r7, #10]
 80022a8:	f7ff f82a 	bl	8001300 <HAL_GetTick>
 80022ac:	61f8      	str	r0, [r7, #28]
 80022ae:	2300      	movs	r3, #0
 80022b0:	61bb      	str	r3, [r7, #24]
 80022b2:	68fb      	ldr	r3, [r7, #12]
 80022b4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80022b8:	b2db      	uxtb	r3, r3
 80022ba:	2b20      	cmp	r3, #32
 80022bc:	f040 8111 	bne.w	80024e2 <HAL_I2C_IsDeviceReady+0x24a>
 80022c0:	69fb      	ldr	r3, [r7, #28]
 80022c2:	9300      	str	r3, [sp, #0]
 80022c4:	2319      	movs	r3, #25
 80022c6:	2201      	movs	r2, #1
 80022c8:	4988      	ldr	r1, [pc, #544]	@ (80024ec <HAL_I2C_IsDeviceReady+0x254>)
 80022ca:	68f8      	ldr	r0, [r7, #12]
 80022cc:	f000 fa62 	bl	8002794 <I2C_WaitOnFlagUntilTimeout>
 80022d0:	4603      	mov	r3, r0
 80022d2:	2b00      	cmp	r3, #0
 80022d4:	d001      	beq.n	80022da <HAL_I2C_IsDeviceReady+0x42>
 80022d6:	2302      	movs	r3, #2
 80022d8:	e104      	b.n	80024e4 <HAL_I2C_IsDeviceReady+0x24c>
 80022da:	68fb      	ldr	r3, [r7, #12]
 80022dc:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80022e0:	2b01      	cmp	r3, #1
 80022e2:	d101      	bne.n	80022e8 <HAL_I2C_IsDeviceReady+0x50>
 80022e4:	2302      	movs	r3, #2
 80022e6:	e0fd      	b.n	80024e4 <HAL_I2C_IsDeviceReady+0x24c>
 80022e8:	68fb      	ldr	r3, [r7, #12]
 80022ea:	2201      	movs	r2, #1
 80022ec:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80022f0:	68fb      	ldr	r3, [r7, #12]
 80022f2:	681b      	ldr	r3, [r3, #0]
 80022f4:	681b      	ldr	r3, [r3, #0]
 80022f6:	f003 0301 	and.w	r3, r3, #1
 80022fa:	2b01      	cmp	r3, #1
 80022fc:	d007      	beq.n	800230e <HAL_I2C_IsDeviceReady+0x76>
 80022fe:	68fb      	ldr	r3, [r7, #12]
 8002300:	681b      	ldr	r3, [r3, #0]
 8002302:	681a      	ldr	r2, [r3, #0]
 8002304:	68fb      	ldr	r3, [r7, #12]
 8002306:	681b      	ldr	r3, [r3, #0]
 8002308:	f042 0201 	orr.w	r2, r2, #1
 800230c:	601a      	str	r2, [r3, #0]
 800230e:	68fb      	ldr	r3, [r7, #12]
 8002310:	681b      	ldr	r3, [r3, #0]
 8002312:	681a      	ldr	r2, [r3, #0]
 8002314:	68fb      	ldr	r3, [r7, #12]
 8002316:	681b      	ldr	r3, [r3, #0]
 8002318:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800231c:	601a      	str	r2, [r3, #0]
 800231e:	68fb      	ldr	r3, [r7, #12]
 8002320:	2224      	movs	r2, #36	@ 0x24
 8002322:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002326:	68fb      	ldr	r3, [r7, #12]
 8002328:	2200      	movs	r2, #0
 800232a:	641a      	str	r2, [r3, #64]	@ 0x40
 800232c:	68fb      	ldr	r3, [r7, #12]
 800232e:	4a70      	ldr	r2, [pc, #448]	@ (80024f0 <HAL_I2C_IsDeviceReady+0x258>)
 8002330:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002332:	68fb      	ldr	r3, [r7, #12]
 8002334:	681b      	ldr	r3, [r3, #0]
 8002336:	681a      	ldr	r2, [r3, #0]
 8002338:	68fb      	ldr	r3, [r7, #12]
 800233a:	681b      	ldr	r3, [r3, #0]
 800233c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002340:	601a      	str	r2, [r3, #0]
 8002342:	69fb      	ldr	r3, [r7, #28]
 8002344:	9300      	str	r3, [sp, #0]
 8002346:	683b      	ldr	r3, [r7, #0]
 8002348:	2200      	movs	r2, #0
 800234a:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800234e:	68f8      	ldr	r0, [r7, #12]
 8002350:	f000 fa20 	bl	8002794 <I2C_WaitOnFlagUntilTimeout>
 8002354:	4603      	mov	r3, r0
 8002356:	2b00      	cmp	r3, #0
 8002358:	d00d      	beq.n	8002376 <HAL_I2C_IsDeviceReady+0xde>
 800235a:	68fb      	ldr	r3, [r7, #12]
 800235c:	681b      	ldr	r3, [r3, #0]
 800235e:	681b      	ldr	r3, [r3, #0]
 8002360:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002364:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002368:	d103      	bne.n	8002372 <HAL_I2C_IsDeviceReady+0xda>
 800236a:	68fb      	ldr	r3, [r7, #12]
 800236c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002370:	641a      	str	r2, [r3, #64]	@ 0x40
 8002372:	2303      	movs	r3, #3
 8002374:	e0b6      	b.n	80024e4 <HAL_I2C_IsDeviceReady+0x24c>
 8002376:	897b      	ldrh	r3, [r7, #10]
 8002378:	b2db      	uxtb	r3, r3
 800237a:	461a      	mov	r2, r3
 800237c:	68fb      	ldr	r3, [r7, #12]
 800237e:	681b      	ldr	r3, [r3, #0]
 8002380:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8002384:	611a      	str	r2, [r3, #16]
 8002386:	f7fe ffbb 	bl	8001300 <HAL_GetTick>
 800238a:	61f8      	str	r0, [r7, #28]
 800238c:	68fb      	ldr	r3, [r7, #12]
 800238e:	681b      	ldr	r3, [r3, #0]
 8002390:	695b      	ldr	r3, [r3, #20]
 8002392:	f003 0302 	and.w	r3, r3, #2
 8002396:	2b02      	cmp	r3, #2
 8002398:	bf0c      	ite	eq
 800239a:	2301      	moveq	r3, #1
 800239c:	2300      	movne	r3, #0
 800239e:	b2db      	uxtb	r3, r3
 80023a0:	75fb      	strb	r3, [r7, #23]
 80023a2:	68fb      	ldr	r3, [r7, #12]
 80023a4:	681b      	ldr	r3, [r3, #0]
 80023a6:	695b      	ldr	r3, [r3, #20]
 80023a8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80023ac:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80023b0:	bf0c      	ite	eq
 80023b2:	2301      	moveq	r3, #1
 80023b4:	2300      	movne	r3, #0
 80023b6:	b2db      	uxtb	r3, r3
 80023b8:	75bb      	strb	r3, [r7, #22]
 80023ba:	e025      	b.n	8002408 <HAL_I2C_IsDeviceReady+0x170>
 80023bc:	f7fe ffa0 	bl	8001300 <HAL_GetTick>
 80023c0:	4602      	mov	r2, r0
 80023c2:	69fb      	ldr	r3, [r7, #28]
 80023c4:	1ad3      	subs	r3, r2, r3
 80023c6:	683a      	ldr	r2, [r7, #0]
 80023c8:	429a      	cmp	r2, r3
 80023ca:	d302      	bcc.n	80023d2 <HAL_I2C_IsDeviceReady+0x13a>
 80023cc:	683b      	ldr	r3, [r7, #0]
 80023ce:	2b00      	cmp	r3, #0
 80023d0:	d103      	bne.n	80023da <HAL_I2C_IsDeviceReady+0x142>
 80023d2:	68fb      	ldr	r3, [r7, #12]
 80023d4:	22a0      	movs	r2, #160	@ 0xa0
 80023d6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80023da:	68fb      	ldr	r3, [r7, #12]
 80023dc:	681b      	ldr	r3, [r3, #0]
 80023de:	695b      	ldr	r3, [r3, #20]
 80023e0:	f003 0302 	and.w	r3, r3, #2
 80023e4:	2b02      	cmp	r3, #2
 80023e6:	bf0c      	ite	eq
 80023e8:	2301      	moveq	r3, #1
 80023ea:	2300      	movne	r3, #0
 80023ec:	b2db      	uxtb	r3, r3
 80023ee:	75fb      	strb	r3, [r7, #23]
 80023f0:	68fb      	ldr	r3, [r7, #12]
 80023f2:	681b      	ldr	r3, [r3, #0]
 80023f4:	695b      	ldr	r3, [r3, #20]
 80023f6:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80023fa:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80023fe:	bf0c      	ite	eq
 8002400:	2301      	moveq	r3, #1
 8002402:	2300      	movne	r3, #0
 8002404:	b2db      	uxtb	r3, r3
 8002406:	75bb      	strb	r3, [r7, #22]
 8002408:	68fb      	ldr	r3, [r7, #12]
 800240a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800240e:	b2db      	uxtb	r3, r3
 8002410:	2ba0      	cmp	r3, #160	@ 0xa0
 8002412:	d005      	beq.n	8002420 <HAL_I2C_IsDeviceReady+0x188>
 8002414:	7dfb      	ldrb	r3, [r7, #23]
 8002416:	2b00      	cmp	r3, #0
 8002418:	d102      	bne.n	8002420 <HAL_I2C_IsDeviceReady+0x188>
 800241a:	7dbb      	ldrb	r3, [r7, #22]
 800241c:	2b00      	cmp	r3, #0
 800241e:	d0cd      	beq.n	80023bc <HAL_I2C_IsDeviceReady+0x124>
 8002420:	68fb      	ldr	r3, [r7, #12]
 8002422:	2220      	movs	r2, #32
 8002424:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002428:	68fb      	ldr	r3, [r7, #12]
 800242a:	681b      	ldr	r3, [r3, #0]
 800242c:	695b      	ldr	r3, [r3, #20]
 800242e:	f003 0302 	and.w	r3, r3, #2
 8002432:	2b02      	cmp	r3, #2
 8002434:	d129      	bne.n	800248a <HAL_I2C_IsDeviceReady+0x1f2>
 8002436:	68fb      	ldr	r3, [r7, #12]
 8002438:	681b      	ldr	r3, [r3, #0]
 800243a:	681a      	ldr	r2, [r3, #0]
 800243c:	68fb      	ldr	r3, [r7, #12]
 800243e:	681b      	ldr	r3, [r3, #0]
 8002440:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8002444:	601a      	str	r2, [r3, #0]
 8002446:	2300      	movs	r3, #0
 8002448:	613b      	str	r3, [r7, #16]
 800244a:	68fb      	ldr	r3, [r7, #12]
 800244c:	681b      	ldr	r3, [r3, #0]
 800244e:	695b      	ldr	r3, [r3, #20]
 8002450:	613b      	str	r3, [r7, #16]
 8002452:	68fb      	ldr	r3, [r7, #12]
 8002454:	681b      	ldr	r3, [r3, #0]
 8002456:	699b      	ldr	r3, [r3, #24]
 8002458:	613b      	str	r3, [r7, #16]
 800245a:	693b      	ldr	r3, [r7, #16]
 800245c:	69fb      	ldr	r3, [r7, #28]
 800245e:	9300      	str	r3, [sp, #0]
 8002460:	2319      	movs	r3, #25
 8002462:	2201      	movs	r2, #1
 8002464:	4921      	ldr	r1, [pc, #132]	@ (80024ec <HAL_I2C_IsDeviceReady+0x254>)
 8002466:	68f8      	ldr	r0, [r7, #12]
 8002468:	f000 f994 	bl	8002794 <I2C_WaitOnFlagUntilTimeout>
 800246c:	4603      	mov	r3, r0
 800246e:	2b00      	cmp	r3, #0
 8002470:	d001      	beq.n	8002476 <HAL_I2C_IsDeviceReady+0x1de>
 8002472:	2301      	movs	r3, #1
 8002474:	e036      	b.n	80024e4 <HAL_I2C_IsDeviceReady+0x24c>
 8002476:	68fb      	ldr	r3, [r7, #12]
 8002478:	2220      	movs	r2, #32
 800247a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800247e:	68fb      	ldr	r3, [r7, #12]
 8002480:	2200      	movs	r2, #0
 8002482:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002486:	2300      	movs	r3, #0
 8002488:	e02c      	b.n	80024e4 <HAL_I2C_IsDeviceReady+0x24c>
 800248a:	68fb      	ldr	r3, [r7, #12]
 800248c:	681b      	ldr	r3, [r3, #0]
 800248e:	681a      	ldr	r2, [r3, #0]
 8002490:	68fb      	ldr	r3, [r7, #12]
 8002492:	681b      	ldr	r3, [r3, #0]
 8002494:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8002498:	601a      	str	r2, [r3, #0]
 800249a:	68fb      	ldr	r3, [r7, #12]
 800249c:	681b      	ldr	r3, [r3, #0]
 800249e:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 80024a2:	615a      	str	r2, [r3, #20]
 80024a4:	69fb      	ldr	r3, [r7, #28]
 80024a6:	9300      	str	r3, [sp, #0]
 80024a8:	2319      	movs	r3, #25
 80024aa:	2201      	movs	r2, #1
 80024ac:	490f      	ldr	r1, [pc, #60]	@ (80024ec <HAL_I2C_IsDeviceReady+0x254>)
 80024ae:	68f8      	ldr	r0, [r7, #12]
 80024b0:	f000 f970 	bl	8002794 <I2C_WaitOnFlagUntilTimeout>
 80024b4:	4603      	mov	r3, r0
 80024b6:	2b00      	cmp	r3, #0
 80024b8:	d001      	beq.n	80024be <HAL_I2C_IsDeviceReady+0x226>
 80024ba:	2301      	movs	r3, #1
 80024bc:	e012      	b.n	80024e4 <HAL_I2C_IsDeviceReady+0x24c>
 80024be:	69bb      	ldr	r3, [r7, #24]
 80024c0:	3301      	adds	r3, #1
 80024c2:	61bb      	str	r3, [r7, #24]
 80024c4:	69ba      	ldr	r2, [r7, #24]
 80024c6:	687b      	ldr	r3, [r7, #4]
 80024c8:	429a      	cmp	r2, r3
 80024ca:	f4ff af32 	bcc.w	8002332 <HAL_I2C_IsDeviceReady+0x9a>
 80024ce:	68fb      	ldr	r3, [r7, #12]
 80024d0:	2220      	movs	r2, #32
 80024d2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80024d6:	68fb      	ldr	r3, [r7, #12]
 80024d8:	2200      	movs	r2, #0
 80024da:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80024de:	2301      	movs	r3, #1
 80024e0:	e000      	b.n	80024e4 <HAL_I2C_IsDeviceReady+0x24c>
 80024e2:	2302      	movs	r3, #2
 80024e4:	4618      	mov	r0, r3
 80024e6:	3720      	adds	r7, #32
 80024e8:	46bd      	mov	sp, r7
 80024ea:	bd80      	pop	{r7, pc}
 80024ec:	00100002 	.word	0x00100002
 80024f0:	ffff0000 	.word	0xffff0000

080024f4 <I2C_MasterRequestWrite>:
 80024f4:	b580      	push	{r7, lr}
 80024f6:	b088      	sub	sp, #32
 80024f8:	af02      	add	r7, sp, #8
 80024fa:	60f8      	str	r0, [r7, #12]
 80024fc:	607a      	str	r2, [r7, #4]
 80024fe:	603b      	str	r3, [r7, #0]
 8002500:	460b      	mov	r3, r1
 8002502:	817b      	strh	r3, [r7, #10]
 8002504:	68fb      	ldr	r3, [r7, #12]
 8002506:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002508:	617b      	str	r3, [r7, #20]
 800250a:	697b      	ldr	r3, [r7, #20]
 800250c:	2b08      	cmp	r3, #8
 800250e:	d006      	beq.n	800251e <I2C_MasterRequestWrite+0x2a>
 8002510:	697b      	ldr	r3, [r7, #20]
 8002512:	2b01      	cmp	r3, #1
 8002514:	d003      	beq.n	800251e <I2C_MasterRequestWrite+0x2a>
 8002516:	697b      	ldr	r3, [r7, #20]
 8002518:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 800251c:	d108      	bne.n	8002530 <I2C_MasterRequestWrite+0x3c>
 800251e:	68fb      	ldr	r3, [r7, #12]
 8002520:	681b      	ldr	r3, [r3, #0]
 8002522:	681a      	ldr	r2, [r3, #0]
 8002524:	68fb      	ldr	r3, [r7, #12]
 8002526:	681b      	ldr	r3, [r3, #0]
 8002528:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800252c:	601a      	str	r2, [r3, #0]
 800252e:	e00b      	b.n	8002548 <I2C_MasterRequestWrite+0x54>
 8002530:	68fb      	ldr	r3, [r7, #12]
 8002532:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002534:	2b12      	cmp	r3, #18
 8002536:	d107      	bne.n	8002548 <I2C_MasterRequestWrite+0x54>
 8002538:	68fb      	ldr	r3, [r7, #12]
 800253a:	681b      	ldr	r3, [r3, #0]
 800253c:	681a      	ldr	r2, [r3, #0]
 800253e:	68fb      	ldr	r3, [r7, #12]
 8002540:	681b      	ldr	r3, [r3, #0]
 8002542:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002546:	601a      	str	r2, [r3, #0]
 8002548:	683b      	ldr	r3, [r7, #0]
 800254a:	9300      	str	r3, [sp, #0]
 800254c:	687b      	ldr	r3, [r7, #4]
 800254e:	2200      	movs	r2, #0
 8002550:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8002554:	68f8      	ldr	r0, [r7, #12]
 8002556:	f000 f91d 	bl	8002794 <I2C_WaitOnFlagUntilTimeout>
 800255a:	4603      	mov	r3, r0
 800255c:	2b00      	cmp	r3, #0
 800255e:	d00d      	beq.n	800257c <I2C_MasterRequestWrite+0x88>
 8002560:	68fb      	ldr	r3, [r7, #12]
 8002562:	681b      	ldr	r3, [r3, #0]
 8002564:	681b      	ldr	r3, [r3, #0]
 8002566:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800256a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800256e:	d103      	bne.n	8002578 <I2C_MasterRequestWrite+0x84>
 8002570:	68fb      	ldr	r3, [r7, #12]
 8002572:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8002576:	641a      	str	r2, [r3, #64]	@ 0x40
 8002578:	2303      	movs	r3, #3
 800257a:	e035      	b.n	80025e8 <I2C_MasterRequestWrite+0xf4>
 800257c:	68fb      	ldr	r3, [r7, #12]
 800257e:	691b      	ldr	r3, [r3, #16]
 8002580:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8002584:	d108      	bne.n	8002598 <I2C_MasterRequestWrite+0xa4>
 8002586:	897b      	ldrh	r3, [r7, #10]
 8002588:	b2db      	uxtb	r3, r3
 800258a:	461a      	mov	r2, r3
 800258c:	68fb      	ldr	r3, [r7, #12]
 800258e:	681b      	ldr	r3, [r3, #0]
 8002590:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8002594:	611a      	str	r2, [r3, #16]
 8002596:	e01b      	b.n	80025d0 <I2C_MasterRequestWrite+0xdc>
 8002598:	897b      	ldrh	r3, [r7, #10]
 800259a:	11db      	asrs	r3, r3, #7
 800259c:	b2db      	uxtb	r3, r3
 800259e:	f003 0306 	and.w	r3, r3, #6
 80025a2:	b2db      	uxtb	r3, r3
 80025a4:	f063 030f 	orn	r3, r3, #15
 80025a8:	b2da      	uxtb	r2, r3
 80025aa:	68fb      	ldr	r3, [r7, #12]
 80025ac:	681b      	ldr	r3, [r3, #0]
 80025ae:	611a      	str	r2, [r3, #16]
 80025b0:	683b      	ldr	r3, [r7, #0]
 80025b2:	687a      	ldr	r2, [r7, #4]
 80025b4:	490e      	ldr	r1, [pc, #56]	@ (80025f0 <I2C_MasterRequestWrite+0xfc>)
 80025b6:	68f8      	ldr	r0, [r7, #12]
 80025b8:	f000 f966 	bl	8002888 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80025bc:	4603      	mov	r3, r0
 80025be:	2b00      	cmp	r3, #0
 80025c0:	d001      	beq.n	80025c6 <I2C_MasterRequestWrite+0xd2>
 80025c2:	2301      	movs	r3, #1
 80025c4:	e010      	b.n	80025e8 <I2C_MasterRequestWrite+0xf4>
 80025c6:	897b      	ldrh	r3, [r7, #10]
 80025c8:	b2da      	uxtb	r2, r3
 80025ca:	68fb      	ldr	r3, [r7, #12]
 80025cc:	681b      	ldr	r3, [r3, #0]
 80025ce:	611a      	str	r2, [r3, #16]
 80025d0:	683b      	ldr	r3, [r7, #0]
 80025d2:	687a      	ldr	r2, [r7, #4]
 80025d4:	4907      	ldr	r1, [pc, #28]	@ (80025f4 <I2C_MasterRequestWrite+0x100>)
 80025d6:	68f8      	ldr	r0, [r7, #12]
 80025d8:	f000 f956 	bl	8002888 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80025dc:	4603      	mov	r3, r0
 80025de:	2b00      	cmp	r3, #0
 80025e0:	d001      	beq.n	80025e6 <I2C_MasterRequestWrite+0xf2>
 80025e2:	2301      	movs	r3, #1
 80025e4:	e000      	b.n	80025e8 <I2C_MasterRequestWrite+0xf4>
 80025e6:	2300      	movs	r3, #0
 80025e8:	4618      	mov	r0, r3
 80025ea:	3718      	adds	r7, #24
 80025ec:	46bd      	mov	sp, r7
 80025ee:	bd80      	pop	{r7, pc}
 80025f0:	00010008 	.word	0x00010008
 80025f4:	00010002 	.word	0x00010002

080025f8 <I2C_MasterRequestRead>:
 80025f8:	b580      	push	{r7, lr}
 80025fa:	b088      	sub	sp, #32
 80025fc:	af02      	add	r7, sp, #8
 80025fe:	60f8      	str	r0, [r7, #12]
 8002600:	607a      	str	r2, [r7, #4]
 8002602:	603b      	str	r3, [r7, #0]
 8002604:	460b      	mov	r3, r1
 8002606:	817b      	strh	r3, [r7, #10]
 8002608:	68fb      	ldr	r3, [r7, #12]
 800260a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800260c:	617b      	str	r3, [r7, #20]
 800260e:	68fb      	ldr	r3, [r7, #12]
 8002610:	681b      	ldr	r3, [r3, #0]
 8002612:	681a      	ldr	r2, [r3, #0]
 8002614:	68fb      	ldr	r3, [r7, #12]
 8002616:	681b      	ldr	r3, [r3, #0]
 8002618:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800261c:	601a      	str	r2, [r3, #0]
 800261e:	697b      	ldr	r3, [r7, #20]
 8002620:	2b08      	cmp	r3, #8
 8002622:	d006      	beq.n	8002632 <I2C_MasterRequestRead+0x3a>
 8002624:	697b      	ldr	r3, [r7, #20]
 8002626:	2b01      	cmp	r3, #1
 8002628:	d003      	beq.n	8002632 <I2C_MasterRequestRead+0x3a>
 800262a:	697b      	ldr	r3, [r7, #20]
 800262c:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8002630:	d108      	bne.n	8002644 <I2C_MasterRequestRead+0x4c>
 8002632:	68fb      	ldr	r3, [r7, #12]
 8002634:	681b      	ldr	r3, [r3, #0]
 8002636:	681a      	ldr	r2, [r3, #0]
 8002638:	68fb      	ldr	r3, [r7, #12]
 800263a:	681b      	ldr	r3, [r3, #0]
 800263c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002640:	601a      	str	r2, [r3, #0]
 8002642:	e00b      	b.n	800265c <I2C_MasterRequestRead+0x64>
 8002644:	68fb      	ldr	r3, [r7, #12]
 8002646:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002648:	2b11      	cmp	r3, #17
 800264a:	d107      	bne.n	800265c <I2C_MasterRequestRead+0x64>
 800264c:	68fb      	ldr	r3, [r7, #12]
 800264e:	681b      	ldr	r3, [r3, #0]
 8002650:	681a      	ldr	r2, [r3, #0]
 8002652:	68fb      	ldr	r3, [r7, #12]
 8002654:	681b      	ldr	r3, [r3, #0]
 8002656:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800265a:	601a      	str	r2, [r3, #0]
 800265c:	683b      	ldr	r3, [r7, #0]
 800265e:	9300      	str	r3, [sp, #0]
 8002660:	687b      	ldr	r3, [r7, #4]
 8002662:	2200      	movs	r2, #0
 8002664:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8002668:	68f8      	ldr	r0, [r7, #12]
 800266a:	f000 f893 	bl	8002794 <I2C_WaitOnFlagUntilTimeout>
 800266e:	4603      	mov	r3, r0
 8002670:	2b00      	cmp	r3, #0
 8002672:	d00d      	beq.n	8002690 <I2C_MasterRequestRead+0x98>
 8002674:	68fb      	ldr	r3, [r7, #12]
 8002676:	681b      	ldr	r3, [r3, #0]
 8002678:	681b      	ldr	r3, [r3, #0]
 800267a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800267e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002682:	d103      	bne.n	800268c <I2C_MasterRequestRead+0x94>
 8002684:	68fb      	ldr	r3, [r7, #12]
 8002686:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800268a:	641a      	str	r2, [r3, #64]	@ 0x40
 800268c:	2303      	movs	r3, #3
 800268e:	e079      	b.n	8002784 <I2C_MasterRequestRead+0x18c>
 8002690:	68fb      	ldr	r3, [r7, #12]
 8002692:	691b      	ldr	r3, [r3, #16]
 8002694:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8002698:	d108      	bne.n	80026ac <I2C_MasterRequestRead+0xb4>
 800269a:	897b      	ldrh	r3, [r7, #10]
 800269c:	b2db      	uxtb	r3, r3
 800269e:	f043 0301 	orr.w	r3, r3, #1
 80026a2:	b2da      	uxtb	r2, r3
 80026a4:	68fb      	ldr	r3, [r7, #12]
 80026a6:	681b      	ldr	r3, [r3, #0]
 80026a8:	611a      	str	r2, [r3, #16]
 80026aa:	e05f      	b.n	800276c <I2C_MasterRequestRead+0x174>
 80026ac:	897b      	ldrh	r3, [r7, #10]
 80026ae:	11db      	asrs	r3, r3, #7
 80026b0:	b2db      	uxtb	r3, r3
 80026b2:	f003 0306 	and.w	r3, r3, #6
 80026b6:	b2db      	uxtb	r3, r3
 80026b8:	f063 030f 	orn	r3, r3, #15
 80026bc:	b2da      	uxtb	r2, r3
 80026be:	68fb      	ldr	r3, [r7, #12]
 80026c0:	681b      	ldr	r3, [r3, #0]
 80026c2:	611a      	str	r2, [r3, #16]
 80026c4:	683b      	ldr	r3, [r7, #0]
 80026c6:	687a      	ldr	r2, [r7, #4]
 80026c8:	4930      	ldr	r1, [pc, #192]	@ (800278c <I2C_MasterRequestRead+0x194>)
 80026ca:	68f8      	ldr	r0, [r7, #12]
 80026cc:	f000 f8dc 	bl	8002888 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80026d0:	4603      	mov	r3, r0
 80026d2:	2b00      	cmp	r3, #0
 80026d4:	d001      	beq.n	80026da <I2C_MasterRequestRead+0xe2>
 80026d6:	2301      	movs	r3, #1
 80026d8:	e054      	b.n	8002784 <I2C_MasterRequestRead+0x18c>
 80026da:	897b      	ldrh	r3, [r7, #10]
 80026dc:	b2da      	uxtb	r2, r3
 80026de:	68fb      	ldr	r3, [r7, #12]
 80026e0:	681b      	ldr	r3, [r3, #0]
 80026e2:	611a      	str	r2, [r3, #16]
 80026e4:	683b      	ldr	r3, [r7, #0]
 80026e6:	687a      	ldr	r2, [r7, #4]
 80026e8:	4929      	ldr	r1, [pc, #164]	@ (8002790 <I2C_MasterRequestRead+0x198>)
 80026ea:	68f8      	ldr	r0, [r7, #12]
 80026ec:	f000 f8cc 	bl	8002888 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80026f0:	4603      	mov	r3, r0
 80026f2:	2b00      	cmp	r3, #0
 80026f4:	d001      	beq.n	80026fa <I2C_MasterRequestRead+0x102>
 80026f6:	2301      	movs	r3, #1
 80026f8:	e044      	b.n	8002784 <I2C_MasterRequestRead+0x18c>
 80026fa:	2300      	movs	r3, #0
 80026fc:	613b      	str	r3, [r7, #16]
 80026fe:	68fb      	ldr	r3, [r7, #12]
 8002700:	681b      	ldr	r3, [r3, #0]
 8002702:	695b      	ldr	r3, [r3, #20]
 8002704:	613b      	str	r3, [r7, #16]
 8002706:	68fb      	ldr	r3, [r7, #12]
 8002708:	681b      	ldr	r3, [r3, #0]
 800270a:	699b      	ldr	r3, [r3, #24]
 800270c:	613b      	str	r3, [r7, #16]
 800270e:	693b      	ldr	r3, [r7, #16]
 8002710:	68fb      	ldr	r3, [r7, #12]
 8002712:	681b      	ldr	r3, [r3, #0]
 8002714:	681a      	ldr	r2, [r3, #0]
 8002716:	68fb      	ldr	r3, [r7, #12]
 8002718:	681b      	ldr	r3, [r3, #0]
 800271a:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 800271e:	601a      	str	r2, [r3, #0]
 8002720:	683b      	ldr	r3, [r7, #0]
 8002722:	9300      	str	r3, [sp, #0]
 8002724:	687b      	ldr	r3, [r7, #4]
 8002726:	2200      	movs	r2, #0
 8002728:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 800272c:	68f8      	ldr	r0, [r7, #12]
 800272e:	f000 f831 	bl	8002794 <I2C_WaitOnFlagUntilTimeout>
 8002732:	4603      	mov	r3, r0
 8002734:	2b00      	cmp	r3, #0
 8002736:	d00d      	beq.n	8002754 <I2C_MasterRequestRead+0x15c>
 8002738:	68fb      	ldr	r3, [r7, #12]
 800273a:	681b      	ldr	r3, [r3, #0]
 800273c:	681b      	ldr	r3, [r3, #0]
 800273e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002742:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002746:	d103      	bne.n	8002750 <I2C_MasterRequestRead+0x158>
 8002748:	68fb      	ldr	r3, [r7, #12]
 800274a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800274e:	641a      	str	r2, [r3, #64]	@ 0x40
 8002750:	2303      	movs	r3, #3
 8002752:	e017      	b.n	8002784 <I2C_MasterRequestRead+0x18c>
 8002754:	897b      	ldrh	r3, [r7, #10]
 8002756:	11db      	asrs	r3, r3, #7
 8002758:	b2db      	uxtb	r3, r3
 800275a:	f003 0306 	and.w	r3, r3, #6
 800275e:	b2db      	uxtb	r3, r3
 8002760:	f063 030e 	orn	r3, r3, #14
 8002764:	b2da      	uxtb	r2, r3
 8002766:	68fb      	ldr	r3, [r7, #12]
 8002768:	681b      	ldr	r3, [r3, #0]
 800276a:	611a      	str	r2, [r3, #16]
 800276c:	683b      	ldr	r3, [r7, #0]
 800276e:	687a      	ldr	r2, [r7, #4]
 8002770:	4907      	ldr	r1, [pc, #28]	@ (8002790 <I2C_MasterRequestRead+0x198>)
 8002772:	68f8      	ldr	r0, [r7, #12]
 8002774:	f000 f888 	bl	8002888 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002778:	4603      	mov	r3, r0
 800277a:	2b00      	cmp	r3, #0
 800277c:	d001      	beq.n	8002782 <I2C_MasterRequestRead+0x18a>
 800277e:	2301      	movs	r3, #1
 8002780:	e000      	b.n	8002784 <I2C_MasterRequestRead+0x18c>
 8002782:	2300      	movs	r3, #0
 8002784:	4618      	mov	r0, r3
 8002786:	3718      	adds	r7, #24
 8002788:	46bd      	mov	sp, r7
 800278a:	bd80      	pop	{r7, pc}
 800278c:	00010008 	.word	0x00010008
 8002790:	00010002 	.word	0x00010002

08002794 <I2C_WaitOnFlagUntilTimeout>:
 8002794:	b580      	push	{r7, lr}
 8002796:	b084      	sub	sp, #16
 8002798:	af00      	add	r7, sp, #0
 800279a:	60f8      	str	r0, [r7, #12]
 800279c:	60b9      	str	r1, [r7, #8]
 800279e:	603b      	str	r3, [r7, #0]
 80027a0:	4613      	mov	r3, r2
 80027a2:	71fb      	strb	r3, [r7, #7]
 80027a4:	e048      	b.n	8002838 <I2C_WaitOnFlagUntilTimeout+0xa4>
 80027a6:	683b      	ldr	r3, [r7, #0]
 80027a8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80027ac:	d044      	beq.n	8002838 <I2C_WaitOnFlagUntilTimeout+0xa4>
 80027ae:	f7fe fda7 	bl	8001300 <HAL_GetTick>
 80027b2:	4602      	mov	r2, r0
 80027b4:	69bb      	ldr	r3, [r7, #24]
 80027b6:	1ad3      	subs	r3, r2, r3
 80027b8:	683a      	ldr	r2, [r7, #0]
 80027ba:	429a      	cmp	r2, r3
 80027bc:	d302      	bcc.n	80027c4 <I2C_WaitOnFlagUntilTimeout+0x30>
 80027be:	683b      	ldr	r3, [r7, #0]
 80027c0:	2b00      	cmp	r3, #0
 80027c2:	d139      	bne.n	8002838 <I2C_WaitOnFlagUntilTimeout+0xa4>
 80027c4:	68bb      	ldr	r3, [r7, #8]
 80027c6:	0c1b      	lsrs	r3, r3, #16
 80027c8:	b2db      	uxtb	r3, r3
 80027ca:	2b01      	cmp	r3, #1
 80027cc:	d10d      	bne.n	80027ea <I2C_WaitOnFlagUntilTimeout+0x56>
 80027ce:	68fb      	ldr	r3, [r7, #12]
 80027d0:	681b      	ldr	r3, [r3, #0]
 80027d2:	695b      	ldr	r3, [r3, #20]
 80027d4:	43da      	mvns	r2, r3
 80027d6:	68bb      	ldr	r3, [r7, #8]
 80027d8:	4013      	ands	r3, r2
 80027da:	b29b      	uxth	r3, r3
 80027dc:	2b00      	cmp	r3, #0
 80027de:	bf0c      	ite	eq
 80027e0:	2301      	moveq	r3, #1
 80027e2:	2300      	movne	r3, #0
 80027e4:	b2db      	uxtb	r3, r3
 80027e6:	461a      	mov	r2, r3
 80027e8:	e00c      	b.n	8002804 <I2C_WaitOnFlagUntilTimeout+0x70>
 80027ea:	68fb      	ldr	r3, [r7, #12]
 80027ec:	681b      	ldr	r3, [r3, #0]
 80027ee:	699b      	ldr	r3, [r3, #24]
 80027f0:	43da      	mvns	r2, r3
 80027f2:	68bb      	ldr	r3, [r7, #8]
 80027f4:	4013      	ands	r3, r2
 80027f6:	b29b      	uxth	r3, r3
 80027f8:	2b00      	cmp	r3, #0
 80027fa:	bf0c      	ite	eq
 80027fc:	2301      	moveq	r3, #1
 80027fe:	2300      	movne	r3, #0
 8002800:	b2db      	uxtb	r3, r3
 8002802:	461a      	mov	r2, r3
 8002804:	79fb      	ldrb	r3, [r7, #7]
 8002806:	429a      	cmp	r2, r3
 8002808:	d116      	bne.n	8002838 <I2C_WaitOnFlagUntilTimeout+0xa4>
 800280a:	68fb      	ldr	r3, [r7, #12]
 800280c:	2200      	movs	r2, #0
 800280e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002810:	68fb      	ldr	r3, [r7, #12]
 8002812:	2220      	movs	r2, #32
 8002814:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002818:	68fb      	ldr	r3, [r7, #12]
 800281a:	2200      	movs	r2, #0
 800281c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002820:	68fb      	ldr	r3, [r7, #12]
 8002822:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002824:	f043 0220 	orr.w	r2, r3, #32
 8002828:	68fb      	ldr	r3, [r7, #12]
 800282a:	641a      	str	r2, [r3, #64]	@ 0x40
 800282c:	68fb      	ldr	r3, [r7, #12]
 800282e:	2200      	movs	r2, #0
 8002830:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002834:	2301      	movs	r3, #1
 8002836:	e023      	b.n	8002880 <I2C_WaitOnFlagUntilTimeout+0xec>
 8002838:	68bb      	ldr	r3, [r7, #8]
 800283a:	0c1b      	lsrs	r3, r3, #16
 800283c:	b2db      	uxtb	r3, r3
 800283e:	2b01      	cmp	r3, #1
 8002840:	d10d      	bne.n	800285e <I2C_WaitOnFlagUntilTimeout+0xca>
 8002842:	68fb      	ldr	r3, [r7, #12]
 8002844:	681b      	ldr	r3, [r3, #0]
 8002846:	695b      	ldr	r3, [r3, #20]
 8002848:	43da      	mvns	r2, r3
 800284a:	68bb      	ldr	r3, [r7, #8]
 800284c:	4013      	ands	r3, r2
 800284e:	b29b      	uxth	r3, r3
 8002850:	2b00      	cmp	r3, #0
 8002852:	bf0c      	ite	eq
 8002854:	2301      	moveq	r3, #1
 8002856:	2300      	movne	r3, #0
 8002858:	b2db      	uxtb	r3, r3
 800285a:	461a      	mov	r2, r3
 800285c:	e00c      	b.n	8002878 <I2C_WaitOnFlagUntilTimeout+0xe4>
 800285e:	68fb      	ldr	r3, [r7, #12]
 8002860:	681b      	ldr	r3, [r3, #0]
 8002862:	699b      	ldr	r3, [r3, #24]
 8002864:	43da      	mvns	r2, r3
 8002866:	68bb      	ldr	r3, [r7, #8]
 8002868:	4013      	ands	r3, r2
 800286a:	b29b      	uxth	r3, r3
 800286c:	2b00      	cmp	r3, #0
 800286e:	bf0c      	ite	eq
 8002870:	2301      	moveq	r3, #1
 8002872:	2300      	movne	r3, #0
 8002874:	b2db      	uxtb	r3, r3
 8002876:	461a      	mov	r2, r3
 8002878:	79fb      	ldrb	r3, [r7, #7]
 800287a:	429a      	cmp	r2, r3
 800287c:	d093      	beq.n	80027a6 <I2C_WaitOnFlagUntilTimeout+0x12>
 800287e:	2300      	movs	r3, #0
 8002880:	4618      	mov	r0, r3
 8002882:	3710      	adds	r7, #16
 8002884:	46bd      	mov	sp, r7
 8002886:	bd80      	pop	{r7, pc}

08002888 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8002888:	b580      	push	{r7, lr}
 800288a:	b084      	sub	sp, #16
 800288c:	af00      	add	r7, sp, #0
 800288e:	60f8      	str	r0, [r7, #12]
 8002890:	60b9      	str	r1, [r7, #8]
 8002892:	607a      	str	r2, [r7, #4]
 8002894:	603b      	str	r3, [r7, #0]
 8002896:	e071      	b.n	800297c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8002898:	68fb      	ldr	r3, [r7, #12]
 800289a:	681b      	ldr	r3, [r3, #0]
 800289c:	695b      	ldr	r3, [r3, #20]
 800289e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80028a2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80028a6:	d123      	bne.n	80028f0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 80028a8:	68fb      	ldr	r3, [r7, #12]
 80028aa:	681b      	ldr	r3, [r3, #0]
 80028ac:	681a      	ldr	r2, [r3, #0]
 80028ae:	68fb      	ldr	r3, [r7, #12]
 80028b0:	681b      	ldr	r3, [r3, #0]
 80028b2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80028b6:	601a      	str	r2, [r3, #0]
 80028b8:	68fb      	ldr	r3, [r7, #12]
 80028ba:	681b      	ldr	r3, [r3, #0]
 80028bc:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 80028c0:	615a      	str	r2, [r3, #20]
 80028c2:	68fb      	ldr	r3, [r7, #12]
 80028c4:	2200      	movs	r2, #0
 80028c6:	631a      	str	r2, [r3, #48]	@ 0x30
 80028c8:	68fb      	ldr	r3, [r7, #12]
 80028ca:	2220      	movs	r2, #32
 80028cc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80028d0:	68fb      	ldr	r3, [r7, #12]
 80028d2:	2200      	movs	r2, #0
 80028d4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80028d8:	68fb      	ldr	r3, [r7, #12]
 80028da:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80028dc:	f043 0204 	orr.w	r2, r3, #4
 80028e0:	68fb      	ldr	r3, [r7, #12]
 80028e2:	641a      	str	r2, [r3, #64]	@ 0x40
 80028e4:	68fb      	ldr	r3, [r7, #12]
 80028e6:	2200      	movs	r2, #0
 80028e8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80028ec:	2301      	movs	r3, #1
 80028ee:	e067      	b.n	80029c0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 80028f0:	687b      	ldr	r3, [r7, #4]
 80028f2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80028f6:	d041      	beq.n	800297c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 80028f8:	f7fe fd02 	bl	8001300 <HAL_GetTick>
 80028fc:	4602      	mov	r2, r0
 80028fe:	683b      	ldr	r3, [r7, #0]
 8002900:	1ad3      	subs	r3, r2, r3
 8002902:	687a      	ldr	r2, [r7, #4]
 8002904:	429a      	cmp	r2, r3
 8002906:	d302      	bcc.n	800290e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8002908:	687b      	ldr	r3, [r7, #4]
 800290a:	2b00      	cmp	r3, #0
 800290c:	d136      	bne.n	800297c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 800290e:	68bb      	ldr	r3, [r7, #8]
 8002910:	0c1b      	lsrs	r3, r3, #16
 8002912:	b2db      	uxtb	r3, r3
 8002914:	2b01      	cmp	r3, #1
 8002916:	d10c      	bne.n	8002932 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8002918:	68fb      	ldr	r3, [r7, #12]
 800291a:	681b      	ldr	r3, [r3, #0]
 800291c:	695b      	ldr	r3, [r3, #20]
 800291e:	43da      	mvns	r2, r3
 8002920:	68bb      	ldr	r3, [r7, #8]
 8002922:	4013      	ands	r3, r2
 8002924:	b29b      	uxth	r3, r3
 8002926:	2b00      	cmp	r3, #0
 8002928:	bf14      	ite	ne
 800292a:	2301      	movne	r3, #1
 800292c:	2300      	moveq	r3, #0
 800292e:	b2db      	uxtb	r3, r3
 8002930:	e00b      	b.n	800294a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 8002932:	68fb      	ldr	r3, [r7, #12]
 8002934:	681b      	ldr	r3, [r3, #0]
 8002936:	699b      	ldr	r3, [r3, #24]
 8002938:	43da      	mvns	r2, r3
 800293a:	68bb      	ldr	r3, [r7, #8]
 800293c:	4013      	ands	r3, r2
 800293e:	b29b      	uxth	r3, r3
 8002940:	2b00      	cmp	r3, #0
 8002942:	bf14      	ite	ne
 8002944:	2301      	movne	r3, #1
 8002946:	2300      	moveq	r3, #0
 8002948:	b2db      	uxtb	r3, r3
 800294a:	2b00      	cmp	r3, #0
 800294c:	d016      	beq.n	800297c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 800294e:	68fb      	ldr	r3, [r7, #12]
 8002950:	2200      	movs	r2, #0
 8002952:	631a      	str	r2, [r3, #48]	@ 0x30
 8002954:	68fb      	ldr	r3, [r7, #12]
 8002956:	2220      	movs	r2, #32
 8002958:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800295c:	68fb      	ldr	r3, [r7, #12]
 800295e:	2200      	movs	r2, #0
 8002960:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002964:	68fb      	ldr	r3, [r7, #12]
 8002966:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002968:	f043 0220 	orr.w	r2, r3, #32
 800296c:	68fb      	ldr	r3, [r7, #12]
 800296e:	641a      	str	r2, [r3, #64]	@ 0x40
 8002970:	68fb      	ldr	r3, [r7, #12]
 8002972:	2200      	movs	r2, #0
 8002974:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002978:	2301      	movs	r3, #1
 800297a:	e021      	b.n	80029c0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 800297c:	68bb      	ldr	r3, [r7, #8]
 800297e:	0c1b      	lsrs	r3, r3, #16
 8002980:	b2db      	uxtb	r3, r3
 8002982:	2b01      	cmp	r3, #1
 8002984:	d10c      	bne.n	80029a0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 8002986:	68fb      	ldr	r3, [r7, #12]
 8002988:	681b      	ldr	r3, [r3, #0]
 800298a:	695b      	ldr	r3, [r3, #20]
 800298c:	43da      	mvns	r2, r3
 800298e:	68bb      	ldr	r3, [r7, #8]
 8002990:	4013      	ands	r3, r2
 8002992:	b29b      	uxth	r3, r3
 8002994:	2b00      	cmp	r3, #0
 8002996:	bf14      	ite	ne
 8002998:	2301      	movne	r3, #1
 800299a:	2300      	moveq	r3, #0
 800299c:	b2db      	uxtb	r3, r3
 800299e:	e00b      	b.n	80029b8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 80029a0:	68fb      	ldr	r3, [r7, #12]
 80029a2:	681b      	ldr	r3, [r3, #0]
 80029a4:	699b      	ldr	r3, [r3, #24]
 80029a6:	43da      	mvns	r2, r3
 80029a8:	68bb      	ldr	r3, [r7, #8]
 80029aa:	4013      	ands	r3, r2
 80029ac:	b29b      	uxth	r3, r3
 80029ae:	2b00      	cmp	r3, #0
 80029b0:	bf14      	ite	ne
 80029b2:	2301      	movne	r3, #1
 80029b4:	2300      	moveq	r3, #0
 80029b6:	b2db      	uxtb	r3, r3
 80029b8:	2b00      	cmp	r3, #0
 80029ba:	f47f af6d 	bne.w	8002898 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 80029be:	2300      	movs	r3, #0
 80029c0:	4618      	mov	r0, r3
 80029c2:	3710      	adds	r7, #16
 80029c4:	46bd      	mov	sp, r7
 80029c6:	bd80      	pop	{r7, pc}

080029c8 <I2C_WaitOnTXEFlagUntilTimeout>:
 80029c8:	b580      	push	{r7, lr}
 80029ca:	b084      	sub	sp, #16
 80029cc:	af00      	add	r7, sp, #0
 80029ce:	60f8      	str	r0, [r7, #12]
 80029d0:	60b9      	str	r1, [r7, #8]
 80029d2:	607a      	str	r2, [r7, #4]
 80029d4:	e034      	b.n	8002a40 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 80029d6:	68f8      	ldr	r0, [r7, #12]
 80029d8:	f000 f8e3 	bl	8002ba2 <I2C_IsAcknowledgeFailed>
 80029dc:	4603      	mov	r3, r0
 80029de:	2b00      	cmp	r3, #0
 80029e0:	d001      	beq.n	80029e6 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 80029e2:	2301      	movs	r3, #1
 80029e4:	e034      	b.n	8002a50 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 80029e6:	68bb      	ldr	r3, [r7, #8]
 80029e8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80029ec:	d028      	beq.n	8002a40 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 80029ee:	f7fe fc87 	bl	8001300 <HAL_GetTick>
 80029f2:	4602      	mov	r2, r0
 80029f4:	687b      	ldr	r3, [r7, #4]
 80029f6:	1ad3      	subs	r3, r2, r3
 80029f8:	68ba      	ldr	r2, [r7, #8]
 80029fa:	429a      	cmp	r2, r3
 80029fc:	d302      	bcc.n	8002a04 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 80029fe:	68bb      	ldr	r3, [r7, #8]
 8002a00:	2b00      	cmp	r3, #0
 8002a02:	d11d      	bne.n	8002a40 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8002a04:	68fb      	ldr	r3, [r7, #12]
 8002a06:	681b      	ldr	r3, [r3, #0]
 8002a08:	695b      	ldr	r3, [r3, #20]
 8002a0a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002a0e:	2b80      	cmp	r3, #128	@ 0x80
 8002a10:	d016      	beq.n	8002a40 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8002a12:	68fb      	ldr	r3, [r7, #12]
 8002a14:	2200      	movs	r2, #0
 8002a16:	631a      	str	r2, [r3, #48]	@ 0x30
 8002a18:	68fb      	ldr	r3, [r7, #12]
 8002a1a:	2220      	movs	r2, #32
 8002a1c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002a20:	68fb      	ldr	r3, [r7, #12]
 8002a22:	2200      	movs	r2, #0
 8002a24:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002a28:	68fb      	ldr	r3, [r7, #12]
 8002a2a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002a2c:	f043 0220 	orr.w	r2, r3, #32
 8002a30:	68fb      	ldr	r3, [r7, #12]
 8002a32:	641a      	str	r2, [r3, #64]	@ 0x40
 8002a34:	68fb      	ldr	r3, [r7, #12]
 8002a36:	2200      	movs	r2, #0
 8002a38:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002a3c:	2301      	movs	r3, #1
 8002a3e:	e007      	b.n	8002a50 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8002a40:	68fb      	ldr	r3, [r7, #12]
 8002a42:	681b      	ldr	r3, [r3, #0]
 8002a44:	695b      	ldr	r3, [r3, #20]
 8002a46:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002a4a:	2b80      	cmp	r3, #128	@ 0x80
 8002a4c:	d1c3      	bne.n	80029d6 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8002a4e:	2300      	movs	r3, #0
 8002a50:	4618      	mov	r0, r3
 8002a52:	3710      	adds	r7, #16
 8002a54:	46bd      	mov	sp, r7
 8002a56:	bd80      	pop	{r7, pc}

08002a58 <I2C_WaitOnBTFFlagUntilTimeout>:
 8002a58:	b580      	push	{r7, lr}
 8002a5a:	b084      	sub	sp, #16
 8002a5c:	af00      	add	r7, sp, #0
 8002a5e:	60f8      	str	r0, [r7, #12]
 8002a60:	60b9      	str	r1, [r7, #8]
 8002a62:	607a      	str	r2, [r7, #4]
 8002a64:	e034      	b.n	8002ad0 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8002a66:	68f8      	ldr	r0, [r7, #12]
 8002a68:	f000 f89b 	bl	8002ba2 <I2C_IsAcknowledgeFailed>
 8002a6c:	4603      	mov	r3, r0
 8002a6e:	2b00      	cmp	r3, #0
 8002a70:	d001      	beq.n	8002a76 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8002a72:	2301      	movs	r3, #1
 8002a74:	e034      	b.n	8002ae0 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8002a76:	68bb      	ldr	r3, [r7, #8]
 8002a78:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002a7c:	d028      	beq.n	8002ad0 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8002a7e:	f7fe fc3f 	bl	8001300 <HAL_GetTick>
 8002a82:	4602      	mov	r2, r0
 8002a84:	687b      	ldr	r3, [r7, #4]
 8002a86:	1ad3      	subs	r3, r2, r3
 8002a88:	68ba      	ldr	r2, [r7, #8]
 8002a8a:	429a      	cmp	r2, r3
 8002a8c:	d302      	bcc.n	8002a94 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8002a8e:	68bb      	ldr	r3, [r7, #8]
 8002a90:	2b00      	cmp	r3, #0
 8002a92:	d11d      	bne.n	8002ad0 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8002a94:	68fb      	ldr	r3, [r7, #12]
 8002a96:	681b      	ldr	r3, [r3, #0]
 8002a98:	695b      	ldr	r3, [r3, #20]
 8002a9a:	f003 0304 	and.w	r3, r3, #4
 8002a9e:	2b04      	cmp	r3, #4
 8002aa0:	d016      	beq.n	8002ad0 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8002aa2:	68fb      	ldr	r3, [r7, #12]
 8002aa4:	2200      	movs	r2, #0
 8002aa6:	631a      	str	r2, [r3, #48]	@ 0x30
 8002aa8:	68fb      	ldr	r3, [r7, #12]
 8002aaa:	2220      	movs	r2, #32
 8002aac:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002ab0:	68fb      	ldr	r3, [r7, #12]
 8002ab2:	2200      	movs	r2, #0
 8002ab4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002ab8:	68fb      	ldr	r3, [r7, #12]
 8002aba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002abc:	f043 0220 	orr.w	r2, r3, #32
 8002ac0:	68fb      	ldr	r3, [r7, #12]
 8002ac2:	641a      	str	r2, [r3, #64]	@ 0x40
 8002ac4:	68fb      	ldr	r3, [r7, #12]
 8002ac6:	2200      	movs	r2, #0
 8002ac8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002acc:	2301      	movs	r3, #1
 8002ace:	e007      	b.n	8002ae0 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8002ad0:	68fb      	ldr	r3, [r7, #12]
 8002ad2:	681b      	ldr	r3, [r3, #0]
 8002ad4:	695b      	ldr	r3, [r3, #20]
 8002ad6:	f003 0304 	and.w	r3, r3, #4
 8002ada:	2b04      	cmp	r3, #4
 8002adc:	d1c3      	bne.n	8002a66 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8002ade:	2300      	movs	r3, #0
 8002ae0:	4618      	mov	r0, r3
 8002ae2:	3710      	adds	r7, #16
 8002ae4:	46bd      	mov	sp, r7
 8002ae6:	bd80      	pop	{r7, pc}

08002ae8 <I2C_WaitOnRXNEFlagUntilTimeout>:
 8002ae8:	b580      	push	{r7, lr}
 8002aea:	b084      	sub	sp, #16
 8002aec:	af00      	add	r7, sp, #0
 8002aee:	60f8      	str	r0, [r7, #12]
 8002af0:	60b9      	str	r1, [r7, #8]
 8002af2:	607a      	str	r2, [r7, #4]
 8002af4:	e049      	b.n	8002b8a <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8002af6:	68fb      	ldr	r3, [r7, #12]
 8002af8:	681b      	ldr	r3, [r3, #0]
 8002afa:	695b      	ldr	r3, [r3, #20]
 8002afc:	f003 0310 	and.w	r3, r3, #16
 8002b00:	2b10      	cmp	r3, #16
 8002b02:	d119      	bne.n	8002b38 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 8002b04:	68fb      	ldr	r3, [r7, #12]
 8002b06:	681b      	ldr	r3, [r3, #0]
 8002b08:	f06f 0210 	mvn.w	r2, #16
 8002b0c:	615a      	str	r2, [r3, #20]
 8002b0e:	68fb      	ldr	r3, [r7, #12]
 8002b10:	2200      	movs	r2, #0
 8002b12:	631a      	str	r2, [r3, #48]	@ 0x30
 8002b14:	68fb      	ldr	r3, [r7, #12]
 8002b16:	2220      	movs	r2, #32
 8002b18:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002b1c:	68fb      	ldr	r3, [r7, #12]
 8002b1e:	2200      	movs	r2, #0
 8002b20:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002b24:	68fb      	ldr	r3, [r7, #12]
 8002b26:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8002b28:	68fb      	ldr	r3, [r7, #12]
 8002b2a:	641a      	str	r2, [r3, #64]	@ 0x40
 8002b2c:	68fb      	ldr	r3, [r7, #12]
 8002b2e:	2200      	movs	r2, #0
 8002b30:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002b34:	2301      	movs	r3, #1
 8002b36:	e030      	b.n	8002b9a <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8002b38:	f7fe fbe2 	bl	8001300 <HAL_GetTick>
 8002b3c:	4602      	mov	r2, r0
 8002b3e:	687b      	ldr	r3, [r7, #4]
 8002b40:	1ad3      	subs	r3, r2, r3
 8002b42:	68ba      	ldr	r2, [r7, #8]
 8002b44:	429a      	cmp	r2, r3
 8002b46:	d302      	bcc.n	8002b4e <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8002b48:	68bb      	ldr	r3, [r7, #8]
 8002b4a:	2b00      	cmp	r3, #0
 8002b4c:	d11d      	bne.n	8002b8a <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8002b4e:	68fb      	ldr	r3, [r7, #12]
 8002b50:	681b      	ldr	r3, [r3, #0]
 8002b52:	695b      	ldr	r3, [r3, #20]
 8002b54:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002b58:	2b40      	cmp	r3, #64	@ 0x40
 8002b5a:	d016      	beq.n	8002b8a <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8002b5c:	68fb      	ldr	r3, [r7, #12]
 8002b5e:	2200      	movs	r2, #0
 8002b60:	631a      	str	r2, [r3, #48]	@ 0x30
 8002b62:	68fb      	ldr	r3, [r7, #12]
 8002b64:	2220      	movs	r2, #32
 8002b66:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002b6a:	68fb      	ldr	r3, [r7, #12]
 8002b6c:	2200      	movs	r2, #0
 8002b6e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002b72:	68fb      	ldr	r3, [r7, #12]
 8002b74:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b76:	f043 0220 	orr.w	r2, r3, #32
 8002b7a:	68fb      	ldr	r3, [r7, #12]
 8002b7c:	641a      	str	r2, [r3, #64]	@ 0x40
 8002b7e:	68fb      	ldr	r3, [r7, #12]
 8002b80:	2200      	movs	r2, #0
 8002b82:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002b86:	2301      	movs	r3, #1
 8002b88:	e007      	b.n	8002b9a <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8002b8a:	68fb      	ldr	r3, [r7, #12]
 8002b8c:	681b      	ldr	r3, [r3, #0]
 8002b8e:	695b      	ldr	r3, [r3, #20]
 8002b90:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002b94:	2b40      	cmp	r3, #64	@ 0x40
 8002b96:	d1ae      	bne.n	8002af6 <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 8002b98:	2300      	movs	r3, #0
 8002b9a:	4618      	mov	r0, r3
 8002b9c:	3710      	adds	r7, #16
 8002b9e:	46bd      	mov	sp, r7
 8002ba0:	bd80      	pop	{r7, pc}

08002ba2 <I2C_IsAcknowledgeFailed>:
 8002ba2:	b480      	push	{r7}
 8002ba4:	b083      	sub	sp, #12
 8002ba6:	af00      	add	r7, sp, #0
 8002ba8:	6078      	str	r0, [r7, #4]
 8002baa:	687b      	ldr	r3, [r7, #4]
 8002bac:	681b      	ldr	r3, [r3, #0]
 8002bae:	695b      	ldr	r3, [r3, #20]
 8002bb0:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002bb4:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8002bb8:	d11b      	bne.n	8002bf2 <I2C_IsAcknowledgeFailed+0x50>
 8002bba:	687b      	ldr	r3, [r7, #4]
 8002bbc:	681b      	ldr	r3, [r3, #0]
 8002bbe:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8002bc2:	615a      	str	r2, [r3, #20]
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	2200      	movs	r2, #0
 8002bc8:	631a      	str	r2, [r3, #48]	@ 0x30
 8002bca:	687b      	ldr	r3, [r7, #4]
 8002bcc:	2220      	movs	r2, #32
 8002bce:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8002bd2:	687b      	ldr	r3, [r7, #4]
 8002bd4:	2200      	movs	r2, #0
 8002bd6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8002bda:	687b      	ldr	r3, [r7, #4]
 8002bdc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002bde:	f043 0204 	orr.w	r2, r3, #4
 8002be2:	687b      	ldr	r3, [r7, #4]
 8002be4:	641a      	str	r2, [r3, #64]	@ 0x40
 8002be6:	687b      	ldr	r3, [r7, #4]
 8002be8:	2200      	movs	r2, #0
 8002bea:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002bee:	2301      	movs	r3, #1
 8002bf0:	e000      	b.n	8002bf4 <I2C_IsAcknowledgeFailed+0x52>
 8002bf2:	2300      	movs	r3, #0
 8002bf4:	4618      	mov	r0, r3
 8002bf6:	370c      	adds	r7, #12
 8002bf8:	46bd      	mov	sp, r7
 8002bfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bfe:	4770      	bx	lr

08002c00 <HAL_RCC_OscConfig>:
 8002c00:	b580      	push	{r7, lr}
 8002c02:	b086      	sub	sp, #24
 8002c04:	af00      	add	r7, sp, #0
 8002c06:	6078      	str	r0, [r7, #4]
 8002c08:	687b      	ldr	r3, [r7, #4]
 8002c0a:	2b00      	cmp	r3, #0
 8002c0c:	d101      	bne.n	8002c12 <HAL_RCC_OscConfig+0x12>
 8002c0e:	2301      	movs	r3, #1
 8002c10:	e267      	b.n	80030e2 <HAL_RCC_OscConfig+0x4e2>
 8002c12:	687b      	ldr	r3, [r7, #4]
 8002c14:	681b      	ldr	r3, [r3, #0]
 8002c16:	f003 0301 	and.w	r3, r3, #1
 8002c1a:	2b00      	cmp	r3, #0
 8002c1c:	d075      	beq.n	8002d0a <HAL_RCC_OscConfig+0x10a>
 8002c1e:	4b88      	ldr	r3, [pc, #544]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002c20:	689b      	ldr	r3, [r3, #8]
 8002c22:	f003 030c 	and.w	r3, r3, #12
 8002c26:	2b04      	cmp	r3, #4
 8002c28:	d00c      	beq.n	8002c44 <HAL_RCC_OscConfig+0x44>
 8002c2a:	4b85      	ldr	r3, [pc, #532]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002c2c:	689b      	ldr	r3, [r3, #8]
 8002c2e:	f003 030c 	and.w	r3, r3, #12
 8002c32:	2b08      	cmp	r3, #8
 8002c34:	d112      	bne.n	8002c5c <HAL_RCC_OscConfig+0x5c>
 8002c36:	4b82      	ldr	r3, [pc, #520]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002c38:	685b      	ldr	r3, [r3, #4]
 8002c3a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002c3e:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8002c42:	d10b      	bne.n	8002c5c <HAL_RCC_OscConfig+0x5c>
 8002c44:	4b7e      	ldr	r3, [pc, #504]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002c46:	681b      	ldr	r3, [r3, #0]
 8002c48:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002c4c:	2b00      	cmp	r3, #0
 8002c4e:	d05b      	beq.n	8002d08 <HAL_RCC_OscConfig+0x108>
 8002c50:	687b      	ldr	r3, [r7, #4]
 8002c52:	685b      	ldr	r3, [r3, #4]
 8002c54:	2b00      	cmp	r3, #0
 8002c56:	d157      	bne.n	8002d08 <HAL_RCC_OscConfig+0x108>
 8002c58:	2301      	movs	r3, #1
 8002c5a:	e242      	b.n	80030e2 <HAL_RCC_OscConfig+0x4e2>
 8002c5c:	687b      	ldr	r3, [r7, #4]
 8002c5e:	685b      	ldr	r3, [r3, #4]
 8002c60:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8002c64:	d106      	bne.n	8002c74 <HAL_RCC_OscConfig+0x74>
 8002c66:	4b76      	ldr	r3, [pc, #472]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002c68:	681b      	ldr	r3, [r3, #0]
 8002c6a:	4a75      	ldr	r2, [pc, #468]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002c6c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002c70:	6013      	str	r3, [r2, #0]
 8002c72:	e01d      	b.n	8002cb0 <HAL_RCC_OscConfig+0xb0>
 8002c74:	687b      	ldr	r3, [r7, #4]
 8002c76:	685b      	ldr	r3, [r3, #4]
 8002c78:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8002c7c:	d10c      	bne.n	8002c98 <HAL_RCC_OscConfig+0x98>
 8002c7e:	4b70      	ldr	r3, [pc, #448]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002c80:	681b      	ldr	r3, [r3, #0]
 8002c82:	4a6f      	ldr	r2, [pc, #444]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002c84:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8002c88:	6013      	str	r3, [r2, #0]
 8002c8a:	4b6d      	ldr	r3, [pc, #436]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002c8c:	681b      	ldr	r3, [r3, #0]
 8002c8e:	4a6c      	ldr	r2, [pc, #432]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002c90:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002c94:	6013      	str	r3, [r2, #0]
 8002c96:	e00b      	b.n	8002cb0 <HAL_RCC_OscConfig+0xb0>
 8002c98:	4b69      	ldr	r3, [pc, #420]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002c9a:	681b      	ldr	r3, [r3, #0]
 8002c9c:	4a68      	ldr	r2, [pc, #416]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002c9e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8002ca2:	6013      	str	r3, [r2, #0]
 8002ca4:	4b66      	ldr	r3, [pc, #408]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002ca6:	681b      	ldr	r3, [r3, #0]
 8002ca8:	4a65      	ldr	r2, [pc, #404]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002caa:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8002cae:	6013      	str	r3, [r2, #0]
 8002cb0:	687b      	ldr	r3, [r7, #4]
 8002cb2:	685b      	ldr	r3, [r3, #4]
 8002cb4:	2b00      	cmp	r3, #0
 8002cb6:	d013      	beq.n	8002ce0 <HAL_RCC_OscConfig+0xe0>
 8002cb8:	f7fe fb22 	bl	8001300 <HAL_GetTick>
 8002cbc:	6138      	str	r0, [r7, #16]
 8002cbe:	e008      	b.n	8002cd2 <HAL_RCC_OscConfig+0xd2>
 8002cc0:	f7fe fb1e 	bl	8001300 <HAL_GetTick>
 8002cc4:	4602      	mov	r2, r0
 8002cc6:	693b      	ldr	r3, [r7, #16]
 8002cc8:	1ad3      	subs	r3, r2, r3
 8002cca:	2b64      	cmp	r3, #100	@ 0x64
 8002ccc:	d901      	bls.n	8002cd2 <HAL_RCC_OscConfig+0xd2>
 8002cce:	2303      	movs	r3, #3
 8002cd0:	e207      	b.n	80030e2 <HAL_RCC_OscConfig+0x4e2>
 8002cd2:	4b5b      	ldr	r3, [pc, #364]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002cd4:	681b      	ldr	r3, [r3, #0]
 8002cd6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002cda:	2b00      	cmp	r3, #0
 8002cdc:	d0f0      	beq.n	8002cc0 <HAL_RCC_OscConfig+0xc0>
 8002cde:	e014      	b.n	8002d0a <HAL_RCC_OscConfig+0x10a>
 8002ce0:	f7fe fb0e 	bl	8001300 <HAL_GetTick>
 8002ce4:	6138      	str	r0, [r7, #16]
 8002ce6:	e008      	b.n	8002cfa <HAL_RCC_OscConfig+0xfa>
 8002ce8:	f7fe fb0a 	bl	8001300 <HAL_GetTick>
 8002cec:	4602      	mov	r2, r0
 8002cee:	693b      	ldr	r3, [r7, #16]
 8002cf0:	1ad3      	subs	r3, r2, r3
 8002cf2:	2b64      	cmp	r3, #100	@ 0x64
 8002cf4:	d901      	bls.n	8002cfa <HAL_RCC_OscConfig+0xfa>
 8002cf6:	2303      	movs	r3, #3
 8002cf8:	e1f3      	b.n	80030e2 <HAL_RCC_OscConfig+0x4e2>
 8002cfa:	4b51      	ldr	r3, [pc, #324]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002cfc:	681b      	ldr	r3, [r3, #0]
 8002cfe:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8002d02:	2b00      	cmp	r3, #0
 8002d04:	d1f0      	bne.n	8002ce8 <HAL_RCC_OscConfig+0xe8>
 8002d06:	e000      	b.n	8002d0a <HAL_RCC_OscConfig+0x10a>
 8002d08:	bf00      	nop
 8002d0a:	687b      	ldr	r3, [r7, #4]
 8002d0c:	681b      	ldr	r3, [r3, #0]
 8002d0e:	f003 0302 	and.w	r3, r3, #2
 8002d12:	2b00      	cmp	r3, #0
 8002d14:	d063      	beq.n	8002dde <HAL_RCC_OscConfig+0x1de>
 8002d16:	4b4a      	ldr	r3, [pc, #296]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002d18:	689b      	ldr	r3, [r3, #8]
 8002d1a:	f003 030c 	and.w	r3, r3, #12
 8002d1e:	2b00      	cmp	r3, #0
 8002d20:	d00b      	beq.n	8002d3a <HAL_RCC_OscConfig+0x13a>
 8002d22:	4b47      	ldr	r3, [pc, #284]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002d24:	689b      	ldr	r3, [r3, #8]
 8002d26:	f003 030c 	and.w	r3, r3, #12
 8002d2a:	2b08      	cmp	r3, #8
 8002d2c:	d11c      	bne.n	8002d68 <HAL_RCC_OscConfig+0x168>
 8002d2e:	4b44      	ldr	r3, [pc, #272]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002d30:	685b      	ldr	r3, [r3, #4]
 8002d32:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8002d36:	2b00      	cmp	r3, #0
 8002d38:	d116      	bne.n	8002d68 <HAL_RCC_OscConfig+0x168>
 8002d3a:	4b41      	ldr	r3, [pc, #260]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002d3c:	681b      	ldr	r3, [r3, #0]
 8002d3e:	f003 0302 	and.w	r3, r3, #2
 8002d42:	2b00      	cmp	r3, #0
 8002d44:	d005      	beq.n	8002d52 <HAL_RCC_OscConfig+0x152>
 8002d46:	687b      	ldr	r3, [r7, #4]
 8002d48:	68db      	ldr	r3, [r3, #12]
 8002d4a:	2b01      	cmp	r3, #1
 8002d4c:	d001      	beq.n	8002d52 <HAL_RCC_OscConfig+0x152>
 8002d4e:	2301      	movs	r3, #1
 8002d50:	e1c7      	b.n	80030e2 <HAL_RCC_OscConfig+0x4e2>
 8002d52:	4b3b      	ldr	r3, [pc, #236]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002d54:	681b      	ldr	r3, [r3, #0]
 8002d56:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002d5a:	687b      	ldr	r3, [r7, #4]
 8002d5c:	691b      	ldr	r3, [r3, #16]
 8002d5e:	00db      	lsls	r3, r3, #3
 8002d60:	4937      	ldr	r1, [pc, #220]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002d62:	4313      	orrs	r3, r2
 8002d64:	600b      	str	r3, [r1, #0]
 8002d66:	e03a      	b.n	8002dde <HAL_RCC_OscConfig+0x1de>
 8002d68:	687b      	ldr	r3, [r7, #4]
 8002d6a:	68db      	ldr	r3, [r3, #12]
 8002d6c:	2b00      	cmp	r3, #0
 8002d6e:	d020      	beq.n	8002db2 <HAL_RCC_OscConfig+0x1b2>
 8002d70:	4b34      	ldr	r3, [pc, #208]	@ (8002e44 <HAL_RCC_OscConfig+0x244>)
 8002d72:	2201      	movs	r2, #1
 8002d74:	601a      	str	r2, [r3, #0]
 8002d76:	f7fe fac3 	bl	8001300 <HAL_GetTick>
 8002d7a:	6138      	str	r0, [r7, #16]
 8002d7c:	e008      	b.n	8002d90 <HAL_RCC_OscConfig+0x190>
 8002d7e:	f7fe fabf 	bl	8001300 <HAL_GetTick>
 8002d82:	4602      	mov	r2, r0
 8002d84:	693b      	ldr	r3, [r7, #16]
 8002d86:	1ad3      	subs	r3, r2, r3
 8002d88:	2b02      	cmp	r3, #2
 8002d8a:	d901      	bls.n	8002d90 <HAL_RCC_OscConfig+0x190>
 8002d8c:	2303      	movs	r3, #3
 8002d8e:	e1a8      	b.n	80030e2 <HAL_RCC_OscConfig+0x4e2>
 8002d90:	4b2b      	ldr	r3, [pc, #172]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002d92:	681b      	ldr	r3, [r3, #0]
 8002d94:	f003 0302 	and.w	r3, r3, #2
 8002d98:	2b00      	cmp	r3, #0
 8002d9a:	d0f0      	beq.n	8002d7e <HAL_RCC_OscConfig+0x17e>
 8002d9c:	4b28      	ldr	r3, [pc, #160]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002d9e:	681b      	ldr	r3, [r3, #0]
 8002da0:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002da4:	687b      	ldr	r3, [r7, #4]
 8002da6:	691b      	ldr	r3, [r3, #16]
 8002da8:	00db      	lsls	r3, r3, #3
 8002daa:	4925      	ldr	r1, [pc, #148]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002dac:	4313      	orrs	r3, r2
 8002dae:	600b      	str	r3, [r1, #0]
 8002db0:	e015      	b.n	8002dde <HAL_RCC_OscConfig+0x1de>
 8002db2:	4b24      	ldr	r3, [pc, #144]	@ (8002e44 <HAL_RCC_OscConfig+0x244>)
 8002db4:	2200      	movs	r2, #0
 8002db6:	601a      	str	r2, [r3, #0]
 8002db8:	f7fe faa2 	bl	8001300 <HAL_GetTick>
 8002dbc:	6138      	str	r0, [r7, #16]
 8002dbe:	e008      	b.n	8002dd2 <HAL_RCC_OscConfig+0x1d2>
 8002dc0:	f7fe fa9e 	bl	8001300 <HAL_GetTick>
 8002dc4:	4602      	mov	r2, r0
 8002dc6:	693b      	ldr	r3, [r7, #16]
 8002dc8:	1ad3      	subs	r3, r2, r3
 8002dca:	2b02      	cmp	r3, #2
 8002dcc:	d901      	bls.n	8002dd2 <HAL_RCC_OscConfig+0x1d2>
 8002dce:	2303      	movs	r3, #3
 8002dd0:	e187      	b.n	80030e2 <HAL_RCC_OscConfig+0x4e2>
 8002dd2:	4b1b      	ldr	r3, [pc, #108]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002dd4:	681b      	ldr	r3, [r3, #0]
 8002dd6:	f003 0302 	and.w	r3, r3, #2
 8002dda:	2b00      	cmp	r3, #0
 8002ddc:	d1f0      	bne.n	8002dc0 <HAL_RCC_OscConfig+0x1c0>
 8002dde:	687b      	ldr	r3, [r7, #4]
 8002de0:	681b      	ldr	r3, [r3, #0]
 8002de2:	f003 0308 	and.w	r3, r3, #8
 8002de6:	2b00      	cmp	r3, #0
 8002de8:	d036      	beq.n	8002e58 <HAL_RCC_OscConfig+0x258>
 8002dea:	687b      	ldr	r3, [r7, #4]
 8002dec:	695b      	ldr	r3, [r3, #20]
 8002dee:	2b00      	cmp	r3, #0
 8002df0:	d016      	beq.n	8002e20 <HAL_RCC_OscConfig+0x220>
 8002df2:	4b15      	ldr	r3, [pc, #84]	@ (8002e48 <HAL_RCC_OscConfig+0x248>)
 8002df4:	2201      	movs	r2, #1
 8002df6:	601a      	str	r2, [r3, #0]
 8002df8:	f7fe fa82 	bl	8001300 <HAL_GetTick>
 8002dfc:	6138      	str	r0, [r7, #16]
 8002dfe:	e008      	b.n	8002e12 <HAL_RCC_OscConfig+0x212>
 8002e00:	f7fe fa7e 	bl	8001300 <HAL_GetTick>
 8002e04:	4602      	mov	r2, r0
 8002e06:	693b      	ldr	r3, [r7, #16]
 8002e08:	1ad3      	subs	r3, r2, r3
 8002e0a:	2b02      	cmp	r3, #2
 8002e0c:	d901      	bls.n	8002e12 <HAL_RCC_OscConfig+0x212>
 8002e0e:	2303      	movs	r3, #3
 8002e10:	e167      	b.n	80030e2 <HAL_RCC_OscConfig+0x4e2>
 8002e12:	4b0b      	ldr	r3, [pc, #44]	@ (8002e40 <HAL_RCC_OscConfig+0x240>)
 8002e14:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002e16:	f003 0302 	and.w	r3, r3, #2
 8002e1a:	2b00      	cmp	r3, #0
 8002e1c:	d0f0      	beq.n	8002e00 <HAL_RCC_OscConfig+0x200>
 8002e1e:	e01b      	b.n	8002e58 <HAL_RCC_OscConfig+0x258>
 8002e20:	4b09      	ldr	r3, [pc, #36]	@ (8002e48 <HAL_RCC_OscConfig+0x248>)
 8002e22:	2200      	movs	r2, #0
 8002e24:	601a      	str	r2, [r3, #0]
 8002e26:	f7fe fa6b 	bl	8001300 <HAL_GetTick>
 8002e2a:	6138      	str	r0, [r7, #16]
 8002e2c:	e00e      	b.n	8002e4c <HAL_RCC_OscConfig+0x24c>
 8002e2e:	f7fe fa67 	bl	8001300 <HAL_GetTick>
 8002e32:	4602      	mov	r2, r0
 8002e34:	693b      	ldr	r3, [r7, #16]
 8002e36:	1ad3      	subs	r3, r2, r3
 8002e38:	2b02      	cmp	r3, #2
 8002e3a:	d907      	bls.n	8002e4c <HAL_RCC_OscConfig+0x24c>
 8002e3c:	2303      	movs	r3, #3
 8002e3e:	e150      	b.n	80030e2 <HAL_RCC_OscConfig+0x4e2>
 8002e40:	40023800 	.word	0x40023800
 8002e44:	42470000 	.word	0x42470000
 8002e48:	42470e80 	.word	0x42470e80
 8002e4c:	4b88      	ldr	r3, [pc, #544]	@ (8003070 <HAL_RCC_OscConfig+0x470>)
 8002e4e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8002e50:	f003 0302 	and.w	r3, r3, #2
 8002e54:	2b00      	cmp	r3, #0
 8002e56:	d1ea      	bne.n	8002e2e <HAL_RCC_OscConfig+0x22e>
 8002e58:	687b      	ldr	r3, [r7, #4]
 8002e5a:	681b      	ldr	r3, [r3, #0]
 8002e5c:	f003 0304 	and.w	r3, r3, #4
 8002e60:	2b00      	cmp	r3, #0
 8002e62:	f000 8097 	beq.w	8002f94 <HAL_RCC_OscConfig+0x394>
 8002e66:	2300      	movs	r3, #0
 8002e68:	75fb      	strb	r3, [r7, #23]
 8002e6a:	4b81      	ldr	r3, [pc, #516]	@ (8003070 <HAL_RCC_OscConfig+0x470>)
 8002e6c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e6e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002e72:	2b00      	cmp	r3, #0
 8002e74:	d10f      	bne.n	8002e96 <HAL_RCC_OscConfig+0x296>
 8002e76:	2300      	movs	r3, #0
 8002e78:	60bb      	str	r3, [r7, #8]
 8002e7a:	4b7d      	ldr	r3, [pc, #500]	@ (8003070 <HAL_RCC_OscConfig+0x470>)
 8002e7c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e7e:	4a7c      	ldr	r2, [pc, #496]	@ (8003070 <HAL_RCC_OscConfig+0x470>)
 8002e80:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002e84:	6413      	str	r3, [r2, #64]	@ 0x40
 8002e86:	4b7a      	ldr	r3, [pc, #488]	@ (8003070 <HAL_RCC_OscConfig+0x470>)
 8002e88:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e8a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002e8e:	60bb      	str	r3, [r7, #8]
 8002e90:	68bb      	ldr	r3, [r7, #8]
 8002e92:	2301      	movs	r3, #1
 8002e94:	75fb      	strb	r3, [r7, #23]
 8002e96:	4b77      	ldr	r3, [pc, #476]	@ (8003074 <HAL_RCC_OscConfig+0x474>)
 8002e98:	681b      	ldr	r3, [r3, #0]
 8002e9a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002e9e:	2b00      	cmp	r3, #0
 8002ea0:	d118      	bne.n	8002ed4 <HAL_RCC_OscConfig+0x2d4>
 8002ea2:	4b74      	ldr	r3, [pc, #464]	@ (8003074 <HAL_RCC_OscConfig+0x474>)
 8002ea4:	681b      	ldr	r3, [r3, #0]
 8002ea6:	4a73      	ldr	r2, [pc, #460]	@ (8003074 <HAL_RCC_OscConfig+0x474>)
 8002ea8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002eac:	6013      	str	r3, [r2, #0]
 8002eae:	f7fe fa27 	bl	8001300 <HAL_GetTick>
 8002eb2:	6138      	str	r0, [r7, #16]
 8002eb4:	e008      	b.n	8002ec8 <HAL_RCC_OscConfig+0x2c8>
 8002eb6:	f7fe fa23 	bl	8001300 <HAL_GetTick>
 8002eba:	4602      	mov	r2, r0
 8002ebc:	693b      	ldr	r3, [r7, #16]
 8002ebe:	1ad3      	subs	r3, r2, r3
 8002ec0:	2b02      	cmp	r3, #2
 8002ec2:	d901      	bls.n	8002ec8 <HAL_RCC_OscConfig+0x2c8>
 8002ec4:	2303      	movs	r3, #3
 8002ec6:	e10c      	b.n	80030e2 <HAL_RCC_OscConfig+0x4e2>
 8002ec8:	4b6a      	ldr	r3, [pc, #424]	@ (8003074 <HAL_RCC_OscConfig+0x474>)
 8002eca:	681b      	ldr	r3, [r3, #0]
 8002ecc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002ed0:	2b00      	cmp	r3, #0
 8002ed2:	d0f0      	beq.n	8002eb6 <HAL_RCC_OscConfig+0x2b6>
 8002ed4:	687b      	ldr	r3, [r7, #4]
 8002ed6:	689b      	ldr	r3, [r3, #8]
 8002ed8:	2b01      	cmp	r3, #1
 8002eda:	d106      	bne.n	8002eea <HAL_RCC_OscConfig+0x2ea>
 8002edc:	4b64      	ldr	r3, [pc, #400]	@ (8003070 <HAL_RCC_OscConfig+0x470>)
 8002ede:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002ee0:	4a63      	ldr	r2, [pc, #396]	@ (8003070 <HAL_RCC_OscConfig+0x470>)
 8002ee2:	f043 0301 	orr.w	r3, r3, #1
 8002ee6:	6713      	str	r3, [r2, #112]	@ 0x70
 8002ee8:	e01c      	b.n	8002f24 <HAL_RCC_OscConfig+0x324>
 8002eea:	687b      	ldr	r3, [r7, #4]
 8002eec:	689b      	ldr	r3, [r3, #8]
 8002eee:	2b05      	cmp	r3, #5
 8002ef0:	d10c      	bne.n	8002f0c <HAL_RCC_OscConfig+0x30c>
 8002ef2:	4b5f      	ldr	r3, [pc, #380]	@ (8003070 <HAL_RCC_OscConfig+0x470>)
 8002ef4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002ef6:	4a5e      	ldr	r2, [pc, #376]	@ (8003070 <HAL_RCC_OscConfig+0x470>)
 8002ef8:	f043 0304 	orr.w	r3, r3, #4
 8002efc:	6713      	str	r3, [r2, #112]	@ 0x70
 8002efe:	4b5c      	ldr	r3, [pc, #368]	@ (8003070 <HAL_RCC_OscConfig+0x470>)
 8002f00:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002f02:	4a5b      	ldr	r2, [pc, #364]	@ (8003070 <HAL_RCC_OscConfig+0x470>)
 8002f04:	f043 0301 	orr.w	r3, r3, #1
 8002f08:	6713      	str	r3, [r2, #112]	@ 0x70
 8002f0a:	e00b      	b.n	8002f24 <HAL_RCC_OscConfig+0x324>
 8002f0c:	4b58      	ldr	r3, [pc, #352]	@ (8003070 <HAL_RCC_OscConfig+0x470>)
 8002f0e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002f10:	4a57      	ldr	r2, [pc, #348]	@ (8003070 <HAL_RCC_OscConfig+0x470>)
 8002f12:	f023 0301 	bic.w	r3, r3, #1
 8002f16:	6713      	str	r3, [r2, #112]	@ 0x70
 8002f18:	4b55      	ldr	r3, [pc, #340]	@ (8003070 <HAL_RCC_OscConfig+0x470>)
 8002f1a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002f1c:	4a54      	ldr	r2, [pc, #336]	@ (8003070 <HAL_RCC_OscConfig+0x470>)
 8002f1e:	f023 0304 	bic.w	r3, r3, #4
 8002f22:	6713      	str	r3, [r2, #112]	@ 0x70
 8002f24:	687b      	ldr	r3, [r7, #4]
 8002f26:	689b      	ldr	r3, [r3, #8]
 8002f28:	2b00      	cmp	r3, #0
 8002f2a:	d015      	beq.n	8002f58 <HAL_RCC_OscConfig+0x358>
 8002f2c:	f7fe f9e8 	bl	8001300 <HAL_GetTick>
 8002f30:	6138      	str	r0, [r7, #16]
 8002f32:	e00a      	b.n	8002f4a <HAL_RCC_OscConfig+0x34a>
 8002f34:	f7fe f9e4 	bl	8001300 <HAL_GetTick>
 8002f38:	4602      	mov	r2, r0
 8002f3a:	693b      	ldr	r3, [r7, #16]
 8002f3c:	1ad3      	subs	r3, r2, r3
 8002f3e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002f42:	4293      	cmp	r3, r2
 8002f44:	d901      	bls.n	8002f4a <HAL_RCC_OscConfig+0x34a>
 8002f46:	2303      	movs	r3, #3
 8002f48:	e0cb      	b.n	80030e2 <HAL_RCC_OscConfig+0x4e2>
 8002f4a:	4b49      	ldr	r3, [pc, #292]	@ (8003070 <HAL_RCC_OscConfig+0x470>)
 8002f4c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002f4e:	f003 0302 	and.w	r3, r3, #2
 8002f52:	2b00      	cmp	r3, #0
 8002f54:	d0ee      	beq.n	8002f34 <HAL_RCC_OscConfig+0x334>
 8002f56:	e014      	b.n	8002f82 <HAL_RCC_OscConfig+0x382>
 8002f58:	f7fe f9d2 	bl	8001300 <HAL_GetTick>
 8002f5c:	6138      	str	r0, [r7, #16]
 8002f5e:	e00a      	b.n	8002f76 <HAL_RCC_OscConfig+0x376>
 8002f60:	f7fe f9ce 	bl	8001300 <HAL_GetTick>
 8002f64:	4602      	mov	r2, r0
 8002f66:	693b      	ldr	r3, [r7, #16]
 8002f68:	1ad3      	subs	r3, r2, r3
 8002f6a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002f6e:	4293      	cmp	r3, r2
 8002f70:	d901      	bls.n	8002f76 <HAL_RCC_OscConfig+0x376>
 8002f72:	2303      	movs	r3, #3
 8002f74:	e0b5      	b.n	80030e2 <HAL_RCC_OscConfig+0x4e2>
 8002f76:	4b3e      	ldr	r3, [pc, #248]	@ (8003070 <HAL_RCC_OscConfig+0x470>)
 8002f78:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8002f7a:	f003 0302 	and.w	r3, r3, #2
 8002f7e:	2b00      	cmp	r3, #0
 8002f80:	d1ee      	bne.n	8002f60 <HAL_RCC_OscConfig+0x360>
 8002f82:	7dfb      	ldrb	r3, [r7, #23]
 8002f84:	2b01      	cmp	r3, #1
 8002f86:	d105      	bne.n	8002f94 <HAL_RCC_OscConfig+0x394>
 8002f88:	4b39      	ldr	r3, [pc, #228]	@ (8003070 <HAL_RCC_OscConfig+0x470>)
 8002f8a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f8c:	4a38      	ldr	r2, [pc, #224]	@ (8003070 <HAL_RCC_OscConfig+0x470>)
 8002f8e:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002f92:	6413      	str	r3, [r2, #64]	@ 0x40
 8002f94:	687b      	ldr	r3, [r7, #4]
 8002f96:	699b      	ldr	r3, [r3, #24]
 8002f98:	2b00      	cmp	r3, #0
 8002f9a:	f000 80a1 	beq.w	80030e0 <HAL_RCC_OscConfig+0x4e0>
 8002f9e:	4b34      	ldr	r3, [pc, #208]	@ (8003070 <HAL_RCC_OscConfig+0x470>)
 8002fa0:	689b      	ldr	r3, [r3, #8]
 8002fa2:	f003 030c 	and.w	r3, r3, #12
 8002fa6:	2b08      	cmp	r3, #8
 8002fa8:	d05c      	beq.n	8003064 <HAL_RCC_OscConfig+0x464>
 8002faa:	687b      	ldr	r3, [r7, #4]
 8002fac:	699b      	ldr	r3, [r3, #24]
 8002fae:	2b02      	cmp	r3, #2
 8002fb0:	d141      	bne.n	8003036 <HAL_RCC_OscConfig+0x436>
 8002fb2:	4b31      	ldr	r3, [pc, #196]	@ (8003078 <HAL_RCC_OscConfig+0x478>)
 8002fb4:	2200      	movs	r2, #0
 8002fb6:	601a      	str	r2, [r3, #0]
 8002fb8:	f7fe f9a2 	bl	8001300 <HAL_GetTick>
 8002fbc:	6138      	str	r0, [r7, #16]
 8002fbe:	e008      	b.n	8002fd2 <HAL_RCC_OscConfig+0x3d2>
 8002fc0:	f7fe f99e 	bl	8001300 <HAL_GetTick>
 8002fc4:	4602      	mov	r2, r0
 8002fc6:	693b      	ldr	r3, [r7, #16]
 8002fc8:	1ad3      	subs	r3, r2, r3
 8002fca:	2b02      	cmp	r3, #2
 8002fcc:	d901      	bls.n	8002fd2 <HAL_RCC_OscConfig+0x3d2>
 8002fce:	2303      	movs	r3, #3
 8002fd0:	e087      	b.n	80030e2 <HAL_RCC_OscConfig+0x4e2>
 8002fd2:	4b27      	ldr	r3, [pc, #156]	@ (8003070 <HAL_RCC_OscConfig+0x470>)
 8002fd4:	681b      	ldr	r3, [r3, #0]
 8002fd6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002fda:	2b00      	cmp	r3, #0
 8002fdc:	d1f0      	bne.n	8002fc0 <HAL_RCC_OscConfig+0x3c0>
 8002fde:	687b      	ldr	r3, [r7, #4]
 8002fe0:	69da      	ldr	r2, [r3, #28]
 8002fe2:	687b      	ldr	r3, [r7, #4]
 8002fe4:	6a1b      	ldr	r3, [r3, #32]
 8002fe6:	431a      	orrs	r2, r3
 8002fe8:	687b      	ldr	r3, [r7, #4]
 8002fea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002fec:	019b      	lsls	r3, r3, #6
 8002fee:	431a      	orrs	r2, r3
 8002ff0:	687b      	ldr	r3, [r7, #4]
 8002ff2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002ff4:	085b      	lsrs	r3, r3, #1
 8002ff6:	3b01      	subs	r3, #1
 8002ff8:	041b      	lsls	r3, r3, #16
 8002ffa:	431a      	orrs	r2, r3
 8002ffc:	687b      	ldr	r3, [r7, #4]
 8002ffe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003000:	061b      	lsls	r3, r3, #24
 8003002:	491b      	ldr	r1, [pc, #108]	@ (8003070 <HAL_RCC_OscConfig+0x470>)
 8003004:	4313      	orrs	r3, r2
 8003006:	604b      	str	r3, [r1, #4]
 8003008:	4b1b      	ldr	r3, [pc, #108]	@ (8003078 <HAL_RCC_OscConfig+0x478>)
 800300a:	2201      	movs	r2, #1
 800300c:	601a      	str	r2, [r3, #0]
 800300e:	f7fe f977 	bl	8001300 <HAL_GetTick>
 8003012:	6138      	str	r0, [r7, #16]
 8003014:	e008      	b.n	8003028 <HAL_RCC_OscConfig+0x428>
 8003016:	f7fe f973 	bl	8001300 <HAL_GetTick>
 800301a:	4602      	mov	r2, r0
 800301c:	693b      	ldr	r3, [r7, #16]
 800301e:	1ad3      	subs	r3, r2, r3
 8003020:	2b02      	cmp	r3, #2
 8003022:	d901      	bls.n	8003028 <HAL_RCC_OscConfig+0x428>
 8003024:	2303      	movs	r3, #3
 8003026:	e05c      	b.n	80030e2 <HAL_RCC_OscConfig+0x4e2>
 8003028:	4b11      	ldr	r3, [pc, #68]	@ (8003070 <HAL_RCC_OscConfig+0x470>)
 800302a:	681b      	ldr	r3, [r3, #0]
 800302c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003030:	2b00      	cmp	r3, #0
 8003032:	d0f0      	beq.n	8003016 <HAL_RCC_OscConfig+0x416>
 8003034:	e054      	b.n	80030e0 <HAL_RCC_OscConfig+0x4e0>
 8003036:	4b10      	ldr	r3, [pc, #64]	@ (8003078 <HAL_RCC_OscConfig+0x478>)
 8003038:	2200      	movs	r2, #0
 800303a:	601a      	str	r2, [r3, #0]
 800303c:	f7fe f960 	bl	8001300 <HAL_GetTick>
 8003040:	6138      	str	r0, [r7, #16]
 8003042:	e008      	b.n	8003056 <HAL_RCC_OscConfig+0x456>
 8003044:	f7fe f95c 	bl	8001300 <HAL_GetTick>
 8003048:	4602      	mov	r2, r0
 800304a:	693b      	ldr	r3, [r7, #16]
 800304c:	1ad3      	subs	r3, r2, r3
 800304e:	2b02      	cmp	r3, #2
 8003050:	d901      	bls.n	8003056 <HAL_RCC_OscConfig+0x456>
 8003052:	2303      	movs	r3, #3
 8003054:	e045      	b.n	80030e2 <HAL_RCC_OscConfig+0x4e2>
 8003056:	4b06      	ldr	r3, [pc, #24]	@ (8003070 <HAL_RCC_OscConfig+0x470>)
 8003058:	681b      	ldr	r3, [r3, #0]
 800305a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800305e:	2b00      	cmp	r3, #0
 8003060:	d1f0      	bne.n	8003044 <HAL_RCC_OscConfig+0x444>
 8003062:	e03d      	b.n	80030e0 <HAL_RCC_OscConfig+0x4e0>
 8003064:	687b      	ldr	r3, [r7, #4]
 8003066:	699b      	ldr	r3, [r3, #24]
 8003068:	2b01      	cmp	r3, #1
 800306a:	d107      	bne.n	800307c <HAL_RCC_OscConfig+0x47c>
 800306c:	2301      	movs	r3, #1
 800306e:	e038      	b.n	80030e2 <HAL_RCC_OscConfig+0x4e2>
 8003070:	40023800 	.word	0x40023800
 8003074:	40007000 	.word	0x40007000
 8003078:	42470060 	.word	0x42470060
 800307c:	4b1b      	ldr	r3, [pc, #108]	@ (80030ec <HAL_RCC_OscConfig+0x4ec>)
 800307e:	685b      	ldr	r3, [r3, #4]
 8003080:	60fb      	str	r3, [r7, #12]
 8003082:	687b      	ldr	r3, [r7, #4]
 8003084:	699b      	ldr	r3, [r3, #24]
 8003086:	2b01      	cmp	r3, #1
 8003088:	d028      	beq.n	80030dc <HAL_RCC_OscConfig+0x4dc>
 800308a:	68fb      	ldr	r3, [r7, #12]
 800308c:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8003090:	687b      	ldr	r3, [r7, #4]
 8003092:	69db      	ldr	r3, [r3, #28]
 8003094:	429a      	cmp	r2, r3
 8003096:	d121      	bne.n	80030dc <HAL_RCC_OscConfig+0x4dc>
 8003098:	68fb      	ldr	r3, [r7, #12]
 800309a:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 800309e:	687b      	ldr	r3, [r7, #4]
 80030a0:	6a1b      	ldr	r3, [r3, #32]
 80030a2:	429a      	cmp	r2, r3
 80030a4:	d11a      	bne.n	80030dc <HAL_RCC_OscConfig+0x4dc>
 80030a6:	68fa      	ldr	r2, [r7, #12]
 80030a8:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 80030ac:	4013      	ands	r3, r2
 80030ae:	687a      	ldr	r2, [r7, #4]
 80030b0:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80030b2:	0192      	lsls	r2, r2, #6
 80030b4:	4293      	cmp	r3, r2
 80030b6:	d111      	bne.n	80030dc <HAL_RCC_OscConfig+0x4dc>
 80030b8:	68fb      	ldr	r3, [r7, #12]
 80030ba:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 80030be:	687b      	ldr	r3, [r7, #4]
 80030c0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80030c2:	085b      	lsrs	r3, r3, #1
 80030c4:	3b01      	subs	r3, #1
 80030c6:	041b      	lsls	r3, r3, #16
 80030c8:	429a      	cmp	r2, r3
 80030ca:	d107      	bne.n	80030dc <HAL_RCC_OscConfig+0x4dc>
 80030cc:	68fb      	ldr	r3, [r7, #12]
 80030ce:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 80030d2:	687b      	ldr	r3, [r7, #4]
 80030d4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80030d6:	061b      	lsls	r3, r3, #24
 80030d8:	429a      	cmp	r2, r3
 80030da:	d001      	beq.n	80030e0 <HAL_RCC_OscConfig+0x4e0>
 80030dc:	2301      	movs	r3, #1
 80030de:	e000      	b.n	80030e2 <HAL_RCC_OscConfig+0x4e2>
 80030e0:	2300      	movs	r3, #0
 80030e2:	4618      	mov	r0, r3
 80030e4:	3718      	adds	r7, #24
 80030e6:	46bd      	mov	sp, r7
 80030e8:	bd80      	pop	{r7, pc}
 80030ea:	bf00      	nop
 80030ec:	40023800 	.word	0x40023800

080030f0 <HAL_RCC_ClockConfig>:
 80030f0:	b580      	push	{r7, lr}
 80030f2:	b084      	sub	sp, #16
 80030f4:	af00      	add	r7, sp, #0
 80030f6:	6078      	str	r0, [r7, #4]
 80030f8:	6039      	str	r1, [r7, #0]
 80030fa:	687b      	ldr	r3, [r7, #4]
 80030fc:	2b00      	cmp	r3, #0
 80030fe:	d101      	bne.n	8003104 <HAL_RCC_ClockConfig+0x14>
 8003100:	2301      	movs	r3, #1
 8003102:	e0cc      	b.n	800329e <HAL_RCC_ClockConfig+0x1ae>
 8003104:	4b68      	ldr	r3, [pc, #416]	@ (80032a8 <HAL_RCC_ClockConfig+0x1b8>)
 8003106:	681b      	ldr	r3, [r3, #0]
 8003108:	f003 0307 	and.w	r3, r3, #7
 800310c:	683a      	ldr	r2, [r7, #0]
 800310e:	429a      	cmp	r2, r3
 8003110:	d90c      	bls.n	800312c <HAL_RCC_ClockConfig+0x3c>
 8003112:	4b65      	ldr	r3, [pc, #404]	@ (80032a8 <HAL_RCC_ClockConfig+0x1b8>)
 8003114:	683a      	ldr	r2, [r7, #0]
 8003116:	b2d2      	uxtb	r2, r2
 8003118:	701a      	strb	r2, [r3, #0]
 800311a:	4b63      	ldr	r3, [pc, #396]	@ (80032a8 <HAL_RCC_ClockConfig+0x1b8>)
 800311c:	681b      	ldr	r3, [r3, #0]
 800311e:	f003 0307 	and.w	r3, r3, #7
 8003122:	683a      	ldr	r2, [r7, #0]
 8003124:	429a      	cmp	r2, r3
 8003126:	d001      	beq.n	800312c <HAL_RCC_ClockConfig+0x3c>
 8003128:	2301      	movs	r3, #1
 800312a:	e0b8      	b.n	800329e <HAL_RCC_ClockConfig+0x1ae>
 800312c:	687b      	ldr	r3, [r7, #4]
 800312e:	681b      	ldr	r3, [r3, #0]
 8003130:	f003 0302 	and.w	r3, r3, #2
 8003134:	2b00      	cmp	r3, #0
 8003136:	d020      	beq.n	800317a <HAL_RCC_ClockConfig+0x8a>
 8003138:	687b      	ldr	r3, [r7, #4]
 800313a:	681b      	ldr	r3, [r3, #0]
 800313c:	f003 0304 	and.w	r3, r3, #4
 8003140:	2b00      	cmp	r3, #0
 8003142:	d005      	beq.n	8003150 <HAL_RCC_ClockConfig+0x60>
 8003144:	4b59      	ldr	r3, [pc, #356]	@ (80032ac <HAL_RCC_ClockConfig+0x1bc>)
 8003146:	689b      	ldr	r3, [r3, #8]
 8003148:	4a58      	ldr	r2, [pc, #352]	@ (80032ac <HAL_RCC_ClockConfig+0x1bc>)
 800314a:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 800314e:	6093      	str	r3, [r2, #8]
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	681b      	ldr	r3, [r3, #0]
 8003154:	f003 0308 	and.w	r3, r3, #8
 8003158:	2b00      	cmp	r3, #0
 800315a:	d005      	beq.n	8003168 <HAL_RCC_ClockConfig+0x78>
 800315c:	4b53      	ldr	r3, [pc, #332]	@ (80032ac <HAL_RCC_ClockConfig+0x1bc>)
 800315e:	689b      	ldr	r3, [r3, #8]
 8003160:	4a52      	ldr	r2, [pc, #328]	@ (80032ac <HAL_RCC_ClockConfig+0x1bc>)
 8003162:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8003166:	6093      	str	r3, [r2, #8]
 8003168:	4b50      	ldr	r3, [pc, #320]	@ (80032ac <HAL_RCC_ClockConfig+0x1bc>)
 800316a:	689b      	ldr	r3, [r3, #8]
 800316c:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8003170:	687b      	ldr	r3, [r7, #4]
 8003172:	689b      	ldr	r3, [r3, #8]
 8003174:	494d      	ldr	r1, [pc, #308]	@ (80032ac <HAL_RCC_ClockConfig+0x1bc>)
 8003176:	4313      	orrs	r3, r2
 8003178:	608b      	str	r3, [r1, #8]
 800317a:	687b      	ldr	r3, [r7, #4]
 800317c:	681b      	ldr	r3, [r3, #0]
 800317e:	f003 0301 	and.w	r3, r3, #1
 8003182:	2b00      	cmp	r3, #0
 8003184:	d044      	beq.n	8003210 <HAL_RCC_ClockConfig+0x120>
 8003186:	687b      	ldr	r3, [r7, #4]
 8003188:	685b      	ldr	r3, [r3, #4]
 800318a:	2b01      	cmp	r3, #1
 800318c:	d107      	bne.n	800319e <HAL_RCC_ClockConfig+0xae>
 800318e:	4b47      	ldr	r3, [pc, #284]	@ (80032ac <HAL_RCC_ClockConfig+0x1bc>)
 8003190:	681b      	ldr	r3, [r3, #0]
 8003192:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003196:	2b00      	cmp	r3, #0
 8003198:	d119      	bne.n	80031ce <HAL_RCC_ClockConfig+0xde>
 800319a:	2301      	movs	r3, #1
 800319c:	e07f      	b.n	800329e <HAL_RCC_ClockConfig+0x1ae>
 800319e:	687b      	ldr	r3, [r7, #4]
 80031a0:	685b      	ldr	r3, [r3, #4]
 80031a2:	2b02      	cmp	r3, #2
 80031a4:	d003      	beq.n	80031ae <HAL_RCC_ClockConfig+0xbe>
 80031a6:	687b      	ldr	r3, [r7, #4]
 80031a8:	685b      	ldr	r3, [r3, #4]
 80031aa:	2b03      	cmp	r3, #3
 80031ac:	d107      	bne.n	80031be <HAL_RCC_ClockConfig+0xce>
 80031ae:	4b3f      	ldr	r3, [pc, #252]	@ (80032ac <HAL_RCC_ClockConfig+0x1bc>)
 80031b0:	681b      	ldr	r3, [r3, #0]
 80031b2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80031b6:	2b00      	cmp	r3, #0
 80031b8:	d109      	bne.n	80031ce <HAL_RCC_ClockConfig+0xde>
 80031ba:	2301      	movs	r3, #1
 80031bc:	e06f      	b.n	800329e <HAL_RCC_ClockConfig+0x1ae>
 80031be:	4b3b      	ldr	r3, [pc, #236]	@ (80032ac <HAL_RCC_ClockConfig+0x1bc>)
 80031c0:	681b      	ldr	r3, [r3, #0]
 80031c2:	f003 0302 	and.w	r3, r3, #2
 80031c6:	2b00      	cmp	r3, #0
 80031c8:	d101      	bne.n	80031ce <HAL_RCC_ClockConfig+0xde>
 80031ca:	2301      	movs	r3, #1
 80031cc:	e067      	b.n	800329e <HAL_RCC_ClockConfig+0x1ae>
 80031ce:	4b37      	ldr	r3, [pc, #220]	@ (80032ac <HAL_RCC_ClockConfig+0x1bc>)
 80031d0:	689b      	ldr	r3, [r3, #8]
 80031d2:	f023 0203 	bic.w	r2, r3, #3
 80031d6:	687b      	ldr	r3, [r7, #4]
 80031d8:	685b      	ldr	r3, [r3, #4]
 80031da:	4934      	ldr	r1, [pc, #208]	@ (80032ac <HAL_RCC_ClockConfig+0x1bc>)
 80031dc:	4313      	orrs	r3, r2
 80031de:	608b      	str	r3, [r1, #8]
 80031e0:	f7fe f88e 	bl	8001300 <HAL_GetTick>
 80031e4:	60f8      	str	r0, [r7, #12]
 80031e6:	e00a      	b.n	80031fe <HAL_RCC_ClockConfig+0x10e>
 80031e8:	f7fe f88a 	bl	8001300 <HAL_GetTick>
 80031ec:	4602      	mov	r2, r0
 80031ee:	68fb      	ldr	r3, [r7, #12]
 80031f0:	1ad3      	subs	r3, r2, r3
 80031f2:	f241 3288 	movw	r2, #5000	@ 0x1388
 80031f6:	4293      	cmp	r3, r2
 80031f8:	d901      	bls.n	80031fe <HAL_RCC_ClockConfig+0x10e>
 80031fa:	2303      	movs	r3, #3
 80031fc:	e04f      	b.n	800329e <HAL_RCC_ClockConfig+0x1ae>
 80031fe:	4b2b      	ldr	r3, [pc, #172]	@ (80032ac <HAL_RCC_ClockConfig+0x1bc>)
 8003200:	689b      	ldr	r3, [r3, #8]
 8003202:	f003 020c 	and.w	r2, r3, #12
 8003206:	687b      	ldr	r3, [r7, #4]
 8003208:	685b      	ldr	r3, [r3, #4]
 800320a:	009b      	lsls	r3, r3, #2
 800320c:	429a      	cmp	r2, r3
 800320e:	d1eb      	bne.n	80031e8 <HAL_RCC_ClockConfig+0xf8>
 8003210:	4b25      	ldr	r3, [pc, #148]	@ (80032a8 <HAL_RCC_ClockConfig+0x1b8>)
 8003212:	681b      	ldr	r3, [r3, #0]
 8003214:	f003 0307 	and.w	r3, r3, #7
 8003218:	683a      	ldr	r2, [r7, #0]
 800321a:	429a      	cmp	r2, r3
 800321c:	d20c      	bcs.n	8003238 <HAL_RCC_ClockConfig+0x148>
 800321e:	4b22      	ldr	r3, [pc, #136]	@ (80032a8 <HAL_RCC_ClockConfig+0x1b8>)
 8003220:	683a      	ldr	r2, [r7, #0]
 8003222:	b2d2      	uxtb	r2, r2
 8003224:	701a      	strb	r2, [r3, #0]
 8003226:	4b20      	ldr	r3, [pc, #128]	@ (80032a8 <HAL_RCC_ClockConfig+0x1b8>)
 8003228:	681b      	ldr	r3, [r3, #0]
 800322a:	f003 0307 	and.w	r3, r3, #7
 800322e:	683a      	ldr	r2, [r7, #0]
 8003230:	429a      	cmp	r2, r3
 8003232:	d001      	beq.n	8003238 <HAL_RCC_ClockConfig+0x148>
 8003234:	2301      	movs	r3, #1
 8003236:	e032      	b.n	800329e <HAL_RCC_ClockConfig+0x1ae>
 8003238:	687b      	ldr	r3, [r7, #4]
 800323a:	681b      	ldr	r3, [r3, #0]
 800323c:	f003 0304 	and.w	r3, r3, #4
 8003240:	2b00      	cmp	r3, #0
 8003242:	d008      	beq.n	8003256 <HAL_RCC_ClockConfig+0x166>
 8003244:	4b19      	ldr	r3, [pc, #100]	@ (80032ac <HAL_RCC_ClockConfig+0x1bc>)
 8003246:	689b      	ldr	r3, [r3, #8]
 8003248:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 800324c:	687b      	ldr	r3, [r7, #4]
 800324e:	68db      	ldr	r3, [r3, #12]
 8003250:	4916      	ldr	r1, [pc, #88]	@ (80032ac <HAL_RCC_ClockConfig+0x1bc>)
 8003252:	4313      	orrs	r3, r2
 8003254:	608b      	str	r3, [r1, #8]
 8003256:	687b      	ldr	r3, [r7, #4]
 8003258:	681b      	ldr	r3, [r3, #0]
 800325a:	f003 0308 	and.w	r3, r3, #8
 800325e:	2b00      	cmp	r3, #0
 8003260:	d009      	beq.n	8003276 <HAL_RCC_ClockConfig+0x186>
 8003262:	4b12      	ldr	r3, [pc, #72]	@ (80032ac <HAL_RCC_ClockConfig+0x1bc>)
 8003264:	689b      	ldr	r3, [r3, #8]
 8003266:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 800326a:	687b      	ldr	r3, [r7, #4]
 800326c:	691b      	ldr	r3, [r3, #16]
 800326e:	00db      	lsls	r3, r3, #3
 8003270:	490e      	ldr	r1, [pc, #56]	@ (80032ac <HAL_RCC_ClockConfig+0x1bc>)
 8003272:	4313      	orrs	r3, r2
 8003274:	608b      	str	r3, [r1, #8]
 8003276:	f000 f821 	bl	80032bc <HAL_RCC_GetSysClockFreq>
 800327a:	4602      	mov	r2, r0
 800327c:	4b0b      	ldr	r3, [pc, #44]	@ (80032ac <HAL_RCC_ClockConfig+0x1bc>)
 800327e:	689b      	ldr	r3, [r3, #8]
 8003280:	091b      	lsrs	r3, r3, #4
 8003282:	f003 030f 	and.w	r3, r3, #15
 8003286:	490a      	ldr	r1, [pc, #40]	@ (80032b0 <HAL_RCC_ClockConfig+0x1c0>)
 8003288:	5ccb      	ldrb	r3, [r1, r3]
 800328a:	fa22 f303 	lsr.w	r3, r2, r3
 800328e:	4a09      	ldr	r2, [pc, #36]	@ (80032b4 <HAL_RCC_ClockConfig+0x1c4>)
 8003290:	6013      	str	r3, [r2, #0]
 8003292:	4b09      	ldr	r3, [pc, #36]	@ (80032b8 <HAL_RCC_ClockConfig+0x1c8>)
 8003294:	681b      	ldr	r3, [r3, #0]
 8003296:	4618      	mov	r0, r3
 8003298:	f7fd ffee 	bl	8001278 <HAL_InitTick>
 800329c:	2300      	movs	r3, #0
 800329e:	4618      	mov	r0, r3
 80032a0:	3710      	adds	r7, #16
 80032a2:	46bd      	mov	sp, r7
 80032a4:	bd80      	pop	{r7, pc}
 80032a6:	bf00      	nop
 80032a8:	40023c00 	.word	0x40023c00
 80032ac:	40023800 	.word	0x40023800
 80032b0:	08004ef8 	.word	0x08004ef8
 80032b4:	20000004 	.word	0x20000004
 80032b8:	20000008 	.word	0x20000008

080032bc <HAL_RCC_GetSysClockFreq>:
 80032bc:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80032c0:	b090      	sub	sp, #64	@ 0x40
 80032c2:	af00      	add	r7, sp, #0
 80032c4:	2300      	movs	r3, #0
 80032c6:	637b      	str	r3, [r7, #52]	@ 0x34
 80032c8:	2300      	movs	r3, #0
 80032ca:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80032cc:	2300      	movs	r3, #0
 80032ce:	633b      	str	r3, [r7, #48]	@ 0x30
 80032d0:	2300      	movs	r3, #0
 80032d2:	63bb      	str	r3, [r7, #56]	@ 0x38
 80032d4:	4b59      	ldr	r3, [pc, #356]	@ (800343c <HAL_RCC_GetSysClockFreq+0x180>)
 80032d6:	689b      	ldr	r3, [r3, #8]
 80032d8:	f003 030c 	and.w	r3, r3, #12
 80032dc:	2b08      	cmp	r3, #8
 80032de:	d00d      	beq.n	80032fc <HAL_RCC_GetSysClockFreq+0x40>
 80032e0:	2b08      	cmp	r3, #8
 80032e2:	f200 80a1 	bhi.w	8003428 <HAL_RCC_GetSysClockFreq+0x16c>
 80032e6:	2b00      	cmp	r3, #0
 80032e8:	d002      	beq.n	80032f0 <HAL_RCC_GetSysClockFreq+0x34>
 80032ea:	2b04      	cmp	r3, #4
 80032ec:	d003      	beq.n	80032f6 <HAL_RCC_GetSysClockFreq+0x3a>
 80032ee:	e09b      	b.n	8003428 <HAL_RCC_GetSysClockFreq+0x16c>
 80032f0:	4b53      	ldr	r3, [pc, #332]	@ (8003440 <HAL_RCC_GetSysClockFreq+0x184>)
 80032f2:	63bb      	str	r3, [r7, #56]	@ 0x38
 80032f4:	e09b      	b.n	800342e <HAL_RCC_GetSysClockFreq+0x172>
 80032f6:	4b53      	ldr	r3, [pc, #332]	@ (8003444 <HAL_RCC_GetSysClockFreq+0x188>)
 80032f8:	63bb      	str	r3, [r7, #56]	@ 0x38
 80032fa:	e098      	b.n	800342e <HAL_RCC_GetSysClockFreq+0x172>
 80032fc:	4b4f      	ldr	r3, [pc, #316]	@ (800343c <HAL_RCC_GetSysClockFreq+0x180>)
 80032fe:	685b      	ldr	r3, [r3, #4]
 8003300:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8003304:	637b      	str	r3, [r7, #52]	@ 0x34
 8003306:	4b4d      	ldr	r3, [pc, #308]	@ (800343c <HAL_RCC_GetSysClockFreq+0x180>)
 8003308:	685b      	ldr	r3, [r3, #4]
 800330a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800330e:	2b00      	cmp	r3, #0
 8003310:	d028      	beq.n	8003364 <HAL_RCC_GetSysClockFreq+0xa8>
 8003312:	4b4a      	ldr	r3, [pc, #296]	@ (800343c <HAL_RCC_GetSysClockFreq+0x180>)
 8003314:	685b      	ldr	r3, [r3, #4]
 8003316:	099b      	lsrs	r3, r3, #6
 8003318:	2200      	movs	r2, #0
 800331a:	623b      	str	r3, [r7, #32]
 800331c:	627a      	str	r2, [r7, #36]	@ 0x24
 800331e:	6a3b      	ldr	r3, [r7, #32]
 8003320:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8003324:	2100      	movs	r1, #0
 8003326:	4b47      	ldr	r3, [pc, #284]	@ (8003444 <HAL_RCC_GetSysClockFreq+0x188>)
 8003328:	fb03 f201 	mul.w	r2, r3, r1
 800332c:	2300      	movs	r3, #0
 800332e:	fb00 f303 	mul.w	r3, r0, r3
 8003332:	4413      	add	r3, r2
 8003334:	4a43      	ldr	r2, [pc, #268]	@ (8003444 <HAL_RCC_GetSysClockFreq+0x188>)
 8003336:	fba0 1202 	umull	r1, r2, r0, r2
 800333a:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800333c:	460a      	mov	r2, r1
 800333e:	62ba      	str	r2, [r7, #40]	@ 0x28
 8003340:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8003342:	4413      	add	r3, r2
 8003344:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003346:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003348:	2200      	movs	r2, #0
 800334a:	61bb      	str	r3, [r7, #24]
 800334c:	61fa      	str	r2, [r7, #28]
 800334e:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8003352:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 8003356:	f7fc ff93 	bl	8000280 <__aeabi_uldivmod>
 800335a:	4602      	mov	r2, r0
 800335c:	460b      	mov	r3, r1
 800335e:	4613      	mov	r3, r2
 8003360:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003362:	e053      	b.n	800340c <HAL_RCC_GetSysClockFreq+0x150>
 8003364:	4b35      	ldr	r3, [pc, #212]	@ (800343c <HAL_RCC_GetSysClockFreq+0x180>)
 8003366:	685b      	ldr	r3, [r3, #4]
 8003368:	099b      	lsrs	r3, r3, #6
 800336a:	2200      	movs	r2, #0
 800336c:	613b      	str	r3, [r7, #16]
 800336e:	617a      	str	r2, [r7, #20]
 8003370:	693b      	ldr	r3, [r7, #16]
 8003372:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8003376:	f04f 0b00 	mov.w	fp, #0
 800337a:	4652      	mov	r2, sl
 800337c:	465b      	mov	r3, fp
 800337e:	f04f 0000 	mov.w	r0, #0
 8003382:	f04f 0100 	mov.w	r1, #0
 8003386:	0159      	lsls	r1, r3, #5
 8003388:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800338c:	0150      	lsls	r0, r2, #5
 800338e:	4602      	mov	r2, r0
 8003390:	460b      	mov	r3, r1
 8003392:	ebb2 080a 	subs.w	r8, r2, sl
 8003396:	eb63 090b 	sbc.w	r9, r3, fp
 800339a:	f04f 0200 	mov.w	r2, #0
 800339e:	f04f 0300 	mov.w	r3, #0
 80033a2:	ea4f 1389 	mov.w	r3, r9, lsl #6
 80033a6:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 80033aa:	ea4f 1288 	mov.w	r2, r8, lsl #6
 80033ae:	ebb2 0408 	subs.w	r4, r2, r8
 80033b2:	eb63 0509 	sbc.w	r5, r3, r9
 80033b6:	f04f 0200 	mov.w	r2, #0
 80033ba:	f04f 0300 	mov.w	r3, #0
 80033be:	00eb      	lsls	r3, r5, #3
 80033c0:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80033c4:	00e2      	lsls	r2, r4, #3
 80033c6:	4614      	mov	r4, r2
 80033c8:	461d      	mov	r5, r3
 80033ca:	eb14 030a 	adds.w	r3, r4, sl
 80033ce:	603b      	str	r3, [r7, #0]
 80033d0:	eb45 030b 	adc.w	r3, r5, fp
 80033d4:	607b      	str	r3, [r7, #4]
 80033d6:	f04f 0200 	mov.w	r2, #0
 80033da:	f04f 0300 	mov.w	r3, #0
 80033de:	e9d7 4500 	ldrd	r4, r5, [r7]
 80033e2:	4629      	mov	r1, r5
 80033e4:	028b      	lsls	r3, r1, #10
 80033e6:	4621      	mov	r1, r4
 80033e8:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80033ec:	4621      	mov	r1, r4
 80033ee:	028a      	lsls	r2, r1, #10
 80033f0:	4610      	mov	r0, r2
 80033f2:	4619      	mov	r1, r3
 80033f4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80033f6:	2200      	movs	r2, #0
 80033f8:	60bb      	str	r3, [r7, #8]
 80033fa:	60fa      	str	r2, [r7, #12]
 80033fc:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8003400:	f7fc ff3e 	bl	8000280 <__aeabi_uldivmod>
 8003404:	4602      	mov	r2, r0
 8003406:	460b      	mov	r3, r1
 8003408:	4613      	mov	r3, r2
 800340a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800340c:	4b0b      	ldr	r3, [pc, #44]	@ (800343c <HAL_RCC_GetSysClockFreq+0x180>)
 800340e:	685b      	ldr	r3, [r3, #4]
 8003410:	0c1b      	lsrs	r3, r3, #16
 8003412:	f003 0303 	and.w	r3, r3, #3
 8003416:	3301      	adds	r3, #1
 8003418:	005b      	lsls	r3, r3, #1
 800341a:	633b      	str	r3, [r7, #48]	@ 0x30
 800341c:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 800341e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003420:	fbb2 f3f3 	udiv	r3, r2, r3
 8003424:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003426:	e002      	b.n	800342e <HAL_RCC_GetSysClockFreq+0x172>
 8003428:	4b05      	ldr	r3, [pc, #20]	@ (8003440 <HAL_RCC_GetSysClockFreq+0x184>)
 800342a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800342c:	bf00      	nop
 800342e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003430:	4618      	mov	r0, r3
 8003432:	3740      	adds	r7, #64	@ 0x40
 8003434:	46bd      	mov	sp, r7
 8003436:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800343a:	bf00      	nop
 800343c:	40023800 	.word	0x40023800
 8003440:	00f42400 	.word	0x00f42400
 8003444:	017d7840 	.word	0x017d7840

08003448 <HAL_RCC_GetHCLKFreq>:
 8003448:	b480      	push	{r7}
 800344a:	af00      	add	r7, sp, #0
 800344c:	4b03      	ldr	r3, [pc, #12]	@ (800345c <HAL_RCC_GetHCLKFreq+0x14>)
 800344e:	681b      	ldr	r3, [r3, #0]
 8003450:	4618      	mov	r0, r3
 8003452:	46bd      	mov	sp, r7
 8003454:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003458:	4770      	bx	lr
 800345a:	bf00      	nop
 800345c:	20000004 	.word	0x20000004

08003460 <HAL_RCC_GetPCLK1Freq>:
 8003460:	b580      	push	{r7, lr}
 8003462:	af00      	add	r7, sp, #0
 8003464:	f7ff fff0 	bl	8003448 <HAL_RCC_GetHCLKFreq>
 8003468:	4602      	mov	r2, r0
 800346a:	4b05      	ldr	r3, [pc, #20]	@ (8003480 <HAL_RCC_GetPCLK1Freq+0x20>)
 800346c:	689b      	ldr	r3, [r3, #8]
 800346e:	0a9b      	lsrs	r3, r3, #10
 8003470:	f003 0307 	and.w	r3, r3, #7
 8003474:	4903      	ldr	r1, [pc, #12]	@ (8003484 <HAL_RCC_GetPCLK1Freq+0x24>)
 8003476:	5ccb      	ldrb	r3, [r1, r3]
 8003478:	fa22 f303 	lsr.w	r3, r2, r3
 800347c:	4618      	mov	r0, r3
 800347e:	bd80      	pop	{r7, pc}
 8003480:	40023800 	.word	0x40023800
 8003484:	08004f08 	.word	0x08004f08

08003488 <HAL_RCC_GetPCLK2Freq>:
 8003488:	b580      	push	{r7, lr}
 800348a:	af00      	add	r7, sp, #0
 800348c:	f7ff ffdc 	bl	8003448 <HAL_RCC_GetHCLKFreq>
 8003490:	4602      	mov	r2, r0
 8003492:	4b05      	ldr	r3, [pc, #20]	@ (80034a8 <HAL_RCC_GetPCLK2Freq+0x20>)
 8003494:	689b      	ldr	r3, [r3, #8]
 8003496:	0b5b      	lsrs	r3, r3, #13
 8003498:	f003 0307 	and.w	r3, r3, #7
 800349c:	4903      	ldr	r1, [pc, #12]	@ (80034ac <HAL_RCC_GetPCLK2Freq+0x24>)
 800349e:	5ccb      	ldrb	r3, [r1, r3]
 80034a0:	fa22 f303 	lsr.w	r3, r2, r3
 80034a4:	4618      	mov	r0, r3
 80034a6:	bd80      	pop	{r7, pc}
 80034a8:	40023800 	.word	0x40023800
 80034ac:	08004f08 	.word	0x08004f08

080034b0 <HAL_UART_Init>:
 80034b0:	b580      	push	{r7, lr}
 80034b2:	b082      	sub	sp, #8
 80034b4:	af00      	add	r7, sp, #0
 80034b6:	6078      	str	r0, [r7, #4]
 80034b8:	687b      	ldr	r3, [r7, #4]
 80034ba:	2b00      	cmp	r3, #0
 80034bc:	d101      	bne.n	80034c2 <HAL_UART_Init+0x12>
 80034be:	2301      	movs	r3, #1
 80034c0:	e042      	b.n	8003548 <HAL_UART_Init+0x98>
 80034c2:	687b      	ldr	r3, [r7, #4]
 80034c4:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80034c8:	b2db      	uxtb	r3, r3
 80034ca:	2b00      	cmp	r3, #0
 80034cc:	d106      	bne.n	80034dc <HAL_UART_Init+0x2c>
 80034ce:	687b      	ldr	r3, [r7, #4]
 80034d0:	2200      	movs	r2, #0
 80034d2:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80034d6:	6878      	ldr	r0, [r7, #4]
 80034d8:	f7fd fdf4 	bl	80010c4 <HAL_UART_MspInit>
 80034dc:	687b      	ldr	r3, [r7, #4]
 80034de:	2224      	movs	r2, #36	@ 0x24
 80034e0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80034e4:	687b      	ldr	r3, [r7, #4]
 80034e6:	681b      	ldr	r3, [r3, #0]
 80034e8:	68da      	ldr	r2, [r3, #12]
 80034ea:	687b      	ldr	r3, [r7, #4]
 80034ec:	681b      	ldr	r3, [r3, #0]
 80034ee:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80034f2:	60da      	str	r2, [r3, #12]
 80034f4:	6878      	ldr	r0, [r7, #4]
 80034f6:	f000 fdbd 	bl	8004074 <UART_SetConfig>
 80034fa:	687b      	ldr	r3, [r7, #4]
 80034fc:	681b      	ldr	r3, [r3, #0]
 80034fe:	691a      	ldr	r2, [r3, #16]
 8003500:	687b      	ldr	r3, [r7, #4]
 8003502:	681b      	ldr	r3, [r3, #0]
 8003504:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8003508:	611a      	str	r2, [r3, #16]
 800350a:	687b      	ldr	r3, [r7, #4]
 800350c:	681b      	ldr	r3, [r3, #0]
 800350e:	695a      	ldr	r2, [r3, #20]
 8003510:	687b      	ldr	r3, [r7, #4]
 8003512:	681b      	ldr	r3, [r3, #0]
 8003514:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8003518:	615a      	str	r2, [r3, #20]
 800351a:	687b      	ldr	r3, [r7, #4]
 800351c:	681b      	ldr	r3, [r3, #0]
 800351e:	68da      	ldr	r2, [r3, #12]
 8003520:	687b      	ldr	r3, [r7, #4]
 8003522:	681b      	ldr	r3, [r3, #0]
 8003524:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8003528:	60da      	str	r2, [r3, #12]
 800352a:	687b      	ldr	r3, [r7, #4]
 800352c:	2200      	movs	r2, #0
 800352e:	645a      	str	r2, [r3, #68]	@ 0x44
 8003530:	687b      	ldr	r3, [r7, #4]
 8003532:	2220      	movs	r2, #32
 8003534:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003538:	687b      	ldr	r3, [r7, #4]
 800353a:	2220      	movs	r2, #32
 800353c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003540:	687b      	ldr	r3, [r7, #4]
 8003542:	2200      	movs	r2, #0
 8003544:	635a      	str	r2, [r3, #52]	@ 0x34
 8003546:	2300      	movs	r3, #0
 8003548:	4618      	mov	r0, r3
 800354a:	3708      	adds	r7, #8
 800354c:	46bd      	mov	sp, r7
 800354e:	bd80      	pop	{r7, pc}

08003550 <HAL_UART_Transmit>:
 8003550:	b580      	push	{r7, lr}
 8003552:	b08a      	sub	sp, #40	@ 0x28
 8003554:	af02      	add	r7, sp, #8
 8003556:	60f8      	str	r0, [r7, #12]
 8003558:	60b9      	str	r1, [r7, #8]
 800355a:	603b      	str	r3, [r7, #0]
 800355c:	4613      	mov	r3, r2
 800355e:	80fb      	strh	r3, [r7, #6]
 8003560:	2300      	movs	r3, #0
 8003562:	617b      	str	r3, [r7, #20]
 8003564:	68fb      	ldr	r3, [r7, #12]
 8003566:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800356a:	b2db      	uxtb	r3, r3
 800356c:	2b20      	cmp	r3, #32
 800356e:	d175      	bne.n	800365c <HAL_UART_Transmit+0x10c>
 8003570:	68bb      	ldr	r3, [r7, #8]
 8003572:	2b00      	cmp	r3, #0
 8003574:	d002      	beq.n	800357c <HAL_UART_Transmit+0x2c>
 8003576:	88fb      	ldrh	r3, [r7, #6]
 8003578:	2b00      	cmp	r3, #0
 800357a:	d101      	bne.n	8003580 <HAL_UART_Transmit+0x30>
 800357c:	2301      	movs	r3, #1
 800357e:	e06e      	b.n	800365e <HAL_UART_Transmit+0x10e>
 8003580:	68fb      	ldr	r3, [r7, #12]
 8003582:	2200      	movs	r2, #0
 8003584:	645a      	str	r2, [r3, #68]	@ 0x44
 8003586:	68fb      	ldr	r3, [r7, #12]
 8003588:	2221      	movs	r2, #33	@ 0x21
 800358a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800358e:	f7fd feb7 	bl	8001300 <HAL_GetTick>
 8003592:	6178      	str	r0, [r7, #20]
 8003594:	68fb      	ldr	r3, [r7, #12]
 8003596:	88fa      	ldrh	r2, [r7, #6]
 8003598:	849a      	strh	r2, [r3, #36]	@ 0x24
 800359a:	68fb      	ldr	r3, [r7, #12]
 800359c:	88fa      	ldrh	r2, [r7, #6]
 800359e:	84da      	strh	r2, [r3, #38]	@ 0x26
 80035a0:	68fb      	ldr	r3, [r7, #12]
 80035a2:	689b      	ldr	r3, [r3, #8]
 80035a4:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80035a8:	d108      	bne.n	80035bc <HAL_UART_Transmit+0x6c>
 80035aa:	68fb      	ldr	r3, [r7, #12]
 80035ac:	691b      	ldr	r3, [r3, #16]
 80035ae:	2b00      	cmp	r3, #0
 80035b0:	d104      	bne.n	80035bc <HAL_UART_Transmit+0x6c>
 80035b2:	2300      	movs	r3, #0
 80035b4:	61fb      	str	r3, [r7, #28]
 80035b6:	68bb      	ldr	r3, [r7, #8]
 80035b8:	61bb      	str	r3, [r7, #24]
 80035ba:	e003      	b.n	80035c4 <HAL_UART_Transmit+0x74>
 80035bc:	68bb      	ldr	r3, [r7, #8]
 80035be:	61fb      	str	r3, [r7, #28]
 80035c0:	2300      	movs	r3, #0
 80035c2:	61bb      	str	r3, [r7, #24]
 80035c4:	e02e      	b.n	8003624 <HAL_UART_Transmit+0xd4>
 80035c6:	683b      	ldr	r3, [r7, #0]
 80035c8:	9300      	str	r3, [sp, #0]
 80035ca:	697b      	ldr	r3, [r7, #20]
 80035cc:	2200      	movs	r2, #0
 80035ce:	2180      	movs	r1, #128	@ 0x80
 80035d0:	68f8      	ldr	r0, [r7, #12]
 80035d2:	f000 fb1f 	bl	8003c14 <UART_WaitOnFlagUntilTimeout>
 80035d6:	4603      	mov	r3, r0
 80035d8:	2b00      	cmp	r3, #0
 80035da:	d005      	beq.n	80035e8 <HAL_UART_Transmit+0x98>
 80035dc:	68fb      	ldr	r3, [r7, #12]
 80035de:	2220      	movs	r2, #32
 80035e0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80035e4:	2303      	movs	r3, #3
 80035e6:	e03a      	b.n	800365e <HAL_UART_Transmit+0x10e>
 80035e8:	69fb      	ldr	r3, [r7, #28]
 80035ea:	2b00      	cmp	r3, #0
 80035ec:	d10b      	bne.n	8003606 <HAL_UART_Transmit+0xb6>
 80035ee:	69bb      	ldr	r3, [r7, #24]
 80035f0:	881b      	ldrh	r3, [r3, #0]
 80035f2:	461a      	mov	r2, r3
 80035f4:	68fb      	ldr	r3, [r7, #12]
 80035f6:	681b      	ldr	r3, [r3, #0]
 80035f8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80035fc:	605a      	str	r2, [r3, #4]
 80035fe:	69bb      	ldr	r3, [r7, #24]
 8003600:	3302      	adds	r3, #2
 8003602:	61bb      	str	r3, [r7, #24]
 8003604:	e007      	b.n	8003616 <HAL_UART_Transmit+0xc6>
 8003606:	69fb      	ldr	r3, [r7, #28]
 8003608:	781a      	ldrb	r2, [r3, #0]
 800360a:	68fb      	ldr	r3, [r7, #12]
 800360c:	681b      	ldr	r3, [r3, #0]
 800360e:	605a      	str	r2, [r3, #4]
 8003610:	69fb      	ldr	r3, [r7, #28]
 8003612:	3301      	adds	r3, #1
 8003614:	61fb      	str	r3, [r7, #28]
 8003616:	68fb      	ldr	r3, [r7, #12]
 8003618:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 800361a:	b29b      	uxth	r3, r3
 800361c:	3b01      	subs	r3, #1
 800361e:	b29a      	uxth	r2, r3
 8003620:	68fb      	ldr	r3, [r7, #12]
 8003622:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003624:	68fb      	ldr	r3, [r7, #12]
 8003626:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8003628:	b29b      	uxth	r3, r3
 800362a:	2b00      	cmp	r3, #0
 800362c:	d1cb      	bne.n	80035c6 <HAL_UART_Transmit+0x76>
 800362e:	683b      	ldr	r3, [r7, #0]
 8003630:	9300      	str	r3, [sp, #0]
 8003632:	697b      	ldr	r3, [r7, #20]
 8003634:	2200      	movs	r2, #0
 8003636:	2140      	movs	r1, #64	@ 0x40
 8003638:	68f8      	ldr	r0, [r7, #12]
 800363a:	f000 faeb 	bl	8003c14 <UART_WaitOnFlagUntilTimeout>
 800363e:	4603      	mov	r3, r0
 8003640:	2b00      	cmp	r3, #0
 8003642:	d005      	beq.n	8003650 <HAL_UART_Transmit+0x100>
 8003644:	68fb      	ldr	r3, [r7, #12]
 8003646:	2220      	movs	r2, #32
 8003648:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800364c:	2303      	movs	r3, #3
 800364e:	e006      	b.n	800365e <HAL_UART_Transmit+0x10e>
 8003650:	68fb      	ldr	r3, [r7, #12]
 8003652:	2220      	movs	r2, #32
 8003654:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003658:	2300      	movs	r3, #0
 800365a:	e000      	b.n	800365e <HAL_UART_Transmit+0x10e>
 800365c:	2302      	movs	r3, #2
 800365e:	4618      	mov	r0, r3
 8003660:	3720      	adds	r7, #32
 8003662:	46bd      	mov	sp, r7
 8003664:	bd80      	pop	{r7, pc}

08003666 <HAL_UART_Receive_IT>:
 8003666:	b580      	push	{r7, lr}
 8003668:	b084      	sub	sp, #16
 800366a:	af00      	add	r7, sp, #0
 800366c:	60f8      	str	r0, [r7, #12]
 800366e:	60b9      	str	r1, [r7, #8]
 8003670:	4613      	mov	r3, r2
 8003672:	80fb      	strh	r3, [r7, #6]
 8003674:	68fb      	ldr	r3, [r7, #12]
 8003676:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 800367a:	b2db      	uxtb	r3, r3
 800367c:	2b20      	cmp	r3, #32
 800367e:	d112      	bne.n	80036a6 <HAL_UART_Receive_IT+0x40>
 8003680:	68bb      	ldr	r3, [r7, #8]
 8003682:	2b00      	cmp	r3, #0
 8003684:	d002      	beq.n	800368c <HAL_UART_Receive_IT+0x26>
 8003686:	88fb      	ldrh	r3, [r7, #6]
 8003688:	2b00      	cmp	r3, #0
 800368a:	d101      	bne.n	8003690 <HAL_UART_Receive_IT+0x2a>
 800368c:	2301      	movs	r3, #1
 800368e:	e00b      	b.n	80036a8 <HAL_UART_Receive_IT+0x42>
 8003690:	68fb      	ldr	r3, [r7, #12]
 8003692:	2200      	movs	r2, #0
 8003694:	631a      	str	r2, [r3, #48]	@ 0x30
 8003696:	88fb      	ldrh	r3, [r7, #6]
 8003698:	461a      	mov	r2, r3
 800369a:	68b9      	ldr	r1, [r7, #8]
 800369c:	68f8      	ldr	r0, [r7, #12]
 800369e:	f000 fb12 	bl	8003cc6 <UART_Start_Receive_IT>
 80036a2:	4603      	mov	r3, r0
 80036a4:	e000      	b.n	80036a8 <HAL_UART_Receive_IT+0x42>
 80036a6:	2302      	movs	r3, #2
 80036a8:	4618      	mov	r0, r3
 80036aa:	3710      	adds	r7, #16
 80036ac:	46bd      	mov	sp, r7
 80036ae:	bd80      	pop	{r7, pc}

080036b0 <HAL_UART_IRQHandler>:
 80036b0:	b580      	push	{r7, lr}
 80036b2:	b0ba      	sub	sp, #232	@ 0xe8
 80036b4:	af00      	add	r7, sp, #0
 80036b6:	6078      	str	r0, [r7, #4]
 80036b8:	687b      	ldr	r3, [r7, #4]
 80036ba:	681b      	ldr	r3, [r3, #0]
 80036bc:	681b      	ldr	r3, [r3, #0]
 80036be:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 80036c2:	687b      	ldr	r3, [r7, #4]
 80036c4:	681b      	ldr	r3, [r3, #0]
 80036c6:	68db      	ldr	r3, [r3, #12]
 80036c8:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 80036cc:	687b      	ldr	r3, [r7, #4]
 80036ce:	681b      	ldr	r3, [r3, #0]
 80036d0:	695b      	ldr	r3, [r3, #20]
 80036d2:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 80036d6:	2300      	movs	r3, #0
 80036d8:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80036dc:	2300      	movs	r3, #0
 80036de:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 80036e2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80036e6:	f003 030f 	and.w	r3, r3, #15
 80036ea:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80036ee:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80036f2:	2b00      	cmp	r3, #0
 80036f4:	d10f      	bne.n	8003716 <HAL_UART_IRQHandler+0x66>
 80036f6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80036fa:	f003 0320 	and.w	r3, r3, #32
 80036fe:	2b00      	cmp	r3, #0
 8003700:	d009      	beq.n	8003716 <HAL_UART_IRQHandler+0x66>
 8003702:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003706:	f003 0320 	and.w	r3, r3, #32
 800370a:	2b00      	cmp	r3, #0
 800370c:	d003      	beq.n	8003716 <HAL_UART_IRQHandler+0x66>
 800370e:	6878      	ldr	r0, [r7, #4]
 8003710:	f000 fbf2 	bl	8003ef8 <UART_Receive_IT>
 8003714:	e25b      	b.n	8003bce <HAL_UART_IRQHandler+0x51e>
 8003716:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800371a:	2b00      	cmp	r3, #0
 800371c:	f000 80de 	beq.w	80038dc <HAL_UART_IRQHandler+0x22c>
 8003720:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003724:	f003 0301 	and.w	r3, r3, #1
 8003728:	2b00      	cmp	r3, #0
 800372a:	d106      	bne.n	800373a <HAL_UART_IRQHandler+0x8a>
 800372c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003730:	f403 7390 	and.w	r3, r3, #288	@ 0x120
 8003734:	2b00      	cmp	r3, #0
 8003736:	f000 80d1 	beq.w	80038dc <HAL_UART_IRQHandler+0x22c>
 800373a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800373e:	f003 0301 	and.w	r3, r3, #1
 8003742:	2b00      	cmp	r3, #0
 8003744:	d00b      	beq.n	800375e <HAL_UART_IRQHandler+0xae>
 8003746:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800374a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800374e:	2b00      	cmp	r3, #0
 8003750:	d005      	beq.n	800375e <HAL_UART_IRQHandler+0xae>
 8003752:	687b      	ldr	r3, [r7, #4]
 8003754:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003756:	f043 0201 	orr.w	r2, r3, #1
 800375a:	687b      	ldr	r3, [r7, #4]
 800375c:	645a      	str	r2, [r3, #68]	@ 0x44
 800375e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003762:	f003 0304 	and.w	r3, r3, #4
 8003766:	2b00      	cmp	r3, #0
 8003768:	d00b      	beq.n	8003782 <HAL_UART_IRQHandler+0xd2>
 800376a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800376e:	f003 0301 	and.w	r3, r3, #1
 8003772:	2b00      	cmp	r3, #0
 8003774:	d005      	beq.n	8003782 <HAL_UART_IRQHandler+0xd2>
 8003776:	687b      	ldr	r3, [r7, #4]
 8003778:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800377a:	f043 0202 	orr.w	r2, r3, #2
 800377e:	687b      	ldr	r3, [r7, #4]
 8003780:	645a      	str	r2, [r3, #68]	@ 0x44
 8003782:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003786:	f003 0302 	and.w	r3, r3, #2
 800378a:	2b00      	cmp	r3, #0
 800378c:	d00b      	beq.n	80037a6 <HAL_UART_IRQHandler+0xf6>
 800378e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8003792:	f003 0301 	and.w	r3, r3, #1
 8003796:	2b00      	cmp	r3, #0
 8003798:	d005      	beq.n	80037a6 <HAL_UART_IRQHandler+0xf6>
 800379a:	687b      	ldr	r3, [r7, #4]
 800379c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800379e:	f043 0204 	orr.w	r2, r3, #4
 80037a2:	687b      	ldr	r3, [r7, #4]
 80037a4:	645a      	str	r2, [r3, #68]	@ 0x44
 80037a6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80037aa:	f003 0308 	and.w	r3, r3, #8
 80037ae:	2b00      	cmp	r3, #0
 80037b0:	d011      	beq.n	80037d6 <HAL_UART_IRQHandler+0x126>
 80037b2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80037b6:	f003 0320 	and.w	r3, r3, #32
 80037ba:	2b00      	cmp	r3, #0
 80037bc:	d105      	bne.n	80037ca <HAL_UART_IRQHandler+0x11a>
 80037be:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80037c2:	f003 0301 	and.w	r3, r3, #1
 80037c6:	2b00      	cmp	r3, #0
 80037c8:	d005      	beq.n	80037d6 <HAL_UART_IRQHandler+0x126>
 80037ca:	687b      	ldr	r3, [r7, #4]
 80037cc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80037ce:	f043 0208 	orr.w	r2, r3, #8
 80037d2:	687b      	ldr	r3, [r7, #4]
 80037d4:	645a      	str	r2, [r3, #68]	@ 0x44
 80037d6:	687b      	ldr	r3, [r7, #4]
 80037d8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80037da:	2b00      	cmp	r3, #0
 80037dc:	f000 81f2 	beq.w	8003bc4 <HAL_UART_IRQHandler+0x514>
 80037e0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80037e4:	f003 0320 	and.w	r3, r3, #32
 80037e8:	2b00      	cmp	r3, #0
 80037ea:	d008      	beq.n	80037fe <HAL_UART_IRQHandler+0x14e>
 80037ec:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80037f0:	f003 0320 	and.w	r3, r3, #32
 80037f4:	2b00      	cmp	r3, #0
 80037f6:	d002      	beq.n	80037fe <HAL_UART_IRQHandler+0x14e>
 80037f8:	6878      	ldr	r0, [r7, #4]
 80037fa:	f000 fb7d 	bl	8003ef8 <UART_Receive_IT>
 80037fe:	687b      	ldr	r3, [r7, #4]
 8003800:	681b      	ldr	r3, [r3, #0]
 8003802:	695b      	ldr	r3, [r3, #20]
 8003804:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003808:	2b40      	cmp	r3, #64	@ 0x40
 800380a:	bf0c      	ite	eq
 800380c:	2301      	moveq	r3, #1
 800380e:	2300      	movne	r3, #0
 8003810:	b2db      	uxtb	r3, r3
 8003812:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8003816:	687b      	ldr	r3, [r7, #4]
 8003818:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800381a:	f003 0308 	and.w	r3, r3, #8
 800381e:	2b00      	cmp	r3, #0
 8003820:	d103      	bne.n	800382a <HAL_UART_IRQHandler+0x17a>
 8003822:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8003826:	2b00      	cmp	r3, #0
 8003828:	d04f      	beq.n	80038ca <HAL_UART_IRQHandler+0x21a>
 800382a:	6878      	ldr	r0, [r7, #4]
 800382c:	f000 fa85 	bl	8003d3a <UART_EndRxTransfer>
 8003830:	687b      	ldr	r3, [r7, #4]
 8003832:	681b      	ldr	r3, [r3, #0]
 8003834:	695b      	ldr	r3, [r3, #20]
 8003836:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800383a:	2b40      	cmp	r3, #64	@ 0x40
 800383c:	d141      	bne.n	80038c2 <HAL_UART_IRQHandler+0x212>
 800383e:	687b      	ldr	r3, [r7, #4]
 8003840:	681b      	ldr	r3, [r3, #0]
 8003842:	3314      	adds	r3, #20
 8003844:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8003848:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 800384c:	e853 3f00 	ldrex	r3, [r3]
 8003850:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8003854:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8003858:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800385c:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	681b      	ldr	r3, [r3, #0]
 8003864:	3314      	adds	r3, #20
 8003866:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 800386a:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 800386e:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8003872:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 8003876:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 800387a:	e841 2300 	strex	r3, r2, [r1]
 800387e:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8003882:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8003886:	2b00      	cmp	r3, #0
 8003888:	d1d9      	bne.n	800383e <HAL_UART_IRQHandler+0x18e>
 800388a:	687b      	ldr	r3, [r7, #4]
 800388c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800388e:	2b00      	cmp	r3, #0
 8003890:	d013      	beq.n	80038ba <HAL_UART_IRQHandler+0x20a>
 8003892:	687b      	ldr	r3, [r7, #4]
 8003894:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003896:	4a7e      	ldr	r2, [pc, #504]	@ (8003a90 <HAL_UART_IRQHandler+0x3e0>)
 8003898:	651a      	str	r2, [r3, #80]	@ 0x50
 800389a:	687b      	ldr	r3, [r7, #4]
 800389c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800389e:	4618      	mov	r0, r3
 80038a0:	f7fd fedf 	bl	8001662 <HAL_DMA_Abort_IT>
 80038a4:	4603      	mov	r3, r0
 80038a6:	2b00      	cmp	r3, #0
 80038a8:	d016      	beq.n	80038d8 <HAL_UART_IRQHandler+0x228>
 80038aa:	687b      	ldr	r3, [r7, #4]
 80038ac:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80038ae:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80038b0:	687a      	ldr	r2, [r7, #4]
 80038b2:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 80038b4:	4610      	mov	r0, r2
 80038b6:	4798      	blx	r3
 80038b8:	e00e      	b.n	80038d8 <HAL_UART_IRQHandler+0x228>
 80038ba:	6878      	ldr	r0, [r7, #4]
 80038bc:	f000 f994 	bl	8003be8 <HAL_UART_ErrorCallback>
 80038c0:	e00a      	b.n	80038d8 <HAL_UART_IRQHandler+0x228>
 80038c2:	6878      	ldr	r0, [r7, #4]
 80038c4:	f000 f990 	bl	8003be8 <HAL_UART_ErrorCallback>
 80038c8:	e006      	b.n	80038d8 <HAL_UART_IRQHandler+0x228>
 80038ca:	6878      	ldr	r0, [r7, #4]
 80038cc:	f000 f98c 	bl	8003be8 <HAL_UART_ErrorCallback>
 80038d0:	687b      	ldr	r3, [r7, #4]
 80038d2:	2200      	movs	r2, #0
 80038d4:	645a      	str	r2, [r3, #68]	@ 0x44
 80038d6:	e175      	b.n	8003bc4 <HAL_UART_IRQHandler+0x514>
 80038d8:	bf00      	nop
 80038da:	e173      	b.n	8003bc4 <HAL_UART_IRQHandler+0x514>
 80038dc:	687b      	ldr	r3, [r7, #4]
 80038de:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80038e0:	2b01      	cmp	r3, #1
 80038e2:	f040 814f 	bne.w	8003b84 <HAL_UART_IRQHandler+0x4d4>
 80038e6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80038ea:	f003 0310 	and.w	r3, r3, #16
 80038ee:	2b00      	cmp	r3, #0
 80038f0:	f000 8148 	beq.w	8003b84 <HAL_UART_IRQHandler+0x4d4>
 80038f4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80038f8:	f003 0310 	and.w	r3, r3, #16
 80038fc:	2b00      	cmp	r3, #0
 80038fe:	f000 8141 	beq.w	8003b84 <HAL_UART_IRQHandler+0x4d4>
 8003902:	2300      	movs	r3, #0
 8003904:	60bb      	str	r3, [r7, #8]
 8003906:	687b      	ldr	r3, [r7, #4]
 8003908:	681b      	ldr	r3, [r3, #0]
 800390a:	681b      	ldr	r3, [r3, #0]
 800390c:	60bb      	str	r3, [r7, #8]
 800390e:	687b      	ldr	r3, [r7, #4]
 8003910:	681b      	ldr	r3, [r3, #0]
 8003912:	685b      	ldr	r3, [r3, #4]
 8003914:	60bb      	str	r3, [r7, #8]
 8003916:	68bb      	ldr	r3, [r7, #8]
 8003918:	687b      	ldr	r3, [r7, #4]
 800391a:	681b      	ldr	r3, [r3, #0]
 800391c:	695b      	ldr	r3, [r3, #20]
 800391e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003922:	2b40      	cmp	r3, #64	@ 0x40
 8003924:	f040 80b6 	bne.w	8003a94 <HAL_UART_IRQHandler+0x3e4>
 8003928:	687b      	ldr	r3, [r7, #4]
 800392a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800392c:	681b      	ldr	r3, [r3, #0]
 800392e:	685b      	ldr	r3, [r3, #4]
 8003930:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 8003934:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 8003938:	2b00      	cmp	r3, #0
 800393a:	f000 8145 	beq.w	8003bc8 <HAL_UART_IRQHandler+0x518>
 800393e:	687b      	ldr	r3, [r7, #4]
 8003940:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8003942:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8003946:	429a      	cmp	r2, r3
 8003948:	f080 813e 	bcs.w	8003bc8 <HAL_UART_IRQHandler+0x518>
 800394c:	687b      	ldr	r3, [r7, #4]
 800394e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8003952:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8003954:	687b      	ldr	r3, [r7, #4]
 8003956:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003958:	69db      	ldr	r3, [r3, #28]
 800395a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800395e:	f000 8088 	beq.w	8003a72 <HAL_UART_IRQHandler+0x3c2>
 8003962:	687b      	ldr	r3, [r7, #4]
 8003964:	681b      	ldr	r3, [r3, #0]
 8003966:	330c      	adds	r3, #12
 8003968:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800396c:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8003970:	e853 3f00 	ldrex	r3, [r3]
 8003974:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8003978:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800397c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8003980:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8003984:	687b      	ldr	r3, [r7, #4]
 8003986:	681b      	ldr	r3, [r3, #0]
 8003988:	330c      	adds	r3, #12
 800398a:	f8d7 20b8 	ldr.w	r2, [r7, #184]	@ 0xb8
 800398e:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8003992:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8003996:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800399a:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 800399e:	e841 2300 	strex	r3, r2, [r1]
 80039a2:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80039a6:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 80039aa:	2b00      	cmp	r3, #0
 80039ac:	d1d9      	bne.n	8003962 <HAL_UART_IRQHandler+0x2b2>
 80039ae:	687b      	ldr	r3, [r7, #4]
 80039b0:	681b      	ldr	r3, [r3, #0]
 80039b2:	3314      	adds	r3, #20
 80039b4:	677b      	str	r3, [r7, #116]	@ 0x74
 80039b6:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80039b8:	e853 3f00 	ldrex	r3, [r3]
 80039bc:	673b      	str	r3, [r7, #112]	@ 0x70
 80039be:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80039c0:	f023 0301 	bic.w	r3, r3, #1
 80039c4:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80039c8:	687b      	ldr	r3, [r7, #4]
 80039ca:	681b      	ldr	r3, [r3, #0]
 80039cc:	3314      	adds	r3, #20
 80039ce:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 80039d2:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 80039d6:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80039d8:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 80039da:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 80039de:	e841 2300 	strex	r3, r2, [r1]
 80039e2:	67bb      	str	r3, [r7, #120]	@ 0x78
 80039e4:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 80039e6:	2b00      	cmp	r3, #0
 80039e8:	d1e1      	bne.n	80039ae <HAL_UART_IRQHandler+0x2fe>
 80039ea:	687b      	ldr	r3, [r7, #4]
 80039ec:	681b      	ldr	r3, [r3, #0]
 80039ee:	3314      	adds	r3, #20
 80039f0:	663b      	str	r3, [r7, #96]	@ 0x60
 80039f2:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 80039f4:	e853 3f00 	ldrex	r3, [r3]
 80039f8:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80039fa:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80039fc:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8003a00:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8003a04:	687b      	ldr	r3, [r7, #4]
 8003a06:	681b      	ldr	r3, [r3, #0]
 8003a08:	3314      	adds	r3, #20
 8003a0a:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8003a0e:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8003a10:	66bb      	str	r3, [r7, #104]	@ 0x68
 8003a12:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8003a14:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8003a16:	e841 2300 	strex	r3, r2, [r1]
 8003a1a:	667b      	str	r3, [r7, #100]	@ 0x64
 8003a1c:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8003a1e:	2b00      	cmp	r3, #0
 8003a20:	d1e3      	bne.n	80039ea <HAL_UART_IRQHandler+0x33a>
 8003a22:	687b      	ldr	r3, [r7, #4]
 8003a24:	2220      	movs	r2, #32
 8003a26:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003a2a:	687b      	ldr	r3, [r7, #4]
 8003a2c:	2200      	movs	r2, #0
 8003a2e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	681b      	ldr	r3, [r3, #0]
 8003a34:	330c      	adds	r3, #12
 8003a36:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003a38:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8003a3a:	e853 3f00 	ldrex	r3, [r3]
 8003a3e:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003a40:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8003a42:	f023 0310 	bic.w	r3, r3, #16
 8003a46:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8003a4a:	687b      	ldr	r3, [r7, #4]
 8003a4c:	681b      	ldr	r3, [r3, #0]
 8003a4e:	330c      	adds	r3, #12
 8003a50:	f8d7 20ac 	ldr.w	r2, [r7, #172]	@ 0xac
 8003a54:	65ba      	str	r2, [r7, #88]	@ 0x58
 8003a56:	657b      	str	r3, [r7, #84]	@ 0x54
 8003a58:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8003a5a:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8003a5c:	e841 2300 	strex	r3, r2, [r1]
 8003a60:	653b      	str	r3, [r7, #80]	@ 0x50
 8003a62:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8003a64:	2b00      	cmp	r3, #0
 8003a66:	d1e3      	bne.n	8003a30 <HAL_UART_IRQHandler+0x380>
 8003a68:	687b      	ldr	r3, [r7, #4]
 8003a6a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003a6c:	4618      	mov	r0, r3
 8003a6e:	f7fd fd88 	bl	8001582 <HAL_DMA_Abort>
 8003a72:	687b      	ldr	r3, [r7, #4]
 8003a74:	2202      	movs	r2, #2
 8003a76:	635a      	str	r2, [r3, #52]	@ 0x34
 8003a78:	687b      	ldr	r3, [r7, #4]
 8003a7a:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8003a7c:	687b      	ldr	r3, [r7, #4]
 8003a7e:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8003a80:	b29b      	uxth	r3, r3
 8003a82:	1ad3      	subs	r3, r2, r3
 8003a84:	b29b      	uxth	r3, r3
 8003a86:	4619      	mov	r1, r3
 8003a88:	6878      	ldr	r0, [r7, #4]
 8003a8a:	f000 f8b7 	bl	8003bfc <HAL_UARTEx_RxEventCallback>
 8003a8e:	e09b      	b.n	8003bc8 <HAL_UART_IRQHandler+0x518>
 8003a90:	08003e01 	.word	0x08003e01
 8003a94:	687b      	ldr	r3, [r7, #4]
 8003a96:	8d9a      	ldrh	r2, [r3, #44]	@ 0x2c
 8003a98:	687b      	ldr	r3, [r7, #4]
 8003a9a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8003a9c:	b29b      	uxth	r3, r3
 8003a9e:	1ad3      	subs	r3, r2, r3
 8003aa0:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8003aa4:	687b      	ldr	r3, [r7, #4]
 8003aa6:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8003aa8:	b29b      	uxth	r3, r3
 8003aaa:	2b00      	cmp	r3, #0
 8003aac:	f000 808e 	beq.w	8003bcc <HAL_UART_IRQHandler+0x51c>
 8003ab0:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8003ab4:	2b00      	cmp	r3, #0
 8003ab6:	f000 8089 	beq.w	8003bcc <HAL_UART_IRQHandler+0x51c>
 8003aba:	687b      	ldr	r3, [r7, #4]
 8003abc:	681b      	ldr	r3, [r3, #0]
 8003abe:	330c      	adds	r3, #12
 8003ac0:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003ac2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003ac4:	e853 3f00 	ldrex	r3, [r3]
 8003ac8:	637b      	str	r3, [r7, #52]	@ 0x34
 8003aca:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003acc:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8003ad0:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8003ad4:	687b      	ldr	r3, [r7, #4]
 8003ad6:	681b      	ldr	r3, [r3, #0]
 8003ad8:	330c      	adds	r3, #12
 8003ada:	f8d7 20c8 	ldr.w	r2, [r7, #200]	@ 0xc8
 8003ade:	647a      	str	r2, [r7, #68]	@ 0x44
 8003ae0:	643b      	str	r3, [r7, #64]	@ 0x40
 8003ae2:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8003ae4:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8003ae6:	e841 2300 	strex	r3, r2, [r1]
 8003aea:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003aec:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8003aee:	2b00      	cmp	r3, #0
 8003af0:	d1e3      	bne.n	8003aba <HAL_UART_IRQHandler+0x40a>
 8003af2:	687b      	ldr	r3, [r7, #4]
 8003af4:	681b      	ldr	r3, [r3, #0]
 8003af6:	3314      	adds	r3, #20
 8003af8:	627b      	str	r3, [r7, #36]	@ 0x24
 8003afa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003afc:	e853 3f00 	ldrex	r3, [r3]
 8003b00:	623b      	str	r3, [r7, #32]
 8003b02:	6a3b      	ldr	r3, [r7, #32]
 8003b04:	f023 0301 	bic.w	r3, r3, #1
 8003b08:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8003b0c:	687b      	ldr	r3, [r7, #4]
 8003b0e:	681b      	ldr	r3, [r3, #0]
 8003b10:	3314      	adds	r3, #20
 8003b12:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8003b16:	633a      	str	r2, [r7, #48]	@ 0x30
 8003b18:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003b1a:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8003b1c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8003b1e:	e841 2300 	strex	r3, r2, [r1]
 8003b22:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003b24:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003b26:	2b00      	cmp	r3, #0
 8003b28:	d1e3      	bne.n	8003af2 <HAL_UART_IRQHandler+0x442>
 8003b2a:	687b      	ldr	r3, [r7, #4]
 8003b2c:	2220      	movs	r2, #32
 8003b2e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003b32:	687b      	ldr	r3, [r7, #4]
 8003b34:	2200      	movs	r2, #0
 8003b36:	631a      	str	r2, [r3, #48]	@ 0x30
 8003b38:	687b      	ldr	r3, [r7, #4]
 8003b3a:	681b      	ldr	r3, [r3, #0]
 8003b3c:	330c      	adds	r3, #12
 8003b3e:	613b      	str	r3, [r7, #16]
 8003b40:	693b      	ldr	r3, [r7, #16]
 8003b42:	e853 3f00 	ldrex	r3, [r3]
 8003b46:	60fb      	str	r3, [r7, #12]
 8003b48:	68fb      	ldr	r3, [r7, #12]
 8003b4a:	f023 0310 	bic.w	r3, r3, #16
 8003b4e:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8003b52:	687b      	ldr	r3, [r7, #4]
 8003b54:	681b      	ldr	r3, [r3, #0]
 8003b56:	330c      	adds	r3, #12
 8003b58:	f8d7 20c0 	ldr.w	r2, [r7, #192]	@ 0xc0
 8003b5c:	61fa      	str	r2, [r7, #28]
 8003b5e:	61bb      	str	r3, [r7, #24]
 8003b60:	69b9      	ldr	r1, [r7, #24]
 8003b62:	69fa      	ldr	r2, [r7, #28]
 8003b64:	e841 2300 	strex	r3, r2, [r1]
 8003b68:	617b      	str	r3, [r7, #20]
 8003b6a:	697b      	ldr	r3, [r7, #20]
 8003b6c:	2b00      	cmp	r3, #0
 8003b6e:	d1e3      	bne.n	8003b38 <HAL_UART_IRQHandler+0x488>
 8003b70:	687b      	ldr	r3, [r7, #4]
 8003b72:	2202      	movs	r2, #2
 8003b74:	635a      	str	r2, [r3, #52]	@ 0x34
 8003b76:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8003b7a:	4619      	mov	r1, r3
 8003b7c:	6878      	ldr	r0, [r7, #4]
 8003b7e:	f000 f83d 	bl	8003bfc <HAL_UARTEx_RxEventCallback>
 8003b82:	e023      	b.n	8003bcc <HAL_UART_IRQHandler+0x51c>
 8003b84:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003b88:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003b8c:	2b00      	cmp	r3, #0
 8003b8e:	d009      	beq.n	8003ba4 <HAL_UART_IRQHandler+0x4f4>
 8003b90:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003b94:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003b98:	2b00      	cmp	r3, #0
 8003b9a:	d003      	beq.n	8003ba4 <HAL_UART_IRQHandler+0x4f4>
 8003b9c:	6878      	ldr	r0, [r7, #4]
 8003b9e:	f000 f943 	bl	8003e28 <UART_Transmit_IT>
 8003ba2:	e014      	b.n	8003bce <HAL_UART_IRQHandler+0x51e>
 8003ba4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8003ba8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003bac:	2b00      	cmp	r3, #0
 8003bae:	d00e      	beq.n	8003bce <HAL_UART_IRQHandler+0x51e>
 8003bb0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8003bb4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003bb8:	2b00      	cmp	r3, #0
 8003bba:	d008      	beq.n	8003bce <HAL_UART_IRQHandler+0x51e>
 8003bbc:	6878      	ldr	r0, [r7, #4]
 8003bbe:	f000 f983 	bl	8003ec8 <UART_EndTransmit_IT>
 8003bc2:	e004      	b.n	8003bce <HAL_UART_IRQHandler+0x51e>
 8003bc4:	bf00      	nop
 8003bc6:	e002      	b.n	8003bce <HAL_UART_IRQHandler+0x51e>
 8003bc8:	bf00      	nop
 8003bca:	e000      	b.n	8003bce <HAL_UART_IRQHandler+0x51e>
 8003bcc:	bf00      	nop
 8003bce:	37e8      	adds	r7, #232	@ 0xe8
 8003bd0:	46bd      	mov	sp, r7
 8003bd2:	bd80      	pop	{r7, pc}

08003bd4 <HAL_UART_TxCpltCallback>:
 8003bd4:	b480      	push	{r7}
 8003bd6:	b083      	sub	sp, #12
 8003bd8:	af00      	add	r7, sp, #0
 8003bda:	6078      	str	r0, [r7, #4]
 8003bdc:	bf00      	nop
 8003bde:	370c      	adds	r7, #12
 8003be0:	46bd      	mov	sp, r7
 8003be2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003be6:	4770      	bx	lr

08003be8 <HAL_UART_ErrorCallback>:
 8003be8:	b480      	push	{r7}
 8003bea:	b083      	sub	sp, #12
 8003bec:	af00      	add	r7, sp, #0
 8003bee:	6078      	str	r0, [r7, #4]
 8003bf0:	bf00      	nop
 8003bf2:	370c      	adds	r7, #12
 8003bf4:	46bd      	mov	sp, r7
 8003bf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bfa:	4770      	bx	lr

08003bfc <HAL_UARTEx_RxEventCallback>:
 8003bfc:	b480      	push	{r7}
 8003bfe:	b083      	sub	sp, #12
 8003c00:	af00      	add	r7, sp, #0
 8003c02:	6078      	str	r0, [r7, #4]
 8003c04:	460b      	mov	r3, r1
 8003c06:	807b      	strh	r3, [r7, #2]
 8003c08:	bf00      	nop
 8003c0a:	370c      	adds	r7, #12
 8003c0c:	46bd      	mov	sp, r7
 8003c0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c12:	4770      	bx	lr

08003c14 <UART_WaitOnFlagUntilTimeout>:
 8003c14:	b580      	push	{r7, lr}
 8003c16:	b086      	sub	sp, #24
 8003c18:	af00      	add	r7, sp, #0
 8003c1a:	60f8      	str	r0, [r7, #12]
 8003c1c:	60b9      	str	r1, [r7, #8]
 8003c1e:	603b      	str	r3, [r7, #0]
 8003c20:	4613      	mov	r3, r2
 8003c22:	71fb      	strb	r3, [r7, #7]
 8003c24:	e03b      	b.n	8003c9e <UART_WaitOnFlagUntilTimeout+0x8a>
 8003c26:	6a3b      	ldr	r3, [r7, #32]
 8003c28:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003c2c:	d037      	beq.n	8003c9e <UART_WaitOnFlagUntilTimeout+0x8a>
 8003c2e:	f7fd fb67 	bl	8001300 <HAL_GetTick>
 8003c32:	4602      	mov	r2, r0
 8003c34:	683b      	ldr	r3, [r7, #0]
 8003c36:	1ad3      	subs	r3, r2, r3
 8003c38:	6a3a      	ldr	r2, [r7, #32]
 8003c3a:	429a      	cmp	r2, r3
 8003c3c:	d302      	bcc.n	8003c44 <UART_WaitOnFlagUntilTimeout+0x30>
 8003c3e:	6a3b      	ldr	r3, [r7, #32]
 8003c40:	2b00      	cmp	r3, #0
 8003c42:	d101      	bne.n	8003c48 <UART_WaitOnFlagUntilTimeout+0x34>
 8003c44:	2303      	movs	r3, #3
 8003c46:	e03a      	b.n	8003cbe <UART_WaitOnFlagUntilTimeout+0xaa>
 8003c48:	68fb      	ldr	r3, [r7, #12]
 8003c4a:	681b      	ldr	r3, [r3, #0]
 8003c4c:	68db      	ldr	r3, [r3, #12]
 8003c4e:	f003 0304 	and.w	r3, r3, #4
 8003c52:	2b00      	cmp	r3, #0
 8003c54:	d023      	beq.n	8003c9e <UART_WaitOnFlagUntilTimeout+0x8a>
 8003c56:	68bb      	ldr	r3, [r7, #8]
 8003c58:	2b80      	cmp	r3, #128	@ 0x80
 8003c5a:	d020      	beq.n	8003c9e <UART_WaitOnFlagUntilTimeout+0x8a>
 8003c5c:	68bb      	ldr	r3, [r7, #8]
 8003c5e:	2b40      	cmp	r3, #64	@ 0x40
 8003c60:	d01d      	beq.n	8003c9e <UART_WaitOnFlagUntilTimeout+0x8a>
 8003c62:	68fb      	ldr	r3, [r7, #12]
 8003c64:	681b      	ldr	r3, [r3, #0]
 8003c66:	681b      	ldr	r3, [r3, #0]
 8003c68:	f003 0308 	and.w	r3, r3, #8
 8003c6c:	2b08      	cmp	r3, #8
 8003c6e:	d116      	bne.n	8003c9e <UART_WaitOnFlagUntilTimeout+0x8a>
 8003c70:	2300      	movs	r3, #0
 8003c72:	617b      	str	r3, [r7, #20]
 8003c74:	68fb      	ldr	r3, [r7, #12]
 8003c76:	681b      	ldr	r3, [r3, #0]
 8003c78:	681b      	ldr	r3, [r3, #0]
 8003c7a:	617b      	str	r3, [r7, #20]
 8003c7c:	68fb      	ldr	r3, [r7, #12]
 8003c7e:	681b      	ldr	r3, [r3, #0]
 8003c80:	685b      	ldr	r3, [r3, #4]
 8003c82:	617b      	str	r3, [r7, #20]
 8003c84:	697b      	ldr	r3, [r7, #20]
 8003c86:	68f8      	ldr	r0, [r7, #12]
 8003c88:	f000 f857 	bl	8003d3a <UART_EndRxTransfer>
 8003c8c:	68fb      	ldr	r3, [r7, #12]
 8003c8e:	2208      	movs	r2, #8
 8003c90:	645a      	str	r2, [r3, #68]	@ 0x44
 8003c92:	68fb      	ldr	r3, [r7, #12]
 8003c94:	2200      	movs	r2, #0
 8003c96:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003c9a:	2301      	movs	r3, #1
 8003c9c:	e00f      	b.n	8003cbe <UART_WaitOnFlagUntilTimeout+0xaa>
 8003c9e:	68fb      	ldr	r3, [r7, #12]
 8003ca0:	681b      	ldr	r3, [r3, #0]
 8003ca2:	681a      	ldr	r2, [r3, #0]
 8003ca4:	68bb      	ldr	r3, [r7, #8]
 8003ca6:	4013      	ands	r3, r2
 8003ca8:	68ba      	ldr	r2, [r7, #8]
 8003caa:	429a      	cmp	r2, r3
 8003cac:	bf0c      	ite	eq
 8003cae:	2301      	moveq	r3, #1
 8003cb0:	2300      	movne	r3, #0
 8003cb2:	b2db      	uxtb	r3, r3
 8003cb4:	461a      	mov	r2, r3
 8003cb6:	79fb      	ldrb	r3, [r7, #7]
 8003cb8:	429a      	cmp	r2, r3
 8003cba:	d0b4      	beq.n	8003c26 <UART_WaitOnFlagUntilTimeout+0x12>
 8003cbc:	2300      	movs	r3, #0
 8003cbe:	4618      	mov	r0, r3
 8003cc0:	3718      	adds	r7, #24
 8003cc2:	46bd      	mov	sp, r7
 8003cc4:	bd80      	pop	{r7, pc}

08003cc6 <UART_Start_Receive_IT>:
 8003cc6:	b480      	push	{r7}
 8003cc8:	b085      	sub	sp, #20
 8003cca:	af00      	add	r7, sp, #0
 8003ccc:	60f8      	str	r0, [r7, #12]
 8003cce:	60b9      	str	r1, [r7, #8]
 8003cd0:	4613      	mov	r3, r2
 8003cd2:	80fb      	strh	r3, [r7, #6]
 8003cd4:	68fb      	ldr	r3, [r7, #12]
 8003cd6:	68ba      	ldr	r2, [r7, #8]
 8003cd8:	629a      	str	r2, [r3, #40]	@ 0x28
 8003cda:	68fb      	ldr	r3, [r7, #12]
 8003cdc:	88fa      	ldrh	r2, [r7, #6]
 8003cde:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8003ce0:	68fb      	ldr	r3, [r7, #12]
 8003ce2:	88fa      	ldrh	r2, [r7, #6]
 8003ce4:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8003ce6:	68fb      	ldr	r3, [r7, #12]
 8003ce8:	2200      	movs	r2, #0
 8003cea:	645a      	str	r2, [r3, #68]	@ 0x44
 8003cec:	68fb      	ldr	r3, [r7, #12]
 8003cee:	2222      	movs	r2, #34	@ 0x22
 8003cf0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003cf4:	68fb      	ldr	r3, [r7, #12]
 8003cf6:	691b      	ldr	r3, [r3, #16]
 8003cf8:	2b00      	cmp	r3, #0
 8003cfa:	d007      	beq.n	8003d0c <UART_Start_Receive_IT+0x46>
 8003cfc:	68fb      	ldr	r3, [r7, #12]
 8003cfe:	681b      	ldr	r3, [r3, #0]
 8003d00:	68da      	ldr	r2, [r3, #12]
 8003d02:	68fb      	ldr	r3, [r7, #12]
 8003d04:	681b      	ldr	r3, [r3, #0]
 8003d06:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8003d0a:	60da      	str	r2, [r3, #12]
 8003d0c:	68fb      	ldr	r3, [r7, #12]
 8003d0e:	681b      	ldr	r3, [r3, #0]
 8003d10:	695a      	ldr	r2, [r3, #20]
 8003d12:	68fb      	ldr	r3, [r7, #12]
 8003d14:	681b      	ldr	r3, [r3, #0]
 8003d16:	f042 0201 	orr.w	r2, r2, #1
 8003d1a:	615a      	str	r2, [r3, #20]
 8003d1c:	68fb      	ldr	r3, [r7, #12]
 8003d1e:	681b      	ldr	r3, [r3, #0]
 8003d20:	68da      	ldr	r2, [r3, #12]
 8003d22:	68fb      	ldr	r3, [r7, #12]
 8003d24:	681b      	ldr	r3, [r3, #0]
 8003d26:	f042 0220 	orr.w	r2, r2, #32
 8003d2a:	60da      	str	r2, [r3, #12]
 8003d2c:	2300      	movs	r3, #0
 8003d2e:	4618      	mov	r0, r3
 8003d30:	3714      	adds	r7, #20
 8003d32:	46bd      	mov	sp, r7
 8003d34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d38:	4770      	bx	lr

08003d3a <UART_EndRxTransfer>:
 8003d3a:	b480      	push	{r7}
 8003d3c:	b095      	sub	sp, #84	@ 0x54
 8003d3e:	af00      	add	r7, sp, #0
 8003d40:	6078      	str	r0, [r7, #4]
 8003d42:	687b      	ldr	r3, [r7, #4]
 8003d44:	681b      	ldr	r3, [r3, #0]
 8003d46:	330c      	adds	r3, #12
 8003d48:	637b      	str	r3, [r7, #52]	@ 0x34
 8003d4a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003d4c:	e853 3f00 	ldrex	r3, [r3]
 8003d50:	633b      	str	r3, [r7, #48]	@ 0x30
 8003d52:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003d54:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8003d58:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003d5a:	687b      	ldr	r3, [r7, #4]
 8003d5c:	681b      	ldr	r3, [r3, #0]
 8003d5e:	330c      	adds	r3, #12
 8003d60:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 8003d62:	643a      	str	r2, [r7, #64]	@ 0x40
 8003d64:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8003d66:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8003d68:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8003d6a:	e841 2300 	strex	r3, r2, [r1]
 8003d6e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003d70:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003d72:	2b00      	cmp	r3, #0
 8003d74:	d1e5      	bne.n	8003d42 <UART_EndRxTransfer+0x8>
 8003d76:	687b      	ldr	r3, [r7, #4]
 8003d78:	681b      	ldr	r3, [r3, #0]
 8003d7a:	3314      	adds	r3, #20
 8003d7c:	623b      	str	r3, [r7, #32]
 8003d7e:	6a3b      	ldr	r3, [r7, #32]
 8003d80:	e853 3f00 	ldrex	r3, [r3]
 8003d84:	61fb      	str	r3, [r7, #28]
 8003d86:	69fb      	ldr	r3, [r7, #28]
 8003d88:	f023 0301 	bic.w	r3, r3, #1
 8003d8c:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003d8e:	687b      	ldr	r3, [r7, #4]
 8003d90:	681b      	ldr	r3, [r3, #0]
 8003d92:	3314      	adds	r3, #20
 8003d94:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8003d96:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8003d98:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003d9a:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8003d9c:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8003d9e:	e841 2300 	strex	r3, r2, [r1]
 8003da2:	627b      	str	r3, [r7, #36]	@ 0x24
 8003da4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003da6:	2b00      	cmp	r3, #0
 8003da8:	d1e5      	bne.n	8003d76 <UART_EndRxTransfer+0x3c>
 8003daa:	687b      	ldr	r3, [r7, #4]
 8003dac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003dae:	2b01      	cmp	r3, #1
 8003db0:	d119      	bne.n	8003de6 <UART_EndRxTransfer+0xac>
 8003db2:	687b      	ldr	r3, [r7, #4]
 8003db4:	681b      	ldr	r3, [r3, #0]
 8003db6:	330c      	adds	r3, #12
 8003db8:	60fb      	str	r3, [r7, #12]
 8003dba:	68fb      	ldr	r3, [r7, #12]
 8003dbc:	e853 3f00 	ldrex	r3, [r3]
 8003dc0:	60bb      	str	r3, [r7, #8]
 8003dc2:	68bb      	ldr	r3, [r7, #8]
 8003dc4:	f023 0310 	bic.w	r3, r3, #16
 8003dc8:	647b      	str	r3, [r7, #68]	@ 0x44
 8003dca:	687b      	ldr	r3, [r7, #4]
 8003dcc:	681b      	ldr	r3, [r3, #0]
 8003dce:	330c      	adds	r3, #12
 8003dd0:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8003dd2:	61ba      	str	r2, [r7, #24]
 8003dd4:	617b      	str	r3, [r7, #20]
 8003dd6:	6979      	ldr	r1, [r7, #20]
 8003dd8:	69ba      	ldr	r2, [r7, #24]
 8003dda:	e841 2300 	strex	r3, r2, [r1]
 8003dde:	613b      	str	r3, [r7, #16]
 8003de0:	693b      	ldr	r3, [r7, #16]
 8003de2:	2b00      	cmp	r3, #0
 8003de4:	d1e5      	bne.n	8003db2 <UART_EndRxTransfer+0x78>
 8003de6:	687b      	ldr	r3, [r7, #4]
 8003de8:	2220      	movs	r2, #32
 8003dea:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003dee:	687b      	ldr	r3, [r7, #4]
 8003df0:	2200      	movs	r2, #0
 8003df2:	631a      	str	r2, [r3, #48]	@ 0x30
 8003df4:	bf00      	nop
 8003df6:	3754      	adds	r7, #84	@ 0x54
 8003df8:	46bd      	mov	sp, r7
 8003dfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dfe:	4770      	bx	lr

08003e00 <UART_DMAAbortOnError>:
 8003e00:	b580      	push	{r7, lr}
 8003e02:	b084      	sub	sp, #16
 8003e04:	af00      	add	r7, sp, #0
 8003e06:	6078      	str	r0, [r7, #4]
 8003e08:	687b      	ldr	r3, [r7, #4]
 8003e0a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003e0c:	60fb      	str	r3, [r7, #12]
 8003e0e:	68fb      	ldr	r3, [r7, #12]
 8003e10:	2200      	movs	r2, #0
 8003e12:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8003e14:	68fb      	ldr	r3, [r7, #12]
 8003e16:	2200      	movs	r2, #0
 8003e18:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003e1a:	68f8      	ldr	r0, [r7, #12]
 8003e1c:	f7ff fee4 	bl	8003be8 <HAL_UART_ErrorCallback>
 8003e20:	bf00      	nop
 8003e22:	3710      	adds	r7, #16
 8003e24:	46bd      	mov	sp, r7
 8003e26:	bd80      	pop	{r7, pc}

08003e28 <UART_Transmit_IT>:
 8003e28:	b480      	push	{r7}
 8003e2a:	b085      	sub	sp, #20
 8003e2c:	af00      	add	r7, sp, #0
 8003e2e:	6078      	str	r0, [r7, #4]
 8003e30:	687b      	ldr	r3, [r7, #4]
 8003e32:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003e36:	b2db      	uxtb	r3, r3
 8003e38:	2b21      	cmp	r3, #33	@ 0x21
 8003e3a:	d13e      	bne.n	8003eba <UART_Transmit_IT+0x92>
 8003e3c:	687b      	ldr	r3, [r7, #4]
 8003e3e:	689b      	ldr	r3, [r3, #8]
 8003e40:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003e44:	d114      	bne.n	8003e70 <UART_Transmit_IT+0x48>
 8003e46:	687b      	ldr	r3, [r7, #4]
 8003e48:	691b      	ldr	r3, [r3, #16]
 8003e4a:	2b00      	cmp	r3, #0
 8003e4c:	d110      	bne.n	8003e70 <UART_Transmit_IT+0x48>
 8003e4e:	687b      	ldr	r3, [r7, #4]
 8003e50:	6a1b      	ldr	r3, [r3, #32]
 8003e52:	60fb      	str	r3, [r7, #12]
 8003e54:	68fb      	ldr	r3, [r7, #12]
 8003e56:	881b      	ldrh	r3, [r3, #0]
 8003e58:	461a      	mov	r2, r3
 8003e5a:	687b      	ldr	r3, [r7, #4]
 8003e5c:	681b      	ldr	r3, [r3, #0]
 8003e5e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003e62:	605a      	str	r2, [r3, #4]
 8003e64:	687b      	ldr	r3, [r7, #4]
 8003e66:	6a1b      	ldr	r3, [r3, #32]
 8003e68:	1c9a      	adds	r2, r3, #2
 8003e6a:	687b      	ldr	r3, [r7, #4]
 8003e6c:	621a      	str	r2, [r3, #32]
 8003e6e:	e008      	b.n	8003e82 <UART_Transmit_IT+0x5a>
 8003e70:	687b      	ldr	r3, [r7, #4]
 8003e72:	6a1b      	ldr	r3, [r3, #32]
 8003e74:	1c59      	adds	r1, r3, #1
 8003e76:	687a      	ldr	r2, [r7, #4]
 8003e78:	6211      	str	r1, [r2, #32]
 8003e7a:	781a      	ldrb	r2, [r3, #0]
 8003e7c:	687b      	ldr	r3, [r7, #4]
 8003e7e:	681b      	ldr	r3, [r3, #0]
 8003e80:	605a      	str	r2, [r3, #4]
 8003e82:	687b      	ldr	r3, [r7, #4]
 8003e84:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8003e86:	b29b      	uxth	r3, r3
 8003e88:	3b01      	subs	r3, #1
 8003e8a:	b29b      	uxth	r3, r3
 8003e8c:	687a      	ldr	r2, [r7, #4]
 8003e8e:	4619      	mov	r1, r3
 8003e90:	84d1      	strh	r1, [r2, #38]	@ 0x26
 8003e92:	2b00      	cmp	r3, #0
 8003e94:	d10f      	bne.n	8003eb6 <UART_Transmit_IT+0x8e>
 8003e96:	687b      	ldr	r3, [r7, #4]
 8003e98:	681b      	ldr	r3, [r3, #0]
 8003e9a:	68da      	ldr	r2, [r3, #12]
 8003e9c:	687b      	ldr	r3, [r7, #4]
 8003e9e:	681b      	ldr	r3, [r3, #0]
 8003ea0:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003ea4:	60da      	str	r2, [r3, #12]
 8003ea6:	687b      	ldr	r3, [r7, #4]
 8003ea8:	681b      	ldr	r3, [r3, #0]
 8003eaa:	68da      	ldr	r2, [r3, #12]
 8003eac:	687b      	ldr	r3, [r7, #4]
 8003eae:	681b      	ldr	r3, [r3, #0]
 8003eb0:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8003eb4:	60da      	str	r2, [r3, #12]
 8003eb6:	2300      	movs	r3, #0
 8003eb8:	e000      	b.n	8003ebc <UART_Transmit_IT+0x94>
 8003eba:	2302      	movs	r3, #2
 8003ebc:	4618      	mov	r0, r3
 8003ebe:	3714      	adds	r7, #20
 8003ec0:	46bd      	mov	sp, r7
 8003ec2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ec6:	4770      	bx	lr

08003ec8 <UART_EndTransmit_IT>:
 8003ec8:	b580      	push	{r7, lr}
 8003eca:	b082      	sub	sp, #8
 8003ecc:	af00      	add	r7, sp, #0
 8003ece:	6078      	str	r0, [r7, #4]
 8003ed0:	687b      	ldr	r3, [r7, #4]
 8003ed2:	681b      	ldr	r3, [r3, #0]
 8003ed4:	68da      	ldr	r2, [r3, #12]
 8003ed6:	687b      	ldr	r3, [r7, #4]
 8003ed8:	681b      	ldr	r3, [r3, #0]
 8003eda:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8003ede:	60da      	str	r2, [r3, #12]
 8003ee0:	687b      	ldr	r3, [r7, #4]
 8003ee2:	2220      	movs	r2, #32
 8003ee4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003ee8:	6878      	ldr	r0, [r7, #4]
 8003eea:	f7ff fe73 	bl	8003bd4 <HAL_UART_TxCpltCallback>
 8003eee:	2300      	movs	r3, #0
 8003ef0:	4618      	mov	r0, r3
 8003ef2:	3708      	adds	r7, #8
 8003ef4:	46bd      	mov	sp, r7
 8003ef6:	bd80      	pop	{r7, pc}

08003ef8 <UART_Receive_IT>:
 8003ef8:	b580      	push	{r7, lr}
 8003efa:	b08c      	sub	sp, #48	@ 0x30
 8003efc:	af00      	add	r7, sp, #0
 8003efe:	6078      	str	r0, [r7, #4]
 8003f00:	687b      	ldr	r3, [r7, #4]
 8003f02:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8003f06:	b2db      	uxtb	r3, r3
 8003f08:	2b22      	cmp	r3, #34	@ 0x22
 8003f0a:	f040 80ae 	bne.w	800406a <UART_Receive_IT+0x172>
 8003f0e:	687b      	ldr	r3, [r7, #4]
 8003f10:	689b      	ldr	r3, [r3, #8]
 8003f12:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003f16:	d117      	bne.n	8003f48 <UART_Receive_IT+0x50>
 8003f18:	687b      	ldr	r3, [r7, #4]
 8003f1a:	691b      	ldr	r3, [r3, #16]
 8003f1c:	2b00      	cmp	r3, #0
 8003f1e:	d113      	bne.n	8003f48 <UART_Receive_IT+0x50>
 8003f20:	2300      	movs	r3, #0
 8003f22:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003f24:	687b      	ldr	r3, [r7, #4]
 8003f26:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003f28:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003f2a:	687b      	ldr	r3, [r7, #4]
 8003f2c:	681b      	ldr	r3, [r3, #0]
 8003f2e:	685b      	ldr	r3, [r3, #4]
 8003f30:	b29b      	uxth	r3, r3
 8003f32:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003f36:	b29a      	uxth	r2, r3
 8003f38:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003f3a:	801a      	strh	r2, [r3, #0]
 8003f3c:	687b      	ldr	r3, [r7, #4]
 8003f3e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003f40:	1c9a      	adds	r2, r3, #2
 8003f42:	687b      	ldr	r3, [r7, #4]
 8003f44:	629a      	str	r2, [r3, #40]	@ 0x28
 8003f46:	e026      	b.n	8003f96 <UART_Receive_IT+0x9e>
 8003f48:	687b      	ldr	r3, [r7, #4]
 8003f4a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003f4c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003f4e:	2300      	movs	r3, #0
 8003f50:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003f52:	687b      	ldr	r3, [r7, #4]
 8003f54:	689b      	ldr	r3, [r3, #8]
 8003f56:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8003f5a:	d007      	beq.n	8003f6c <UART_Receive_IT+0x74>
 8003f5c:	687b      	ldr	r3, [r7, #4]
 8003f5e:	689b      	ldr	r3, [r3, #8]
 8003f60:	2b00      	cmp	r3, #0
 8003f62:	d10a      	bne.n	8003f7a <UART_Receive_IT+0x82>
 8003f64:	687b      	ldr	r3, [r7, #4]
 8003f66:	691b      	ldr	r3, [r3, #16]
 8003f68:	2b00      	cmp	r3, #0
 8003f6a:	d106      	bne.n	8003f7a <UART_Receive_IT+0x82>
 8003f6c:	687b      	ldr	r3, [r7, #4]
 8003f6e:	681b      	ldr	r3, [r3, #0]
 8003f70:	685b      	ldr	r3, [r3, #4]
 8003f72:	b2da      	uxtb	r2, r3
 8003f74:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003f76:	701a      	strb	r2, [r3, #0]
 8003f78:	e008      	b.n	8003f8c <UART_Receive_IT+0x94>
 8003f7a:	687b      	ldr	r3, [r7, #4]
 8003f7c:	681b      	ldr	r3, [r3, #0]
 8003f7e:	685b      	ldr	r3, [r3, #4]
 8003f80:	b2db      	uxtb	r3, r3
 8003f82:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8003f86:	b2da      	uxtb	r2, r3
 8003f88:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003f8a:	701a      	strb	r2, [r3, #0]
 8003f8c:	687b      	ldr	r3, [r7, #4]
 8003f8e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003f90:	1c5a      	adds	r2, r3, #1
 8003f92:	687b      	ldr	r3, [r7, #4]
 8003f94:	629a      	str	r2, [r3, #40]	@ 0x28
 8003f96:	687b      	ldr	r3, [r7, #4]
 8003f98:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
 8003f9a:	b29b      	uxth	r3, r3
 8003f9c:	3b01      	subs	r3, #1
 8003f9e:	b29b      	uxth	r3, r3
 8003fa0:	687a      	ldr	r2, [r7, #4]
 8003fa2:	4619      	mov	r1, r3
 8003fa4:	85d1      	strh	r1, [r2, #46]	@ 0x2e
 8003fa6:	2b00      	cmp	r3, #0
 8003fa8:	d15d      	bne.n	8004066 <UART_Receive_IT+0x16e>
 8003faa:	687b      	ldr	r3, [r7, #4]
 8003fac:	681b      	ldr	r3, [r3, #0]
 8003fae:	68da      	ldr	r2, [r3, #12]
 8003fb0:	687b      	ldr	r3, [r7, #4]
 8003fb2:	681b      	ldr	r3, [r3, #0]
 8003fb4:	f022 0220 	bic.w	r2, r2, #32
 8003fb8:	60da      	str	r2, [r3, #12]
 8003fba:	687b      	ldr	r3, [r7, #4]
 8003fbc:	681b      	ldr	r3, [r3, #0]
 8003fbe:	68da      	ldr	r2, [r3, #12]
 8003fc0:	687b      	ldr	r3, [r7, #4]
 8003fc2:	681b      	ldr	r3, [r3, #0]
 8003fc4:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8003fc8:	60da      	str	r2, [r3, #12]
 8003fca:	687b      	ldr	r3, [r7, #4]
 8003fcc:	681b      	ldr	r3, [r3, #0]
 8003fce:	695a      	ldr	r2, [r3, #20]
 8003fd0:	687b      	ldr	r3, [r7, #4]
 8003fd2:	681b      	ldr	r3, [r3, #0]
 8003fd4:	f022 0201 	bic.w	r2, r2, #1
 8003fd8:	615a      	str	r2, [r3, #20]
 8003fda:	687b      	ldr	r3, [r7, #4]
 8003fdc:	2220      	movs	r2, #32
 8003fde:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003fe2:	687b      	ldr	r3, [r7, #4]
 8003fe4:	2200      	movs	r2, #0
 8003fe6:	635a      	str	r2, [r3, #52]	@ 0x34
 8003fe8:	687b      	ldr	r3, [r7, #4]
 8003fea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003fec:	2b01      	cmp	r3, #1
 8003fee:	d135      	bne.n	800405c <UART_Receive_IT+0x164>
 8003ff0:	687b      	ldr	r3, [r7, #4]
 8003ff2:	2200      	movs	r2, #0
 8003ff4:	631a      	str	r2, [r3, #48]	@ 0x30
 8003ff6:	687b      	ldr	r3, [r7, #4]
 8003ff8:	681b      	ldr	r3, [r3, #0]
 8003ffa:	330c      	adds	r3, #12
 8003ffc:	617b      	str	r3, [r7, #20]
 8003ffe:	697b      	ldr	r3, [r7, #20]
 8004000:	e853 3f00 	ldrex	r3, [r3]
 8004004:	613b      	str	r3, [r7, #16]
 8004006:	693b      	ldr	r3, [r7, #16]
 8004008:	f023 0310 	bic.w	r3, r3, #16
 800400c:	627b      	str	r3, [r7, #36]	@ 0x24
 800400e:	687b      	ldr	r3, [r7, #4]
 8004010:	681b      	ldr	r3, [r3, #0]
 8004012:	330c      	adds	r3, #12
 8004014:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004016:	623a      	str	r2, [r7, #32]
 8004018:	61fb      	str	r3, [r7, #28]
 800401a:	69f9      	ldr	r1, [r7, #28]
 800401c:	6a3a      	ldr	r2, [r7, #32]
 800401e:	e841 2300 	strex	r3, r2, [r1]
 8004022:	61bb      	str	r3, [r7, #24]
 8004024:	69bb      	ldr	r3, [r7, #24]
 8004026:	2b00      	cmp	r3, #0
 8004028:	d1e5      	bne.n	8003ff6 <UART_Receive_IT+0xfe>
 800402a:	687b      	ldr	r3, [r7, #4]
 800402c:	681b      	ldr	r3, [r3, #0]
 800402e:	681b      	ldr	r3, [r3, #0]
 8004030:	f003 0310 	and.w	r3, r3, #16
 8004034:	2b10      	cmp	r3, #16
 8004036:	d10a      	bne.n	800404e <UART_Receive_IT+0x156>
 8004038:	2300      	movs	r3, #0
 800403a:	60fb      	str	r3, [r7, #12]
 800403c:	687b      	ldr	r3, [r7, #4]
 800403e:	681b      	ldr	r3, [r3, #0]
 8004040:	681b      	ldr	r3, [r3, #0]
 8004042:	60fb      	str	r3, [r7, #12]
 8004044:	687b      	ldr	r3, [r7, #4]
 8004046:	681b      	ldr	r3, [r3, #0]
 8004048:	685b      	ldr	r3, [r3, #4]
 800404a:	60fb      	str	r3, [r7, #12]
 800404c:	68fb      	ldr	r3, [r7, #12]
 800404e:	687b      	ldr	r3, [r7, #4]
 8004050:	8d9b      	ldrh	r3, [r3, #44]	@ 0x2c
 8004052:	4619      	mov	r1, r3
 8004054:	6878      	ldr	r0, [r7, #4]
 8004056:	f7ff fdd1 	bl	8003bfc <HAL_UARTEx_RxEventCallback>
 800405a:	e002      	b.n	8004062 <UART_Receive_IT+0x16a>
 800405c:	6878      	ldr	r0, [r7, #4]
 800405e:	f7fc fe6b 	bl	8000d38 <HAL_UART_RxCpltCallback>
 8004062:	2300      	movs	r3, #0
 8004064:	e002      	b.n	800406c <UART_Receive_IT+0x174>
 8004066:	2300      	movs	r3, #0
 8004068:	e000      	b.n	800406c <UART_Receive_IT+0x174>
 800406a:	2302      	movs	r3, #2
 800406c:	4618      	mov	r0, r3
 800406e:	3730      	adds	r7, #48	@ 0x30
 8004070:	46bd      	mov	sp, r7
 8004072:	bd80      	pop	{r7, pc}

08004074 <UART_SetConfig>:
 8004074:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004078:	b0c0      	sub	sp, #256	@ 0x100
 800407a:	af00      	add	r7, sp, #0
 800407c:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8004080:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004084:	681b      	ldr	r3, [r3, #0]
 8004086:	691b      	ldr	r3, [r3, #16]
 8004088:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 800408c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004090:	68d9      	ldr	r1, [r3, #12]
 8004092:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004096:	681a      	ldr	r2, [r3, #0]
 8004098:	ea40 0301 	orr.w	r3, r0, r1
 800409c:	6113      	str	r3, [r2, #16]
 800409e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80040a2:	689a      	ldr	r2, [r3, #8]
 80040a4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80040a8:	691b      	ldr	r3, [r3, #16]
 80040aa:	431a      	orrs	r2, r3
 80040ac:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80040b0:	695b      	ldr	r3, [r3, #20]
 80040b2:	431a      	orrs	r2, r3
 80040b4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80040b8:	69db      	ldr	r3, [r3, #28]
 80040ba:	4313      	orrs	r3, r2
 80040bc:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 80040c0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80040c4:	681b      	ldr	r3, [r3, #0]
 80040c6:	68db      	ldr	r3, [r3, #12]
 80040c8:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 80040cc:	f021 010c 	bic.w	r1, r1, #12
 80040d0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80040d4:	681a      	ldr	r2, [r3, #0]
 80040d6:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 80040da:	430b      	orrs	r3, r1
 80040dc:	60d3      	str	r3, [r2, #12]
 80040de:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80040e2:	681b      	ldr	r3, [r3, #0]
 80040e4:	695b      	ldr	r3, [r3, #20]
 80040e6:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 80040ea:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80040ee:	6999      	ldr	r1, [r3, #24]
 80040f0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80040f4:	681a      	ldr	r2, [r3, #0]
 80040f6:	ea40 0301 	orr.w	r3, r0, r1
 80040fa:	6153      	str	r3, [r2, #20]
 80040fc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004100:	681a      	ldr	r2, [r3, #0]
 8004102:	4b8f      	ldr	r3, [pc, #572]	@ (8004340 <UART_SetConfig+0x2cc>)
 8004104:	429a      	cmp	r2, r3
 8004106:	d005      	beq.n	8004114 <UART_SetConfig+0xa0>
 8004108:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800410c:	681a      	ldr	r2, [r3, #0]
 800410e:	4b8d      	ldr	r3, [pc, #564]	@ (8004344 <UART_SetConfig+0x2d0>)
 8004110:	429a      	cmp	r2, r3
 8004112:	d104      	bne.n	800411e <UART_SetConfig+0xaa>
 8004114:	f7ff f9b8 	bl	8003488 <HAL_RCC_GetPCLK2Freq>
 8004118:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 800411c:	e003      	b.n	8004126 <UART_SetConfig+0xb2>
 800411e:	f7ff f99f 	bl	8003460 <HAL_RCC_GetPCLK1Freq>
 8004122:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 8004126:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800412a:	69db      	ldr	r3, [r3, #28]
 800412c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8004130:	f040 810c 	bne.w	800434c <UART_SetConfig+0x2d8>
 8004134:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8004138:	2200      	movs	r2, #0
 800413a:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 800413e:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 8004142:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 8004146:	4622      	mov	r2, r4
 8004148:	462b      	mov	r3, r5
 800414a:	1891      	adds	r1, r2, r2
 800414c:	65b9      	str	r1, [r7, #88]	@ 0x58
 800414e:	415b      	adcs	r3, r3
 8004150:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8004152:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8004156:	4621      	mov	r1, r4
 8004158:	eb12 0801 	adds.w	r8, r2, r1
 800415c:	4629      	mov	r1, r5
 800415e:	eb43 0901 	adc.w	r9, r3, r1
 8004162:	f04f 0200 	mov.w	r2, #0
 8004166:	f04f 0300 	mov.w	r3, #0
 800416a:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800416e:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8004172:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8004176:	4690      	mov	r8, r2
 8004178:	4699      	mov	r9, r3
 800417a:	4623      	mov	r3, r4
 800417c:	eb18 0303 	adds.w	r3, r8, r3
 8004180:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8004184:	462b      	mov	r3, r5
 8004186:	eb49 0303 	adc.w	r3, r9, r3
 800418a:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 800418e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004192:	685b      	ldr	r3, [r3, #4]
 8004194:	2200      	movs	r2, #0
 8004196:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800419a:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 800419e:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 80041a2:	460b      	mov	r3, r1
 80041a4:	18db      	adds	r3, r3, r3
 80041a6:	653b      	str	r3, [r7, #80]	@ 0x50
 80041a8:	4613      	mov	r3, r2
 80041aa:	eb42 0303 	adc.w	r3, r2, r3
 80041ae:	657b      	str	r3, [r7, #84]	@ 0x54
 80041b0:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 80041b4:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 80041b8:	f7fc f862 	bl	8000280 <__aeabi_uldivmod>
 80041bc:	4602      	mov	r2, r0
 80041be:	460b      	mov	r3, r1
 80041c0:	4b61      	ldr	r3, [pc, #388]	@ (8004348 <UART_SetConfig+0x2d4>)
 80041c2:	fba3 2302 	umull	r2, r3, r3, r2
 80041c6:	095b      	lsrs	r3, r3, #5
 80041c8:	011c      	lsls	r4, r3, #4
 80041ca:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80041ce:	2200      	movs	r2, #0
 80041d0:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80041d4:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 80041d8:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 80041dc:	4642      	mov	r2, r8
 80041de:	464b      	mov	r3, r9
 80041e0:	1891      	adds	r1, r2, r2
 80041e2:	64b9      	str	r1, [r7, #72]	@ 0x48
 80041e4:	415b      	adcs	r3, r3
 80041e6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 80041e8:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 80041ec:	4641      	mov	r1, r8
 80041ee:	eb12 0a01 	adds.w	sl, r2, r1
 80041f2:	4649      	mov	r1, r9
 80041f4:	eb43 0b01 	adc.w	fp, r3, r1
 80041f8:	f04f 0200 	mov.w	r2, #0
 80041fc:	f04f 0300 	mov.w	r3, #0
 8004200:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8004204:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8004208:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800420c:	4692      	mov	sl, r2
 800420e:	469b      	mov	fp, r3
 8004210:	4643      	mov	r3, r8
 8004212:	eb1a 0303 	adds.w	r3, sl, r3
 8004216:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800421a:	464b      	mov	r3, r9
 800421c:	eb4b 0303 	adc.w	r3, fp, r3
 8004220:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8004224:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004228:	685b      	ldr	r3, [r3, #4]
 800422a:	2200      	movs	r2, #0
 800422c:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8004230:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 8004234:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 8004238:	460b      	mov	r3, r1
 800423a:	18db      	adds	r3, r3, r3
 800423c:	643b      	str	r3, [r7, #64]	@ 0x40
 800423e:	4613      	mov	r3, r2
 8004240:	eb42 0303 	adc.w	r3, r2, r3
 8004244:	647b      	str	r3, [r7, #68]	@ 0x44
 8004246:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 800424a:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 800424e:	f7fc f817 	bl	8000280 <__aeabi_uldivmod>
 8004252:	4602      	mov	r2, r0
 8004254:	460b      	mov	r3, r1
 8004256:	4611      	mov	r1, r2
 8004258:	4b3b      	ldr	r3, [pc, #236]	@ (8004348 <UART_SetConfig+0x2d4>)
 800425a:	fba3 2301 	umull	r2, r3, r3, r1
 800425e:	095b      	lsrs	r3, r3, #5
 8004260:	2264      	movs	r2, #100	@ 0x64
 8004262:	fb02 f303 	mul.w	r3, r2, r3
 8004266:	1acb      	subs	r3, r1, r3
 8004268:	00db      	lsls	r3, r3, #3
 800426a:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 800426e:	4b36      	ldr	r3, [pc, #216]	@ (8004348 <UART_SetConfig+0x2d4>)
 8004270:	fba3 2302 	umull	r2, r3, r3, r2
 8004274:	095b      	lsrs	r3, r3, #5
 8004276:	005b      	lsls	r3, r3, #1
 8004278:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 800427c:	441c      	add	r4, r3
 800427e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8004282:	2200      	movs	r2, #0
 8004284:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8004288:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 800428c:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8004290:	4642      	mov	r2, r8
 8004292:	464b      	mov	r3, r9
 8004294:	1891      	adds	r1, r2, r2
 8004296:	63b9      	str	r1, [r7, #56]	@ 0x38
 8004298:	415b      	adcs	r3, r3
 800429a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800429c:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 80042a0:	4641      	mov	r1, r8
 80042a2:	1851      	adds	r1, r2, r1
 80042a4:	6339      	str	r1, [r7, #48]	@ 0x30
 80042a6:	4649      	mov	r1, r9
 80042a8:	414b      	adcs	r3, r1
 80042aa:	637b      	str	r3, [r7, #52]	@ 0x34
 80042ac:	f04f 0200 	mov.w	r2, #0
 80042b0:	f04f 0300 	mov.w	r3, #0
 80042b4:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 80042b8:	4659      	mov	r1, fp
 80042ba:	00cb      	lsls	r3, r1, #3
 80042bc:	4651      	mov	r1, sl
 80042be:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80042c2:	4651      	mov	r1, sl
 80042c4:	00ca      	lsls	r2, r1, #3
 80042c6:	4610      	mov	r0, r2
 80042c8:	4619      	mov	r1, r3
 80042ca:	4603      	mov	r3, r0
 80042cc:	4642      	mov	r2, r8
 80042ce:	189b      	adds	r3, r3, r2
 80042d0:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80042d4:	464b      	mov	r3, r9
 80042d6:	460a      	mov	r2, r1
 80042d8:	eb42 0303 	adc.w	r3, r2, r3
 80042dc:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80042e0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80042e4:	685b      	ldr	r3, [r3, #4]
 80042e6:	2200      	movs	r2, #0
 80042e8:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 80042ec:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 80042f0:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 80042f4:	460b      	mov	r3, r1
 80042f6:	18db      	adds	r3, r3, r3
 80042f8:	62bb      	str	r3, [r7, #40]	@ 0x28
 80042fa:	4613      	mov	r3, r2
 80042fc:	eb42 0303 	adc.w	r3, r2, r3
 8004300:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004302:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8004306:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 800430a:	f7fb ffb9 	bl	8000280 <__aeabi_uldivmod>
 800430e:	4602      	mov	r2, r0
 8004310:	460b      	mov	r3, r1
 8004312:	4b0d      	ldr	r3, [pc, #52]	@ (8004348 <UART_SetConfig+0x2d4>)
 8004314:	fba3 1302 	umull	r1, r3, r3, r2
 8004318:	095b      	lsrs	r3, r3, #5
 800431a:	2164      	movs	r1, #100	@ 0x64
 800431c:	fb01 f303 	mul.w	r3, r1, r3
 8004320:	1ad3      	subs	r3, r2, r3
 8004322:	00db      	lsls	r3, r3, #3
 8004324:	3332      	adds	r3, #50	@ 0x32
 8004326:	4a08      	ldr	r2, [pc, #32]	@ (8004348 <UART_SetConfig+0x2d4>)
 8004328:	fba2 2303 	umull	r2, r3, r2, r3
 800432c:	095b      	lsrs	r3, r3, #5
 800432e:	f003 0207 	and.w	r2, r3, #7
 8004332:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004336:	681b      	ldr	r3, [r3, #0]
 8004338:	4422      	add	r2, r4
 800433a:	609a      	str	r2, [r3, #8]
 800433c:	e106      	b.n	800454c <UART_SetConfig+0x4d8>
 800433e:	bf00      	nop
 8004340:	40011000 	.word	0x40011000
 8004344:	40011400 	.word	0x40011400
 8004348:	51eb851f 	.word	0x51eb851f
 800434c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8004350:	2200      	movs	r2, #0
 8004352:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8004356:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 800435a:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 800435e:	4642      	mov	r2, r8
 8004360:	464b      	mov	r3, r9
 8004362:	1891      	adds	r1, r2, r2
 8004364:	6239      	str	r1, [r7, #32]
 8004366:	415b      	adcs	r3, r3
 8004368:	627b      	str	r3, [r7, #36]	@ 0x24
 800436a:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800436e:	4641      	mov	r1, r8
 8004370:	1854      	adds	r4, r2, r1
 8004372:	4649      	mov	r1, r9
 8004374:	eb43 0501 	adc.w	r5, r3, r1
 8004378:	f04f 0200 	mov.w	r2, #0
 800437c:	f04f 0300 	mov.w	r3, #0
 8004380:	00eb      	lsls	r3, r5, #3
 8004382:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8004386:	00e2      	lsls	r2, r4, #3
 8004388:	4614      	mov	r4, r2
 800438a:	461d      	mov	r5, r3
 800438c:	4643      	mov	r3, r8
 800438e:	18e3      	adds	r3, r4, r3
 8004390:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8004394:	464b      	mov	r3, r9
 8004396:	eb45 0303 	adc.w	r3, r5, r3
 800439a:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800439e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80043a2:	685b      	ldr	r3, [r3, #4]
 80043a4:	2200      	movs	r2, #0
 80043a6:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80043aa:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 80043ae:	f04f 0200 	mov.w	r2, #0
 80043b2:	f04f 0300 	mov.w	r3, #0
 80043b6:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 80043ba:	4629      	mov	r1, r5
 80043bc:	008b      	lsls	r3, r1, #2
 80043be:	4621      	mov	r1, r4
 80043c0:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80043c4:	4621      	mov	r1, r4
 80043c6:	008a      	lsls	r2, r1, #2
 80043c8:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 80043cc:	f7fb ff58 	bl	8000280 <__aeabi_uldivmod>
 80043d0:	4602      	mov	r2, r0
 80043d2:	460b      	mov	r3, r1
 80043d4:	4b60      	ldr	r3, [pc, #384]	@ (8004558 <UART_SetConfig+0x4e4>)
 80043d6:	fba3 2302 	umull	r2, r3, r3, r2
 80043da:	095b      	lsrs	r3, r3, #5
 80043dc:	011c      	lsls	r4, r3, #4
 80043de:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80043e2:	2200      	movs	r2, #0
 80043e4:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80043e8:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 80043ec:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 80043f0:	4642      	mov	r2, r8
 80043f2:	464b      	mov	r3, r9
 80043f4:	1891      	adds	r1, r2, r2
 80043f6:	61b9      	str	r1, [r7, #24]
 80043f8:	415b      	adcs	r3, r3
 80043fa:	61fb      	str	r3, [r7, #28]
 80043fc:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004400:	4641      	mov	r1, r8
 8004402:	1851      	adds	r1, r2, r1
 8004404:	6139      	str	r1, [r7, #16]
 8004406:	4649      	mov	r1, r9
 8004408:	414b      	adcs	r3, r1
 800440a:	617b      	str	r3, [r7, #20]
 800440c:	f04f 0200 	mov.w	r2, #0
 8004410:	f04f 0300 	mov.w	r3, #0
 8004414:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8004418:	4659      	mov	r1, fp
 800441a:	00cb      	lsls	r3, r1, #3
 800441c:	4651      	mov	r1, sl
 800441e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8004422:	4651      	mov	r1, sl
 8004424:	00ca      	lsls	r2, r1, #3
 8004426:	4610      	mov	r0, r2
 8004428:	4619      	mov	r1, r3
 800442a:	4603      	mov	r3, r0
 800442c:	4642      	mov	r2, r8
 800442e:	189b      	adds	r3, r3, r2
 8004430:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8004434:	464b      	mov	r3, r9
 8004436:	460a      	mov	r2, r1
 8004438:	eb42 0303 	adc.w	r3, r2, r3
 800443c:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8004440:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004444:	685b      	ldr	r3, [r3, #4]
 8004446:	2200      	movs	r2, #0
 8004448:	67bb      	str	r3, [r7, #120]	@ 0x78
 800444a:	67fa      	str	r2, [r7, #124]	@ 0x7c
 800444c:	f04f 0200 	mov.w	r2, #0
 8004450:	f04f 0300 	mov.w	r3, #0
 8004454:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 8004458:	4649      	mov	r1, r9
 800445a:	008b      	lsls	r3, r1, #2
 800445c:	4641      	mov	r1, r8
 800445e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8004462:	4641      	mov	r1, r8
 8004464:	008a      	lsls	r2, r1, #2
 8004466:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 800446a:	f7fb ff09 	bl	8000280 <__aeabi_uldivmod>
 800446e:	4602      	mov	r2, r0
 8004470:	460b      	mov	r3, r1
 8004472:	4611      	mov	r1, r2
 8004474:	4b38      	ldr	r3, [pc, #224]	@ (8004558 <UART_SetConfig+0x4e4>)
 8004476:	fba3 2301 	umull	r2, r3, r3, r1
 800447a:	095b      	lsrs	r3, r3, #5
 800447c:	2264      	movs	r2, #100	@ 0x64
 800447e:	fb02 f303 	mul.w	r3, r2, r3
 8004482:	1acb      	subs	r3, r1, r3
 8004484:	011b      	lsls	r3, r3, #4
 8004486:	3332      	adds	r3, #50	@ 0x32
 8004488:	4a33      	ldr	r2, [pc, #204]	@ (8004558 <UART_SetConfig+0x4e4>)
 800448a:	fba2 2303 	umull	r2, r3, r2, r3
 800448e:	095b      	lsrs	r3, r3, #5
 8004490:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8004494:	441c      	add	r4, r3
 8004496:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800449a:	2200      	movs	r2, #0
 800449c:	673b      	str	r3, [r7, #112]	@ 0x70
 800449e:	677a      	str	r2, [r7, #116]	@ 0x74
 80044a0:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 80044a4:	4642      	mov	r2, r8
 80044a6:	464b      	mov	r3, r9
 80044a8:	1891      	adds	r1, r2, r2
 80044aa:	60b9      	str	r1, [r7, #8]
 80044ac:	415b      	adcs	r3, r3
 80044ae:	60fb      	str	r3, [r7, #12]
 80044b0:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80044b4:	4641      	mov	r1, r8
 80044b6:	1851      	adds	r1, r2, r1
 80044b8:	6039      	str	r1, [r7, #0]
 80044ba:	4649      	mov	r1, r9
 80044bc:	414b      	adcs	r3, r1
 80044be:	607b      	str	r3, [r7, #4]
 80044c0:	f04f 0200 	mov.w	r2, #0
 80044c4:	f04f 0300 	mov.w	r3, #0
 80044c8:	e9d7 ab00 	ldrd	sl, fp, [r7]
 80044cc:	4659      	mov	r1, fp
 80044ce:	00cb      	lsls	r3, r1, #3
 80044d0:	4651      	mov	r1, sl
 80044d2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80044d6:	4651      	mov	r1, sl
 80044d8:	00ca      	lsls	r2, r1, #3
 80044da:	4610      	mov	r0, r2
 80044dc:	4619      	mov	r1, r3
 80044de:	4603      	mov	r3, r0
 80044e0:	4642      	mov	r2, r8
 80044e2:	189b      	adds	r3, r3, r2
 80044e4:	66bb      	str	r3, [r7, #104]	@ 0x68
 80044e6:	464b      	mov	r3, r9
 80044e8:	460a      	mov	r2, r1
 80044ea:	eb42 0303 	adc.w	r3, r2, r3
 80044ee:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80044f0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80044f4:	685b      	ldr	r3, [r3, #4]
 80044f6:	2200      	movs	r2, #0
 80044f8:	663b      	str	r3, [r7, #96]	@ 0x60
 80044fa:	667a      	str	r2, [r7, #100]	@ 0x64
 80044fc:	f04f 0200 	mov.w	r2, #0
 8004500:	f04f 0300 	mov.w	r3, #0
 8004504:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8004508:	4649      	mov	r1, r9
 800450a:	008b      	lsls	r3, r1, #2
 800450c:	4641      	mov	r1, r8
 800450e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8004512:	4641      	mov	r1, r8
 8004514:	008a      	lsls	r2, r1, #2
 8004516:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 800451a:	f7fb feb1 	bl	8000280 <__aeabi_uldivmod>
 800451e:	4602      	mov	r2, r0
 8004520:	460b      	mov	r3, r1
 8004522:	4b0d      	ldr	r3, [pc, #52]	@ (8004558 <UART_SetConfig+0x4e4>)
 8004524:	fba3 1302 	umull	r1, r3, r3, r2
 8004528:	095b      	lsrs	r3, r3, #5
 800452a:	2164      	movs	r1, #100	@ 0x64
 800452c:	fb01 f303 	mul.w	r3, r1, r3
 8004530:	1ad3      	subs	r3, r2, r3
 8004532:	011b      	lsls	r3, r3, #4
 8004534:	3332      	adds	r3, #50	@ 0x32
 8004536:	4a08      	ldr	r2, [pc, #32]	@ (8004558 <UART_SetConfig+0x4e4>)
 8004538:	fba2 2303 	umull	r2, r3, r2, r3
 800453c:	095b      	lsrs	r3, r3, #5
 800453e:	f003 020f 	and.w	r2, r3, #15
 8004542:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8004546:	681b      	ldr	r3, [r3, #0]
 8004548:	4422      	add	r2, r4
 800454a:	609a      	str	r2, [r3, #8]
 800454c:	bf00      	nop
 800454e:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 8004552:	46bd      	mov	sp, r7
 8004554:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8004558:	51eb851f 	.word	0x51eb851f

0800455c <siprintf>:
 800455c:	b40e      	push	{r1, r2, r3}
 800455e:	b500      	push	{lr}
 8004560:	b09c      	sub	sp, #112	@ 0x70
 8004562:	ab1d      	add	r3, sp, #116	@ 0x74
 8004564:	9002      	str	r0, [sp, #8]
 8004566:	9006      	str	r0, [sp, #24]
 8004568:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 800456c:	4809      	ldr	r0, [pc, #36]	@ (8004594 <siprintf+0x38>)
 800456e:	9107      	str	r1, [sp, #28]
 8004570:	9104      	str	r1, [sp, #16]
 8004572:	4909      	ldr	r1, [pc, #36]	@ (8004598 <siprintf+0x3c>)
 8004574:	f853 2b04 	ldr.w	r2, [r3], #4
 8004578:	9105      	str	r1, [sp, #20]
 800457a:	6800      	ldr	r0, [r0, #0]
 800457c:	9301      	str	r3, [sp, #4]
 800457e:	a902      	add	r1, sp, #8
 8004580:	f000 f994 	bl	80048ac <_svfiprintf_r>
 8004584:	9b02      	ldr	r3, [sp, #8]
 8004586:	2200      	movs	r2, #0
 8004588:	701a      	strb	r2, [r3, #0]
 800458a:	b01c      	add	sp, #112	@ 0x70
 800458c:	f85d eb04 	ldr.w	lr, [sp], #4
 8004590:	b003      	add	sp, #12
 8004592:	4770      	bx	lr
 8004594:	20000010 	.word	0x20000010
 8004598:	ffff0208 	.word	0xffff0208

0800459c <memset>:
 800459c:	4402      	add	r2, r0
 800459e:	4603      	mov	r3, r0
 80045a0:	4293      	cmp	r3, r2
 80045a2:	d100      	bne.n	80045a6 <memset+0xa>
 80045a4:	4770      	bx	lr
 80045a6:	f803 1b01 	strb.w	r1, [r3], #1
 80045aa:	e7f9      	b.n	80045a0 <memset+0x4>

080045ac <__errno>:
 80045ac:	4b01      	ldr	r3, [pc, #4]	@ (80045b4 <__errno+0x8>)
 80045ae:	6818      	ldr	r0, [r3, #0]
 80045b0:	4770      	bx	lr
 80045b2:	bf00      	nop
 80045b4:	20000010 	.word	0x20000010

080045b8 <__libc_init_array>:
 80045b8:	b570      	push	{r4, r5, r6, lr}
 80045ba:	4d0d      	ldr	r5, [pc, #52]	@ (80045f0 <__libc_init_array+0x38>)
 80045bc:	4c0d      	ldr	r4, [pc, #52]	@ (80045f4 <__libc_init_array+0x3c>)
 80045be:	1b64      	subs	r4, r4, r5
 80045c0:	10a4      	asrs	r4, r4, #2
 80045c2:	2600      	movs	r6, #0
 80045c4:	42a6      	cmp	r6, r4
 80045c6:	d109      	bne.n	80045dc <__libc_init_array+0x24>
 80045c8:	4d0b      	ldr	r5, [pc, #44]	@ (80045f8 <__libc_init_array+0x40>)
 80045ca:	4c0c      	ldr	r4, [pc, #48]	@ (80045fc <__libc_init_array+0x44>)
 80045cc:	f000 fc66 	bl	8004e9c <_init>
 80045d0:	1b64      	subs	r4, r4, r5
 80045d2:	10a4      	asrs	r4, r4, #2
 80045d4:	2600      	movs	r6, #0
 80045d6:	42a6      	cmp	r6, r4
 80045d8:	d105      	bne.n	80045e6 <__libc_init_array+0x2e>
 80045da:	bd70      	pop	{r4, r5, r6, pc}
 80045dc:	f855 3b04 	ldr.w	r3, [r5], #4
 80045e0:	4798      	blx	r3
 80045e2:	3601      	adds	r6, #1
 80045e4:	e7ee      	b.n	80045c4 <__libc_init_array+0xc>
 80045e6:	f855 3b04 	ldr.w	r3, [r5], #4
 80045ea:	4798      	blx	r3
 80045ec:	3601      	adds	r6, #1
 80045ee:	e7f2      	b.n	80045d6 <__libc_init_array+0x1e>
 80045f0:	08004f4c 	.word	0x08004f4c
 80045f4:	08004f4c 	.word	0x08004f4c
 80045f8:	08004f4c 	.word	0x08004f4c
 80045fc:	08004f50 	.word	0x08004f50

08004600 <__retarget_lock_acquire_recursive>:
 8004600:	4770      	bx	lr

08004602 <__retarget_lock_release_recursive>:
 8004602:	4770      	bx	lr

08004604 <_free_r>:
 8004604:	b538      	push	{r3, r4, r5, lr}
 8004606:	4605      	mov	r5, r0
 8004608:	2900      	cmp	r1, #0
 800460a:	d041      	beq.n	8004690 <_free_r+0x8c>
 800460c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004610:	1f0c      	subs	r4, r1, #4
 8004612:	2b00      	cmp	r3, #0
 8004614:	bfb8      	it	lt
 8004616:	18e4      	addlt	r4, r4, r3
 8004618:	f000 f8e0 	bl	80047dc <__malloc_lock>
 800461c:	4a1d      	ldr	r2, [pc, #116]	@ (8004694 <_free_r+0x90>)
 800461e:	6813      	ldr	r3, [r2, #0]
 8004620:	b933      	cbnz	r3, 8004630 <_free_r+0x2c>
 8004622:	6063      	str	r3, [r4, #4]
 8004624:	6014      	str	r4, [r2, #0]
 8004626:	4628      	mov	r0, r5
 8004628:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800462c:	f000 b8dc 	b.w	80047e8 <__malloc_unlock>
 8004630:	42a3      	cmp	r3, r4
 8004632:	d908      	bls.n	8004646 <_free_r+0x42>
 8004634:	6820      	ldr	r0, [r4, #0]
 8004636:	1821      	adds	r1, r4, r0
 8004638:	428b      	cmp	r3, r1
 800463a:	bf01      	itttt	eq
 800463c:	6819      	ldreq	r1, [r3, #0]
 800463e:	685b      	ldreq	r3, [r3, #4]
 8004640:	1809      	addeq	r1, r1, r0
 8004642:	6021      	streq	r1, [r4, #0]
 8004644:	e7ed      	b.n	8004622 <_free_r+0x1e>
 8004646:	461a      	mov	r2, r3
 8004648:	685b      	ldr	r3, [r3, #4]
 800464a:	b10b      	cbz	r3, 8004650 <_free_r+0x4c>
 800464c:	42a3      	cmp	r3, r4
 800464e:	d9fa      	bls.n	8004646 <_free_r+0x42>
 8004650:	6811      	ldr	r1, [r2, #0]
 8004652:	1850      	adds	r0, r2, r1
 8004654:	42a0      	cmp	r0, r4
 8004656:	d10b      	bne.n	8004670 <_free_r+0x6c>
 8004658:	6820      	ldr	r0, [r4, #0]
 800465a:	4401      	add	r1, r0
 800465c:	1850      	adds	r0, r2, r1
 800465e:	4283      	cmp	r3, r0
 8004660:	6011      	str	r1, [r2, #0]
 8004662:	d1e0      	bne.n	8004626 <_free_r+0x22>
 8004664:	6818      	ldr	r0, [r3, #0]
 8004666:	685b      	ldr	r3, [r3, #4]
 8004668:	6053      	str	r3, [r2, #4]
 800466a:	4408      	add	r0, r1
 800466c:	6010      	str	r0, [r2, #0]
 800466e:	e7da      	b.n	8004626 <_free_r+0x22>
 8004670:	d902      	bls.n	8004678 <_free_r+0x74>
 8004672:	230c      	movs	r3, #12
 8004674:	602b      	str	r3, [r5, #0]
 8004676:	e7d6      	b.n	8004626 <_free_r+0x22>
 8004678:	6820      	ldr	r0, [r4, #0]
 800467a:	1821      	adds	r1, r4, r0
 800467c:	428b      	cmp	r3, r1
 800467e:	bf04      	itt	eq
 8004680:	6819      	ldreq	r1, [r3, #0]
 8004682:	685b      	ldreq	r3, [r3, #4]
 8004684:	6063      	str	r3, [r4, #4]
 8004686:	bf04      	itt	eq
 8004688:	1809      	addeq	r1, r1, r0
 800468a:	6021      	streq	r1, [r4, #0]
 800468c:	6054      	str	r4, [r2, #4]
 800468e:	e7ca      	b.n	8004626 <_free_r+0x22>
 8004690:	bd38      	pop	{r3, r4, r5, pc}
 8004692:	bf00      	nop
 8004694:	20000394 	.word	0x20000394

08004698 <sbrk_aligned>:
 8004698:	b570      	push	{r4, r5, r6, lr}
 800469a:	4e0f      	ldr	r6, [pc, #60]	@ (80046d8 <sbrk_aligned+0x40>)
 800469c:	460c      	mov	r4, r1
 800469e:	6831      	ldr	r1, [r6, #0]
 80046a0:	4605      	mov	r5, r0
 80046a2:	b911      	cbnz	r1, 80046aa <sbrk_aligned+0x12>
 80046a4:	f000 fba6 	bl	8004df4 <_sbrk_r>
 80046a8:	6030      	str	r0, [r6, #0]
 80046aa:	4621      	mov	r1, r4
 80046ac:	4628      	mov	r0, r5
 80046ae:	f000 fba1 	bl	8004df4 <_sbrk_r>
 80046b2:	1c43      	adds	r3, r0, #1
 80046b4:	d103      	bne.n	80046be <sbrk_aligned+0x26>
 80046b6:	f04f 34ff 	mov.w	r4, #4294967295
 80046ba:	4620      	mov	r0, r4
 80046bc:	bd70      	pop	{r4, r5, r6, pc}
 80046be:	1cc4      	adds	r4, r0, #3
 80046c0:	f024 0403 	bic.w	r4, r4, #3
 80046c4:	42a0      	cmp	r0, r4
 80046c6:	d0f8      	beq.n	80046ba <sbrk_aligned+0x22>
 80046c8:	1a21      	subs	r1, r4, r0
 80046ca:	4628      	mov	r0, r5
 80046cc:	f000 fb92 	bl	8004df4 <_sbrk_r>
 80046d0:	3001      	adds	r0, #1
 80046d2:	d1f2      	bne.n	80046ba <sbrk_aligned+0x22>
 80046d4:	e7ef      	b.n	80046b6 <sbrk_aligned+0x1e>
 80046d6:	bf00      	nop
 80046d8:	20000390 	.word	0x20000390

080046dc <_malloc_r>:
 80046dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80046e0:	1ccd      	adds	r5, r1, #3
 80046e2:	f025 0503 	bic.w	r5, r5, #3
 80046e6:	3508      	adds	r5, #8
 80046e8:	2d0c      	cmp	r5, #12
 80046ea:	bf38      	it	cc
 80046ec:	250c      	movcc	r5, #12
 80046ee:	2d00      	cmp	r5, #0
 80046f0:	4606      	mov	r6, r0
 80046f2:	db01      	blt.n	80046f8 <_malloc_r+0x1c>
 80046f4:	42a9      	cmp	r1, r5
 80046f6:	d904      	bls.n	8004702 <_malloc_r+0x26>
 80046f8:	230c      	movs	r3, #12
 80046fa:	6033      	str	r3, [r6, #0]
 80046fc:	2000      	movs	r0, #0
 80046fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004702:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80047d8 <_malloc_r+0xfc>
 8004706:	f000 f869 	bl	80047dc <__malloc_lock>
 800470a:	f8d8 3000 	ldr.w	r3, [r8]
 800470e:	461c      	mov	r4, r3
 8004710:	bb44      	cbnz	r4, 8004764 <_malloc_r+0x88>
 8004712:	4629      	mov	r1, r5
 8004714:	4630      	mov	r0, r6
 8004716:	f7ff ffbf 	bl	8004698 <sbrk_aligned>
 800471a:	1c43      	adds	r3, r0, #1
 800471c:	4604      	mov	r4, r0
 800471e:	d158      	bne.n	80047d2 <_malloc_r+0xf6>
 8004720:	f8d8 4000 	ldr.w	r4, [r8]
 8004724:	4627      	mov	r7, r4
 8004726:	2f00      	cmp	r7, #0
 8004728:	d143      	bne.n	80047b2 <_malloc_r+0xd6>
 800472a:	2c00      	cmp	r4, #0
 800472c:	d04b      	beq.n	80047c6 <_malloc_r+0xea>
 800472e:	6823      	ldr	r3, [r4, #0]
 8004730:	4639      	mov	r1, r7
 8004732:	4630      	mov	r0, r6
 8004734:	eb04 0903 	add.w	r9, r4, r3
 8004738:	f000 fb5c 	bl	8004df4 <_sbrk_r>
 800473c:	4581      	cmp	r9, r0
 800473e:	d142      	bne.n	80047c6 <_malloc_r+0xea>
 8004740:	6821      	ldr	r1, [r4, #0]
 8004742:	1a6d      	subs	r5, r5, r1
 8004744:	4629      	mov	r1, r5
 8004746:	4630      	mov	r0, r6
 8004748:	f7ff ffa6 	bl	8004698 <sbrk_aligned>
 800474c:	3001      	adds	r0, #1
 800474e:	d03a      	beq.n	80047c6 <_malloc_r+0xea>
 8004750:	6823      	ldr	r3, [r4, #0]
 8004752:	442b      	add	r3, r5
 8004754:	6023      	str	r3, [r4, #0]
 8004756:	f8d8 3000 	ldr.w	r3, [r8]
 800475a:	685a      	ldr	r2, [r3, #4]
 800475c:	bb62      	cbnz	r2, 80047b8 <_malloc_r+0xdc>
 800475e:	f8c8 7000 	str.w	r7, [r8]
 8004762:	e00f      	b.n	8004784 <_malloc_r+0xa8>
 8004764:	6822      	ldr	r2, [r4, #0]
 8004766:	1b52      	subs	r2, r2, r5
 8004768:	d420      	bmi.n	80047ac <_malloc_r+0xd0>
 800476a:	2a0b      	cmp	r2, #11
 800476c:	d917      	bls.n	800479e <_malloc_r+0xc2>
 800476e:	1961      	adds	r1, r4, r5
 8004770:	42a3      	cmp	r3, r4
 8004772:	6025      	str	r5, [r4, #0]
 8004774:	bf18      	it	ne
 8004776:	6059      	strne	r1, [r3, #4]
 8004778:	6863      	ldr	r3, [r4, #4]
 800477a:	bf08      	it	eq
 800477c:	f8c8 1000 	streq.w	r1, [r8]
 8004780:	5162      	str	r2, [r4, r5]
 8004782:	604b      	str	r3, [r1, #4]
 8004784:	4630      	mov	r0, r6
 8004786:	f000 f82f 	bl	80047e8 <__malloc_unlock>
 800478a:	f104 000b 	add.w	r0, r4, #11
 800478e:	1d23      	adds	r3, r4, #4
 8004790:	f020 0007 	bic.w	r0, r0, #7
 8004794:	1ac2      	subs	r2, r0, r3
 8004796:	bf1c      	itt	ne
 8004798:	1a1b      	subne	r3, r3, r0
 800479a:	50a3      	strne	r3, [r4, r2]
 800479c:	e7af      	b.n	80046fe <_malloc_r+0x22>
 800479e:	6862      	ldr	r2, [r4, #4]
 80047a0:	42a3      	cmp	r3, r4
 80047a2:	bf0c      	ite	eq
 80047a4:	f8c8 2000 	streq.w	r2, [r8]
 80047a8:	605a      	strne	r2, [r3, #4]
 80047aa:	e7eb      	b.n	8004784 <_malloc_r+0xa8>
 80047ac:	4623      	mov	r3, r4
 80047ae:	6864      	ldr	r4, [r4, #4]
 80047b0:	e7ae      	b.n	8004710 <_malloc_r+0x34>
 80047b2:	463c      	mov	r4, r7
 80047b4:	687f      	ldr	r7, [r7, #4]
 80047b6:	e7b6      	b.n	8004726 <_malloc_r+0x4a>
 80047b8:	461a      	mov	r2, r3
 80047ba:	685b      	ldr	r3, [r3, #4]
 80047bc:	42a3      	cmp	r3, r4
 80047be:	d1fb      	bne.n	80047b8 <_malloc_r+0xdc>
 80047c0:	2300      	movs	r3, #0
 80047c2:	6053      	str	r3, [r2, #4]
 80047c4:	e7de      	b.n	8004784 <_malloc_r+0xa8>
 80047c6:	230c      	movs	r3, #12
 80047c8:	6033      	str	r3, [r6, #0]
 80047ca:	4630      	mov	r0, r6
 80047cc:	f000 f80c 	bl	80047e8 <__malloc_unlock>
 80047d0:	e794      	b.n	80046fc <_malloc_r+0x20>
 80047d2:	6005      	str	r5, [r0, #0]
 80047d4:	e7d6      	b.n	8004784 <_malloc_r+0xa8>
 80047d6:	bf00      	nop
 80047d8:	20000394 	.word	0x20000394

080047dc <__malloc_lock>:
 80047dc:	4801      	ldr	r0, [pc, #4]	@ (80047e4 <__malloc_lock+0x8>)
 80047de:	f7ff bf0f 	b.w	8004600 <__retarget_lock_acquire_recursive>
 80047e2:	bf00      	nop
 80047e4:	2000038c 	.word	0x2000038c

080047e8 <__malloc_unlock>:
 80047e8:	4801      	ldr	r0, [pc, #4]	@ (80047f0 <__malloc_unlock+0x8>)
 80047ea:	f7ff bf0a 	b.w	8004602 <__retarget_lock_release_recursive>
 80047ee:	bf00      	nop
 80047f0:	2000038c 	.word	0x2000038c

080047f4 <__ssputs_r>:
 80047f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80047f8:	688e      	ldr	r6, [r1, #8]
 80047fa:	461f      	mov	r7, r3
 80047fc:	42be      	cmp	r6, r7
 80047fe:	680b      	ldr	r3, [r1, #0]
 8004800:	4682      	mov	sl, r0
 8004802:	460c      	mov	r4, r1
 8004804:	4690      	mov	r8, r2
 8004806:	d82d      	bhi.n	8004864 <__ssputs_r+0x70>
 8004808:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800480c:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8004810:	d026      	beq.n	8004860 <__ssputs_r+0x6c>
 8004812:	6965      	ldr	r5, [r4, #20]
 8004814:	6909      	ldr	r1, [r1, #16]
 8004816:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800481a:	eba3 0901 	sub.w	r9, r3, r1
 800481e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8004822:	1c7b      	adds	r3, r7, #1
 8004824:	444b      	add	r3, r9
 8004826:	106d      	asrs	r5, r5, #1
 8004828:	429d      	cmp	r5, r3
 800482a:	bf38      	it	cc
 800482c:	461d      	movcc	r5, r3
 800482e:	0553      	lsls	r3, r2, #21
 8004830:	d527      	bpl.n	8004882 <__ssputs_r+0x8e>
 8004832:	4629      	mov	r1, r5
 8004834:	f7ff ff52 	bl	80046dc <_malloc_r>
 8004838:	4606      	mov	r6, r0
 800483a:	b360      	cbz	r0, 8004896 <__ssputs_r+0xa2>
 800483c:	6921      	ldr	r1, [r4, #16]
 800483e:	464a      	mov	r2, r9
 8004840:	f000 fae8 	bl	8004e14 <memcpy>
 8004844:	89a3      	ldrh	r3, [r4, #12]
 8004846:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 800484a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800484e:	81a3      	strh	r3, [r4, #12]
 8004850:	6126      	str	r6, [r4, #16]
 8004852:	6165      	str	r5, [r4, #20]
 8004854:	444e      	add	r6, r9
 8004856:	eba5 0509 	sub.w	r5, r5, r9
 800485a:	6026      	str	r6, [r4, #0]
 800485c:	60a5      	str	r5, [r4, #8]
 800485e:	463e      	mov	r6, r7
 8004860:	42be      	cmp	r6, r7
 8004862:	d900      	bls.n	8004866 <__ssputs_r+0x72>
 8004864:	463e      	mov	r6, r7
 8004866:	6820      	ldr	r0, [r4, #0]
 8004868:	4632      	mov	r2, r6
 800486a:	4641      	mov	r1, r8
 800486c:	f000 faa8 	bl	8004dc0 <memmove>
 8004870:	68a3      	ldr	r3, [r4, #8]
 8004872:	1b9b      	subs	r3, r3, r6
 8004874:	60a3      	str	r3, [r4, #8]
 8004876:	6823      	ldr	r3, [r4, #0]
 8004878:	4433      	add	r3, r6
 800487a:	6023      	str	r3, [r4, #0]
 800487c:	2000      	movs	r0, #0
 800487e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004882:	462a      	mov	r2, r5
 8004884:	f000 fad4 	bl	8004e30 <_realloc_r>
 8004888:	4606      	mov	r6, r0
 800488a:	2800      	cmp	r0, #0
 800488c:	d1e0      	bne.n	8004850 <__ssputs_r+0x5c>
 800488e:	6921      	ldr	r1, [r4, #16]
 8004890:	4650      	mov	r0, sl
 8004892:	f7ff feb7 	bl	8004604 <_free_r>
 8004896:	230c      	movs	r3, #12
 8004898:	f8ca 3000 	str.w	r3, [sl]
 800489c:	89a3      	ldrh	r3, [r4, #12]
 800489e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80048a2:	81a3      	strh	r3, [r4, #12]
 80048a4:	f04f 30ff 	mov.w	r0, #4294967295
 80048a8:	e7e9      	b.n	800487e <__ssputs_r+0x8a>
	...

080048ac <_svfiprintf_r>:
 80048ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80048b0:	4698      	mov	r8, r3
 80048b2:	898b      	ldrh	r3, [r1, #12]
 80048b4:	061b      	lsls	r3, r3, #24
 80048b6:	b09d      	sub	sp, #116	@ 0x74
 80048b8:	4607      	mov	r7, r0
 80048ba:	460d      	mov	r5, r1
 80048bc:	4614      	mov	r4, r2
 80048be:	d510      	bpl.n	80048e2 <_svfiprintf_r+0x36>
 80048c0:	690b      	ldr	r3, [r1, #16]
 80048c2:	b973      	cbnz	r3, 80048e2 <_svfiprintf_r+0x36>
 80048c4:	2140      	movs	r1, #64	@ 0x40
 80048c6:	f7ff ff09 	bl	80046dc <_malloc_r>
 80048ca:	6028      	str	r0, [r5, #0]
 80048cc:	6128      	str	r0, [r5, #16]
 80048ce:	b930      	cbnz	r0, 80048de <_svfiprintf_r+0x32>
 80048d0:	230c      	movs	r3, #12
 80048d2:	603b      	str	r3, [r7, #0]
 80048d4:	f04f 30ff 	mov.w	r0, #4294967295
 80048d8:	b01d      	add	sp, #116	@ 0x74
 80048da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80048de:	2340      	movs	r3, #64	@ 0x40
 80048e0:	616b      	str	r3, [r5, #20]
 80048e2:	2300      	movs	r3, #0
 80048e4:	9309      	str	r3, [sp, #36]	@ 0x24
 80048e6:	2320      	movs	r3, #32
 80048e8:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80048ec:	f8cd 800c 	str.w	r8, [sp, #12]
 80048f0:	2330      	movs	r3, #48	@ 0x30
 80048f2:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8004a90 <_svfiprintf_r+0x1e4>
 80048f6:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80048fa:	f04f 0901 	mov.w	r9, #1
 80048fe:	4623      	mov	r3, r4
 8004900:	469a      	mov	sl, r3
 8004902:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004906:	b10a      	cbz	r2, 800490c <_svfiprintf_r+0x60>
 8004908:	2a25      	cmp	r2, #37	@ 0x25
 800490a:	d1f9      	bne.n	8004900 <_svfiprintf_r+0x54>
 800490c:	ebba 0b04 	subs.w	fp, sl, r4
 8004910:	d00b      	beq.n	800492a <_svfiprintf_r+0x7e>
 8004912:	465b      	mov	r3, fp
 8004914:	4622      	mov	r2, r4
 8004916:	4629      	mov	r1, r5
 8004918:	4638      	mov	r0, r7
 800491a:	f7ff ff6b 	bl	80047f4 <__ssputs_r>
 800491e:	3001      	adds	r0, #1
 8004920:	f000 80a7 	beq.w	8004a72 <_svfiprintf_r+0x1c6>
 8004924:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004926:	445a      	add	r2, fp
 8004928:	9209      	str	r2, [sp, #36]	@ 0x24
 800492a:	f89a 3000 	ldrb.w	r3, [sl]
 800492e:	2b00      	cmp	r3, #0
 8004930:	f000 809f 	beq.w	8004a72 <_svfiprintf_r+0x1c6>
 8004934:	2300      	movs	r3, #0
 8004936:	f04f 32ff 	mov.w	r2, #4294967295
 800493a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800493e:	f10a 0a01 	add.w	sl, sl, #1
 8004942:	9304      	str	r3, [sp, #16]
 8004944:	9307      	str	r3, [sp, #28]
 8004946:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800494a:	931a      	str	r3, [sp, #104]	@ 0x68
 800494c:	4654      	mov	r4, sl
 800494e:	2205      	movs	r2, #5
 8004950:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004954:	484e      	ldr	r0, [pc, #312]	@ (8004a90 <_svfiprintf_r+0x1e4>)
 8004956:	f7fb fc43 	bl	80001e0 <memchr>
 800495a:	9a04      	ldr	r2, [sp, #16]
 800495c:	b9d8      	cbnz	r0, 8004996 <_svfiprintf_r+0xea>
 800495e:	06d0      	lsls	r0, r2, #27
 8004960:	bf44      	itt	mi
 8004962:	2320      	movmi	r3, #32
 8004964:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004968:	0711      	lsls	r1, r2, #28
 800496a:	bf44      	itt	mi
 800496c:	232b      	movmi	r3, #43	@ 0x2b
 800496e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004972:	f89a 3000 	ldrb.w	r3, [sl]
 8004976:	2b2a      	cmp	r3, #42	@ 0x2a
 8004978:	d015      	beq.n	80049a6 <_svfiprintf_r+0xfa>
 800497a:	9a07      	ldr	r2, [sp, #28]
 800497c:	4654      	mov	r4, sl
 800497e:	2000      	movs	r0, #0
 8004980:	f04f 0c0a 	mov.w	ip, #10
 8004984:	4621      	mov	r1, r4
 8004986:	f811 3b01 	ldrb.w	r3, [r1], #1
 800498a:	3b30      	subs	r3, #48	@ 0x30
 800498c:	2b09      	cmp	r3, #9
 800498e:	d94b      	bls.n	8004a28 <_svfiprintf_r+0x17c>
 8004990:	b1b0      	cbz	r0, 80049c0 <_svfiprintf_r+0x114>
 8004992:	9207      	str	r2, [sp, #28]
 8004994:	e014      	b.n	80049c0 <_svfiprintf_r+0x114>
 8004996:	eba0 0308 	sub.w	r3, r0, r8
 800499a:	fa09 f303 	lsl.w	r3, r9, r3
 800499e:	4313      	orrs	r3, r2
 80049a0:	9304      	str	r3, [sp, #16]
 80049a2:	46a2      	mov	sl, r4
 80049a4:	e7d2      	b.n	800494c <_svfiprintf_r+0xa0>
 80049a6:	9b03      	ldr	r3, [sp, #12]
 80049a8:	1d19      	adds	r1, r3, #4
 80049aa:	681b      	ldr	r3, [r3, #0]
 80049ac:	9103      	str	r1, [sp, #12]
 80049ae:	2b00      	cmp	r3, #0
 80049b0:	bfbb      	ittet	lt
 80049b2:	425b      	neglt	r3, r3
 80049b4:	f042 0202 	orrlt.w	r2, r2, #2
 80049b8:	9307      	strge	r3, [sp, #28]
 80049ba:	9307      	strlt	r3, [sp, #28]
 80049bc:	bfb8      	it	lt
 80049be:	9204      	strlt	r2, [sp, #16]
 80049c0:	7823      	ldrb	r3, [r4, #0]
 80049c2:	2b2e      	cmp	r3, #46	@ 0x2e
 80049c4:	d10a      	bne.n	80049dc <_svfiprintf_r+0x130>
 80049c6:	7863      	ldrb	r3, [r4, #1]
 80049c8:	2b2a      	cmp	r3, #42	@ 0x2a
 80049ca:	d132      	bne.n	8004a32 <_svfiprintf_r+0x186>
 80049cc:	9b03      	ldr	r3, [sp, #12]
 80049ce:	1d1a      	adds	r2, r3, #4
 80049d0:	681b      	ldr	r3, [r3, #0]
 80049d2:	9203      	str	r2, [sp, #12]
 80049d4:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80049d8:	3402      	adds	r4, #2
 80049da:	9305      	str	r3, [sp, #20]
 80049dc:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8004aa0 <_svfiprintf_r+0x1f4>
 80049e0:	7821      	ldrb	r1, [r4, #0]
 80049e2:	2203      	movs	r2, #3
 80049e4:	4650      	mov	r0, sl
 80049e6:	f7fb fbfb 	bl	80001e0 <memchr>
 80049ea:	b138      	cbz	r0, 80049fc <_svfiprintf_r+0x150>
 80049ec:	9b04      	ldr	r3, [sp, #16]
 80049ee:	eba0 000a 	sub.w	r0, r0, sl
 80049f2:	2240      	movs	r2, #64	@ 0x40
 80049f4:	4082      	lsls	r2, r0
 80049f6:	4313      	orrs	r3, r2
 80049f8:	3401      	adds	r4, #1
 80049fa:	9304      	str	r3, [sp, #16]
 80049fc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004a00:	4824      	ldr	r0, [pc, #144]	@ (8004a94 <_svfiprintf_r+0x1e8>)
 8004a02:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8004a06:	2206      	movs	r2, #6
 8004a08:	f7fb fbea 	bl	80001e0 <memchr>
 8004a0c:	2800      	cmp	r0, #0
 8004a0e:	d036      	beq.n	8004a7e <_svfiprintf_r+0x1d2>
 8004a10:	4b21      	ldr	r3, [pc, #132]	@ (8004a98 <_svfiprintf_r+0x1ec>)
 8004a12:	bb1b      	cbnz	r3, 8004a5c <_svfiprintf_r+0x1b0>
 8004a14:	9b03      	ldr	r3, [sp, #12]
 8004a16:	3307      	adds	r3, #7
 8004a18:	f023 0307 	bic.w	r3, r3, #7
 8004a1c:	3308      	adds	r3, #8
 8004a1e:	9303      	str	r3, [sp, #12]
 8004a20:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004a22:	4433      	add	r3, r6
 8004a24:	9309      	str	r3, [sp, #36]	@ 0x24
 8004a26:	e76a      	b.n	80048fe <_svfiprintf_r+0x52>
 8004a28:	fb0c 3202 	mla	r2, ip, r2, r3
 8004a2c:	460c      	mov	r4, r1
 8004a2e:	2001      	movs	r0, #1
 8004a30:	e7a8      	b.n	8004984 <_svfiprintf_r+0xd8>
 8004a32:	2300      	movs	r3, #0
 8004a34:	3401      	adds	r4, #1
 8004a36:	9305      	str	r3, [sp, #20]
 8004a38:	4619      	mov	r1, r3
 8004a3a:	f04f 0c0a 	mov.w	ip, #10
 8004a3e:	4620      	mov	r0, r4
 8004a40:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004a44:	3a30      	subs	r2, #48	@ 0x30
 8004a46:	2a09      	cmp	r2, #9
 8004a48:	d903      	bls.n	8004a52 <_svfiprintf_r+0x1a6>
 8004a4a:	2b00      	cmp	r3, #0
 8004a4c:	d0c6      	beq.n	80049dc <_svfiprintf_r+0x130>
 8004a4e:	9105      	str	r1, [sp, #20]
 8004a50:	e7c4      	b.n	80049dc <_svfiprintf_r+0x130>
 8004a52:	fb0c 2101 	mla	r1, ip, r1, r2
 8004a56:	4604      	mov	r4, r0
 8004a58:	2301      	movs	r3, #1
 8004a5a:	e7f0      	b.n	8004a3e <_svfiprintf_r+0x192>
 8004a5c:	ab03      	add	r3, sp, #12
 8004a5e:	9300      	str	r3, [sp, #0]
 8004a60:	462a      	mov	r2, r5
 8004a62:	4b0e      	ldr	r3, [pc, #56]	@ (8004a9c <_svfiprintf_r+0x1f0>)
 8004a64:	a904      	add	r1, sp, #16
 8004a66:	4638      	mov	r0, r7
 8004a68:	f3af 8000 	nop.w
 8004a6c:	1c42      	adds	r2, r0, #1
 8004a6e:	4606      	mov	r6, r0
 8004a70:	d1d6      	bne.n	8004a20 <_svfiprintf_r+0x174>
 8004a72:	89ab      	ldrh	r3, [r5, #12]
 8004a74:	065b      	lsls	r3, r3, #25
 8004a76:	f53f af2d 	bmi.w	80048d4 <_svfiprintf_r+0x28>
 8004a7a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004a7c:	e72c      	b.n	80048d8 <_svfiprintf_r+0x2c>
 8004a7e:	ab03      	add	r3, sp, #12
 8004a80:	9300      	str	r3, [sp, #0]
 8004a82:	462a      	mov	r2, r5
 8004a84:	4b05      	ldr	r3, [pc, #20]	@ (8004a9c <_svfiprintf_r+0x1f0>)
 8004a86:	a904      	add	r1, sp, #16
 8004a88:	4638      	mov	r0, r7
 8004a8a:	f000 f879 	bl	8004b80 <_printf_i>
 8004a8e:	e7ed      	b.n	8004a6c <_svfiprintf_r+0x1c0>
 8004a90:	08004f10 	.word	0x08004f10
 8004a94:	08004f1a 	.word	0x08004f1a
 8004a98:	00000000 	.word	0x00000000
 8004a9c:	080047f5 	.word	0x080047f5
 8004aa0:	08004f16 	.word	0x08004f16

08004aa4 <_printf_common>:
 8004aa4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004aa8:	4616      	mov	r6, r2
 8004aaa:	4698      	mov	r8, r3
 8004aac:	688a      	ldr	r2, [r1, #8]
 8004aae:	690b      	ldr	r3, [r1, #16]
 8004ab0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8004ab4:	4293      	cmp	r3, r2
 8004ab6:	bfb8      	it	lt
 8004ab8:	4613      	movlt	r3, r2
 8004aba:	6033      	str	r3, [r6, #0]
 8004abc:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8004ac0:	4607      	mov	r7, r0
 8004ac2:	460c      	mov	r4, r1
 8004ac4:	b10a      	cbz	r2, 8004aca <_printf_common+0x26>
 8004ac6:	3301      	adds	r3, #1
 8004ac8:	6033      	str	r3, [r6, #0]
 8004aca:	6823      	ldr	r3, [r4, #0]
 8004acc:	0699      	lsls	r1, r3, #26
 8004ace:	bf42      	ittt	mi
 8004ad0:	6833      	ldrmi	r3, [r6, #0]
 8004ad2:	3302      	addmi	r3, #2
 8004ad4:	6033      	strmi	r3, [r6, #0]
 8004ad6:	6825      	ldr	r5, [r4, #0]
 8004ad8:	f015 0506 	ands.w	r5, r5, #6
 8004adc:	d106      	bne.n	8004aec <_printf_common+0x48>
 8004ade:	f104 0a19 	add.w	sl, r4, #25
 8004ae2:	68e3      	ldr	r3, [r4, #12]
 8004ae4:	6832      	ldr	r2, [r6, #0]
 8004ae6:	1a9b      	subs	r3, r3, r2
 8004ae8:	42ab      	cmp	r3, r5
 8004aea:	dc26      	bgt.n	8004b3a <_printf_common+0x96>
 8004aec:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8004af0:	6822      	ldr	r2, [r4, #0]
 8004af2:	3b00      	subs	r3, #0
 8004af4:	bf18      	it	ne
 8004af6:	2301      	movne	r3, #1
 8004af8:	0692      	lsls	r2, r2, #26
 8004afa:	d42b      	bmi.n	8004b54 <_printf_common+0xb0>
 8004afc:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8004b00:	4641      	mov	r1, r8
 8004b02:	4638      	mov	r0, r7
 8004b04:	47c8      	blx	r9
 8004b06:	3001      	adds	r0, #1
 8004b08:	d01e      	beq.n	8004b48 <_printf_common+0xa4>
 8004b0a:	6823      	ldr	r3, [r4, #0]
 8004b0c:	6922      	ldr	r2, [r4, #16]
 8004b0e:	f003 0306 	and.w	r3, r3, #6
 8004b12:	2b04      	cmp	r3, #4
 8004b14:	bf02      	ittt	eq
 8004b16:	68e5      	ldreq	r5, [r4, #12]
 8004b18:	6833      	ldreq	r3, [r6, #0]
 8004b1a:	1aed      	subeq	r5, r5, r3
 8004b1c:	68a3      	ldr	r3, [r4, #8]
 8004b1e:	bf0c      	ite	eq
 8004b20:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004b24:	2500      	movne	r5, #0
 8004b26:	4293      	cmp	r3, r2
 8004b28:	bfc4      	itt	gt
 8004b2a:	1a9b      	subgt	r3, r3, r2
 8004b2c:	18ed      	addgt	r5, r5, r3
 8004b2e:	2600      	movs	r6, #0
 8004b30:	341a      	adds	r4, #26
 8004b32:	42b5      	cmp	r5, r6
 8004b34:	d11a      	bne.n	8004b6c <_printf_common+0xc8>
 8004b36:	2000      	movs	r0, #0
 8004b38:	e008      	b.n	8004b4c <_printf_common+0xa8>
 8004b3a:	2301      	movs	r3, #1
 8004b3c:	4652      	mov	r2, sl
 8004b3e:	4641      	mov	r1, r8
 8004b40:	4638      	mov	r0, r7
 8004b42:	47c8      	blx	r9
 8004b44:	3001      	adds	r0, #1
 8004b46:	d103      	bne.n	8004b50 <_printf_common+0xac>
 8004b48:	f04f 30ff 	mov.w	r0, #4294967295
 8004b4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004b50:	3501      	adds	r5, #1
 8004b52:	e7c6      	b.n	8004ae2 <_printf_common+0x3e>
 8004b54:	18e1      	adds	r1, r4, r3
 8004b56:	1c5a      	adds	r2, r3, #1
 8004b58:	2030      	movs	r0, #48	@ 0x30
 8004b5a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8004b5e:	4422      	add	r2, r4
 8004b60:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8004b64:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8004b68:	3302      	adds	r3, #2
 8004b6a:	e7c7      	b.n	8004afc <_printf_common+0x58>
 8004b6c:	2301      	movs	r3, #1
 8004b6e:	4622      	mov	r2, r4
 8004b70:	4641      	mov	r1, r8
 8004b72:	4638      	mov	r0, r7
 8004b74:	47c8      	blx	r9
 8004b76:	3001      	adds	r0, #1
 8004b78:	d0e6      	beq.n	8004b48 <_printf_common+0xa4>
 8004b7a:	3601      	adds	r6, #1
 8004b7c:	e7d9      	b.n	8004b32 <_printf_common+0x8e>
	...

08004b80 <_printf_i>:
 8004b80:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004b84:	7e0f      	ldrb	r7, [r1, #24]
 8004b86:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8004b88:	2f78      	cmp	r7, #120	@ 0x78
 8004b8a:	4691      	mov	r9, r2
 8004b8c:	4680      	mov	r8, r0
 8004b8e:	460c      	mov	r4, r1
 8004b90:	469a      	mov	sl, r3
 8004b92:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8004b96:	d807      	bhi.n	8004ba8 <_printf_i+0x28>
 8004b98:	2f62      	cmp	r7, #98	@ 0x62
 8004b9a:	d80a      	bhi.n	8004bb2 <_printf_i+0x32>
 8004b9c:	2f00      	cmp	r7, #0
 8004b9e:	f000 80d2 	beq.w	8004d46 <_printf_i+0x1c6>
 8004ba2:	2f58      	cmp	r7, #88	@ 0x58
 8004ba4:	f000 80b9 	beq.w	8004d1a <_printf_i+0x19a>
 8004ba8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8004bac:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8004bb0:	e03a      	b.n	8004c28 <_printf_i+0xa8>
 8004bb2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8004bb6:	2b15      	cmp	r3, #21
 8004bb8:	d8f6      	bhi.n	8004ba8 <_printf_i+0x28>
 8004bba:	a101      	add	r1, pc, #4	@ (adr r1, 8004bc0 <_printf_i+0x40>)
 8004bbc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8004bc0:	08004c19 	.word	0x08004c19
 8004bc4:	08004c2d 	.word	0x08004c2d
 8004bc8:	08004ba9 	.word	0x08004ba9
 8004bcc:	08004ba9 	.word	0x08004ba9
 8004bd0:	08004ba9 	.word	0x08004ba9
 8004bd4:	08004ba9 	.word	0x08004ba9
 8004bd8:	08004c2d 	.word	0x08004c2d
 8004bdc:	08004ba9 	.word	0x08004ba9
 8004be0:	08004ba9 	.word	0x08004ba9
 8004be4:	08004ba9 	.word	0x08004ba9
 8004be8:	08004ba9 	.word	0x08004ba9
 8004bec:	08004d2d 	.word	0x08004d2d
 8004bf0:	08004c57 	.word	0x08004c57
 8004bf4:	08004ce7 	.word	0x08004ce7
 8004bf8:	08004ba9 	.word	0x08004ba9
 8004bfc:	08004ba9 	.word	0x08004ba9
 8004c00:	08004d4f 	.word	0x08004d4f
 8004c04:	08004ba9 	.word	0x08004ba9
 8004c08:	08004c57 	.word	0x08004c57
 8004c0c:	08004ba9 	.word	0x08004ba9
 8004c10:	08004ba9 	.word	0x08004ba9
 8004c14:	08004cef 	.word	0x08004cef
 8004c18:	6833      	ldr	r3, [r6, #0]
 8004c1a:	1d1a      	adds	r2, r3, #4
 8004c1c:	681b      	ldr	r3, [r3, #0]
 8004c1e:	6032      	str	r2, [r6, #0]
 8004c20:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8004c24:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8004c28:	2301      	movs	r3, #1
 8004c2a:	e09d      	b.n	8004d68 <_printf_i+0x1e8>
 8004c2c:	6833      	ldr	r3, [r6, #0]
 8004c2e:	6820      	ldr	r0, [r4, #0]
 8004c30:	1d19      	adds	r1, r3, #4
 8004c32:	6031      	str	r1, [r6, #0]
 8004c34:	0606      	lsls	r6, r0, #24
 8004c36:	d501      	bpl.n	8004c3c <_printf_i+0xbc>
 8004c38:	681d      	ldr	r5, [r3, #0]
 8004c3a:	e003      	b.n	8004c44 <_printf_i+0xc4>
 8004c3c:	0645      	lsls	r5, r0, #25
 8004c3e:	d5fb      	bpl.n	8004c38 <_printf_i+0xb8>
 8004c40:	f9b3 5000 	ldrsh.w	r5, [r3]
 8004c44:	2d00      	cmp	r5, #0
 8004c46:	da03      	bge.n	8004c50 <_printf_i+0xd0>
 8004c48:	232d      	movs	r3, #45	@ 0x2d
 8004c4a:	426d      	negs	r5, r5
 8004c4c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8004c50:	4859      	ldr	r0, [pc, #356]	@ (8004db8 <_printf_i+0x238>)
 8004c52:	230a      	movs	r3, #10
 8004c54:	e011      	b.n	8004c7a <_printf_i+0xfa>
 8004c56:	6821      	ldr	r1, [r4, #0]
 8004c58:	6833      	ldr	r3, [r6, #0]
 8004c5a:	0608      	lsls	r0, r1, #24
 8004c5c:	f853 5b04 	ldr.w	r5, [r3], #4
 8004c60:	d402      	bmi.n	8004c68 <_printf_i+0xe8>
 8004c62:	0649      	lsls	r1, r1, #25
 8004c64:	bf48      	it	mi
 8004c66:	b2ad      	uxthmi	r5, r5
 8004c68:	2f6f      	cmp	r7, #111	@ 0x6f
 8004c6a:	4853      	ldr	r0, [pc, #332]	@ (8004db8 <_printf_i+0x238>)
 8004c6c:	6033      	str	r3, [r6, #0]
 8004c6e:	bf14      	ite	ne
 8004c70:	230a      	movne	r3, #10
 8004c72:	2308      	moveq	r3, #8
 8004c74:	2100      	movs	r1, #0
 8004c76:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8004c7a:	6866      	ldr	r6, [r4, #4]
 8004c7c:	60a6      	str	r6, [r4, #8]
 8004c7e:	2e00      	cmp	r6, #0
 8004c80:	bfa2      	ittt	ge
 8004c82:	6821      	ldrge	r1, [r4, #0]
 8004c84:	f021 0104 	bicge.w	r1, r1, #4
 8004c88:	6021      	strge	r1, [r4, #0]
 8004c8a:	b90d      	cbnz	r5, 8004c90 <_printf_i+0x110>
 8004c8c:	2e00      	cmp	r6, #0
 8004c8e:	d04b      	beq.n	8004d28 <_printf_i+0x1a8>
 8004c90:	4616      	mov	r6, r2
 8004c92:	fbb5 f1f3 	udiv	r1, r5, r3
 8004c96:	fb03 5711 	mls	r7, r3, r1, r5
 8004c9a:	5dc7      	ldrb	r7, [r0, r7]
 8004c9c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8004ca0:	462f      	mov	r7, r5
 8004ca2:	42bb      	cmp	r3, r7
 8004ca4:	460d      	mov	r5, r1
 8004ca6:	d9f4      	bls.n	8004c92 <_printf_i+0x112>
 8004ca8:	2b08      	cmp	r3, #8
 8004caa:	d10b      	bne.n	8004cc4 <_printf_i+0x144>
 8004cac:	6823      	ldr	r3, [r4, #0]
 8004cae:	07df      	lsls	r7, r3, #31
 8004cb0:	d508      	bpl.n	8004cc4 <_printf_i+0x144>
 8004cb2:	6923      	ldr	r3, [r4, #16]
 8004cb4:	6861      	ldr	r1, [r4, #4]
 8004cb6:	4299      	cmp	r1, r3
 8004cb8:	bfde      	ittt	le
 8004cba:	2330      	movle	r3, #48	@ 0x30
 8004cbc:	f806 3c01 	strble.w	r3, [r6, #-1]
 8004cc0:	f106 36ff 	addle.w	r6, r6, #4294967295
 8004cc4:	1b92      	subs	r2, r2, r6
 8004cc6:	6122      	str	r2, [r4, #16]
 8004cc8:	f8cd a000 	str.w	sl, [sp]
 8004ccc:	464b      	mov	r3, r9
 8004cce:	aa03      	add	r2, sp, #12
 8004cd0:	4621      	mov	r1, r4
 8004cd2:	4640      	mov	r0, r8
 8004cd4:	f7ff fee6 	bl	8004aa4 <_printf_common>
 8004cd8:	3001      	adds	r0, #1
 8004cda:	d14a      	bne.n	8004d72 <_printf_i+0x1f2>
 8004cdc:	f04f 30ff 	mov.w	r0, #4294967295
 8004ce0:	b004      	add	sp, #16
 8004ce2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004ce6:	6823      	ldr	r3, [r4, #0]
 8004ce8:	f043 0320 	orr.w	r3, r3, #32
 8004cec:	6023      	str	r3, [r4, #0]
 8004cee:	4833      	ldr	r0, [pc, #204]	@ (8004dbc <_printf_i+0x23c>)
 8004cf0:	2778      	movs	r7, #120	@ 0x78
 8004cf2:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8004cf6:	6823      	ldr	r3, [r4, #0]
 8004cf8:	6831      	ldr	r1, [r6, #0]
 8004cfa:	061f      	lsls	r7, r3, #24
 8004cfc:	f851 5b04 	ldr.w	r5, [r1], #4
 8004d00:	d402      	bmi.n	8004d08 <_printf_i+0x188>
 8004d02:	065f      	lsls	r7, r3, #25
 8004d04:	bf48      	it	mi
 8004d06:	b2ad      	uxthmi	r5, r5
 8004d08:	6031      	str	r1, [r6, #0]
 8004d0a:	07d9      	lsls	r1, r3, #31
 8004d0c:	bf44      	itt	mi
 8004d0e:	f043 0320 	orrmi.w	r3, r3, #32
 8004d12:	6023      	strmi	r3, [r4, #0]
 8004d14:	b11d      	cbz	r5, 8004d1e <_printf_i+0x19e>
 8004d16:	2310      	movs	r3, #16
 8004d18:	e7ac      	b.n	8004c74 <_printf_i+0xf4>
 8004d1a:	4827      	ldr	r0, [pc, #156]	@ (8004db8 <_printf_i+0x238>)
 8004d1c:	e7e9      	b.n	8004cf2 <_printf_i+0x172>
 8004d1e:	6823      	ldr	r3, [r4, #0]
 8004d20:	f023 0320 	bic.w	r3, r3, #32
 8004d24:	6023      	str	r3, [r4, #0]
 8004d26:	e7f6      	b.n	8004d16 <_printf_i+0x196>
 8004d28:	4616      	mov	r6, r2
 8004d2a:	e7bd      	b.n	8004ca8 <_printf_i+0x128>
 8004d2c:	6833      	ldr	r3, [r6, #0]
 8004d2e:	6825      	ldr	r5, [r4, #0]
 8004d30:	6961      	ldr	r1, [r4, #20]
 8004d32:	1d18      	adds	r0, r3, #4
 8004d34:	6030      	str	r0, [r6, #0]
 8004d36:	062e      	lsls	r6, r5, #24
 8004d38:	681b      	ldr	r3, [r3, #0]
 8004d3a:	d501      	bpl.n	8004d40 <_printf_i+0x1c0>
 8004d3c:	6019      	str	r1, [r3, #0]
 8004d3e:	e002      	b.n	8004d46 <_printf_i+0x1c6>
 8004d40:	0668      	lsls	r0, r5, #25
 8004d42:	d5fb      	bpl.n	8004d3c <_printf_i+0x1bc>
 8004d44:	8019      	strh	r1, [r3, #0]
 8004d46:	2300      	movs	r3, #0
 8004d48:	6123      	str	r3, [r4, #16]
 8004d4a:	4616      	mov	r6, r2
 8004d4c:	e7bc      	b.n	8004cc8 <_printf_i+0x148>
 8004d4e:	6833      	ldr	r3, [r6, #0]
 8004d50:	1d1a      	adds	r2, r3, #4
 8004d52:	6032      	str	r2, [r6, #0]
 8004d54:	681e      	ldr	r6, [r3, #0]
 8004d56:	6862      	ldr	r2, [r4, #4]
 8004d58:	2100      	movs	r1, #0
 8004d5a:	4630      	mov	r0, r6
 8004d5c:	f7fb fa40 	bl	80001e0 <memchr>
 8004d60:	b108      	cbz	r0, 8004d66 <_printf_i+0x1e6>
 8004d62:	1b80      	subs	r0, r0, r6
 8004d64:	6060      	str	r0, [r4, #4]
 8004d66:	6863      	ldr	r3, [r4, #4]
 8004d68:	6123      	str	r3, [r4, #16]
 8004d6a:	2300      	movs	r3, #0
 8004d6c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8004d70:	e7aa      	b.n	8004cc8 <_printf_i+0x148>
 8004d72:	6923      	ldr	r3, [r4, #16]
 8004d74:	4632      	mov	r2, r6
 8004d76:	4649      	mov	r1, r9
 8004d78:	4640      	mov	r0, r8
 8004d7a:	47d0      	blx	sl
 8004d7c:	3001      	adds	r0, #1
 8004d7e:	d0ad      	beq.n	8004cdc <_printf_i+0x15c>
 8004d80:	6823      	ldr	r3, [r4, #0]
 8004d82:	079b      	lsls	r3, r3, #30
 8004d84:	d413      	bmi.n	8004dae <_printf_i+0x22e>
 8004d86:	68e0      	ldr	r0, [r4, #12]
 8004d88:	9b03      	ldr	r3, [sp, #12]
 8004d8a:	4298      	cmp	r0, r3
 8004d8c:	bfb8      	it	lt
 8004d8e:	4618      	movlt	r0, r3
 8004d90:	e7a6      	b.n	8004ce0 <_printf_i+0x160>
 8004d92:	2301      	movs	r3, #1
 8004d94:	4632      	mov	r2, r6
 8004d96:	4649      	mov	r1, r9
 8004d98:	4640      	mov	r0, r8
 8004d9a:	47d0      	blx	sl
 8004d9c:	3001      	adds	r0, #1
 8004d9e:	d09d      	beq.n	8004cdc <_printf_i+0x15c>
 8004da0:	3501      	adds	r5, #1
 8004da2:	68e3      	ldr	r3, [r4, #12]
 8004da4:	9903      	ldr	r1, [sp, #12]
 8004da6:	1a5b      	subs	r3, r3, r1
 8004da8:	42ab      	cmp	r3, r5
 8004daa:	dcf2      	bgt.n	8004d92 <_printf_i+0x212>
 8004dac:	e7eb      	b.n	8004d86 <_printf_i+0x206>
 8004dae:	2500      	movs	r5, #0
 8004db0:	f104 0619 	add.w	r6, r4, #25
 8004db4:	e7f5      	b.n	8004da2 <_printf_i+0x222>
 8004db6:	bf00      	nop
 8004db8:	08004f21 	.word	0x08004f21
 8004dbc:	08004f32 	.word	0x08004f32

08004dc0 <memmove>:
 8004dc0:	4288      	cmp	r0, r1
 8004dc2:	b510      	push	{r4, lr}
 8004dc4:	eb01 0402 	add.w	r4, r1, r2
 8004dc8:	d902      	bls.n	8004dd0 <memmove+0x10>
 8004dca:	4284      	cmp	r4, r0
 8004dcc:	4623      	mov	r3, r4
 8004dce:	d807      	bhi.n	8004de0 <memmove+0x20>
 8004dd0:	1e43      	subs	r3, r0, #1
 8004dd2:	42a1      	cmp	r1, r4
 8004dd4:	d008      	beq.n	8004de8 <memmove+0x28>
 8004dd6:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004dda:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004dde:	e7f8      	b.n	8004dd2 <memmove+0x12>
 8004de0:	4402      	add	r2, r0
 8004de2:	4601      	mov	r1, r0
 8004de4:	428a      	cmp	r2, r1
 8004de6:	d100      	bne.n	8004dea <memmove+0x2a>
 8004de8:	bd10      	pop	{r4, pc}
 8004dea:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004dee:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004df2:	e7f7      	b.n	8004de4 <memmove+0x24>

08004df4 <_sbrk_r>:
 8004df4:	b538      	push	{r3, r4, r5, lr}
 8004df6:	4d06      	ldr	r5, [pc, #24]	@ (8004e10 <_sbrk_r+0x1c>)
 8004df8:	2300      	movs	r3, #0
 8004dfa:	4604      	mov	r4, r0
 8004dfc:	4608      	mov	r0, r1
 8004dfe:	602b      	str	r3, [r5, #0]
 8004e00:	f7fc f8ec 	bl	8000fdc <_sbrk>
 8004e04:	1c43      	adds	r3, r0, #1
 8004e06:	d102      	bne.n	8004e0e <_sbrk_r+0x1a>
 8004e08:	682b      	ldr	r3, [r5, #0]
 8004e0a:	b103      	cbz	r3, 8004e0e <_sbrk_r+0x1a>
 8004e0c:	6023      	str	r3, [r4, #0]
 8004e0e:	bd38      	pop	{r3, r4, r5, pc}
 8004e10:	20000388 	.word	0x20000388

08004e14 <memcpy>:
 8004e14:	440a      	add	r2, r1
 8004e16:	4291      	cmp	r1, r2
 8004e18:	f100 33ff 	add.w	r3, r0, #4294967295
 8004e1c:	d100      	bne.n	8004e20 <memcpy+0xc>
 8004e1e:	4770      	bx	lr
 8004e20:	b510      	push	{r4, lr}
 8004e22:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004e26:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004e2a:	4291      	cmp	r1, r2
 8004e2c:	d1f9      	bne.n	8004e22 <memcpy+0xe>
 8004e2e:	bd10      	pop	{r4, pc}

08004e30 <_realloc_r>:
 8004e30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004e34:	4680      	mov	r8, r0
 8004e36:	4615      	mov	r5, r2
 8004e38:	460c      	mov	r4, r1
 8004e3a:	b921      	cbnz	r1, 8004e46 <_realloc_r+0x16>
 8004e3c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004e40:	4611      	mov	r1, r2
 8004e42:	f7ff bc4b 	b.w	80046dc <_malloc_r>
 8004e46:	b92a      	cbnz	r2, 8004e54 <_realloc_r+0x24>
 8004e48:	f7ff fbdc 	bl	8004604 <_free_r>
 8004e4c:	2400      	movs	r4, #0
 8004e4e:	4620      	mov	r0, r4
 8004e50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004e54:	f000 f81a 	bl	8004e8c <_malloc_usable_size_r>
 8004e58:	4285      	cmp	r5, r0
 8004e5a:	4606      	mov	r6, r0
 8004e5c:	d802      	bhi.n	8004e64 <_realloc_r+0x34>
 8004e5e:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8004e62:	d8f4      	bhi.n	8004e4e <_realloc_r+0x1e>
 8004e64:	4629      	mov	r1, r5
 8004e66:	4640      	mov	r0, r8
 8004e68:	f7ff fc38 	bl	80046dc <_malloc_r>
 8004e6c:	4607      	mov	r7, r0
 8004e6e:	2800      	cmp	r0, #0
 8004e70:	d0ec      	beq.n	8004e4c <_realloc_r+0x1c>
 8004e72:	42b5      	cmp	r5, r6
 8004e74:	462a      	mov	r2, r5
 8004e76:	4621      	mov	r1, r4
 8004e78:	bf28      	it	cs
 8004e7a:	4632      	movcs	r2, r6
 8004e7c:	f7ff ffca 	bl	8004e14 <memcpy>
 8004e80:	4621      	mov	r1, r4
 8004e82:	4640      	mov	r0, r8
 8004e84:	f7ff fbbe 	bl	8004604 <_free_r>
 8004e88:	463c      	mov	r4, r7
 8004e8a:	e7e0      	b.n	8004e4e <_realloc_r+0x1e>

08004e8c <_malloc_usable_size_r>:
 8004e8c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004e90:	1f18      	subs	r0, r3, #4
 8004e92:	2b00      	cmp	r3, #0
 8004e94:	bfbc      	itt	lt
 8004e96:	580b      	ldrlt	r3, [r1, r0]
 8004e98:	18c0      	addlt	r0, r0, r3
 8004e9a:	4770      	bx	lr

08004e9c <_init>:
 8004e9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004e9e:	bf00      	nop
 8004ea0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004ea2:	bc08      	pop	{r3}
 8004ea4:	469e      	mov	lr, r3
 8004ea6:	4770      	bx	lr

08004ea8 <_fini>:
 8004ea8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004eaa:	bf00      	nop
 8004eac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004eae:	bc08      	pop	{r3}
 8004eb0:	469e      	mov	lr, r3
 8004eb2:	4770      	bx	lr
